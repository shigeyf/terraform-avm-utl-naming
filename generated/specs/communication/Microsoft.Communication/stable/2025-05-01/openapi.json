{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Communication",
    "version": "2025-05-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.Communication/operations": {
      "get": {
        "description": "Lists all of the available REST API operations of the Microsoft.Communication provider.",
        "operationId": "Operations_List",
        "summary": "List Operations",
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/communicationServices/operationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/checkNameAvailability": {
      "post": {
        "description": "Checks that the CommunicationService name is valid and is not already in use.",
        "operationId": "CommunicationServices_CheckNameAvailability",
        "summary": "Check Name Availability",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "name": "nameAvailabilityParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the name availability.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Check name availability available": {
            "$ref": "./examples/communicationServices/checkNameAvailabilityAvailable.json"
          },
          "Check name availability unavailable": {
            "$ref": "./examples/communicationServices/checkNameAvailabilityUnavailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/linkNotificationHub": {
      "post": {
        "description": "Links an Azure Notification Hub to this communication service.",
        "operationId": "CommunicationServices_LinkNotificationHub",
        "summary": "Link Notification Hub",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "name": "linkNotificationHubParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LinkNotificationHubParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The notification hub has been linked.",
            "schema": {
              "$ref": "#/definitions/LinkedNotificationHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Link notification hub": {
            "$ref": "./examples/communicationServices/linkNotificationHub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/communicationServices": {
      "get": {
        "description": "Handles requests to list all resources in a subscription.",
        "operationId": "CommunicationServices_ListBySubscription",
        "summary": "List By Subscription",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of CommunicationServices in the subscription.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List by subscription": {
            "$ref": "./examples/communicationServices/listBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices": {
      "get": {
        "description": "Handles requests to list all resources in a resource group.",
        "operationId": "CommunicationServices_ListByResourceGroup",
        "summary": "List By Resource Group",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of CommunicationServices in a resourceGroup.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List by resource group": {
            "$ref": "./examples/communicationServices/listByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}": {
      "patch": {
        "description": "Operation to update an existing CommunicationService.",
        "operationId": "CommunicationServices_Update",
        "summary": "Update",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResourceUpdate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update resource": {
            "$ref": "./examples/communicationServices/update.json"
          },
          "Update resource to remove identity": {
            "$ref": "./examples/communicationServices/updateRemoveSystemIdentity.json"
          },
          "Update resource to add a System Assigned managed identity": {
            "$ref": "./examples/communicationServices/updateWithSystemAssignedIdentity.json"
          },
          "Update resource to add a User Assigned managed identity": {
            "$ref": "./examples/communicationServices/updateWithUserAssignedIdentity.json"
          },
          "Update resource to add System and User managed identities": {
            "$ref": "./examples/communicationServices/updateWithSystemAndUserIdentity.json"
          },
          "Update resource to add DisableLocalAuth": {
            "$ref": "./examples/communicationServices/updateWithDisableLocalAuth.json"
          },
          "Update resource to add PublicNetworkAccess": {
            "$ref": "./examples/communicationServices/updateWithPublicNetworkAccess.json"
          }
        }
      },
      "get": {
        "description": "Get the CommunicationService and its properties.",
        "operationId": "CommunicationServices_Get",
        "summary": "Get",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding CommunicationService service.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get resource": {
            "$ref": "./examples/communicationServices/get.json"
          }
        }
      },
      "put": {
        "description": "Create a new CommunicationService or update an existing CommunicationService.",
        "operationId": "CommunicationServices_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update resource": {
            "$ref": "./examples/communicationServices/createOrUpdate.json"
          },
          "Create or update resource with managed identity": {
            "$ref": "./examples/communicationServices/createOrUpdateWithSystemAssignedIdentity.json"
          },
          "Create or update resource with PublicNetworkAccess": {
            "$ref": "./examples/communicationServices/createOrUpdateWithPublicNetworkAccess.json"
          },
          "Create or update resource with DisableLocalAuth": {
            "$ref": "./examples/communicationServices/createOrUpdateWithDisableLocalAuth.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a CommunicationService.",
        "operationId": "CommunicationServices_Delete",
        "summary": "Delete",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete resource": {
            "$ref": "./examples/communicationServices/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/listKeys": {
      "post": {
        "description": "Get the access keys of the CommunicationService resource.",
        "operationId": "CommunicationServices_ListKeys",
        "summary": "List Keys",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes CommunicationService access keys.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List keys": {
            "$ref": "./examples/communicationServices/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/regenerateKey": {
      "post": {
        "description": "Regenerate CommunicationService access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.",
        "operationId": "CommunicationServices_RegenerateKey",
        "summary": "Regenerate Key",
        "tags": [
          "CommunicationServices"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameter that describes the Regenerate Key Operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Regenerate key request was completed successfully. The response contains the new key.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Regenerate key": {
            "$ref": "./examples/communicationServices/regenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}": {
      "get": {
        "description": "Get the Domains resource and its properties.",
        "operationId": "Domains_Get",
        "summary": "Get",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding Domains resource.",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Domains resource": {
            "$ref": "./examples/domains/get.json"
          }
        }
      },
      "put": {
        "description": "Add a new Domains resource under the parent EmailService resource or update an existing Domains resource.",
        "operationId": "Domains_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update Domains resource": {
            "$ref": "./examples/domains/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a Domains resource.",
        "operationId": "Domains_Delete",
        "summary": "Delete",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Domains resource": {
            "$ref": "./examples/domains/delete.json"
          }
        }
      },
      "patch": {
        "description": "Operation to update an existing Domains resource.",
        "operationId": "Domains_Update",
        "summary": "Update",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDomainRequestParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "201": {
            "description": "The update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update Domains resource": {
            "$ref": "./examples/domains/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains": {
      "get": {
        "description": "Handles requests to list all Domains resources under the parent EmailServices resource.",
        "operationId": "Domains_ListByEmailServiceResource",
        "summary": "List by EmailService",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Domains resources under the parent EmailServices resource.",
            "schema": {
              "$ref": "#/definitions/DomainResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Domains resources by EmailServiceName": {
            "$ref": "./examples/domains/listByEmailService.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/initiateVerification": {
      "post": {
        "description": "Initiate verification of DNS record.",
        "operationId": "Domains_InitiateVerification",
        "summary": "Initiate Verification",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationParameter"
            },
            "description": "Type of verification to be initiated.",
            "required": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "202": {
            "description": "The initiateVerification operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Initiate verification": {
            "$ref": "./examples/domains/initiateVerification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/cancelVerification": {
      "post": {
        "description": "Cancel verification of DNS record.",
        "operationId": "Domains_CancelVerification",
        "summary": "Cancel Verification",
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationParameter"
            },
            "description": "Type of verification to be canceled.",
            "required": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "202": {
            "description": "The cancelVerification operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Cancel verification": {
            "$ref": "./examples/domains/cancelVerification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}": {
      "get": {
        "description": "Get the EmailService and its properties.",
        "operationId": "EmailServices_Get",
        "summary": "Get",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding EmailService resource.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get EmailService resource": {
            "$ref": "./examples/emailServices/get.json"
          }
        }
      },
      "put": {
        "description": "Create a new EmailService or update an existing EmailService.",
        "operationId": "EmailServices_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update EmailService resource": {
            "$ref": "./examples/emailServices/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a EmailService.",
        "operationId": "EmailServices_Delete",
        "summary": "Delete",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete EmailService resource": {
            "$ref": "./examples/emailServices/delete.json"
          }
        }
      },
      "patch": {
        "description": "Operation to update an existing EmailService.",
        "operationId": "EmailServices_Update",
        "summary": "Update",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailServiceResourceUpdate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "201": {
            "description": "The update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update EmailService resource": {
            "$ref": "./examples/emailServices/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/emailServices": {
      "get": {
        "description": "Handles requests to list all resources in a subscription.",
        "operationId": "EmailServices_ListBySubscription",
        "summary": "List By Subscription",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of EmailServices in the subscription.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List EmailService resources by subscription": {
            "$ref": "./examples/emailServices/listBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices": {
      "get": {
        "description": "Handles requests to list all resources in a resource group.",
        "operationId": "EmailServices_ListByResourceGroup",
        "summary": "List By Resource Group",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of EmailServices in a resourceGroup.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List EmailService resources by resource group": {
            "$ref": "./examples/emailServices/listByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/listVerifiedExchangeOnlineDomains": {
      "post": {
        "description": "Get a list of domains that are fully verified in Exchange Online.",
        "operationId": "EmailServices_ListVerifiedExchangeOnlineDomains",
        "summary": "List Verified Domains From Exchange Online",
        "tags": [
          "EmailServices"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe a list of verified domains from Exchange Online.",
            "schema": {
              "$ref": "#/definitions/VerifiedExchangeOnlineDomainList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get verified Exchange Online domains": {
            "$ref": "./examples/emailServices/getVerifiedExchangeOnlineDomains.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/senderUsernames": {
      "get": {
        "description": "List all valid sender usernames for a domains resource.",
        "operationId": "SenderUsernames_ListByDomains",
        "summary": "ListBy_Domains",
        "tags": [
          "SenderUsernames"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "Domains.json#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the Domains SenderUsername collection.",
            "schema": {
              "$ref": "#/definitions/SenderUsernameResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get SenderUsernames resource": {
            "$ref": "./examples/senderUsernames/listByDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/senderUsernames/{senderUsername}": {
      "get": {
        "description": "Get a valid sender username for a domains resource.",
        "operationId": "SenderUsernames_Get",
        "summary": "Get",
        "tags": [
          "SenderUsernames"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "Domains.json#/parameters/DomainName"
          },
          {
            "$ref": "#/parameters/SenderUsername"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding SenderUsername resource.",
            "schema": {
              "$ref": "#/definitions/SenderUsernameResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get SenderUsernames resource": {
            "$ref": "./examples/senderUsernames/get.json"
          }
        }
      },
      "put": {
        "description": "Add a new SenderUsername resource under the parent Domains resource or update an existing SenderUsername resource.",
        "operationId": "SenderUsernames_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "SenderUsernames"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SenderUsernameResource"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "Domains.json#/parameters/DomainName"
          },
          {
            "$ref": "#/parameters/SenderUsername"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/SenderUsernameResource"
            }
          },
          "201": {
            "description": "The create request was completed successfully",
            "schema": {
              "$ref": "#/definitions/SenderUsernameResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create or update SenderUsernames resource": {
            "$ref": "./examples/senderUsernames/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a SenderUsernames resource.",
        "operationId": "SenderUsernames_Delete",
        "summary": "Delete",
        "tags": [
          "SenderUsernames"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "EmailServices.json#/parameters/EmailServiceName"
          },
          {
            "$ref": "Domains.json#/parameters/DomainName"
          },
          {
            "$ref": "#/parameters/SenderUsername"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete SenderUsernames resource": {
            "$ref": "./examples/senderUsernames/delete.json"
          }
        }
      }
    }
  },
  "parameters": {
    "CommunicationServiceName": {
      "name": "communicationServiceName",
      "in": "path",
      "description": "The name of the CommunicationService resource.",
      "pattern": "^[-\\w]+$",
      "minLength": 1,
      "maxLength": 63,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DomainName": {
      "name": "domainName",
      "in": "path",
      "description": "The name of the Domains resource.",
      "minLength": 1,
      "maxLength": 253,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "EmailServiceName": {
      "name": "emailServiceName",
      "in": "path",
      "description": "The name of the EmailService resource.",
      "pattern": "^[a-zA-Z0-9-]+$",
      "minLength": 1,
      "maxLength": 63,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SenderUsername": {
      "name": "senderUsername",
      "in": "path",
      "description": "The valid sender Username.",
      "minLength": 1,
      "maxLength": 253,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "NameAvailabilityParameters": {
      "description": "Data POST-ed to the nameAvailability action",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityRequest"
        }
      ],
      "required": [
        "type",
        "name"
      ]
    },
    "LinkNotificationHubParameters": {
      "description": "Description of an Azure Notification Hub to link to the communication service",
      "required": [
        "resourceId",
        "connectionString"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the notification hub",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string for the notification hub",
          "type": "string"
        }
      }
    },
    "LinkedNotificationHub": {
      "description": "A notification hub that has been linked to the communication service",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the notification hub",
          "type": "string"
        }
      }
    },
    "CommunicationServiceResourceList": {
      "description": "Object that includes an array of CommunicationServices and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of CommunicationService",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationServiceResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "CommunicationServiceResource": {
      "description": "A class representing a CommunicationService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunicationServiceProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "DomainsResourceList": {
      "description": "List of email Domain resource Ids.",
      "type": "array",
      "items": {
        "type": "string",
        "description": "Resource ID of an EmailService/Domain resource linked to this resource."
      }
    },
    "TaggedResource": {
      "description": "An ARM resource with that can accept tags",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        }
      }
    },
    "CommunicationServiceProperties": {
      "description": "A class that describes the properties of the CommunicationService.",
      "required": [
        "dataLocation"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CommunicationServices_ProvisioningState",
            "modelAsString": true
          }
        },
        "hostName": {
          "description": "FQDN of the CommunicationService instance.",
          "type": "string",
          "readOnly": true
        },
        "dataLocation": {
          "description": "The location where the communication service stores its data at rest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "notificationHubId": {
          "description": "Resource ID of an Azure Notification Hub linked to this resource.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.",
          "type": "string",
          "readOnly": true
        },
        "immutableResourceId": {
          "description": "The immutable resource Id of the communication service.",
          "type": "string",
          "readOnly": true
        },
        "linkedDomains": {
          "$ref": "#/definitions/DomainsResourceList"
        },
        "publicNetworkAccess": {
          "$ref": "../../../../../common-types/resource-management/v5/networksecurityperimeter.json#/definitions/PublicNetworkAccess"
        },
        "disableLocalAuth": {
          "description": "Disable local authentication for the CommunicationService.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "CommunicationServiceKeys": {
      "description": "A class representing the access keys of a CommunicationService.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary access key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary access key.",
          "type": "string"
        },
        "primaryConnectionString": {
          "description": "CommunicationService connection string constructed via the primaryKey",
          "type": "string"
        },
        "secondaryConnectionString": {
          "description": "CommunicationService connection string constructed via the secondaryKey",
          "type": "string"
        }
      }
    },
    "RegenerateKeyParameters": {
      "description": "Parameters describes the request to regenerate access keys",
      "type": "object",
      "properties": {
        "keyType": {
          "description": "The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        }
      }
    },
    "CommunicationServiceUpdateProperties": {
      "description": "A class that describes the properties that can be updated for CommunicationService resource.",
      "type": "object",
      "properties": {
        "linkedDomains": {
          "$ref": "#/definitions/DomainsResourceList"
        },
        "publicNetworkAccess": {
          "$ref": "../../../../../common-types/resource-management/v5/networksecurityperimeter.json#/definitions/PublicNetworkAccess"
        },
        "disableLocalAuth": {
          "description": "Disable local authentication for the CommunicationService.",
          "type": "boolean",
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "CommunicationServiceResourceUpdate": {
      "description": "A class representing update parameters for CommunicationService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaggedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunicationServiceUpdateProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      }
    },
    "VerificationParameter": {
      "description": "Input parameter for verification APIs",
      "type": "object",
      "required": [
        "verificationType"
      ],
      "properties": {
        "verificationType": {
          "description": "Type of verification.",
          "enum": [
            "Domain",
            "SPF",
            "DKIM",
            "DKIM2",
            "DMARC"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VerificationType",
            "modelAsString": true
          }
        }
      }
    },
    "VerificationStatusRecord": {
      "description": "A class that represents a VerificationStatus record.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the verification operation.",
          "enum": [
            "NotStarted",
            "VerificationRequested",
            "VerificationInProgress",
            "VerificationFailed",
            "Verified",
            "CancellationRequested"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VerificationStatus",
            "modelAsString": true
          }
        },
        "errorCode": {
          "description": "Error code. This property will only be present if the status is UnableToVerify.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsRecord": {
      "description": "A class that represents a VerificationStatus record.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the DNS record. Example: TXT",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the DNS record.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Value of the DNS record.",
          "type": "string",
          "readOnly": true
        },
        "ttl": {
          "description": "Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "DomainProperties": {
      "description": "A class that describes the properties of a Domains resource.",
      "type": "object",
      "required": [
        "domainManagement"
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "Domains_ProvisioningState",
            "modelAsString": true
          }
        },
        "dataLocation": {
          "description": "The location where the Domains resource data is stored at rest.",
          "type": "string",
          "readOnly": true
        },
        "fromSenderDomain": {
          "description": "P2 sender domain that is displayed to the email recipients [RFC 5322].",
          "type": "string",
          "readOnly": true
        },
        "mailFromSenderDomain": {
          "description": "P1 sender domain that is present on the email envelope [RFC 5321].",
          "type": "string",
          "readOnly": true
        },
        "domainManagement": {
          "$ref": "#/definitions/DomainManagement"
        },
        "verificationStates": {
          "description": "List of VerificationStatusRecord",
          "type": "object",
          "properties": {
            "Domain": {
              "$ref": "#/definitions/VerificationStatusRecord"
            },
            "SPF": {
              "$ref": "#/definitions/VerificationStatusRecord"
            },
            "DKIM": {
              "$ref": "#/definitions/VerificationStatusRecord"
            },
            "DKIM2": {
              "$ref": "#/definitions/VerificationStatusRecord"
            },
            "DMARC": {
              "$ref": "#/definitions/VerificationStatusRecord"
            }
          },
          "readOnly": true
        },
        "verificationRecords": {
          "description": "List of DnsRecord",
          "type": "object",
          "properties": {
            "Domain": {
              "$ref": "#/definitions/DnsRecord"
            },
            "SPF": {
              "$ref": "#/definitions/DnsRecord"
            },
            "DKIM": {
              "$ref": "#/definitions/DnsRecord"
            },
            "DKIM2": {
              "$ref": "#/definitions/DnsRecord"
            },
            "DMARC": {
              "$ref": "#/definitions/DnsRecord"
            }
          },
          "readOnly": true
        },
        "userEngagementTracking": {
          "$ref": "#/definitions/UserEngagementTracking"
        }
      }
    },
    "DomainManagement": {
      "description": "Describes how a Domains resource is being managed.",
      "enum": [
        "AzureManaged",
        "CustomerManaged",
        "CustomerManagedInExchangeOnline"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DomainManagement",
        "modelAsString": true
      }
    },
    "UserEngagementTracking": {
      "description": "Describes whether user engagement tracking is enabled or disabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "UserEngagementTracking",
        "modelAsString": true
      }
    },
    "DomainResource": {
      "description": "A class representing a Domains resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DomainProperties",
          "description": "The properties of a Domains resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateDomainProperties": {
      "description": "A class that describes the updatable properties of a Domains resource.",
      "type": "object",
      "properties": {
        "userEngagementTracking": {
          "$ref": "#/definitions/UserEngagementTracking"
        }
      }
    },
    "UpdateDomainRequestParameters": {
      "description": "A class that describes the PATCH request parameters of a Domains resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "CommunicationServices.json#/definitions/TaggedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateDomainProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "DomainResourceList": {
      "description": "Object that includes an array of Domains resource and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Domains resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DomainResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "EmailServiceProperties": {
      "description": "A class that describes the properties of the EmailService.",
      "required": [
        "dataLocation"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EmailServices_ProvisioningState",
            "modelAsString": true
          }
        },
        "dataLocation": {
          "description": "The location where the email service stores its data at rest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "EmailServiceResource": {
      "description": "A class representing an EmailService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailServiceProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EmailServiceResourceUpdate": {
      "description": "A class representing update parameters for EmailService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "CommunicationServices.json#/definitions/TaggedResource"
        }
      ]
    },
    "VerifiedExchangeOnlineDomainList": {
      "description": "List of FQDNs of verified domains in Exchange Online.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "EmailServiceResourceList": {
      "description": "Object that includes an array of EmailServices and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of EmailService",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailServiceResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SenderUsernameResource": {
      "description": "A class representing a SenderUsername resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SenderUsernameProperties",
          "description": "The properties of a SenderUsername resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SenderUsernameResourceCollection": {
      "description": "A class representing a Domains SenderUsernames collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of SenderUsernames",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SenderUsernameResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).",
          "type": "string"
        }
      }
    },
    "SenderUsernameProperties": {
      "description": "A class that describes the properties of a SenderUsername resource.",
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "dataLocation": {
          "description": "The location where the SenderUsername resource data is stored at rest.",
          "type": "string",
          "readOnly": true
        },
        "username": {
          "description": "A sender senderUsername to be used when sending emails.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name for the senderUsername.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource. Unknown is the default state for Communication Services.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}