{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.App",
    "version": "2025-01-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs": {
      "get": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Get the Container App AuthConfigs in a given resource group.",
        "operationId": "ContainerAppsAuthConfigs_ListByContainerApp",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthConfigCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Auth Configs by Container Apps": {
            "$ref": "./examples/AuthConfigs_ListByContainer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{authConfigName}": {
      "get": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Get a AuthConfig of a Container App.",
        "operationId": "ContainerAppsAuthConfigs_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's AuthConfig": {
            "$ref": "./examples/AuthConfigs_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Create or update the AuthConfig for a Container App.",
        "description": "Create or update the AuthConfig for a Container App.",
        "operationId": "ContainerAppsAuthConfigs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App AuthConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App AuthConfig": {
            "$ref": "./examples/AuthConfigs_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Delete a Container App AuthConfig.",
        "description": "Delete a Container App AuthConfig.",
        "operationId": "ContainerAppsAuthConfigs_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App deleted successfully."
          },
          "204": {
            "description": "Container App AuthConfig does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App AuthConfig": {
            "$ref": "./examples/AuthConfigs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols": {
      "get": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Get the Container App SourceControls in a given resource group.",
        "operationId": "ContainerAppsSourceControls_ListByContainerApp",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControlCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App's Source Controls": {
            "$ref": "./examples/SourceControls_ListByContainer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{sourceControlName}": {
      "get": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Get a SourceControl of a Container App.",
        "operationId": "ContainerAppsSourceControls_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's SourceControl": {
            "$ref": "./examples/SourceControls_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Create or update the SourceControl for a Container App.",
        "description": "Create or update the SourceControl for a Container App.",
        "operationId": "ContainerAppsSourceControls_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App SourceControl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App SourceControl": {
            "$ref": "./examples/SourceControls_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Delete a Container App SourceControl.",
        "description": "Delete a Container App SourceControl.",
        "operationId": "ContainerAppsSourceControls_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App SourceControl deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress."
          },
          "204": {
            "description": "Container App SourceControl does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App SourceControl": {
            "$ref": "./examples/SourceControls_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates": {
      "get": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given connected environment.",
        "operationId": "ConnectedEnvironmentsCertificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by Connected Environment": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_ListByConnectedEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificate_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificate_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificate_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "ConnectedEnvironmentsCertificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a certificate that need to be updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificatePatch"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate updated successfully.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/getCustomDomainVerificationId": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "description": "Get the verification id of a subscription used for verifying custom domains",
        "operationId": "GetCustomDomainVerificationId",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The custom domain verification id has been returned successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainVerificationId"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all operations": {
            "$ref": "./examples/Subscriptions_GetCustomDomainVerificationId.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get the Dapr Components for a managed environment.",
        "operationId": "DaprComponents_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Dapr Components": {
            "$ref": "./examples/DaprComponents_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get a dapr component.",
        "operationId": "DaprComponents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Dapr Component with secrets": {
            "$ref": "./examples/DaprComponents_Get_Secrets.json"
          },
          "Get Dapr Component with secret store component": {
            "$ref": "./examples/DaprComponents_Get_SecretStoreComponent.json"
          }
        }
      },
      "put": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Creates or updates a Dapr Component.",
        "description": "Creates or updates a Dapr Component in a Managed Environment.",
        "operationId": "DaprComponents_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": false,
        "x-ms-examples": {
          "Create or update dapr component with secrets": {
            "$ref": "./examples/DaprComponents_CreateOrUpdate_Secrets.json"
          },
          "Create or update dapr component with secret store component": {
            "$ref": "./examples/DaprComponents_CreateOrUpdate_SecretStoreComponent.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Delete a Dapr Component.",
        "description": "Delete a Dapr Component from a Managed Environment.",
        "operationId": "DaprComponents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Environment does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete dapr component": {
            "$ref": "./examples/DaprComponents_Delete.json"
          }
        },
        "x-ms-long-running-operation": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "List secrets for a dapr component",
        "operationId": "DaprComponents_ListSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprSecretsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/DaprComponents_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Get all connectedEnvironments for a subscription.",
        "description": "Get all connectedEnvironments for a subscription.",
        "operationId": "ConnectedEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List connected environments by subscription": {
            "$ref": "./examples/ConnectedEnvironments_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "operationId": "ConnectedEnvironments_ListByResourceGroup",
        "description": "Get all connectedEnvironments in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by resource group": {
            "$ref": "./examples/ConnectedEnvironments_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "operationId": "ConnectedEnvironments_Get",
        "description": "Get the properties of an connectedEnvironment.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get connected environment by connectedEnvironmentName": {
            "$ref": "./examples/ConnectedEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Creates or updates an connectedEnvironment.",
        "operationId": "ConnectedEnvironments_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the connectedEnvironment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create kube environments": {
            "$ref": "./examples/ConnectedEnvironments_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Delete an connectedEnvironment.",
        "description": "Delete an connectedEnvironment.",
        "operationId": "ConnectedEnvironments_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "ConnectedEnvironment does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete connected environment by connectedEnvironmentName": {
            "$ref": "./examples/ConnectedEnvironments_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Update connected Environment's properties.",
        "description": "Patches a Managed Environment. Only patching of tags is supported currently",
        "operationId": "ConnectedEnvironments_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Environment": {
            "$ref": "./examples/ConnectedEnvironments_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Checks the resource connectedEnvironmentName availability.",
        "description": "Checks if resource connectedEnvironmentName is available.",
        "operationId": "ConnectedEnvironments_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check connectedEnvironmentName availability request.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_CheckNameAvailability": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages": {
      "get": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Get all storages for a managedEnvironment.",
        "description": "Get all storages for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStoragesCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ManagedEnvironmentsStorages_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/{storageName}": {
      "get": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Get storage for a managedEnvironment.",
        "description": "Get storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "get a environments storage": {
            "$ref": "./examples/ManagedEnvironmentsStorages_Get.json"
          },
          "get a environments storage for NFS Azure file": {
            "$ref": "./examples/ManagedEnvironmentsStorages_Get_NfsAzureFile.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Create or update storage for a managedEnvironment.",
        "description": "Create or update storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update environments storage": {
            "$ref": "./examples/ManagedEnvironmentsStorages_CreateOrUpdate.json"
          },
          "Create or update environments storage for NFS Azure file": {
            "$ref": "./examples/ManagedEnvironmentsStorages_CreateOrUpdate_NfsAzureFile.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Delete storage for a managedEnvironment.",
        "description": "Delete storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Storage does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ManagedEnvironmentsStorages_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes": {
      "get": {
        "tags": [
          "AvailableWorkloadProfiles"
        ],
        "summary": "Get available workload profiles by location.",
        "description": "Get all available workload profiles for a location.",
        "operationId": "AvailableWorkloadProfiles_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailableWorkloadProfilesCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BillingMeters_Get": {
            "$ref": "./examples/AvailableWorkloadProfiles_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions": {
      "get": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Get the Revisions for a given Container App.",
        "operationId": "ContainerAppsRevisions_ListRevisions",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which Revisions are needed.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RevisionCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container App's revisions": {
            "$ref": "./examples/Revisions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/Revision"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}": {
      "get": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Get a revision of a Container App.",
        "operationId": "ContainerAppsRevisions_GetRevision",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's revision": {
            "$ref": "./examples/Revisions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/activate": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Activates a revision for a Container App",
        "operationId": "ContainerAppsRevisions_ActivateRevision",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was activated"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activate Container App's revision": {
            "$ref": "./examples/Revisions_Activate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/deactivate": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Deactivates a revision for a Container App",
        "operationId": "ContainerAppsRevisions_DeactivateRevision",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was deactivated"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deactivate Container App's revision": {
            "$ref": "./examples/Revisions_Deactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}": {
      "get": {
        "tags": [
          "ContainerAppsRevisionReplicas"
        ],
        "summary": "Get a replica for a Container App Revision.",
        "operationId": "ContainerAppsRevisionReplicas_GetReplica",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "Name of the Container App Revision Replica.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's revision replica": {
            "$ref": "./examples/Replicas_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas": {
      "get": {
        "tags": [
          "ContainerAppsRevisionReplicas"
        ],
        "summary": "List replicas for a Container App Revision.",
        "operationId": "ContainerAppsRevisionReplicas_ListReplicas",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicaCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container App's replicas": {
            "$ref": "./examples/Replicas_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/restart": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Restarts a revision for a Container App",
        "operationId": "ContainerAppsRevisions_RestartRevision",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was restarted"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart Container App's revision": {
            "$ref": "./examples/Revisions_Restart.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "Usages_List",
        "description": "Gets, for the specified location, the current resource usage information as well as the limits under the subscription.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List usages": {
            "$ref": "./examples/Usages_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "ManagedEnvironmentUsages_List",
        "description": "Gets the current usage information as well as the limits for environment.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List managed environment usages": {
            "$ref": "./examples/ManagedEnvironmentUsages_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages": {
      "get": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Get all storages for a connectedEnvironment.",
        "description": "Get all storages for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStoragesCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/{storageName}": {
      "get": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Get storage for a connectedEnvironment.",
        "description": "Get storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "get a environments storage properties by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Create or update storage for a connectedEnvironment.",
        "description": "Create or update storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update environments storage": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Delete storage for a connectedEnvironment.",
        "description": "Delete storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Storage does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the Container Apps Jobs in a given subscription.",
        "operationId": "Jobs_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobsCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Jobs by subscription": {
            "$ref": "./examples/Jobs_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the Container Apps Jobs in a given resource group.",
        "operationId": "Jobs_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Jobs by resource group": {
            "$ref": "./examples/Jobs_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the properties of a Container Apps Job.",
        "operationId": "Jobs_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container Apps Job": {
            "$ref": "./examples/Job_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create or Update a Container Apps Job.",
        "description": "Create or Update a Container Apps Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "description": "Properties used to create a container apps job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Container Apps Job create has been started.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "200": {
            "description": "No change performed on the Container Apps Job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container Apps Job": {
            "$ref": "./examples/Job_CreateorUpdate.json"
          },
          "Create or Update Container Apps Job With Event Driven Trigger": {
            "$ref": "./examples/Job_CreateorUpdate_EventTrigger.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Delete a Container Apps Job.",
        "description": "Delete a Container Apps Job.",
        "operationId": "Jobs_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container Apps Job deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Container Apps Job does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container Apps Job": {
            "$ref": "./examples/Job_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update properties of a Container Apps Job",
        "description": "Patches a Container Apps Job using JSON Merge Patch",
        "operationId": "Jobs_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties used to create a container apps job",
            "schema": {
              "$ref": "#/definitions/JobPatchProperties"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Container Apps Job": {
            "$ref": "./examples/Job_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/start": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Start a Container Apps Job",
        "operationId": "Jobs_Start",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "template",
            "in": "body",
            "description": "Properties used to start a job execution.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/JobExecutionTemplate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobExecutionBase"
            }
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run a Container Apps Job": {
            "$ref": "./examples/Job_Start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/stop": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Terminates execution of a running container apps job",
        "operationId": "Jobs_StopExecution",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/JobExecutionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container Apps Jobs terminated successfully."
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Terminate a Container Apps Job": {
            "$ref": "./examples/Job_Stop_Execution.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/stop": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Terminates execution of a running container apps job",
        "operationId": "Jobs_StopMultipleExecutions",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the job executions that were requested to be stopped",
            "schema": {
              "$ref": "#/definitions/ContainerAppJobExecutions"
            }
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Terminate Multiple Container Apps Job": {
            "$ref": "./examples/Job_Stop_Multiple.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get a Container Apps Job's executions",
        "operationId": "JobsExecutions_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppJobExecutions"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a Container Apps Job Executions": {
            "$ref": "./examples/Job_Executions_Get.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get details of a single job execution",
        "operationId": "JobExecution",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/JobExecutionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobExecution"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a single Job Execution": {
            "$ref": "./examples/Job_Execution_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/listSecrets": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "List secrets for a container apps job",
        "operationId": "Jobs_ListSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobSecretsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Job Secrets": {
            "$ref": "./examples/Job_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all Environments for a subscription.",
        "description": "Get all Managed Environments for a subscription.",
        "operationId": "ManagedEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by subscription": {
            "$ref": "./examples/ManagedEnvironments_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all the Environments in a resource group.",
        "description": "Get all the Managed Environments in a resource group.",
        "operationId": "ManagedEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by resource group": {
            "$ref": "./examples/ManagedEnvironments_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get environments by name": {
            "$ref": "./examples/ManagedEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Creates or updates a Managed Environment.",
        "description": "Creates or updates a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create environments": {
            "$ref": "./examples/ManagedEnvironments_CreateOrUpdate.json"
          },
          "Create environment with custom infrastructureResourceGroup": {
            "$ref": "./examples/ManagedEnvironments_CustomInfrastructureResourceGroup_Create.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Delete a Managed Environment.",
        "description": "Delete a Managed Environment if it does not have any container apps.",
        "operationId": "ManagedEnvironments_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is in progress"
          },
          "204": {
            "description": "Environment does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete environment by name": {
            "$ref": "./examples/ManagedEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Update Managed Environment's properties.",
        "description": "Patches a Managed Environment using JSON Merge Patch",
        "operationId": "ManagedEnvironments_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "202": {
            "description": "Patch operation is in progress."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Environment": {
            "$ref": "./examples/ManagedEnvironments_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given managed environment.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by Managed Environment": {
            "$ref": "./examples/Certificates_ListByManagedEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/Certificate_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/Certificate_CreateOrUpdate.json"
          },
          "Create or Update Certificate using Managed Identity": {
            "$ref": "./examples/Certificate_CreateOrUpdate_FromKeyVault.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/Certificate_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "Certificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a certificate that need to be updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/CertificatePatch"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate updated successfully.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/Certificates_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates/{managedCertificateName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/ManagedCertificate_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Create or Update a Managed Certificate.",
        "operationId": "ManagedCertificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "description": "Managed Certificate to be created or updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "400": {
            "description": "Bad Request.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/ManagedCertificate_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Deletes the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/ManagedCertificate_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Update tags of a managed certificate",
        "description": "Patches a managed certificate. Oly patching of tags is supported",
        "operationId": "ManagedCertificates_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a managed certificate that need to be updated",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificatePatch"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Managed Certificate updated successfully.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Certificate": {
            "$ref": "./examples/ManagedCertificates_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the Managed Certificates in a given managed environment.",
        "operationId": "ManagedCertificates_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/ManagedCertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Managed Certificates by Managed Environment": {
            "$ref": "./examples/ManagedCertificates_ListByManagedEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check name availability request.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ContainerApps_CheckNameAvailability": {
            "$ref": "./examples/ContainerApps_CheckNameAvailability.json"
          },
          "Certificates_CheckNameAvailability": {
            "$ref": "./examples/Certificates_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/getAuthtoken": {
      "post": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get auth token for a managed environment",
        "description": "Checks if resource name is available.",
        "operationId": "ManagedEnvironments_GetAuthToken",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EnvironmentAuthToken"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Environment Auth Token": {
            "$ref": "./examples/ManagedEnvironments_GetAuthToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/workloadProfileStates": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all workload Profile States for a Managed Environment..",
        "description": "Get all workload Profile States for a Managed Environment.",
        "operationId": "ManagedEnvironments_ListWorkloadProfileStates",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workloadProfileStatesCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by subscription": {
            "$ref": "./examples/ManagedEnvironments_ListWorkloadProfileStates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get the Dapr Components for a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Dapr Components": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get a dapr component.",
        "operationId": "ConnectedEnvironmentsDaprComponents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Dapr Component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Creates or updates a Dapr Component.",
        "description": "Creates or updates a Dapr Component in a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": false,
        "x-ms-examples": {
          "Create or update dapr component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Delete a Dapr Component.",
        "description": "Delete a Dapr Component from a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Environment does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete dapr component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_Delete.json"
          }
        },
        "x-ms-long-running-operation": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "List secrets for a dapr component",
        "operationId": "ConnectedEnvironmentsDaprComponents_ListSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DaprSecretsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given subscription.",
        "operationId": "ContainerApps_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by subscription": {
            "$ref": "./examples/ContainerApps_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given resource group.",
        "operationId": "ContainerApps_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by resource group": {
            "$ref": "./examples/ContainerApps_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the properties of a Container App.",
        "operationId": "ContainerApps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App": {
            "$ref": "./examples/ContainerApps_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Create or update a Container App.",
        "description": "Create or update a Container App.",
        "operationId": "ContainerApps_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "description": "Properties used to create a container app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Container App.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "201": {
            "description": "Container App create or update has been started.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App": {
            "$ref": "./examples/ContainerApps_CreateOrUpdate.json"
          },
          "Create or Update Tcp App": {
            "$ref": "./examples/ContainerApps_TcpApp_CreateOrUpdate.json"
          },
          "Create or Update ManagedBy App": {
            "$ref": "./examples/ContainerApps_ManagedBy_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Delete a Container App.",
        "description": "Delete a Container App.",
        "operationId": "ContainerApps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Container App does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App": {
            "$ref": "./examples/ContainerApps_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Update properties of a Container App",
        "description": "Patches a Container App using JSON Merge Patch",
        "operationId": "ContainerApps_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a Container App that need to be updated",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Container App": {
            "$ref": "./examples/ContainerApps_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Analyzes a custom hostname for a Container App",
        "operationId": "ContainerApps_ListCustomHostNameAnalysis",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customHostname",
            "in": "query",
            "description": "Custom hostname.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Analyze Custom Hostname": {
            "$ref": "./examples/ContainerApps_ListCustomHostNameAnalysis.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listSecrets": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "List secrets for a container app",
        "operationId": "ContainerApps_ListSecrets",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecretsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/ContainerApps_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/getAuthtoken": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get auth token for a container app",
        "operationId": "ContainerApps_GetAuthToken",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerAppAuthToken"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App Auth Token": {
            "$ref": "./examples/ContainerApps_GetAuthToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/start": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Start a container app",
        "operationId": "ContainerApps_Start",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App started successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Start operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Container App": {
            "$ref": "./examples/ContainerApps_Start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/stop": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Stop a container app",
        "operationId": "ContainerApps_Stop",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App stopped successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Stop operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Container App": {
            "$ref": "./examples/ContainerApps_Stop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.App/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AvailableOperations"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List all operations": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/sessionPools": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the session pools in a given subscription.",
        "operationId": "ContainerAppsSessionPools_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionPoolCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Session Pools by subscription": {
            "$ref": "./examples/SessionPools_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the session pools in a given resource group of a subscription.",
        "operationId": "ContainerAppsSessionPools_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SessionPoolCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Session Pools by resource group": {
            "$ref": "./examples/SessionPools_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools/{sessionPoolName}": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the properties of a session pool.",
        "operationId": "ContainerAppsSessionPools_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SessionPoolNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SessionPool"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Session Pool": {
            "$ref": "./examples/SessionPools_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Create or update a session pool.",
        "description": "Create or update a session pool with the given properties.",
        "operationId": "ContainerAppsSessionPools_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SessionPoolNameParameter"
          },
          {
            "name": "sessionPoolEnvelope",
            "in": "body",
            "description": "Properties used to create a session pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionPool"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update succeeded",
            "schema": {
              "$ref": "#/definitions/SessionPool"
            }
          },
          "201": {
            "description": "Session pool creation has started.",
            "schema": {
              "$ref": "#/definitions/SessionPool"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or Update Session Pool with lifecycle type Timed": {
            "$ref": "./examples/SessionPools_LifecycleTimed_CreateOrUpdate.json"
          },
          "Create or Update Session Pool with lifecycle OnContainerExit Timed": {
            "$ref": "./examples/SessionPools_LifecycleOnContainerExit_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Update properties of a session pool",
        "description": "Patches a session pool using JSON merge patch",
        "operationId": "ContainerAppsSessionPools_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SessionPoolNameParameter"
          },
          {
            "name": "sessionPoolEnvelope",
            "in": "body",
            "description": "Properties used to create a session pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionPoolUpdatableProperties"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update succeeded",
            "schema": {
              "$ref": "#/definitions/SessionPool"
            }
          },
          "202": {
            "description": "Session pool update has been started.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update Session Pool": {
            "$ref": "./examples/SessionPools_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Delete a session pool.",
        "description": "Delete the session pool with the given name.",
        "operationId": "ContainerAppsSessionPools_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SessionPoolNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Session pool delete has been started.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Session pool does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Session Pool": {
            "$ref": "./examples/SessionPools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents": {
      "get": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Get the Java Components for a managed environment.",
        "operationId": "JavaComponents_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/JavaComponentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Java Components": {
            "$ref": "./examples/JavaComponents_List.json"
          },
          "List Java Components with ServiceBinds": {
            "$ref": "./examples/JavaComponents_List_ServiceBind.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents/{name}": {
      "get": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Get a Java Component.",
        "operationId": "JavaComponents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Java Component": {
            "$ref": "./examples/JavaComponents_Get.json"
          },
          "Get Java Component with ServiceBinds": {
            "$ref": "./examples/JavaComponents_Get_ServiceBind.json"
          }
        }
      },
      "put": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Creates or updates a Java Component.",
        "description": "Creates or updates a Java Component in a Managed Environment.",
        "operationId": "JavaComponents_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "javaComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Java Component.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Java Component.",
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          },
          "201": {
            "description": "Java Component create or update has been started.",
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or Update Java Component": {
            "$ref": "./examples/JavaComponents_CreateOrUpdate.json"
          },
          "Create or Update Java Component with ServiceBinds": {
            "$ref": "./examples/JavaComponents_CreateOrUpdate_ServiceBind.json"
          }
        }
      },
      "patch": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Update properties of a Java Component",
        "description": "Patches a Java Component using JSON Merge Patch",
        "operationId": "JavaComponents_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "javaComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Java Component.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/JavaComponent"
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Patch Java Component": {
            "$ref": "./examples/JavaComponents_Patch.json"
          },
          "Patch Java Component with ServiceBinds": {
            "$ref": "./examples/JavaComponents_Patch_ServiceBind.json"
          }
        }
      },
      "delete": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Delete.",
        "description": "Delete a Java Component.",
        "operationId": "JavaComponents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Java Component does not exist."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Java Component": {
            "$ref": "./examples/JavaComponents_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Container App.",
        "operationId": "ContainerAppsDiagnostics_ListDetectors",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which detector info is needed.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the list of available diagnostics for a given Container App": {
            "$ref": "./examples/ContainerAppsDiagnostics_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get a diagnostics result of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetDetector",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Container App Detector.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Diagnostics"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's diagnostics info": {
            "$ref": "./examples/ContainerAppsDiagnostics_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the Revisions for a given Container App.",
        "operationId": "ContainerAppsDiagnostics_ListRevisions",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which Revisions are needed.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./ContainerAppsRevisions.json#/definitions/RevisionCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container App's revisions": {
            "$ref": "./examples/Revisions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/Revision"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/{revisionName}": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get a revision of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetRevision",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./ContainerAppsRevisions.json#/definitions/Revision"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's revision": {
            "$ref": "./examples/Revisions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/rootApi/": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetRoot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./ContainerApps.json#/definitions/ContainerApp"
            }
          },
          "404": {
            "description": "Not found.",
            "x-ms-error-response": true
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App": {
            "$ref": "./examples/ContainerApps_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Managed Environment.",
        "description": "Get the list of diagnostics for a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentDiagnostics_ListDetectors",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the list of available diagnostic data for a managed environments": {
            "$ref": "./examples/ManagedEnvironmentDiagnostics_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the diagnostics data for a given Managed Environment.",
        "description": "Get the diagnostics data for a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentDiagnostics_GetDetector",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Managed Environment detector.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Diagnostics"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get diagnostic data for a managed environments": {
            "$ref": "./examples/ManagedEnvironmentDiagnostics_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectorProperties/rootApi/": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentsDiagnostics_GetRoot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./ManagedEnvironments.json#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get environments by name": {
            "$ref": "./examples/ManagedEnvironments_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Container App Job.",
        "description": "Get the list of diagnostics for a Container App Job.",
        "operationId": "Jobs_ListDetectors",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiagnosticsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the list of available diagnostic data for a Container App Job": {
            "$ref": "./examples/Job_ListDetectors.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the diagnostics data for a given Container App Job.",
        "description": "Get the diagnostics data for a Container App Job.",
        "operationId": "Jobs_GetDetector",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Container App Job detector.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Diagnostics"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get diagnostic data for a Container App Job": {
            "$ref": "./examples/Job_GetDetector.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectorProperties/{apiName}": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Container App Job.",
        "description": "Get the properties of a Container App Job.",
        "operationId": "Jobs_ProxyGet",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "Proxy API Name for Container App Job.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./Jobs.json#/definitions/Job"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App Job by name": {
            "$ref": "./examples/Job_ProxyGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters": {
      "get": {
        "tags": [
          "BillingMeters"
        ],
        "summary": "Get billing meters by location.",
        "description": "Get all billingMeters for a location.",
        "operationId": "BillingMeters_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BillingMeterCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BillingMeters_Get": {
            "$ref": "./examples/BillingMeters_Get.json"
          }
        }
      }
    }
  },
  "parameters": {
    "JobNameParameter": {
      "name": "jobName",
      "in": "path",
      "description": "Job Name",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "JobExecutionNameParameter": {
      "name": "jobExecutionName",
      "in": "path",
      "description": "Job execution name.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "SessionPoolNameParameter": {
      "name": "sessionPoolName",
      "in": "path",
      "description": "Name of the session pool.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AuthConfigCollection": {
      "description": "AuthConfig collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthConfig"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AuthConfig": {
      "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "AuthConfig resource specific properties",
          "type": "object",
          "properties": {
            "platform": {
              "$ref": "#/definitions/AuthPlatform",
              "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization."
            },
            "globalValidation": {
              "$ref": "#/definitions/GlobalValidation",
              "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization."
            },
            "identityProviders": {
              "$ref": "#/definitions/IdentityProviders",
              "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization."
            },
            "login": {
              "$ref": "#/definitions/Login",
              "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization."
            },
            "httpSettings": {
              "$ref": "#/definitions/HttpSettings",
              "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization."
            },
            "encryptionSettings": {
              "$ref": "#/definitions/EncryptionSettings",
              "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization."
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AuthPlatform": {
      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "runtimeVersion": {
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
          "type": "string"
        }
      }
    },
    "GlobalValidation": {
      "description": "The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "unauthenticatedClientAction": {
          "description": "The action to take when an unauthenticated client attempts to access the app.",
          "enum": [
            "RedirectToLoginPage",
            "AllowAnonymous",
            "Return401",
            "Return403"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UnauthenticatedClientActionV2",
            "modelAsString": false
          }
        },
        "redirectToProvider": {
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
          "type": "string"
        },
        "excludedPaths": {
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HttpSettings": {
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireHttps": {
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "routes": {
          "$ref": "#/definitions/HttpSettingsRoutes",
          "description": "The configuration settings of the paths HTTP requests."
        },
        "forwardProxy": {
          "$ref": "#/definitions/ForwardProxy",
          "description": "The configuration settings of a forward proxy used to make the requests."
        }
      }
    },
    "EncryptionSettings": {
      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "containerAppAuthEncryptionSecretName": {
          "description": "The secret name which is referenced for EncryptionKey.",
          "type": "string"
        },
        "containerAppAuthSigningSecretName": {
          "description": "The secret name which is referenced for SigningKey.",
          "type": "string"
        }
      }
    },
    "HttpSettingsRoutes": {
      "description": "The configuration settings of the paths HTTP requests.",
      "type": "object",
      "properties": {
        "apiPrefix": {
          "description": "The prefix that should precede all the authentication/authorization paths.",
          "type": "string"
        }
      }
    },
    "ForwardProxy": {
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used to determine the url of the request made.",
          "enum": [
            "NoProxy",
            "Standard",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ForwardProxyConvention",
            "modelAsString": false
          }
        },
        "customHostHeaderName": {
          "description": "The name of the header containing the host of the request.",
          "type": "string"
        },
        "customProtoHeaderName": {
          "description": "The name of the header containing the scheme of the request.",
          "type": "string"
        }
      }
    },
    "Login": {
      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "routes": {
          "$ref": "#/definitions/LoginRoutes",
          "description": "The routes that specify the endpoints used for login and logout requests."
        },
        "tokenStore": {
          "$ref": "#/definitions/TokenStore",
          "description": "The configuration settings of the token store."
        },
        "preserveUrlFragmentsForLogins": {
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "allowedExternalRedirectUrls": {
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cookieExpiration": {
          "$ref": "#/definitions/CookieExpiration",
          "description": "The configuration settings of the session cookie's expiration."
        },
        "nonce": {
          "$ref": "#/definitions/Nonce",
          "description": "The configuration settings of the nonce used in the login flow."
        }
      }
    },
    "LoginRoutes": {
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "type": "object",
      "properties": {
        "logoutEndpoint": {
          "description": "The endpoint at which a logout request should be made.",
          "type": "string"
        }
      }
    },
    "TokenStore": {
      "description": "The configuration settings of the token store.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
          "type": "boolean"
        },
        "tokenRefreshExtensionHours": {
          "format": "double",
          "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
          "type": "number"
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/BlobStorageTokenStore",
          "description": "The configuration settings of the storage of the tokens if blob storage is used."
        }
      }
    },
    "BlobStorageTokenStore": {
      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
      "type": "object",
      "required": [
        "sasUrlSettingName"
      ],
      "properties": {
        "sasUrlSettingName": {
          "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
          "type": "string"
        }
      }
    },
    "CookieExpiration": {
      "description": "The configuration settings of the session cookie's expiration.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used when determining the session cookie's expiration.",
          "enum": [
            "FixedTime",
            "IdentityProviderDerived"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CookieExpirationConvention",
            "modelAsString": false
          }
        },
        "timeToExpiration": {
          "description": "The time after the request is made when the session cookie should expire.",
          "type": "string"
        }
      }
    },
    "Nonce": {
      "description": "The configuration settings of the nonce used in the login flow.",
      "type": "object",
      "properties": {
        "validateNonce": {
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "nonceExpirationInterval": {
          "description": "The time after the request is made when the nonce should expire.",
          "type": "string"
        }
      }
    },
    "IdentityProviders": {
      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The configuration settings of the Azure Active directory provider."
        },
        "facebook": {
          "$ref": "#/definitions/Facebook",
          "description": "The configuration settings of the Facebook provider."
        },
        "gitHub": {
          "$ref": "#/definitions/GitHub",
          "description": "The configuration settings of the GitHub provider."
        },
        "google": {
          "$ref": "#/definitions/Google",
          "description": "The configuration settings of the Google provider."
        },
        "twitter": {
          "$ref": "#/definitions/Twitter",
          "description": "The configuration settings of the Twitter provider."
        },
        "apple": {
          "$ref": "#/definitions/Apple",
          "description": "The configuration settings of the Apple provider."
        },
        "azureStaticWebApps": {
          "$ref": "#/definitions/AzureStaticWebApps",
          "description": "The configuration settings of the Azure Static Web Apps provider."
        },
        "customOpenIdConnectProviders": {
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CustomOpenIdConnectProvider"
          }
        }
      }
    },
    "AzureActiveDirectory": {
      "description": "The configuration settings of the Azure Active directory provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AzureActiveDirectoryRegistration",
          "description": "The configuration settings of the Azure Active Directory app registration."
        },
        "login": {
          "$ref": "#/definitions/AzureActiveDirectoryLogin",
          "description": "The configuration settings of the Azure Active Directory login flow."
        },
        "validation": {
          "$ref": "#/definitions/AzureActiveDirectoryValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        },
        "isAutoProvisioned": {
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryLogin": {
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "type": "object",
      "properties": {
        "loginParameters": {
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableWWWAuthenticate": {
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryRegistration": {
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "type": "object",
      "properties": {
        "openIdIssuer": {
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret of the relying party application.",
          "type": "string"
        },
        "clientSecretCertificateThumbprint": {
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateIssuer": {
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectoryValidation": {
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "type": "object",
      "properties": {
        "jwtClaimChecks": {
          "$ref": "#/definitions/JwtClaimChecks",
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims."
        },
        "allowedAudiences": {
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAuthorizationPolicy": {
          "$ref": "#/definitions/DefaultAuthorizationPolicy",
          "description": "The configuration settings of the default authorization policy."
        }
      }
    },
    "JwtClaimChecks": {
      "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
      "type": "object",
      "properties": {
        "allowedGroups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedClientApplications": {
          "description": "The list of the allowed client applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DefaultAuthorizationPolicy": {
      "description": "The configuration settings of the Azure Active Directory default authorization policy.",
      "type": "object",
      "properties": {
        "allowedPrincipals": {
          "$ref": "#/definitions/AllowedPrincipals",
          "description": "The configuration settings of the Azure Active Directory allowed principals."
        },
        "allowedApplications": {
          "description": "The configuration settings of the Azure Active Directory allowed applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllowedPrincipals": {
      "description": "The configuration settings of the Azure Active Directory allowed principals.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identities": {
          "description": "The list of the allowed identities.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Facebook": {
      "description": "The configuration settings of the Facebook provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AppRegistration",
          "description": "The configuration settings of the app registration for the Facebook provider."
        },
        "graphApiVersion": {
          "description": "The version of the Facebook api to be used while logging in.",
          "type": "string"
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "AppRegistration": {
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "type": "object",
      "properties": {
        "appId": {
          "description": "The App ID of the app used for login.",
          "type": "string"
        },
        "appSecretSettingName": {
          "description": "The app setting name that contains the app secret.",
          "type": "string"
        }
      }
    },
    "LoginScopes": {
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GitHub": {
      "description": "The configuration settings of the GitHub provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the GitHub provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "ClientRegistration": {
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "Google": {
      "description": "The configuration settings of the Google provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the Google provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        },
        "validation": {
          "$ref": "#/definitions/AllowedAudiencesValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        }
      }
    },
    "AllowedAudiencesValidation": {
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Twitter": {
      "description": "The configuration settings of the Twitter provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/TwitterRegistration",
          "description": "The configuration settings of the app registration for the Twitter provider."
        }
      }
    },
    "TwitterRegistration": {
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "type": "object",
      "properties": {
        "consumerKey": {
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "consumerSecretSettingName": {
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
          "type": "string"
        }
      }
    },
    "Apple": {
      "description": "The configuration settings of the Apple provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AppleRegistration",
          "description": "The configuration settings of the Apple registration."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "AppleRegistration": {
      "description": "The configuration settings of the registration for the Apple provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "AzureStaticWebApps": {
      "description": "The configuration settings of the Azure Static Web Apps provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/AzureStaticWebAppsRegistration",
          "description": "The configuration settings of the Azure Static Web Apps registration."
        }
      }
    },
    "AzureStaticWebAppsRegistration": {
      "description": "The configuration settings of the registration for the Azure Static Web Apps provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        }
      }
    },
    "CustomOpenIdConnectProvider": {
      "description": "The configuration settings of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "$ref": "#/definitions/OpenIdConnectRegistration",
          "description": "The configuration settings of the app registration for the custom Open ID Connect provider."
        },
        "login": {
          "$ref": "#/definitions/OpenIdConnectLogin",
          "description": "The configuration settings of the login flow of the custom Open ID Connect provider."
        }
      }
    },
    "OpenIdConnectRegistration": {
      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The client id of the custom Open ID Connect provider.",
          "type": "string"
        },
        "clientCredential": {
          "$ref": "#/definitions/OpenIdConnectClientCredential",
          "description": "The authentication credentials of the custom Open ID Connect provider."
        },
        "openIdConnectConfiguration": {
          "$ref": "#/definitions/OpenIdConnectConfig",
          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider."
        }
      }
    },
    "OpenIdConnectClientCredential": {
      "description": "The authentication client credentials of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "method": {
          "description": "The method that should be used to authenticate the user.",
          "enum": [
            "ClientSecretPost"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientCredentialMethod",
            "modelAsString": false
          }
        },
        "clientSecretSettingName": {
          "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectConfig": {
      "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "authorizationEndpoint": {
          "description": "The endpoint to be used to make an authorization request.",
          "type": "string"
        },
        "tokenEndpoint": {
          "description": "The endpoint to be used to request a token.",
          "type": "string"
        },
        "issuer": {
          "description": "The endpoint that issues the token.",
          "type": "string"
        },
        "certificationUri": {
          "description": "The endpoint that provides the keys necessary to validate the token.",
          "type": "string"
        },
        "wellKnownOpenIdConfiguration": {
          "description": "The endpoint that contains all the configuration endpoints for the provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectLogin": {
      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "nameClaimType": {
          "description": "The name of the claim that contains the users name.",
          "type": "string"
        },
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SourceControl": {
      "description": "Container App SourceControl.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "SourceControl resource specific properties",
          "type": "object",
          "properties": {
            "operationState": {
              "description": "Current provisioning State of the operation",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SourceControlOperationState",
                "modelAsString": true
              }
            },
            "repoUrl": {
              "description": "The repo url which will be integrated to ContainerApp.",
              "type": "string"
            },
            "branch": {
              "description": "The branch which will trigger the auto deployment",
              "type": "string"
            },
            "githubActionConfiguration": {
              "$ref": "#/definitions/GithubActionConfiguration",
              "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GithubActionConfiguration": {
      "description": "Configuration properties that define the mutable settings of a Container App SourceControl",
      "type": "object",
      "properties": {
        "registryInfo": {
          "$ref": "#/definitions/RegistryInfo",
          "description": "Registry configurations."
        },
        "azureCredentials": {
          "$ref": "#/definitions/AzureCredentials",
          "description": "AzureCredentials configurations."
        },
        "contextPath": {
          "description": "Context path",
          "type": "string"
        },
        "githubPersonalAccessToken": {
          "description": "One time Github PAT to configure github environment",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "image": {
          "description": "Image name",
          "type": "string"
        },
        "publishType": {
          "description": "Code or Image",
          "type": "string"
        },
        "os": {
          "description": "Operation system",
          "type": "string"
        },
        "runtimeStack": {
          "description": "Runtime stack",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version",
          "type": "string"
        }
      }
    },
    "RegistryInfo": {
      "description": "Container App registry information.",
      "type": "object",
      "properties": {
        "registryUrl": {
          "description": "registry server Url.",
          "type": "string"
        },
        "registryUserName": {
          "description": "registry username.",
          "type": "string"
        },
        "registryPassword": {
          "description": "registry secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "AzureCredentials": {
      "description": "Container App credentials.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Client Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "clientSecret": {
          "description": "Client Secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "description": "Tenant Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "kind": {
          "description": "Kind of auth github does for deploying the template",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "subscriptionId": {
          "description": "Subscription Id.",
          "type": "string"
        }
      }
    },
    "SourceControlCollection": {
      "description": "SourceControl collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CustomDomainVerificationId": {
      "description": "Custom domain verification Id of a subscription",
      "type": "string",
      "readOnly": true
    },
    "ConnectedEnvironment": {
      "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "./CommonDefinitions.json#/definitions/ExtendedLocation"
        },
        "properties": {
          "description": "ConnectedEnvironment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Kubernetes Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConnectedEnvironmentProvisioningState",
                "modelAsString": true
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the connectedEnvironment",
              "type": "string"
            },
            "daprAIConnectionString": {
              "type": "string",
              "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "customDomainConfiguration": {
              "$ref": "./CommonDefinitions.json#/definitions/CustomDomainConfiguration",
              "description": "Custom domain configuration for the environment"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectedEnvironmentCollection": {
      "description": "Collection of connectedEnvironments",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectedEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ManagedEnvironmentStoragesCollection": {
      "description": "Collection of Storage for Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of storage resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedEnvironmentStorage"
          }
        }
      }
    },
    "ManagedEnvironmentStorage": {
      "description": "Storage resource for managedEnvironment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Storage properties",
          "type": "object",
          "properties": {
            "azureFile": {
              "$ref": "./CommonDefinitions.json#/definitions/AzureFileProperties",
              "description": "Azure file properties"
            },
            "nfsAzureFile": {
              "$ref": "./CommonDefinitions.json#/definitions/NfsAzureFileProperties",
              "description": "NFS Azure file properties"
            }
          }
        }
      }
    },
    "AvailableWorkloadProfile": {
      "description": "A workload profile with specific hardware configure to run container apps.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Region of the workload profile."
        },
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "category": {
              "description": "Used to categorize workload profiles.",
              "type": "string"
            },
            "applicability": {
              "type": "string",
              "description": "indicates whether the profile is default for the location.",
              "enum": [
                "LocationDefault",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "Applicability",
                "modelAsString": true
              }
            },
            "cores": {
              "type": "integer",
              "format": "int32",
              "description": "Number of cores in CPU."
            },
            "memoryGiB": {
              "type": "integer",
              "format": "int32",
              "description": "Memory in GiB."
            },
            "gpus": {
              "type": "integer",
              "format": "int32",
              "description": "Number of GPUs."
            },
            "displayName": {
              "type": "string",
              "description": "The everyday name of the workload profile."
            }
          }
        }
      }
    },
    "AvailableWorkloadProfilesCollection": {
      "description": "Collection of available workload profiles in the location.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of workload profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableWorkloadProfile"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Revision": {
      "description": "Container App Revision.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "createdTime": {
              "format": "date-time",
              "description": "Timestamp describing when the revision was created\nby controller",
              "type": "string",
              "readOnly": true
            },
            "lastActiveTime": {
              "format": "date-time",
              "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
              "type": "string",
              "readOnly": true
            },
            "fqdn": {
              "description": "Fully qualified domain name of the revision",
              "type": "string",
              "readOnly": true
            },
            "template": {
              "$ref": "./CommonDefinitions.json#/definitions/Template",
              "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
              "readOnly": true
            },
            "active": {
              "description": "Boolean describing if the Revision is Active",
              "type": "boolean",
              "readOnly": true
            },
            "replicas": {
              "format": "int32",
              "description": "Number of pods currently running for this revision",
              "type": "integer",
              "readOnly": true
            },
            "trafficWeight": {
              "format": "int32",
              "description": "Traffic weight assigned to this revision",
              "type": "integer",
              "readOnly": true
            },
            "provisioningError": {
              "description": "Optional Field - Platform Error Message",
              "type": "string",
              "readOnly": true
            },
            "healthState": {
              "description": "Current health State of the revision",
              "enum": [
                "Healthy",
                "Unhealthy",
                "None"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionHealthState",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Current provisioning State of the revision",
              "enum": [
                "Provisioning",
                "Provisioned",
                "Failed",
                "Deprovisioning",
                "Deprovisioned"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionProvisioningState",
                "modelAsString": true
              }
            },
            "runningState": {
              "description": "Current running state of the revision",
              "enum": [
                "Running",
                "Processing",
                "Stopped",
                "Degraded",
                "Failed",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionRunningState",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RevisionCollection": {
      "description": "Container App Revisions collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Revision"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Replica": {
      "description": "Container App Revision Replica.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Replica resource specific properties",
          "type": "object",
          "properties": {
            "createdTime": {
              "type": "string",
              "description": "Timestamp describing when the pod was created by controller",
              "format": "date-time",
              "readOnly": true
            },
            "runningState": {
              "description": "Current running state of the replica",
              "enum": [
                "Running",
                "NotRunning",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppReplicaRunningState",
                "modelAsString": true
              }
            },
            "runningStateDetails": {
              "description": "The details of replica current running state",
              "type": "string",
              "readOnly": true
            },
            "containers": {
              "description": "The containers collection under a replica.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplicaContainer"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "initContainers": {
              "description": "The init containers collection under a replica.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplicaContainer"
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicaCollection": {
      "description": "Container App Revision Replicas collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Replica"
          }
        }
      }
    },
    "ReplicaContainer": {
      "description": "Container object under Container App Revision Replica.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Name of the Container",
          "type": "string"
        },
        "containerId": {
          "description": "The Id of the Container",
          "type": "string"
        },
        "ready": {
          "description": "The container ready status",
          "type": "boolean"
        },
        "started": {
          "description": "The container start status",
          "type": "boolean"
        },
        "restartCount": {
          "format": "int32",
          "description": "The container restart count",
          "type": "integer"
        },
        "runningState": {
          "description": "Current running state of the container",
          "enum": [
            "Running",
            "Terminated",
            "Waiting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ContainerAppContainerRunningState",
            "modelAsString": true
          }
        },
        "runningStateDetails": {
          "description": "The details of container current running state",
          "type": "string",
          "readOnly": true
        },
        "logStreamEndpoint": {
          "description": "Log Stream endpoint",
          "type": "string",
          "readOnly": true
        },
        "execEndpoint": {
          "description": "Container exec endpoint",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UsageName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": false
          }
        },
        "currentValue": {
          "type": "number",
          "format": "float",
          "description": "The current usage of the resource."
        },
        "limit": {
          "type": "number",
          "format": "float",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ],
      "description": "Describes Compute Resource Usage."
    },
    "ListUsagesResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of compute resource usages."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information."
        }
      }
    },
    "ConnectedEnvironmentStoragesCollection": {
      "description": "Collection of Storage for Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of storage resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectedEnvironmentStorage"
          }
        }
      }
    },
    "ConnectedEnvironmentStorage": {
      "description": "Storage resource for connectedEnvironment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Storage properties",
          "type": "object",
          "properties": {
            "azureFile": {
              "$ref": "./CommonDefinitions.json#/definitions/AzureFileProperties",
              "description": "Azure file properties"
            }
          }
        }
      }
    },
    "JobConfiguration": {
      "description": "Non versioned Container Apps Job configuration properties",
      "type": "object",
      "required": [
        "replicaTimeout",
        "triggerType"
      ],
      "properties": {
        "secrets": {
          "description": "Collection of secrets used by a Container Apps Job",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/Secret"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "triggerType": {
          "description": "Trigger type of the job",
          "enum": [
            "Schedule",
            "Event",
            "Manual"
          ],
          "type": "string",
          "default": "Manual",
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true
          }
        },
        "replicaTimeout": {
          "description": "Maximum number of seconds a replica is allowed to run.",
          "format": "int32",
          "type": "integer"
        },
        "replicaRetryLimit": {
          "format": "int32",
          "description": "Maximum number of retries before failing the job.",
          "type": "integer"
        },
        "manualTriggerConfig": {
          "type": "object",
          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
          "properties": {
            "replicaCompletionCount": {
              "$ref": "#/definitions/ReplicaCompletionCount"
            },
            "parallelism": {
              "$ref": "#/definitions/Parallelism"
            }
          }
        },
        "scheduleTriggerConfig": {
          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
          "required": [
            "cronExpression"
          ],
          "type": "object",
          "properties": {
            "replicaCompletionCount": {
              "$ref": "#/definitions/ReplicaCompletionCount"
            },
            "cronExpression": {
              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
              "type": "string"
            },
            "parallelism": {
              "$ref": "#/definitions/Parallelism"
            }
          }
        },
        "eventTriggerConfig": {
          "type": "object",
          "description": "Trigger configuration of an event driven job.",
          "properties": {
            "replicaCompletionCount": {
              "$ref": "#/definitions/ReplicaCompletionCount"
            },
            "parallelism": {
              "$ref": "#/definitions/Parallelism"
            },
            "scale": {
              "$ref": "#/definitions/JobScale"
            }
          }
        },
        "registries": {
          "description": "Collection of private container registry credentials used by a Container apps job",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryCredentials"
          },
          "x-ms-identifiers": [
            "server"
          ]
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/IdentitySettings"
          },
          "x-ms-identifiers": [
            "identity"
          ]
        }
      }
    },
    "Job": {
      "type": "object",
      "description": "Container App Job",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Container Apps Job resource specific properties.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Container Apps Job.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobProvisioningState",
                "modelAsString": true
              }
            },
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "workloadProfileName": {
              "$ref": "./CommonDefinitions.json#/definitions/WorkloadProfileName",
              "description": "Workload profile name to pin for container apps job execution."
            },
            "configuration": {
              "$ref": "#/definitions/JobConfiguration",
              "description": "Container Apps Job configuration properties."
            },
            "template": {
              "$ref": "./CommonDefinitions.json#/definitions/JobTemplate",
              "description": "Container Apps job definition."
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses of a container apps job.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container apps job.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "JobPatchProperties": {
      "type": "object",
      "description": "Container Apps Job resource specific properties.",
      "properties": {
        "identity": {
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "type": "object",
          "properties": {
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "configuration": {
              "$ref": "#/definitions/JobConfiguration",
              "description": "Container Apps Job configuration properties."
            },
            "template": {
              "$ref": "./CommonDefinitions.json#/definitions/JobTemplate",
              "description": "Container Apps job definition."
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses of a container apps job.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container apps job.",
              "type": "string"
            }
          }
        }
      }
    },
    "JobsCollection": {
      "description": "Container Apps Jobs collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RegistryCredentials": {
      "description": "Container App Private Registry",
      "type": "object",
      "properties": {
        "server": {
          "description": "Container Registry Server",
          "type": "string"
        },
        "username": {
          "description": "Container Registry Username",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the Secret that contains the registry login password",
          "type": "string"
        },
        "identity": {
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
          "type": "string"
        }
      }
    },
    "JobSecretsCollection": {
      "description": "Container Apps Job Secrets Collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/Secret"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ReplicaCompletionCount": {
      "description": "Minimum number of successful replica completions before overall job completion.",
      "format": "int32",
      "type": "integer"
    },
    "Parallelism": {
      "description": "Number of parallel replicas of a job that can run at a given time.",
      "format": "int32",
      "type": "integer"
    },
    "PollingInterval": {
      "description": "Interval to check each event source in seconds. Defaults to 30s",
      "format": "int32",
      "type": "integer"
    },
    "JobScaleRule": {
      "description": "Scaling rule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "type": {
          "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe the scale rule.",
          "type": "object"
        },
        "auth": {
          "description": "Authentication secrets for the scale rule.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/ScaleRuleAuth"
          }
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "JobScale": {
      "description": "Scaling configurations for event driven jobs.",
      "type": "object",
      "properties": {
        "pollingInterval": {
          "$ref": "#/definitions/PollingInterval"
        },
        "minExecutions": {
          "format": "int32",
          "description": "Minimum number of job executions that are created for a trigger, default 0",
          "type": "integer",
          "default": 0
        },
        "maxExecutions": {
          "format": "int32",
          "description": "Maximum number of job executions that are created for a trigger, default 100.",
          "type": "integer",
          "default": 100
        },
        "rules": {
          "description": "Scaling rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobScaleRule"
          }
        }
      }
    },
    "JobExecutionBase": {
      "description": "Container App's Job execution name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Job execution name.",
          "type": "string"
        },
        "id": {
          "description": "Job execution Id.",
          "type": "string"
        }
      }
    },
    "JobExecution": {
      "description": "Container Apps Job execution.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Job execution Name.",
          "type": "string"
        },
        "id": {
          "description": "Job execution Id.",
          "type": "string"
        },
        "type": {
          "description": "Job execution type",
          "type": "string"
        },
        "properties": {
          "description": "Container Apps Job execution specific properties.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Current running State of the job",
              "enum": [
                "Running",
                "Processing",
                "Stopped",
                "Degraded",
                "Failed",
                "Unknown",
                "Succeeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobExecutionRunningState",
                "modelAsString": true
              }
            },
            "startTime": {
              "description": "Job execution start time.",
              "format": "date-time",
              "type": "string"
            },
            "endTime": {
              "description": "Job execution end time.",
              "format": "date-time",
              "type": "string"
            },
            "template": {
              "description": "Job's execution container.",
              "$ref": "#/definitions/JobExecutionTemplate"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppJobExecutions": {
      "description": "Container App executions collection ARM resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobExecution"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "JobExecutionNamesCollection": {
      "description": "Container App executions names list.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobExecutionBase"
          }
        }
      }
    },
    "JobExecutionTemplate": {
      "description": "Job's execution template, containing container configuration for a job's execution",
      "type": "object",
      "properties": {
        "containers": {
          "description": "List of container definitions for the Container Apps Job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobExecutionContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "initContainers": {
          "description": "List of specialized containers that run before job containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobExecutionContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "JobExecutionContainer": {
      "description": "Container Apps Jobs execution container definition.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "$ref": "./CommonDefinitions.json#/definitions/ContainerResources",
          "description": "Container resource requirements."
        }
      }
    },
    "AppLogsConfiguration": {
      "description": "Configuration of application logs",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
          "type": "string"
        },
        "logAnalyticsConfiguration": {
          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
          "$ref": "#/definitions/LogAnalyticsConfiguration"
        }
      }
    },
    "KedaConfiguration": {
      "type": "object",
      "description": "Configuration properties Keda component",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of Keda"
        }
      }
    },
    "DaprConfiguration": {
      "type": "object",
      "description": "Configuration properties Dapr component",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of Dapr"
        }
      }
    },
    "VnetConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment to join a Virtual Network",
      "properties": {
        "internal": {
          "type": "boolean",
          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "infrastructureSubnetId": {
          "type": "string",
          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerBridgeCidr": {
          "type": "string",
          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedCidr": {
          "type": "string",
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedDnsIP": {
          "type": "string",
          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "Mtls": {
      "type": "object",
      "description": "Configuration properties for mutual TLS authentication",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Boolean indicating whether the mutual TLS authentication is enabled"
        }
      }
    },
    "ManagedEnvironment": {
      "description": "An environment for hosting container apps",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the Environment."
        },
        "identity": {
          "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Managed environment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete",
                "UpgradeRequested",
                "UpgradeFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EnvironmentProvisioningState",
                "modelAsString": true
              }
            },
            "daprAIInstrumentationKey": {
              "type": "string",
              "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "daprAIConnectionString": {
              "type": "string",
              "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "vnetConfiguration": {
              "description": "Vnet configuration for the environment",
              "$ref": "#/definitions/VnetConfiguration"
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the Environment",
              "type": "string",
              "readOnly": true
            },
            "appLogsConfiguration": {
              "$ref": "#/definitions/AppLogsConfiguration",
              "description": "Cluster configuration which enables the log daemon to export app logs to configured destination."
            },
            "zoneRedundant": {
              "description": "Whether or not this Managed Environment is zone-redundant.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customDomainConfiguration": {
              "$ref": "./CommonDefinitions.json#/definitions/CustomDomainConfiguration",
              "description": "Custom domain configuration for the environment"
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the Environment.",
              "type": "string",
              "readOnly": true
            },
            "workloadProfiles": {
              "description": "Workload profiles configured for the Managed Environment.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkloadProfile"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "kedaConfiguration": {
              "$ref": "#/definitions/KedaConfiguration",
              "description": "The configuration of Keda component."
            },
            "daprConfiguration": {
              "$ref": "#/definitions/DaprConfiguration",
              "description": "The configuration of Dapr component."
            },
            "infrastructureResourceGroup": {
              "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "peerAuthentication": {
              "description": "Peer authentication settings for the Managed Environment",
              "type": "object",
              "properties": {
                "mtls": {
                  "description": "Mutual TLS authentication settings for the Managed Environment",
                  "$ref": "#/definitions/Mtls"
                }
              }
            },
            "peerTrafficConfiguration": {
              "description": "Peer traffic settings for the Managed Environment",
              "type": "object",
              "properties": {
                "encryption": {
                  "description": "Peer traffic encryption settings for the Managed Environment",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean indicating whether the peer traffic encryption is enabled"
                    }
                  }
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedEnvironmentsCollection": {
      "description": "Collection of Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LogAnalyticsConfiguration": {
      "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Log analytics customer id",
          "type": "string"
        },
        "sharedKey": {
          "description": "Log analytics customer key",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "EnvironmentAuthToken": {
      "description": "Environment Auth Token.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Environment auth token resource specific properties",
          "type": "object",
          "properties": {
            "token": {
              "description": "Auth token value.",
              "type": "string",
              "x-ms-secret": true,
              "readOnly": true
            },
            "expires": {
              "format": "date-time",
              "description": "Token expiration date.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadProfile": {
      "description": "Workload profile to scope container app execution.",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "./CommonDefinitions.json#/definitions/WorkloadProfileName",
          "description": "Workload profile type for the workloads to run on."
        },
        "workloadProfileType": {
          "$ref": "./CommonDefinitions.json#/definitions/WorkloadProfileType",
          "description": "Workload profile type for the workloads to run on."
        },
        "minimumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        }
      },
      "required": [
        "name",
        "workloadProfileType"
      ]
    },
    "workloadProfileStates": {
      "description": "Collection of all the workload Profile States for a Managed Environment..",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Workload Profile resource specific properties.",
          "type": "object",
          "properties": {
            "minimumCount": {
              "type": "integer",
              "format": "int32",
              "description": "Minimum count of instances."
            },
            "maximumCount": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum count of nodes."
            },
            "currentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Current count of nodes."
            }
          }
        }
      }
    },
    "workloadProfileStatesCollection": {
      "description": "Collection of workloadProfileStates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/workloadProfileStates"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EnvironmentVar": {
      "description": "Container App container environment variable.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Environment variable name.",
          "type": "string"
        },
        "value": {
          "description": "Non-secret environment variable value.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the environment variable value.",
          "type": "string"
        }
      }
    },
    "WorkloadProfileName": {
      "description": "Workload profile name for container apps to execute on.",
      "type": "string"
    },
    "WorkloadProfileType": {
      "description": "Workload profile type for container apps to execute on.",
      "type": "string"
    },
    "BaseContainer": {
      "description": "Container App base container definition.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "$ref": "#/definitions/ContainerResources",
          "description": "Container resource requirements."
        },
        "volumeMounts": {
          "description": "Container volume mounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "InitContainer": {
      "description": "Container App init container definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseContainer"
        }
      ]
    },
    "Container": {
      "description": "Container App container definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseContainer"
        }
      ],
      "properties": {
        "probes": {
          "description": "List of probes for the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerAppProbe"
          },
          "x-ms-identifiers": [
            "type"
          ]
        }
      }
    },
    "ContainerResources": {
      "description": "Container App container resource requirements.",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5",
          "type": "number"
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        },
        "ephemeralStorage": {
          "description": "Ephemeral Storage, e.g. \"1Gi\"",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ContainerAppProbe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
          "type": "integer",
          "format": "int32"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "type": "object",
          "required": [
            "port"
          ],
          "properties": {
            "host": {
              "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
              "type": "string"
            },
            "httpHeaders": {
              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
              "type": "array",
              "items": {
                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "The header field name",
                    "type": "string"
                  },
                  "value": {
                    "description": "The header field value",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "path": {
              "description": "Path to access on the HTTP server.",
              "type": "string"
            },
            "port": {
              "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
              "type": "integer",
              "format": "int32"
            },
            "scheme": {
              "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
              "enum": [
                "HTTP",
                "HTTPS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Scheme",
                "modelAsString": true
              }
            }
          }
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
          "type": "object",
          "required": [
            "port"
          ],
          "properties": {
            "host": {
              "description": "Optional: Host name to connect to, defaults to the pod IP.",
              "type": "string"
            },
            "port": {
              "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
          "type": "integer",
          "format": "int64"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of probe.",
          "enum": [
            "Liveness",
            "Readiness",
            "Startup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          }
        }
      }
    },
    "CustomScaleRule": {
      "description": "Container App container Custom scaling rule.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe custom scale rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "CustomDomainConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment custom domain",
      "properties": {
        "customDomainVerificationId": {
          "description": "Id used to verify domain name ownership",
          "type": "string",
          "readOnly": true
        },
        "dnsSuffix": {
          "type": "string",
          "description": "Dns suffix for the environment domain",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "certificateKeyVaultProperties": {
          "description": "Certificate stored in Azure Key Vault.",
          "$ref": "#/definitions/CertificateKeyVaultProperties"
        },
        "certificateValue": {
          "format": "byte",
          "description": "PFX or PEM blob",
          "type": "string",
          "x-ms-secret": true
        },
        "certificatePassword": {
          "description": "Certificate password",
          "type": "string",
          "x-ms-secret": true
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Certificate expiration date.",
          "type": "string",
          "readOnly": true
        },
        "thumbprint": {
          "description": "Certificate thumbprint.",
          "type": "string",
          "readOnly": true
        },
        "subjectName": {
          "description": "Subject name of the certificate.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DefaultErrorResponse": {
      "description": "App Service error response.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error model.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "description": "Details or the error",
              "items": {
                "description": "Detailed errors.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "x-ms-identifiers": [
                "code"
              ]
            },
            "innererror": {
              "description": "More information to debug error.",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "HttpScaleRule": {
      "description": "Container App container Http scaling rule.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata properties to describe http scale rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "TcpScaleRule": {
      "description": "Container App container Tcp scaling rule.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata properties to describe tcp scale rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "description": "Authentication secrets for the tcp scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "QueueScaleRule": {
      "description": "Container App container Azure Queue based scaling rule.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Storage account name. required if using managed identity to authenticate",
          "type": "string"
        },
        "queueName": {
          "description": "Queue name.",
          "type": "string"
        },
        "queueLength": {
          "format": "int32",
          "description": "Queue length.",
          "type": "integer"
        },
        "auth": {
          "description": "Authentication secrets for the queue scale rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": [
            "triggerParameter"
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "Scale": {
      "description": "Container App scaling configurations.",
      "type": "object",
      "properties": {
        "minReplicas": {
          "format": "int32",
          "description": "Optional. Minimum number of container replicas.",
          "type": "integer"
        },
        "maxReplicas": {
          "format": "int32",
          "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
          "type": "integer",
          "default": 10
        },
        "cooldownPeriod": {
          "format": "int32",
          "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
          "type": "integer"
        },
        "pollingInterval": {
          "format": "int32",
          "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
          "type": "integer"
        },
        "rules": {
          "description": "Scaling rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ScaleRule": {
      "description": "Container App container scaling rule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "azureQueue": {
          "$ref": "#/definitions/QueueScaleRule",
          "description": "Azure Queue based scaling."
        },
        "custom": {
          "$ref": "#/definitions/CustomScaleRule",
          "description": "Custom scale rule."
        },
        "http": {
          "$ref": "#/definitions/HttpScaleRule",
          "description": "HTTP requests based scaling."
        },
        "tcp": {
          "$ref": "#/definitions/TcpScaleRule",
          "description": "Tcp requests based scaling."
        }
      }
    },
    "ScaleRuleAuth": {
      "description": "Auth Secrets for Scale Rule",
      "type": "object",
      "properties": {
        "secretRef": {
          "description": "Name of the secret from which to pull the auth params.",
          "type": "string"
        },
        "triggerParameter": {
          "description": "Trigger Parameter that uses the secret",
          "type": "string"
        }
      }
    },
    "Secret": {
      "description": "Secret definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string"
        },
        "keyVaultUrl": {
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
          "type": "string"
        }
      }
    },
    "Template": {
      "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
      "type": "object",
      "properties": {
        "revisionSuffix": {
          "description": "User friendly suffix that is appended to the revision name",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "format": "int64",
          "type": "integer"
        },
        "initContainers": {
          "description": "List of specialized containers that run before app containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InitContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "containers": {
          "description": "List of container definitions for the Container App.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "scale": {
          "$ref": "#/definitions/Scale",
          "description": "Scaling properties for the Container App."
        },
        "volumes": {
          "description": "List of volume definitions for the Container App.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "serviceBinds": {
          "description": "List of container app services bound to the app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceBind"
          },
          "x-ms-identifier": [
            "name"
          ]
        }
      }
    },
    "Volume": {
      "description": "Volume definitions for the Container App.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Volume name.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage type for the volume. If not provided, use EmptyDir.",
          "enum": [
            "AzureFile",
            "EmptyDir",
            "Secret",
            "NfsAzureFile"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        },
        "storageName": {
          "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
          "type": "string"
        },
        "secrets": {
          "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretVolumeItem"
          },
          "x-ms-identifiers": [
            "secretRef"
          ]
        },
        "mountOptions": {
          "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
          "type": "string"
        }
      }
    },
    "SecretVolumeItem": {
      "description": "Secret to be added to volume.",
      "type": "object",
      "properties": {
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the secret value.",
          "type": "string"
        },
        "path": {
          "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
          "type": "string"
        }
      }
    },
    "VolumeMount": {
      "description": "Volume mount for the Container App.",
      "type": "object",
      "properties": {
        "volumeName": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
          "type": "string"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        }
      }
    },
    "DaprComponentsCollection": {
      "description": "Dapr Components ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaprComponent"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DaprComponent": {
      "description": "Dapr Component.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Dapr Component resource specific properties",
          "type": "object",
          "properties": {
            "componentType": {
              "description": "Component type",
              "type": "string"
            },
            "version": {
              "description": "Component version",
              "type": "string"
            },
            "ignoreErrors": {
              "description": "Boolean describing if the component errors are ignores",
              "type": "boolean",
              "default": false
            },
            "initTimeout": {
              "description": "Initialization timeout",
              "type": "string"
            },
            "secrets": {
              "description": "Collection of secrets used by a Dapr component",
              "type": "array",
              "items": {
                "$ref": "./CommonDefinitions.json#/definitions/Secret"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "secretStoreComponent": {
              "description": "Name of a Dapr component to retrieve component secrets from",
              "type": "string"
            },
            "metadata": {
              "description": "Component metadata",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DaprMetadata"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "scopes": {
              "description": "Names of container apps that can use this Dapr component",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DaprMetadata": {
      "description": "Dapr component metadata.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metadata property name.",
          "type": "string"
        },
        "value": {
          "description": "Metadata property value.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
          "type": "string"
        }
      }
    },
    "DaprSecretsCollection": {
      "description": "Dapr component Secrets Collection for ListSecrets Action.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of secrets used by a Dapr component",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/DaprSecret"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DaprSecret": {
      "description": "Dapr component Secret for ListSecrets Action",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-secret": true,
          "readOnly": true
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type of the extended location."
        }
      }
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The type of extendedLocation.",
      "enum": [
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true
      }
    },
    "AzureFileProperties": {
      "description": "Azure File Properties.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Storage account name for azure file.",
          "type": "string"
        },
        "accountKey": {
          "description": "Storage account key for azure file.",
          "type": "string",
          "x-ms-secret": true
        },
        "accessMode": {
          "description": "Access mode for storage",
          "enum": [
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessMode",
            "modelAsString": true
          }
        },
        "shareName": {
          "description": "Azure file share name.",
          "type": "string"
        }
      }
    },
    "NfsAzureFileProperties": {
      "description": "NFS Azure File Properties.",
      "type": "object",
      "properties": {
        "server": {
          "description": "Server for NFS azure file. Specify the Azure storage account server address.",
          "type": "string"
        },
        "accessMode": {
          "description": "Access mode for storage",
          "enum": [
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessMode",
            "modelAsString": true
          }
        },
        "shareName": {
          "description": "NFS Azure file share name.",
          "type": "string"
        }
      }
    },
    "CertificateKeyVaultProperties": {
      "description": "Properties for a certificate stored in a Key Vault.",
      "type": "object",
      "properties": {
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string"
        },
        "keyVaultUrl": {
          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "Certificate": {
      "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Certificate resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the certificate.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "DeleteFailed",
                "Pending"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateProvisioningState",
                "modelAsString": true
              }
            },
            "certificateKeyVaultProperties": {
              "description": "Properties for a certificate stored in a Key Vault.",
              "$ref": "#/definitions/CertificateKeyVaultProperties"
            },
            "password": {
              "description": "Certificate password.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectAlternativeNames": {
              "description": "Subject alternative names the certificate applies to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "value": {
              "format": "byte",
              "description": "PFX or PEM blob",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "issuer": {
              "description": "Certificate issuer.",
              "type": "string",
              "readOnly": true
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "valid": {
              "description": "Is the certificate valid?.",
              "type": "boolean",
              "readOnly": true
            },
            "publicKeyHash": {
              "description": "Public key hash.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "CertificateCollection": {
      "description": "Collection of Certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificatePatch": {
      "description": "A certificate to update",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      }
    },
    "ManagedCertificate": {
      "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Certificate resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the certificate.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "DeleteFailed",
                "Pending"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateProvisioningState",
                "modelAsString": true
              }
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string"
            },
            "error": {
              "description": "Any error occurred during the certificate provision.",
              "type": "string",
              "readOnly": true
            },
            "domainControlValidation": {
              "description": "Selected type of domain control validation for managed certificates.",
              "enum": [
                "CNAME",
                "HTTP",
                "TXT"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedCertificateDomainControlValidation",
                "modelAsString": true
              }
            },
            "validationToken": {
              "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "ManagedCertificatePatch": {
      "description": "A managed certificate to update",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      }
    },
    "ManagedCertificateCollection": {
      "description": "Collection of Managed Certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobTemplate": {
      "description": "Container Apps Job versioned application definition. Defines the desired state of an immutable revision. Any changes to this section Will result in a new revision being created",
      "type": "object",
      "properties": {
        "initContainers": {
          "description": "List of specialized containers that run before app containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InitContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "containers": {
          "description": "List of container definitions for the Container App.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "volumes": {
          "description": "List of volume definitions for the Container App.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ServiceBind": {
      "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
      "type": "object",
      "properties": {
        "serviceId": {
          "description": "Resource id of the target service",
          "type": "string"
        },
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        }
      }
    },
    "IdentitySettings": {
      "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
      "type": "object",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "lifecycle": {
          "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
          "enum": [
            "Init",
            "Main",
            "None",
            "All"
          ],
          "type": "string",
          "default": "All",
          "x-ms-enum": {
            "name": "IdentitySettingsLifeCycle",
            "modelAsString": true
          }
        }
      }
    },
    "Configuration": {
      "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
      "type": "object",
      "properties": {
        "secrets": {
          "description": "Collection of secrets used by a Container app",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/Secret"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "activeRevisionsMode": {
          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
          "enum": [
            "Multiple",
            "Single"
          ],
          "type": "string",
          "default": "Single",
          "x-ms-enum": {
            "name": "ActiveRevisionsMode",
            "modelAsString": true
          }
        },
        "ingress": {
          "$ref": "#/definitions/Ingress",
          "description": "Ingress configurations."
        },
        "registries": {
          "description": "Collection of private container registry credentials for containers used by the Container app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryCredentials"
          },
          "x-ms-identifiers": [
            "server"
          ]
        },
        "dapr": {
          "$ref": "#/definitions/Dapr",
          "description": "Dapr configuration for the Container App."
        },
        "runtime": {
          "$ref": "#/definitions/Runtime",
          "description": "App runtime configuration for the Container App."
        },
        "maxInactiveRevisions": {
          "format": "int32",
          "description": "Optional. Max inactive revisions a Container App can have.",
          "type": "integer"
        },
        "service": {
          "$ref": "#/definitions/Service",
          "description": "Container App to be a dev Container App Service"
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/IdentitySettings"
          },
          "x-ms-identifiers": [
            "identity"
          ]
        }
      }
    },
    "ContainerApp": {
      "description": "Container App.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "./CommonDefinitions.json#/definitions/ExtendedLocation"
        },
        "identity": {
          "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "managedBy": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "properties": {
          "description": "ContainerApp resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Container App.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppProvisioningState",
                "modelAsString": true
              }
            },
            "runningStatus": {
              "description": "Running status of the Container App.",
              "enum": [
                "Progressing",
                "Running",
                "Stopped",
                "Suspended",
                "Ready"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppRunningStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Progressing",
                    "description": "Container App is transitioning between Stopped and Running states."
                  },
                  {
                    "value": "Running",
                    "description": "Container App is in Running state."
                  },
                  {
                    "value": "Stopped",
                    "description": "Container App is in Stopped state."
                  },
                  {
                    "value": "Suspended",
                    "description": "Container App Job is in Suspended state."
                  },
                  {
                    "value": "Ready",
                    "description": "Container App Job is in Ready state."
                  }
                ]
              }
            },
            "managedEnvironmentId": {
              "description": "Deprecated. Resource ID of the Container App's environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "workloadProfileName": {
              "$ref": "./CommonDefinitions.json#/definitions/WorkloadProfileName",
              "description": "Workload profile name to pin for container app execution."
            },
            "latestRevisionName": {
              "description": "Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "latestReadyRevisionName": {
              "description": "Name of the latest ready revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "latestRevisionFqdn": {
              "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "customDomainVerificationId": {
              "description": "Id used to verify domain name ownership",
              "type": "string",
              "readOnly": true
            },
            "configuration": {
              "$ref": "#/definitions/Configuration",
              "description": "Non versioned Container App configuration properties."
            },
            "template": {
              "$ref": "./CommonDefinitions.json#/definitions/Template",
              "description": "Container App versioned application definition."
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses for container app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container app.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppCollection": {
      "description": "Container App collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerApp"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Dapr": {
      "description": "Container App Dapr configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Boolean indicating if the Dapr side car is enabled",
          "type": "boolean",
          "default": false
        },
        "appId": {
          "description": "Dapr application identifier",
          "type": "string"
        },
        "appProtocol": {
          "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
          "enum": [
            "http",
            "grpc"
          ],
          "type": "string",
          "default": "http",
          "x-ms-enum": {
            "name": "appProtocol",
            "modelAsString": true
          }
        },
        "appPort": {
          "format": "int32",
          "description": "Tells Dapr which port your application is listening on",
          "type": "integer"
        },
        "httpReadBufferSize": {
          "type": "integer",
          "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
          "format": "int32"
        },
        "httpMaxRequestSize": {
          "type": "integer",
          "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
          "format": "int32"
        },
        "logLevel": {
          "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
          "enum": [
            "info",
            "debug",
            "warn",
            "error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "logLevel",
            "modelAsString": true
          }
        },
        "enableApiLogging": {
          "description": "Enables API logging for the Dapr sidecar",
          "type": "boolean"
        }
      }
    },
    "Runtime": {
      "description": "Container App Runtime configuration.",
      "type": "object",
      "properties": {
        "java": {
          "description": "Java app configuration",
          "type": "object",
          "properties": {
            "enableMetrics": {
              "description": "Enable jmx core metrics for the java app",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Ingress": {
      "description": "Container App Ingress configuration.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Hostname.",
          "type": "string",
          "readOnly": true
        },
        "external": {
          "description": "Bool indicating if app exposes an external http endpoint",
          "default": false,
          "type": "boolean"
        },
        "targetPort": {
          "format": "int32",
          "description": "Target Port in containers for traffic from ingress",
          "type": "integer"
        },
        "exposedPort": {
          "format": "int32",
          "description": "Exposed Port in containers for TCP traffic from ingress",
          "type": "integer"
        },
        "transport": {
          "description": "Ingress transport protocol",
          "enum": [
            "auto",
            "http",
            "http2",
            "tcp"
          ],
          "type": "string",
          "default": "auto",
          "x-ms-enum": {
            "name": "IngressTransportMethod",
            "modelAsString": true
          }
        },
        "traffic": {
          "description": "Traffic weights for app's revisions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficWeight"
          },
          "x-ms-identifiers": [
            "revisionName"
          ]
        },
        "customDomains": {
          "description": "custom domain bindings for Container Apps' hostnames.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomDomain"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "allowInsecure": {
          "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
          "type": "boolean",
          "default": false
        },
        "ipSecurityRestrictions": {
          "description": "Rules to restrict incoming IP address.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpSecurityRestrictionRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "stickySessions": {
          "description": "Sticky Sessions for Single Revision Mode",
          "type": "object",
          "properties": {
            "affinity": {
              "description": "Sticky Session Affinity",
              "enum": [
                "sticky",
                "none"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "affinity",
                "modelAsString": true
              }
            }
          }
        },
        "clientCertificateMode": {
          "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
          "enum": [
            "ignore",
            "accept",
            "require"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IngressClientCertificateMode",
            "modelAsString": true
          }
        },
        "corsPolicy": {
          "description": "CORS policy for container app",
          "$ref": "#/definitions/CorsPolicy"
        },
        "additionalPortMappings": {
          "description": "Settings to expose additional ports on container app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressPortMapping"
          },
          "x-ms-identifiers": [
            "targetPort"
          ]
        }
      }
    },
    "SecretsCollection": {
      "description": "Container App Secrets Collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerAppSecret"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ContainerAppSecret": {
      "description": "Container App Secret.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-secret": true,
          "readOnly": true
        },
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string",
          "readOnly": true
        },
        "keyVaultUrl": {
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrafficWeight": {
      "description": "Traffic weight assigned to a revision",
      "type": "object",
      "properties": {
        "revisionName": {
          "description": "Name of a revision",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Traffic weight assigned to a revision",
          "type": "integer"
        },
        "latestRevision": {
          "description": "Indicates that the traffic weight belongs to a latest stable revision",
          "default": false,
          "type": "boolean"
        },
        "label": {
          "description": "Associates a traffic label with a revision",
          "type": "string"
        }
      }
    },
    "CustomDomain": {
      "description": "Custom Domain of a Container App",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "bindingType": {
          "description": "Custom Domain binding type.",
          "enum": [
            "Disabled",
            "SniEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "bindingType",
            "modelAsString": true
          }
        },
        "certificateId": {
          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
          "type": "string"
        }
      }
    },
    "IpSecurityRestrictionRule": {
      "description": "Rule to restrict incoming IP address.",
      "type": "object",
      "required": [
        "name",
        "ipAddressRange",
        "action"
      ],
      "properties": {
        "name": {
          "description": "Name for the IP restriction rule.",
          "type": "string"
        },
        "description": {
          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
          "type": "string"
        },
        "ipAddressRange": {
          "description": "CIDR notation to match incoming IP address",
          "type": "string"
        },
        "action": {
          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
          "enum": [
            "Allow",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "action",
            "modelAsString": true
          }
        }
      }
    },
    "CorsPolicy": {
      "description": "Cross-Origin-Resource-Sharing policy",
      "type": "object",
      "required": [
        "allowedOrigins"
      ],
      "properties": {
        "allowedOrigins": {
          "description": "Specifies the content for the access-control-allow-origins header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "description": "Specifies the content for the access-control-allow-methods header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "description": "Specifies the content for the access-control-allow-headers header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "description": "Specifies the content for the access-control-expose-headers header ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "format": "int32",
          "description": "Specifies the content for the access-control-max-age header",
          "type": "integer"
        },
        "allowCredentials": {
          "description": "Specifies whether the resource allows credentials",
          "type": "boolean"
        }
      }
    },
    "IngressPortMapping": {
      "description": "Port mappings of container app ingress",
      "type": "object",
      "required": [
        "external",
        "targetPort"
      ],
      "properties": {
        "external": {
          "description": "Specifies whether the app port is accessible outside of the environment",
          "type": "boolean"
        },
        "targetPort": {
          "format": "int32",
          "description": "Specifies the port user's container listens on",
          "type": "integer"
        },
        "exposedPort": {
          "format": "int32",
          "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
          "type": "integer"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "properties": {
        "hostName": {
          "description": "Host name that was analyzed",
          "type": "string",
          "readOnly": true
        },
        "isHostnameAlreadyVerified": {
          "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "customDomainVerificationTest": {
          "description": "DNS verification test result.",
          "enum": [
            "Passed",
            "Failed",
            "Skipped"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DnsVerificationTestResult",
            "modelAsString": false
          }
        },
        "customDomainVerificationFailureInfo": {
          "description": "Raw failure information if DNS verification fails.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "description": "Details or the error",
              "items": {
                "description": "Detailed errors.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "x-ms-identifiers": [
                "code"
              ]
            }
          },
          "readOnly": true
        },
        "hasConflictOnManagedEnvironment": {
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "conflictWithEnvironmentCustomDomain": {
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "conflictingContainerAppResourceId": {
          "description": "Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
          "type": "string",
          "readOnly": true
        },
        "cNameRecords": {
          "description": "CName records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "txtRecords": {
          "description": "TXT records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aRecords": {
          "description": "A records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alternateCNameRecords": {
          "description": "Alternate CName records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alternateTxtRecords": {
          "description": "Alternate TXT records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "ContainerAppAuthToken": {
      "description": "Container App Auth Token.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Container App auth token resource specific properties",
          "type": "object",
          "properties": {
            "token": {
              "description": "Auth token value.",
              "type": "string",
              "x-ms-secret": true,
              "readOnly": true
            },
            "expires": {
              "format": "date-time",
              "description": "Token expiration date.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Service": {
      "description": "Container App to be a dev service",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Dev ContainerApp service type",
          "type": "string"
        }
      }
    },
    "AvailableOperations": {
      "description": "Available operations of the service",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDetail"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "OperationDetail": {
      "description": "Operation detail payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string"
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string"
        }
      }
    },
    "ScaleConfiguration": {
      "description": "Scale configuration.",
      "type": "object",
      "properties": {
        "maxConcurrentSessions": {
          "description": "The maximum count of sessions at the same time.",
          "type": "integer",
          "format": "int32"
        },
        "readySessionInstances": {
          "description": "The minimum count of ready session instances.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SessionPoolSecret": {
      "description": "Secret definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "DynamicPoolConfiguration": {
      "description": "Dynamic pool configuration.",
      "type": "object",
      "properties": {
        "lifecycleConfiguration": {
          "description": "The lifecycle configuration of a session in the dynamic session pool",
          "$ref": "#/definitions/LifecycleConfiguration"
        }
      }
    },
    "LifecycleConfiguration": {
      "description": "The lifecycle configuration properties of a session in the dynamic session pool",
      "type": "object",
      "properties": {
        "lifecycleType": {
          "description": "The lifecycle type of the session pool.",
          "enum": [
            "Timed",
            "OnContainerExit"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LifecycleType",
            "modelAsString": true
          }
        },
        "cooldownPeriodInSeconds": {
          "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
          "type": "integer",
          "format": "int32"
        },
        "maxAlivePeriodInSeconds": {
          "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SessionRegistryCredentials": {
      "description": "Session pool private registry credentials.",
      "type": "object",
      "properties": {
        "server": {
          "description": "Container registry server.",
          "type": "string"
        },
        "username": {
          "description": "Container registry username.",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the secret that contains the registry login password",
          "type": "string"
        },
        "identity": {
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
          "type": "string"
        }
      }
    },
    "SessionContainerResources": {
      "description": "Container resource requirements for sessions of the session pool.",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5",
          "type": "number"
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        }
      }
    },
    "SessionContainer": {
      "description": "Container definitions for the sessions of the session pool.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "$ref": "./CommonDefinitions.json#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "$ref": "#/definitions/SessionContainerResources",
          "description": "Container resource requirements."
        }
      }
    },
    "SessionIngress": {
      "description": "Session pool ingress configuration.",
      "type": "object",
      "properties": {
        "targetPort": {
          "format": "int32",
          "description": "Target port in containers for traffic from ingress",
          "type": "integer"
        }
      }
    },
    "CustomContainerTemplate": {
      "description": "Custom container configuration.",
      "type": "object",
      "properties": {
        "registryCredentials": {
          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
          "$ref": "#/definitions/SessionRegistryCredentials"
        },
        "containers": {
          "description": "List of container definitions for the sessions of the session pool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "ingress": {
          "description": "Session pool ingress configuration.",
          "$ref": "#/definitions/SessionIngress"
        }
      }
    },
    "SessionNetworkConfiguration": {
      "description": "Session network configuration.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Network status for the sessions.",
          "type": "string",
          "enum": [
            "EgressEnabled",
            "EgressDisabled"
          ],
          "x-ms-enum": {
            "name": "SessionNetworkStatus",
            "modelAsString": true
          }
        }
      }
    },
    "SessionPool": {
      "description": "Container App session pool.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Container App session pool resource specific properties",
          "type": "object",
          "properties": {
            "environmentId": {
              "description": "Resource ID of the session pool's environment.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.App/managedEnvironments"
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "containerType": {
              "description": "The container type of the sessions.",
              "enum": [
                "CustomContainer",
                "PythonLTS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContainerType",
                "modelAsString": true
              }
            },
            "poolManagementType": {
              "description": "The pool management type of the session pool.",
              "enum": [
                "Manual",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PoolManagementType",
                "modelAsString": true
              }
            },
            "nodeCount": {
              "description": "The number of nodes the session pool is using.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "scaleConfiguration": {
              "description": "The scale configuration of the session pool.",
              "$ref": "#/definitions/ScaleConfiguration"
            },
            "secrets": {
              "description": "The secrets of the session pool.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SessionPoolSecret"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "dynamicPoolConfiguration": {
              "description": "The pool configuration if the poolManagementType is dynamic.",
              "$ref": "#/definitions/DynamicPoolConfiguration"
            },
            "customContainerTemplate": {
              "description": "The custom container configuration if the containerType is CustomContainer.",
              "$ref": "#/definitions/CustomContainerTemplate"
            },
            "sessionNetworkConfiguration": {
              "description": "The network configuration of the sessions in the session pool.",
              "$ref": "#/definitions/SessionNetworkConfiguration"
            },
            "poolManagementEndpoint": {
              "description": "The endpoint to manage the pool.",
              "type": "string",
              "format": "uri",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the session pool.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SessionPoolProvisioningState",
                "modelAsString": true
              }
            },
            "managedIdentitySettings": {
              "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedIdentitySetting"
              },
              "x-ms-identifiers": [
                "identity"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedIdentitySetting": {
      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
      "type": "object",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "lifecycle": {
          "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
          "enum": [
            "None",
            "Main"
          ],
          "type": "string",
          "default": "None",
          "x-ms-enum": {
            "name": "IdentitySettingsLifeCycle",
            "modelAsString": true
          }
        }
      }
    },
    "SessionPoolUpdatableProperties": {
      "description": "Container App session pool updatable properties.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Session pool resource specific updatable properties.",
          "type": "object",
          "properties": {
            "scaleConfiguration": {
              "description": "The scale configuration of the session pool.",
              "$ref": "#/definitions/ScaleConfiguration"
            },
            "secrets": {
              "description": "The secrets of the session pool.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SessionPoolSecret"
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "dynamicPoolConfiguration": {
              "description": "The pool configuration if the poolManagementType is dynamic.",
              "$ref": "#/definitions/DynamicPoolConfiguration"
            },
            "customContainerTemplate": {
              "description": "The custom container configuration if the containerType is CustomContainer.",
              "$ref": "#/definitions/CustomContainerTemplate"
            },
            "sessionNetworkConfiguration": {
              "description": "The network configuration of the sessions in the session pool.",
              "$ref": "#/definitions/SessionNetworkConfiguration"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SessionPoolCollection": {
      "description": "Session pool collection Azure resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionPool"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JavaComponentConfigurationProperty": {
      "description": "Configuration properties for a Java Component",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "The name of the property",
          "type": "string"
        },
        "value": {
          "description": "The value of the property",
          "type": "string"
        }
      }
    },
    "JavaComponentServiceBind": {
      "description": "Configuration to bind a Java Component to another Java Component",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "format": "arm-id",
          "type": "string"
        }
      }
    },
    "JavaComponent": {
      "description": "Java Component.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Java Component resource specific properties",
          "type": "object",
          "$ref": "#/definitions/JavaComponentProperties"
        }
      }
    },
    "JavaComponentProperties": {
      "description": "Java Component common properties.",
      "type": "object",
      "required": [
        "componentType"
      ],
      "properties": {
        "componentType": {
          "description": "Type of the Java Component.",
          "enum": [
            "SpringBootAdmin",
            "SpringCloudEureka",
            "SpringCloudConfig"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JavaComponentType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Java Component.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting",
            "InProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JavaComponentProvisioningState",
            "modelAsString": true
          }
        },
        "configurations": {
          "description": "List of Java Components configuration properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JavaComponentConfigurationProperty"
          },
          "x-ms-identifiers": [
            "propertyName"
          ]
        },
        "scale": {
          "description": "Java component scaling configurations",
          "type": "object",
          "properties": {
            "minReplicas": {
              "format": "int32",
              "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
              "type": "integer"
            },
            "maxReplicas": {
              "format": "int32",
              "description": "Optional. Maximum number of Java component replicas",
              "type": "integer"
            }
          }
        },
        "serviceBinds": {
          "description": "List of Java Components that are bound to the Java component",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JavaComponentServiceBind"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "x-ms-client-flatten": true,
      "discriminator": "componentType"
    },
    "JavaComponentIngress": {
      "description": "Container App Ingress configuration.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Hostname of the Java Component endpoint",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SpringBootAdminComponent": {
      "description": "Spring Boot Admin properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JavaComponentProperties"
        }
      ],
      "properties": {
        "ingress": {
          "$ref": "#/definitions/JavaComponentIngress",
          "description": "Java Component Ingress configurations."
        }
      },
      "x-ms-discriminator-value": "SpringBootAdmin"
    },
    "SpringCloudEurekaComponent": {
      "description": "Spring Cloud Eureka properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JavaComponentProperties"
        }
      ],
      "properties": {
        "ingress": {
          "$ref": "#/definitions/JavaComponentIngress",
          "description": "Java Component Ingress configurations."
        }
      },
      "x-ms-discriminator-value": "SpringCloudEureka"
    },
    "SpringCloudConfigComponent": {
      "description": "Spring Cloud Config properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JavaComponentProperties"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "SpringCloudConfig"
    },
    "JavaComponentsCollection": {
      "description": "Java Components ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JavaComponent"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticsCollection": {
      "description": "Diagnostics data collection for a resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of diagnostic data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Diagnostics"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Diagnostics": {
      "description": "Diagnostics data for a resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Diagnostics resource specific properties",
          "type": "object",
          "properties": {
            "metadata": {
              "$ref": "#/definitions/DiagnosticsDefinition",
              "description": "Metadata of the diagnostics response."
            },
            "dataset": {
              "description": "Set of data collections associated with the response.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticsDataApiResponse"
              },
              "x-ms-identifiers": []
            },
            "status": {
              "$ref": "#/definitions/DiagnosticsStatus",
              "description": "Status of the diagnostics response."
            },
            "dataProviderMetadata": {
              "$ref": "#/definitions/DiagnosticDataProviderMetadata",
              "description": "List of data providers' metadata."
            }
          }
        }
      }
    },
    "DiagnosticsDefinition": {
      "description": "Metadata of the diagnostics response",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique detector name",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Display Name of the detector",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Details of the diagnostics info",
          "type": "string",
          "readOnly": true
        },
        "author": {
          "description": "Authors' names of the detector",
          "type": "string",
          "readOnly": true
        },
        "category": {
          "description": "Category of the detector",
          "type": "string",
          "readOnly": true
        },
        "supportTopicList": {
          "description": "List of support topics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticSupportTopic"
          }
        },
        "analysisTypes": {
          "description": "List of analysis types",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Authors' names of the detector",
          "type": "string",
          "readOnly": true
        },
        "score": {
          "description": "Authors' names of the detector",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "DiagnosticSupportTopic": {
      "description": "Support topic information",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique topic identifier",
          "type": "string",
          "readOnly": true
        },
        "pesId": {
          "description": "PES identifier",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticsDataApiResponse": {
      "description": "Diagnostics data returned from a detector",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table response",
          "$ref": "#/definitions/DiagnosticDataTableResponseObject"
        },
        "renderingProperties": {
          "description": "Details of the table response",
          "$ref": "#/definitions/DiagnosticRendering"
        }
      }
    },
    "DiagnosticDataTableResponseObject": {
      "description": "Diagnostics data table",
      "type": "object",
      "properties": {
        "tableName": {
          "description": "Table name",
          "type": "string"
        },
        "columns": {
          "description": "Columns in the table",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticDataTableResponseColumn"
          },
          "x-ms-identifiers": [
            "columnName"
          ]
        },
        "rows": {
          "description": "Rows in the table",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DiagnosticDataTableResponseColumn": {
      "description": "Diagnostics data column",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Column name",
          "type": "string"
        },
        "dataType": {
          "description": "Data type of the column",
          "type": "string"
        },
        "columnType": {
          "description": "Column type",
          "type": "string"
        }
      }
    },
    "DiagnosticRendering": {
      "description": "Rendering details of a diagnostics table",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Rendering type",
          "type": "integer"
        },
        "title": {
          "description": "Title of the table",
          "type": "string"
        },
        "description": {
          "description": "Description of the table",
          "type": "string"
        },
        "isVisible": {
          "description": "Flag if the table should be rendered",
          "type": "boolean"
        }
      }
    },
    "DiagnosticsStatus": {
      "description": "Rendering details of a diagnostics table",
      "type": "object",
      "properties": {
        "message": {
          "description": "Diagnostic message",
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "description": "Status",
          "type": "integer"
        }
      }
    },
    "DiagnosticDataProviderMetadata": {
      "description": "Details of a diagnostics data provider",
      "type": "object",
      "properties": {
        "providerName": {
          "description": "Name of data provider",
          "type": "string"
        },
        "propertyBag": {
          "description": "Collection of properties",
          "type": "array",
          "items": {
            "description": "Property details",
            "type": "object",
            "properties": {
              "name": {
                "description": "Property name",
                "type": "string"
              },
              "value": {
                "description": "Property value",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "BillingMeter": {
      "description": "Billing meter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Region for the billing meter."
        },
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "category": {
              "description": "Used to categorize billing meters.",
              "type": "string"
            },
            "meterType": {
              "type": "string",
              "description": "Billing meter type."
            },
            "displayName": {
              "type": "string",
              "description": "The everyday name of the billing meter."
            }
          }
        }
      }
    },
    "BillingMeterCollection": {
      "description": "Collection of billing meters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of billing meters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingMeter"
          }
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}