{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ResourceConnector",
    "version": "2022-10-27"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.ResourceConnector/operations": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_ListOperations",
        "description": "Lists all available Appliances operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/applianceOperationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Appliances operations": {
            "$ref": "./examples/AppliancesListOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceConnector/appliances": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_ListBySubscription",
        "summary": "Gets a list of Appliances in a subscription.",
        "description": "Gets a list of Appliances in the specified subscription. The operation returns properties of each Appliance",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/applianceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Appliances by subscription": {
            "$ref": "./examples/AppliancesListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceConnector/telemetryconfig": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_GetTelemetryConfig",
        "summary": "Gets the telemetry config.",
        "description": "Gets the telemetry config.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/applianceGetTelemetryConfigResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetTelemetryConfig Appliance": {
            "$ref": "./examples/TelemetryConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_ListByResourceGroup",
        "summary": "Gets a list of Appliances in the specified subscription and resource group.",
        "description": "Gets a list of Appliances in the specified subscription and resource group. The operation returns properties of each Appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/applianceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Appliances by resource group": {
            "$ref": "./examples/AppliancesListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_Get",
        "summary": "Gets an Appliance.",
        "description": "Gets the details of an Appliance with a specified resource group and name.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/appliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Appliance": {
            "$ref": "./examples/AppliancesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_CreateOrUpdate",
        "summary": "Creates or updates an Appliance.",
        "description": "Creates or updates an Appliance in the specified Subscription and Resource Group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/appliance"
            },
            "description": "Parameters supplied to create or update an Appliance."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/appliance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/appliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create/Update Appliance": {
            "$ref": "./examples/AppliancesCreate_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_Delete",
        "summary": "Deletes an Appliance.",
        "description": "Deletes an Appliance with the specified Resource Name, Resource Group, and Subscription Id.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "NoContent. The response indicates the appliance resource is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete Appliance": {
            "$ref": "./examples/AppliancesDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_Update",
        "summary": "Updates an Appliance.",
        "description": "Updates an Appliance with the specified Resource Name in the specified Resource Group and Subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/patchableAppliance"
            },
            "description": "The updatable fields of an existing Appliance."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/appliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Appliance": {
            "$ref": "./examples/AppliancesPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/listClusterUserCredential": {
      "post": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_ListClusterUserCredential",
        "summary": "Returns the cluster user credential.",
        "description": "Returns the cluster user credentials for the dedicated appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/applianceListCredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListClusterUserCredentialAppliance": {
            "$ref": "./examples/AppliancesListClusterUserCredential.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/listkeys": {
      "post": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_ListKeys",
        "summary": "Gets the management config.",
        "description": "Returns the cluster customer credentials for the dedicated appliance.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "artifactType",
            "in": "query",
            "type": "string",
            "description": "This sets the type of artifact being returned, when empty no artifact endpoint is returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/applianceListKeysResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Appliance": {
            "$ref": "./examples/AppliancesListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/upgradeGraphs/{upgradeGraph}": {
      "get": {
        "tags": [
          "appliances"
        ],
        "operationId": "Appliances_GetUpgradeGraph",
        "summary": "Gets an Appliance upgrade graph.",
        "description": "Gets the upgrade graph of an Appliance with a specified resource group and name and specific release train.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "upgradeGraph",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Upgrade graph version, ex - stable"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpgradeGraph"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Appliance Upgrade Graph": {
            "$ref": "./examples/UpgradeGraph.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "description": "Appliances name."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "ArtifactProfile": {
      "description": "Appliance ArtifactProfile definition.",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Endpoint is the URL to upload artifacts to.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArtifactType": {
      "description": "Appliance ArtifactType definition.",
      "type": "string",
      "enum": [
        "LogsArtifactType"
      ],
      "x-ms-enum": {
        "name": "ArtifactType",
        "modelAsString": true
      }
    },
    "HybridConnectionConfig": {
      "description": "Contains the REP (rendezvous endpoint) and \u201cListener\u201d access token from notification service (NS).",
      "type": "object",
      "properties": {
        "expirationTime": {
          "description": "Timestamp when this token will be expired.",
          "type": "integer",
          "readOnly": true,
          "format": "int64"
        },
        "hybridConnectionName": {
          "description": "Name of the connection",
          "type": "string",
          "readOnly": true
        },
        "relay": {
          "description": "Name of the notification service.",
          "type": "string",
          "readOnly": true
        },
        "token": {
          "description": "Listener access token",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "SSHKey": {
      "description": "Appliance SSHKey definition.",
      "type": "object",
      "properties": {
        "certificate": {
          "description": "Certificate associated with the public key if the key is signed.",
          "type": "string",
          "readOnly": true
        },
        "creationTimeStamp": {
          "description": "Certificate creation timestamp (Unix).",
          "type": "integer",
          "readOnly": true,
          "format": "int64"
        },
        "expirationTimeStamp": {
          "description": "Certificate expiration timestamp (Unix).",
          "type": "integer",
          "readOnly": true,
          "format": "int64"
        },
        "privateKey": {
          "description": "Private Key.",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "description": "Public Key.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SSHKeyType": {
      "description": "Appliance SSHKeyType definition.",
      "type": "string",
      "enum": [
        "SSHCustomerUser",
        "ManagementCAKey",
        "LogsKey",
        "ScopedAccessKey"
      ],
      "x-ms-enum": {
        "name": "SSHKeyType",
        "modelAsString": true
      }
    },
    "SupportedVersion": {
      "description": "The SupportedVersion object for appliance.",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/SupportedVersionMetadata",
          "description": "This is the metadata of the supported newer version.",
          "type": "object",
          "readOnly": true
        },
        "version": {
          "description": "The newer version available for upgrade.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SupportedVersionCatalogVersion": {
      "description": "The SupportedVersionCatalogVersion object for appliance.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SupportedVersionCatalogVersionData",
          "description": "The newer supported version catalog version data.",
          "type": "object",
          "readOnly": true
        },
        "name": {
          "description": "The catalog version name for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        },
        "namespace": {
          "description": "The catalog version namespace for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SupportedVersionCatalogVersionData": {
      "description": "The SupportedVersionCatalogVersionData object for appliance.",
      "type": "object",
      "properties": {
        "audience": {
          "description": "The image audience name for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        },
        "catalog": {
          "description": "The image catalog name for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        },
        "offer": {
          "description": "The image offer name for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The image version for the version available for upgrade.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SupportedVersionMetadata": {
      "description": "The SupportedVersionMetadata object for appliance.",
      "type": "object",
      "properties": {
        "catalogVersion": {
          "$ref": "#/definitions/SupportedVersionCatalogVersion",
          "description": "The newer supported version catalog version.",
          "type": "object",
          "readOnly": true
        }
      }
    },
    "UpgradeGraph": {
      "description": "The Upgrade Graph for appliance.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The appliance resource path",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The release train name.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/UpgradeGraphProperties",
          "description": "The properties of supported version",
          "type": "object"
        }
      }
    },
    "UpgradeGraphProperties": {
      "description": "The Upgrade Graph Properties for appliance.",
      "type": "object",
      "properties": {
        "applianceVersion": {
          "description": "The current appliance version",
          "type": "string",
          "readOnly": true
        },
        "supportedVersions": {
          "description": "This contains the current version and supported upgrade versions.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SupportedVersion"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "appliance": {
      "description": "Appliances definition.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Identity for the resource."
        },
        "properties": {
          "$ref": "#/definitions/applianceProperties",
          "description": "The set of properties specific to an Appliance",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "applianceCredentialKubeconfig": {
      "description": "Cluster User Credential appliance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name which contains the role of the kubeconfig.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "clusterUser",
            "clusterCustomerUser"
          ],
          "x-ms-enum": {
            "name": "AccessProfileType",
            "modelAsString": true
          }
        },
        "value": {
          "description": "Contains the kubeconfig value.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "applianceGetTelemetryConfigResult": {
      "description": "The Get Telemetry Config Result appliance.",
      "type": "object",
      "properties": {
        "telemetryInstrumentationKey": {
          "description": "Telemetry instrumentation key.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "applianceListCredentialResults": {
      "description": "The List Cluster User Credential appliance.",
      "type": "object",
      "properties": {
        "hybridConnectionConfig": {
          "$ref": "#/definitions/HybridConnectionConfig",
          "description": "Contains the REP (rendezvous endpoint) and \u201cListener\u201d access token from notification service (NS).",
          "readOnly": true
        },
        "kubeconfigs": {
          "description": "The list of appliance kubeconfigs.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/applianceCredentialKubeconfig"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "applianceListKeysResults": {
      "description": "The List Cluster Keys Results appliance.",
      "type": "object",
      "properties": {
        "artifactProfiles": {
          "description": "Map of artifacts that contains a list of ArtifactProfile used to upload artifacts such as logs.",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "#/definitions/ArtifactProfile"
          }
        },
        "kubeconfigs": {
          "description": "The list of appliance kubeconfigs.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/applianceCredentialKubeconfig"
          },
          "x-ms-identifiers": []
        },
        "sshKeys": {
          "description": "Map of Customer User Public, Private SSH Keys and Certificate when available.",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "#/definitions/SSHKey"
          }
        }
      }
    },
    "applianceListResult": {
      "description": "The List Appliances operation response.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The list of Appliances.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/appliance"
          }
        }
      }
    },
    "applianceOperation": {
      "description": "Appliances operation.",
      "type": "object",
      "properties": {
        "display": {
          "$ref": "#/definitions/applianceOperationValueDisplay",
          "description": "Describes the properties of an Appliances Operation Value Display.",
          "x-ms-client-flatten": true
        },
        "isDataAction": {
          "description": "Is this Operation a data plane operation",
          "type": "boolean",
          "readOnly": true
        },
        "name": {
          "description": "The name of the compute operation.",
          "type": "string",
          "readOnly": true
        },
        "origin": {
          "description": "The origin of the compute operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "applianceOperationValueDisplay": {
      "description": "Describes the properties of an Appliances Operation Value Display.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the operation.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "The display name of the compute operation.",
          "type": "string",
          "readOnly": true
        },
        "provider": {
          "description": "The resource provider for the operation.",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "The display name of the resource the operation applies to.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "applianceOperationsList": {
      "description": "Lists of Appliances operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of applianceOperation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applianceOperation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "applianceProperties": {
      "description": "Properties for an appliance.",
      "type": "object",
      "properties": {
        "distro": {
          "description": "Represents a supported Fabric/Infra. (AKSEdge etc...).",
          "type": "string",
          "enum": [
            "AKSEdge"
          ],
          "x-ms-enum": {
            "name": "distro",
            "modelAsString": true
          },
          "default": "AKSEdge"
        },
        "infrastructureConfig": {
          "description": "Contains infrastructure information about the Appliance",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Information about the connected appliance.",
              "type": "string",
              "enum": [
                "VMWare",
                "HCI",
                "SCVMM"
              ],
              "x-ms-enum": {
                "name": "provider",
                "modelAsString": true
              }
            }
          }
        },
        "provisioningState": {
          "description": "The current deployment or provisioning state, which only appears in the response.",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "description": "Certificates pair used to download MSI certificate from HIS. Can only be set once.",
          "type": "string"
        },
        "status": {
          "description": "Appliance\u2019s health and state of connection to on-prem",
          "type": "string",
          "readOnly": true,
          "enum": [
            "WaitingForHeartbeat",
            "Validating",
            "Connecting",
            "Connected",
            "Running",
            "PreparingForUpgrade",
            "ETCDSnapshotFailed",
            "UpgradePrerequisitesCompleted",
            "ValidatingSFSConnectivity",
            "ValidatingImageDownload",
            "ValidatingImageUpload",
            "ValidatingETCDHealth",
            "PreUpgrade",
            "UpgradingKVAIO",
            "WaitingForKVAIO",
            "ImagePending",
            "ImageProvisioning",
            "ImageProvisioned",
            "ImageDownloading",
            "ImageDownloaded",
            "ImageDeprovisioning",
            "ImageUnknown",
            "UpdatingCloudOperator",
            "WaitingForCloudOperator",
            "UpdatingCAPI",
            "UpdatingCluster",
            "PostUpgrade",
            "UpgradeComplete",
            "UpgradeClusterExtensionFailedToDelete",
            "UpgradeFailed",
            "Offline",
            "None"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "version": {
          "description": "Version of the Appliance",
          "type": "string"
        }
      }
    },
    "patchableAppliance": {
      "description": "The Appliances patchable resource definition.",
      "type": "object",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}