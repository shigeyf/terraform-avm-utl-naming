{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Insights",
    "version": "2023-06-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Insights/workbooks": {
      "get": {
        "description": "Get all Workbooks defined within a specified subscription and category.",
        "operationId": "Workbooks_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          },
          {
            "$ref": "#/parameters/TagsParameter"
          },
          {
            "$ref": "#/parameters/CanFetchWorkbookContentParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list containing 0 or more workbook definitions.",
            "schema": {
              "$ref": "#/definitions/WorkbooksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "WorkbooksListSub": {
            "$ref": "./examples/WorkbooksListSub.json"
          },
          "WorkbooksList2": {
            "$ref": "./examples/WorkbooksList2.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks": {
      "get": {
        "description": "Get all Workbooks defined within a specified resource group and category.",
        "operationId": "Workbooks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          },
          {
            "$ref": "#/parameters/TagsParameter"
          },
          {
            "$ref": "#/parameters/SourceIdParameter"
          },
          {
            "$ref": "#/parameters/CanFetchWorkbookContentParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list containing 0 or more workbook definitions.",
            "schema": {
              "$ref": "#/definitions/WorkbooksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "WorkbooksList": {
            "$ref": "./examples/WorkbooksList.json"
          },
          "WorkbooksManagedList": {
            "$ref": "./examples/WorkbooksManagedList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}": {
      "get": {
        "description": "Get a single workbook by its resourceName.",
        "operationId": "Workbooks_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CanFetchWorkbookContentParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A workbook definition.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-examples": {
          "WorkbookGet": {
            "$ref": "./examples/WorkbookGet.json"
          },
          "WorkbookGet1": {
            "$ref": "./examples/WorkbookGet1.json"
          },
          "WorkbookManagedGet": {
            "$ref": "./examples/WorkbookManagedGet.json"
          }
        }
      },
      "delete": {
        "description": "Delete a workbook.",
        "operationId": "Workbooks_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The workbook has been successfully deleted."
          },
          "204": {
            "description": "The resource doesn't exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-examples": {
          "WorkbookDelete": {
            "$ref": "./examples/WorkbookDelete.json"
          }
        }
      },
      "put": {
        "description": "Create a new workbook.",
        "operationId": "Workbooks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/SourceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "workbookProperties",
            "description": "Properties that need to be specified to create a new workbook.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The newly created workbook.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "201": {
            "description": "The newly created workbook.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-examples": {
          "WorkbookManagedAdd": {
            "$ref": "./examples/WorkbookManagedAdd.json"
          },
          "WorkbookAdd": {
            "$ref": "./examples/WorkbookAdd.json"
          }
        }
      },
      "patch": {
        "description": "Updates a workbook that has already been added.",
        "operationId": "Workbooks_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/SourceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "WorkbookUpdateParameters",
            "description": "Properties that need to be specified to create a new workbook.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkbookUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The workbook definition updated.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "201": {
            "description": "The workbook definition updated.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-examples": {
          "WorkbookManagedUpdate": {
            "$ref": "./examples/WorkbookManagedUpdate.json"
          },
          "WorkbookUpdate": {
            "$ref": "./examples/WorkbookUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}/revisions": {
      "get": {
        "description": "Get the revisions for the workbook defined by its resourceName.",
        "operationId": "Workbooks_RevisionsList",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list containing 0 or more workbook definitions.",
            "schema": {
              "$ref": "#/definitions/WorkbooksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "WorkbookRevisionsList": {
            "$ref": "./examples/WorkbookRevisionsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/workbooks/{resourceName}/revisions/{revisionId}": {
      "get": {
        "description": "Get a single workbook revision defined by its revisionId.",
        "operationId": "Workbooks_RevisionGet",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkbookResourceNamePropertyParameter"
          },
          {
            "$ref": "#/parameters/WorkbookRevisionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A workbook definition.",
            "schema": {
              "$ref": "#/definitions/Workbook"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/WorkbookError"
            }
          }
        },
        "x-ms-examples": {
          "WorkbookRevisionGet": {
            "$ref": "./examples/WorkbookRevisionGet.json"
          }
        }
      }
    }
  },
  "parameters": {
    "WorkbookResourceNamePropertyParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workbook resource. The value must be an UUID.",
      "x-ms-parameter-location": "method"
    },
    "CategoryParameter": {
      "name": "category",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "workbook",
        "TSG",
        "performance",
        "retention"
      ],
      "x-ms-enum": {
        "name": "CategoryType",
        "modelAsString": true
      },
      "description": "Category of workbook to return.",
      "x-ms-parameter-location": "method"
    },
    "SourceIdParameter": {
      "name": "sourceId",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Azure Resource Id that will fetch all linked workbooks.",
      "x-ms-parameter-location": "method"
    },
    "CanFetchWorkbookContentParameter": {
      "name": "canFetchContent",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "Flag indicating whether or not to return the full content for each applicable workbook. If false, only return summary content for workbooks.",
      "x-ms-parameter-location": "method"
    },
    "TagsParameter": {
      "name": "tags",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "csv",
      "description": "Tags presents on each workbook returned.",
      "x-ms-parameter-location": "method"
    },
    "WorkbookRevisionIdParameter": {
      "name": "revisionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id of the workbook's revision.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "WorkbookResource": {
      "type": "object",
      "description": "An azure resource object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Identity used for BYOS",
          "allOf": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
            }
          ]
        },
        "kind": {
          "type": "string",
          "description": "The kind of workbook. Only valid value is shared.",
          "enum": [
            "shared"
          ],
          "x-ms-enum": {
            "name": "WorkbookSharedTypeKind",
            "modelAsString": true
          }
        },
        "etag": {
          "type": "string",
          "description": "Resource etag"
        }
      }
    },
    "WorkbooksListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Workbook"
          },
          "description": "An array of workbooks."
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Workbook list result."
    },
    "Workbook": {
      "description": "A workbook definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkbookResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Metadata describing a workbook for an Azure resource.",
          "$ref": "#/definitions/WorkbookProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "WorkbookProperties": {
      "description": "Properties that contain a workbook.",
      "type": "object",
      "required": [
        "displayName",
        "category",
        "serializedData"
      ],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The user-defined name (display name) of the workbook."
        },
        "serializedData": {
          "type": "string",
          "x-nullable": true,
          "description": "Configuration of this particular workbook. Configuration data is a string containing valid JSON"
        },
        "version": {
          "type": "string",
          "description": "Workbook schema version format, like 'Notebook/1.0', which should match the workbook in serializedData"
        },
        "timeModified": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC of the last modification that was made to this workbook definition.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Workbook category, as defined by the user at creation time."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Being deprecated, please use the other tags field"
        },
        "userId": {
          "type": "string",
          "description": "Unique user id of the specific user that owns this workbook.",
          "readOnly": true
        },
        "sourceId": {
          "type": "string",
          "description": "ResourceId for a source resource."
        },
        "storageUri": {
          "type": "string",
          "x-nullable": true,
          "description": "The resourceId to the storage account when bring your own storage is used"
        },
        "description": {
          "type": "string",
          "x-nullable": true,
          "description": "The description of the workbook."
        },
        "revision": {
          "type": "string",
          "x-nullable": true,
          "description": "The unique revision id for this workbook definition",
          "readOnly": true
        }
      }
    },
    "WorkbookUpdateParameters": {
      "description": "The parameters that can be provided when updating workbook properties properties.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of workbook. Only valid value is shared.",
          "enum": [
            "shared"
          ],
          "x-ms-enum": {
            "name": "WorkbookUpdateSharedTypeKind",
            "modelAsString": true
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Metadata describing a workbook for an Azure resource.",
          "$ref": "#/definitions/WorkbookPropertiesUpdateParameters"
        }
      }
    },
    "WorkbookPropertiesUpdateParameters": {
      "description": "Properties that contain a workbook for PATCH operation.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The user-defined name (display name) of the workbook."
        },
        "serializedData": {
          "type": "string",
          "description": "Configuration of this particular workbook. Configuration data is a string containing valid JSON"
        },
        "category": {
          "type": "string",
          "description": "Workbook category, as defined by the user at creation time."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of 0 or more tags that are associated with this workbook definition"
        },
        "description": {
          "type": "string",
          "x-nullable": true,
          "description": "The description of the workbook."
        },
        "revision": {
          "type": "string",
          "x-nullable": true,
          "description": "The unique revision id for this workbook definition"
        }
      }
    },
    "WorkbookError": {
      "description": "Error response.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/WorkbookErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "WorkbookErrorDefinition": {
      "description": "Error definition.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "innererror": {
          "description": "Internal error details.",
          "$ref": "#/definitions/WorkbookInnerErrorTrace",
          "readOnly": true
        }
      }
    },
    "WorkbookInnerErrorTrace": {
      "description": "Error details",
      "type": "object",
      "properties": {
        "trace": {
          "description": "detailed error trace",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Resource": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureEntityResource": {
      "x-ms-client-name": "AzureEntityResource",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "managedBy": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "kind": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. "
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          },
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Identity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "description": "Plan for the resource.",
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ErrorResponse": {
      "title": "Error Response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "Operation": {
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "type": "string",
          "readOnly": true,
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          }
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        }
      }
    },
    "OperationListResult": {
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of operations supported by the resource provider",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "locationData": {
      "description": "Metadata pertaining to the geographic location of the resource.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 256,
          "description": "A canonical name for the geographic or physical location."
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "encryptionProperties": {
      "description": "Configuration of key for data encryption",
      "type": "object",
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identity": {
          "description": "The client ID of the identity which will be used to access key vault.",
          "type": "string"
        }
      }
    }
  }
}