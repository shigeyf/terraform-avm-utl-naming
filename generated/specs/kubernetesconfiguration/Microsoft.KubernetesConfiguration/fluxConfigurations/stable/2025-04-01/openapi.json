{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.KubernetesConfiguration.fluxConfigurations",
    "version": "2025-04-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/{fluxConfigurationName}": {
      "get": {
        "tags": [
          "FluxConfiguration",
          "Flux"
        ],
        "description": "Gets details of the Flux Configuration.",
        "operationId": "FluxConfigurations_Get",
        "x-ms-examples": {
          "Get Flux Configuration": {
            "$ref": "./examples/GetFluxConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FluxConfigurationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "FluxConfiguration",
          "Flux"
        ],
        "description": "Create a new Kubernetes Flux Configuration.",
        "operationId": "FluxConfigurations_CreateOrUpdate",
        "x-ms-examples": {
          "Create Flux Configuration": {
            "$ref": "./examples/CreateFluxConfiguration.json"
          },
          "Create Flux Configuration with Bucket Source Kind": {
            "$ref": "./examples/CreateFluxConfigurationWithBucket.json"
          },
          "Create Flux Configuration with OCIRepository Source Kind": {
            "$ref": "./examples/CreateFluxConfigurationWithOCIRepository.json"
          },
          "Create Flux Configuration with Git Repository Provider": {
            "$ref": "./examples/CreateFluxConfigurationWithProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FluxConfigurationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "fluxConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            },
            "description": "Properties necessary to Create a FluxConfiguration."
          }
        ],
        "responses": {
          "200": {
            "description": "Request received successfully for an existing resource.",
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            }
          },
          "201": {
            "description": "Request received successfully.",
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "FluxConfiguration",
          "Flux"
        ],
        "description": "Update an existing Kubernetes Flux Configuration.",
        "operationId": "FluxConfigurations_Update",
        "x-ms-examples": {
          "Patch Flux Configuration": {
            "$ref": "./examples/PatchFluxConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FluxConfigurationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "fluxConfigurationPatch",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FluxConfigurationPatch"
            },
            "description": "Properties to Patch in an existing Flux Configuration."
          }
        ],
        "responses": {
          "202": {
            "description": "Request received successfully, and the resource will be updated asynchronously.",
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            }
          },
          "200": {
            "description": "No update is done to fluxConfiguration so return OK.",
            "schema": {
              "$ref": "#/definitions/FluxConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "FluxConfiguration",
          "Flux"
        ],
        "description": "This will delete the YAML file used to set up the Flux Configuration, thus stopping future sync from the source repo.",
        "operationId": "FluxConfigurations_Delete",
        "x-ms-examples": {
          "Delete Flux Configuration": {
            "$ref": "./examples/DeleteFluxConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FluxConfigurationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "forceDelete",
            "in": "query",
            "description": "Delete the extension resource in Azure - not the normal asynchronous delete.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.  The request has been completed successfully."
          },
          "202": {
            "description": "Accepted.  The request has been accepted for processing."
          },
          "204": {
            "description": "No Content.  The request has been accepted but the configuration was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations": {
      "get": {
        "tags": [
          "FluxConfiguration",
          "Flux"
        ],
        "description": "List all Flux Configurations.",
        "operationId": "FluxConfigurations_List",
        "x-ms-examples": {
          "List Flux Configuration": {
            "$ref": "./examples/ListFluxConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FluxConfigurationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/{fluxConfigurationName}/operations/{operationId}": {
      "get": {
        "tags": [
          "FluxConfiguration Operation Status"
        ],
        "operationId": "FluxConfigOperationStatus_Get",
        "description": "Get Async Operation status",
        "x-ms-examples": {
          "FluxConfigurationAsyncOperationStatus Get": {
            "$ref": "./examples/GetFluxConfigurationAsyncOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterRpParameter"
          },
          {
            "$ref": "#/parameters/ClusterResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FluxConfigurationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "FluxConfiguration Operation Status",
            "schema": {
              "$ref": "../../../common/2022-03-01/definitions.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "FluxConfigurationNameParameter": {
      "name": "fluxConfigurationName",
      "in": "path",
      "description": "Name of the Flux Configuration.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of an ongoing async operation.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of Azure region.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ClusterRpParameter": {
      "name": "clusterRp",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes, Microsoft.HybridContainerService.",
      "x-ms-parameter-location": "method"
    },
    "ClusterResourceNameParameter": {
      "name": "clusterResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z]*$",
      "description": "The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters, provisionedClusters, appliances.",
      "x-ms-parameter-location": "method"
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^.*",
      "description": "The name of the kubernetes cluster.",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ScopeDefinition": {
      "description": "Scope at which the configuration will be installed.",
      "type": "string",
      "enum": [
        "cluster",
        "namespace"
      ],
      "default": "cluster",
      "x-ms-enum": {
        "name": "ScopeType",
        "modelAsString": true
      }
    },
    "SourceKindDefinition": {
      "description": "Source Kind to pull the configuration data from.",
      "type": "string",
      "enum": [
        "GitRepository",
        "Bucket",
        "AzureBlob",
        "OCIRepository"
      ],
      "x-ms-enum": {
        "name": "SourceKindType",
        "modelAsString": true
      }
    },
    "GitRepositoryDefinition": {
      "description": "Parameters to reconcile to the GitRepository source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration git repository.",
          "type": "string",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster git repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster git repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "repositoryRef": {
          "description": "The source reference for the GitRepository object.",
          "$ref": "#/definitions/RepositoryRefDefinition"
        },
        "sshKnownHosts": {
          "description": "Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH",
          "type": "string",
          "x-nullable": true
        },
        "httpsUser": {
          "description": "Plaintext HTTPS username used to access private git repositories over HTTPS",
          "type": "string",
          "x-nullable": true
        },
        "httpsCACert": {
          "description": "Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS",
          "type": "string",
          "x-nullable": true
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        },
        "provider": {
          "description": "Name of the provider used for authentication.",
          "type": "string",
          "x-nullable": true,
          "enum": [
            "Azure",
            "GitHub",
            "Generic"
          ],
          "x-ms-enum": {
            "name": "ProviderType",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "Azure provider can be used to authenticate to Azure DevOps repositories using Managed Identity."
              },
              {
                "name": "GitHub",
                "value": "GitHub",
                "description": "GitHub provider can be used to authenticate "
              },
              {
                "name": "Generic",
                "value": "Generic",
                "description": "Generic is the default provider that indicates secret-based authentication mechanism."
              }
            ]
          }
        }
      }
    },
    "GitRepositoryPatchDefinition": {
      "description": "Parameters to reconcile to the GitRepository source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration git repository.",
          "type": "string",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster git repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster git repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "repositoryRef": {
          "description": "The source reference for the GitRepository object.",
          "$ref": "#/definitions/RepositoryRefDefinition"
        },
        "sshKnownHosts": {
          "description": "Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH",
          "type": "string",
          "x-nullable": true
        },
        "httpsUser": {
          "description": "Plaintext HTTPS username used to access private git repositories over HTTPS",
          "type": "string",
          "x-nullable": true
        },
        "httpsCACert": {
          "description": "Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS",
          "type": "string",
          "x-nullable": true
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        },
        "provider": {
          "description": "Name of the provider used for authentication.",
          "type": "string",
          "x-nullable": true,
          "enum": [
            "Azure",
            "GitHub",
            "Generic"
          ],
          "x-ms-enum": {
            "name": "ProviderType",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "Azure provider can be used to authenticate to Azure DevOps repositories using Managed Identity."
              },
              {
                "name": "GitHub",
                "value": "GitHub",
                "description": "GitHub provider can be used to authenticate "
              },
              {
                "name": "Generic",
                "value": "Generic",
                "description": "Generic is the default provider that indicates secret-based authentication mechanism."
              }
            ]
          }
        }
      }
    },
    "RepositoryRefDefinition": {
      "description": "The source reference for the GitRepository object.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "branch": {
          "description": "The git repository branch name to checkout.",
          "type": "string",
          "x-nullable": true
        },
        "tag": {
          "description": "The git repository tag name to checkout. This takes precedence over branch.",
          "type": "string",
          "x-nullable": true
        },
        "semver": {
          "description": "The semver range used to match against git repository tags. This takes precedence over tag.",
          "type": "string",
          "x-nullable": true
        },
        "commit": {
          "description": "The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BucketDefinition": {
      "description": "Parameters to reconcile to the Bucket source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration S3 bucket.",
          "type": "string"
        },
        "bucketName": {
          "description": "The bucket name to sync from the url endpoint for the flux configuration.",
          "type": "string"
        },
        "insecure": {
          "description": "Specify whether to use insecure communication when puling data from the S3 bucket.",
          "type": "boolean",
          "default": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster bucket source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster bucket source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "accessKey": {
          "description": "Plaintext access key used to securely access the S3 bucket",
          "type": "string",
          "x-nullable": true
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BucketPatchDefinition": {
      "description": "Parameters to reconcile to the Bucket source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration S3 bucket.",
          "type": "string",
          "x-nullable": true
        },
        "bucketName": {
          "description": "The bucket name to sync from the url endpoint for the flux configuration.",
          "type": "string",
          "x-nullable": true
        },
        "insecure": {
          "description": "Specify whether to use insecure communication when puling data from the S3 bucket.",
          "type": "boolean",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster bucket source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster bucket source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "accessKey": {
          "description": "Plaintext access key used to securely access the S3 bucket",
          "type": "string",
          "x-nullable": true
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AzureBlobDefinition": {
      "description": "Parameters to reconcile to the AzureBlob source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration Azure Blob storage account.",
          "type": "string",
          "x-nullable": true
        },
        "containerName": {
          "description": "The Azure Blob container name to sync from the url endpoint for the flux configuration.",
          "type": "string",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster Azure Blob source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "servicePrincipal": {
          "description": "Parameters to authenticate using Service Principal.",
          "type": "object",
          "$ref": "#/definitions/ServicePrincipalDefinition"
        },
        "accountKey": {
          "description": "The account key (shared key) to access the storage account",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "sasToken": {
          "description": "The Shared Access token to access the storage container",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "managedIdentity": {
          "description": "Parameters to authenticate using a Managed Identity.",
          "type": "object",
          "$ref": "#/definitions/ManagedIdentityDefinition"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AzureBlobPatchDefinition": {
      "description": "Parameters to reconcile to the AzureBlob source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration Azure Blob storage account.",
          "type": "string",
          "x-nullable": true
        },
        "containerName": {
          "description": "The Azure Blob container name to sync from the url endpoint for the flux configuration.",
          "type": "string",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster Azure Blob source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "servicePrincipal": {
          "description": "Parameters to authenticate using Service Principal.",
          "type": "object",
          "$ref": "#/definitions/ServicePrincipalPatchDefinition"
        },
        "accountKey": {
          "description": "The account key (shared key) to access the storage account",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "sasToken": {
          "description": "The Shared Access token to access the storage container",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "managedIdentity": {
          "description": "Parameters to authenticate using a Managed Identity.",
          "type": "object",
          "$ref": "#/definitions/ManagedIdentityPatchDefinition"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ServicePrincipalDefinition": {
      "description": "Parameters to authenticate using Service Principal.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientId": {
          "description": "The client Id for authenticating a Service Principal.",
          "type": "string",
          "x-nullable": true
        },
        "tenantId": {
          "description": "The tenant Id for authenticating a Service Principal",
          "type": "string",
          "x-nullable": true
        },
        "clientSecret": {
          "description": "The client secret for authenticating a Service Principal",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificate": {
          "description": "Base64-encoded certificate used to authenticate a Service Principal ",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificatePassword": {
          "description": "The password for the certificate used to authenticate a Service Principal ",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificateSendChain": {
          "description": "Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ServicePrincipalPatchDefinition": {
      "description": "Parameters to authenticate using Service Principal.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientId": {
          "description": "The client Id for authenticating a Service Principal.",
          "type": "string",
          "x-nullable": true
        },
        "tenantId": {
          "description": "The tenant Id for authenticating a Service Principal",
          "type": "string",
          "x-nullable": true
        },
        "clientSecret": {
          "description": "The client secret for authenticating a Service Principal",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificate": {
          "description": "Base64-encoded certificate used to authenticate a Service Principal ",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificatePassword": {
          "description": "The password for the certificate used to authenticate a Service Principal ",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "clientCertificateSendChain": {
          "description": "Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate",
          "type": "boolean"
        }
      }
    },
    "ManagedIdentityDefinition": {
      "description": "Parameters to authenticate using a Managed Identity.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientId": {
          "description": "The client Id for authenticating a Managed Identity.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ManagedIdentityPatchDefinition": {
      "description": "Parameters to authenticate using a Managed Identity.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientId": {
          "description": "The client Id for authenticating a Managed Identity.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "OCIRepositoryDefinition": {
      "description": "Parameters to reconcile to the OCIRepository source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration OCI repository.",
          "type": "string",
          "format": "uri",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster OCI repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster OCI repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "repositoryRef": {
          "description": "The source reference for the OCIRepository object.",
          "$ref": "#/definitions/OCIRepositoryRefDefinition"
        },
        "layerSelector": {
          "description": "The layer to be pulled from the OCI artifact.",
          "$ref": "#/definitions/LayerSelectorDefinition"
        },
        "verify": {
          "description": "Verification of the authenticity of an OCI Artifact.",
          "$ref": "#/definitions/VerifyDefinition"
        },
        "insecure": {
          "description": "Specify whether to allow connecting to a non-TLS HTTP container registry.",
          "type": "boolean",
          "default": false
        },
        "useWorkloadIdentity": {
          "description": "Specifies whether to use Workload Identity to authenticate with the OCI repository.",
          "type": "boolean",
          "default": false
        },
        "serviceAccountName": {
          "description": "The service account name to authenticate with the OCI repository.",
          "type": "string",
          "x-nullable": true
        },
        "tlsConfig": {
          "description": "Parameters to authenticate using TLS config for OCI repository.",
          "type": "object",
          "$ref": "#/definitions/TlsConfigDefinition"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "OCIRepositoryPatchDefinition": {
      "description": "Parameters to reconcile to the OCIRepository source kind type.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "url": {
          "description": "The URL to sync for the flux configuration OCI repository.",
          "type": "string",
          "format": "uri",
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster OCI repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster OCI repository source with the remote.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "repositoryRef": {
          "description": "The source reference for the OCIRepository object.",
          "$ref": "#/definitions/OCIRepositoryRefPatchDefinition"
        },
        "layerSelector": {
          "description": "The layer to be pulled from the OCI artifact.",
          "$ref": "#/definitions/LayerSelectorPatchDefinition"
        },
        "verify": {
          "description": "Verification of the authenticity of an OCI Artifact.",
          "$ref": "#/definitions/VerifyPatchDefinition"
        },
        "insecure": {
          "description": "Specify whether to allow connecting to a non-TLS HTTP container registry.",
          "type": "boolean",
          "default": false
        },
        "useWorkloadIdentity": {
          "description": "Specifies whether to use Workload Identity to authenticate with the OCI repository.",
          "type": "boolean",
          "default": false
        },
        "serviceAccountName": {
          "description": "The service account name to authenticate with the OCI repository.",
          "type": "string",
          "x-nullable": true
        },
        "tlsConfig": {
          "description": "Parameters to authenticate using TLS config for OCI repository.",
          "type": "object",
          "$ref": "#/definitions/TlsConfigPatchDefinition"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "TlsConfigDefinition": {
      "description": "Parameters to authenticate using TLS config for OCI repository.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientCertificate": {
          "description": "Base64-encoded certificate used to authenticate a client with the OCI repository.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "privateKey": {
          "description": "Base64-encoded private key used to authenticate a client with the OCI repository.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "caCertificate": {
          "description": "Base64-encoded CA certificate used to verify the server.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        }
      }
    },
    "TlsConfigPatchDefinition": {
      "description": "Parameters to authenticate using TLS config for OCI repository.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "clientCertificate": {
          "description": "Base64-encoded certificate used to authenticate a client with the OCI repository.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "privateKey": {
          "description": "Base64-encoded private key used to authenticate a client with the OCI repository.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "caCertificate": {
          "description": "Base64-encoded CA certificate used to verify the server.",
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        }
      }
    },
    "OCIRepositoryRefDefinition": {
      "description": "The source reference for the OCIRepository object.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "tag": {
          "description": "The OCI repository image tag name to pull. This defaults to 'latest'.",
          "type": "string",
          "x-nullable": true
        },
        "semver": {
          "description": "The semver range used to match against OCI repository tags. This takes precedence over tag.",
          "type": "string",
          "x-nullable": true
        },
        "digest": {
          "description": "The image digest to pull from OCI repository, the value should be in the format \u2018sha256:\u2019. This takes precedence over semver.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "OCIRepositoryRefPatchDefinition": {
      "description": "The source reference for the OCIRepository object.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "tag": {
          "description": "The OCI repository image tag name to pull. This defaults to 'latest'.",
          "type": "string",
          "x-nullable": true
        },
        "semver": {
          "description": "The semver range used to match against OCI repository tags. This takes precedence over tag.",
          "type": "string",
          "x-nullable": true
        },
        "digest": {
          "description": "The image digest to pull from OCI repository, the value should be in the format \u2018sha256:\u2019. This takes precedence over semver.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "LayerSelectorDefinition": {
      "description": "Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "mediaType": {
          "description": "The first layer matching the specified media type will be used.",
          "type": "string",
          "x-nullable": true
        },
        "operation": {
          "description": "The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.",
          "$ref": "#/definitions/OperationDefinition",
          "x-nullable": true
        }
      }
    },
    "LayerSelectorPatchDefinition": {
      "description": "Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "mediaType": {
          "description": "The first layer matching the specified media type will be used.",
          "type": "string",
          "x-nullable": true
        },
        "operation": {
          "description": "The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.",
          "$ref": "#/definitions/OperationDefinition",
          "x-nullable": true
        }
      }
    },
    "OperationDefinition": {
      "description": "The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.",
      "type": "string",
      "enum": [
        "extract",
        "copy"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true
      }
    },
    "VerifyDefinition": {
      "description": "Parameters to verify the authenticity of an OCI Artifact.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "provider": {
          "description": "Verification provider name.",
          "type": "string"
        },
        "verificationConfig": {
          "description": "An object containing trusted public keys of trusted authors.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "matchOidcIdentity": {
          "description": "Array defining the criteria for matching the identity while verifying an OCI artifact.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MatchOidcIdentityDefinition"
          },
          "x-ms-identifiers": [],
          "x-nullable": true
        }
      }
    },
    "VerifyPatchDefinition": {
      "description": "Parameters to verify the authenticity of an OCI Artifact.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "provider": {
          "description": "Verification provider name.",
          "type": "string"
        },
        "verificationConfig": {
          "description": "An object containing trusted public keys of trusted authors.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "matchOidcIdentity": {
          "description": "Array defining the criteria for matching the OIDC identity while verifying an OCI artifact.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MatchOidcIdentityPatchDefinition"
          },
          "x-ms-identifiers": [],
          "x-nullable": true
        }
      }
    },
    "MatchOidcIdentityDefinition": {
      "description": "MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "issuer": {
          "description": "The regex pattern to match against to verify the OIDC issuer.",
          "type": "string"
        },
        "subject": {
          "description": "The regex pattern to match against to verify the identity subject.",
          "type": "string"
        }
      }
    },
    "MatchOidcIdentityPatchDefinition": {
      "description": "MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "issuer": {
          "description": "The regex pattern to match against to verify the OIDC issuer.",
          "type": "string"
        },
        "subject": {
          "description": "The regex pattern to match against to verify the identity subject.",
          "type": "string"
        }
      }
    },
    "PostBuildDefinition": {
      "description": "The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "substitute": {
          "description": "Key/value pairs holding the variables to be substituted in this Kustomization.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "substituteFrom": {
          "description": "Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SubstituteFromDefinition"
          },
          "x-ms-identifiers": [],
          "x-nullable": true
        }
      }
    },
    "PostBuildPatchDefinition": {
      "description": "The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "substitute": {
          "description": "Key/value pairs holding the variables to be substituted in this Kustomization.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "substituteFrom": {
          "description": "Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SubstituteFromPatchDefinition"
          },
          "x-ms-identifiers": [],
          "x-nullable": true
        }
      }
    },
    "SubstituteFromDefinition": {
      "description": "Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "kind": {
          "description": "Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.",
          "type": "string"
        },
        "name": {
          "description": "Name of the ConfigMap/Secret that holds the variables to be used in substitution.",
          "type": "string"
        },
        "optional": {
          "description": "Set to True to proceed without ConfigMap/Secret, if it is not present.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "SubstituteFromPatchDefinition": {
      "description": "Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "kind": {
          "description": "Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.",
          "type": "string"
        },
        "name": {
          "description": "Name of the ConfigMap/Secret that holds the variables to be used in substitution.",
          "type": "string"
        },
        "optional": {
          "description": "Set to True to proceed without ConfigMap/Secret, if it is not present.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "KustomizationDefinition": {
      "description": "The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "name": {
          "description": "Name of the Kustomization, matching the key in the Kustomizations object map.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "The path in the source reference to reconcile on the cluster.",
          "type": "string",
          "default": ""
        },
        "dependsOn": {
          "description": "Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.",
          "type": "array",
          "items": {
            "description": "Kustomization name of dependency.",
            "type": "string"
          },
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the Kustomization on the cluster.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster.",
          "type": "integer",
          "format": "int64",
          "default": 600,
          "x-nullable": true
        },
        "retryIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "prune": {
          "description": "Enable/disable garbage collections of Kubernetes objects created by this Kustomization.",
          "type": "boolean",
          "default": false
        },
        "force": {
          "description": "Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.",
          "type": "boolean",
          "default": false
        },
        "wait": {
          "description": "Enable/disable health check for all Kubernetes objects created by this Kustomization.",
          "type": "boolean",
          "default": true
        },
        "postBuild": {
          "description": "Used for variable substitution for this Kustomization after kustomize build.",
          "type": "object",
          "$ref": "#/definitions/PostBuildDefinition",
          "x-nullable": true
        }
      }
    },
    "KustomizationPatchDefinition": {
      "description": "The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "path": {
          "description": "The path in the source reference to reconcile on the cluster.",
          "type": "string",
          "x-nullable": true
        },
        "dependsOn": {
          "description": "Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.",
          "type": "array",
          "items": {
            "description": "Kustomization name of dependency.",
            "type": "string"
          },
          "x-nullable": true
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the Kustomization on the cluster.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "retryIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "prune": {
          "description": "Enable/disable garbage collections of Kubernetes objects created by this Kustomization.",
          "type": "boolean",
          "x-nullable": true
        },
        "force": {
          "description": "Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.",
          "type": "boolean",
          "x-nullable": true
        },
        "wait": {
          "description": "Enable/disable health check for all Kubernetes objects created by this Kustomization.",
          "type": "boolean",
          "x-nullable": true
        },
        "postBuild": {
          "description": "Used for variable substitution for this Kustomization after kustomize build.",
          "type": "object",
          "$ref": "#/definitions/PostBuildPatchDefinition",
          "x-nullable": true
        }
      }
    },
    "KustomizationValidationDefinition": {
      "description": "Specify whether to validate the Kubernetes objects referenced in the Kustomization before applying them to the cluster.",
      "type": "string",
      "enum": [
        "none",
        "client",
        "server"
      ],
      "default": "none",
      "x-ms-enum": {
        "name": "KustomizationValidationType",
        "modelAsString": true
      }
    },
    "ObjectStatusDefinition": {
      "description": "Statuses of objects deployed by the user-specified kustomizations from the git repository.",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "name": {
          "description": "Name of the applied object",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the applied object",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the applied object",
          "type": "string"
        },
        "complianceState": {
          "description": "Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster.",
          "type": "string",
          "$ref": "#/definitions/FluxComplianceStateDefinition"
        },
        "appliedBy": {
          "description": "Object reference to the Kustomization that applied this object",
          "type": "object",
          "$ref": "#/definitions/ObjectReferenceDefinition",
          "x-nullable": true
        },
        "statusConditions": {
          "description": "List of Kubernetes object status conditions present on the cluster",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ObjectStatusConditionDefinition"
          },
          "x-nullable": true,
          "x-ms-identifiers": [
            "type"
          ]
        },
        "helmReleaseProperties": {
          "description": "Additional properties that are provided from objects of the HelmRelease kind",
          "type": "object",
          "$ref": "#/definitions/HelmReleasePropertiesDefinition",
          "x-nullable": true
        }
      }
    },
    "ObjectReferenceDefinition": {
      "description": "Object reference to a Kubernetes object on a cluster",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "name": {
          "description": "Name of the object",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the object",
          "type": "string"
        }
      }
    },
    "ObjectStatusConditionDefinition": {
      "description": "Status condition of Kubernetes object",
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "description": "Last time this status condition has changed",
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "description": "A more verbose description of the object status condition",
          "type": "string"
        },
        "reason": {
          "description": "Reason for the specified status condition type status",
          "type": "string"
        },
        "status": {
          "description": "Status of the Kubernetes object condition type",
          "type": "string"
        },
        "type": {
          "description": "Object status condition type for this object",
          "type": "string"
        }
      }
    },
    "HelmReleasePropertiesDefinition": {
      "description": "Properties for HelmRelease objects",
      "type": "object",
      "x-nullable": true,
      "properties": {
        "lastRevisionApplied": {
          "description": "The revision number of the last released object change",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "helmChartRef": {
          "description": "The reference to the HelmChart object used as the source to this HelmRelease",
          "type": "object",
          "$ref": "#/definitions/ObjectReferenceDefinition"
        },
        "failureCount": {
          "description": "Total number of times that the HelmRelease failed to install or upgrade",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "installFailureCount": {
          "description": "Number of times that the HelmRelease failed to install",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "upgradeFailureCount": {
          "description": "Number of times that the HelmRelease failed to upgrade",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "FluxComplianceStateDefinition": {
      "description": "Compliance state of the cluster object.",
      "type": "string",
      "enum": [
        "Compliant",
        "Non-Compliant",
        "Pending",
        "Suspended",
        "Unknown"
      ],
      "default": "Unknown",
      "x-ms-enum": {
        "name": "FluxComplianceState",
        "modelAsString": true
      }
    },
    "FluxConfiguration": {
      "type": "object",
      "description": "The Flux Configuration object returned in Get & Put response.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Properties to create a Flux Configuration resource",
          "properties": {
            "scope": {
              "description": "Scope at which the operator will be installed.",
              "$ref": "#/definitions/ScopeDefinition",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "namespace": {
              "description": "The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.",
              "type": "string",
              "default": "default",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "sourceKind": {
              "description": "Source Kind to pull the configuration data from.",
              "$ref": "#/definitions/SourceKindDefinition",
              "default": "GitRepository"
            },
            "suspend": {
              "description": "Whether this configuration should suspend its reconciliation of its kustomizations and sources.",
              "type": "boolean",
              "default": false
            },
            "gitRepository": {
              "description": "Parameters to reconcile to the GitRepository source kind type.",
              "type": "object",
              "$ref": "#/definitions/GitRepositoryDefinition"
            },
            "bucket": {
              "description": "Parameters to reconcile to the Bucket source kind type.",
              "type": "object",
              "$ref": "#/definitions/BucketDefinition"
            },
            "azureBlob": {
              "description": "Parameters to reconcile to the AzureBlob source kind type.",
              "type": "object",
              "$ref": "#/definitions/AzureBlobDefinition"
            },
            "ociRepository": {
              "description": "Parameters to reconcile to the OCIRepository source kind type.",
              "type": "object",
              "$ref": "#/definitions/OCIRepositoryDefinition"
            },
            "kustomizations": {
              "description": "Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.",
              "type": "object",
              "x-nullable": true,
              "additionalProperties": {
                "type": "object",
                "$ref": "#/definitions/KustomizationDefinition"
              }
            },
            "configurationProtectedSettings": {
              "description": "Key-value pairs of protected configuration settings for the configuration",
              "type": "object",
              "x-nullable": true,
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            },
            "statuses": {
              "description": "Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.",
              "type": "array",
              "readOnly": true,
              "x-nullable": true,
              "items": {
                "type": "object",
                "$ref": "#/definitions/ObjectStatusDefinition"
              },
              "x-ms-identifiers": [
                "name",
                "namespace",
                "kind"
              ]
            },
            "repositoryPublicKey": {
              "description": "Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).",
              "type": "string",
              "x-nullable": true,
              "readOnly": true
            },
            "sourceSyncedCommitId": {
              "description": "Branch and/or SHA of the source commit synced with the cluster.",
              "type": "string",
              "x-nullable": true,
              "readOnly": true
            },
            "sourceUpdatedAt": {
              "description": "Datetime the fluxConfiguration synced its source on the cluster.",
              "type": "string",
              "format": "date-time",
              "x-nullable": true,
              "readOnly": true
            },
            "statusUpdatedAt": {
              "description": "Datetime the fluxConfiguration synced its status on the cluster with Azure.",
              "type": "string",
              "format": "date-time",
              "x-nullable": true,
              "readOnly": true
            },
            "waitForReconciliation": {
              "description": "Whether flux configuration deployment should wait for cluster to reconcile the kustomizations.",
              "type": "boolean",
              "x-nullable": true
            },
            "reconciliationWaitDuration": {
              "description": "Maximum duration to wait for flux configuration reconciliation. E.g PT1H, PT5M, P1D",
              "type": "string",
              "x-nullable": true
            },
            "complianceState": {
              "description": "Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.",
              "type": "string",
              "readOnly": true,
              "$ref": "#/definitions/FluxComplianceStateDefinition"
            },
            "provisioningState": {
              "description": "Status of the creation of the fluxConfiguration.",
              "type": "string",
              "readOnly": true,
              "$ref": "../../../common/2023-05-01-preview/definitions.json#/definitions/ProvisioningStateDefinition"
            },
            "errorMessage": {
              "description": "Error message returned to the user in the case of provisioning failure.",
              "type": "string",
              "x-nullable": true,
              "readOnly": true
            }
          }
        },
        "systemData": {
          "description": "Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources",
          "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FluxConfigurationPatch": {
      "description": "The Flux Configuration Patch Request object.",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Updatable properties of an Flux Configuration Patch Request",
          "properties": {
            "sourceKind": {
              "description": "Source Kind to pull the configuration data from.",
              "$ref": "#/definitions/SourceKindDefinition",
              "x-nullable": true
            },
            "suspend": {
              "description": "Whether this configuration should suspend its reconciliation of its kustomizations and sources.",
              "type": "boolean",
              "x-nullable": true
            },
            "gitRepository": {
              "description": "Parameters to reconcile to the GitRepository source kind type.",
              "type": "object",
              "$ref": "#/definitions/GitRepositoryPatchDefinition"
            },
            "bucket": {
              "description": "Parameters to reconcile to the Bucket source kind type.",
              "type": "object",
              "$ref": "#/definitions/BucketPatchDefinition"
            },
            "azureBlob": {
              "description": "Parameters to reconcile to the AzureBlob source kind type.",
              "type": "object",
              "$ref": "#/definitions/AzureBlobPatchDefinition"
            },
            "ociRepository": {
              "description": "Parameters to reconcile to the OCIRepository source kind type.",
              "type": "object",
              "$ref": "#/definitions/OCIRepositoryPatchDefinition"
            },
            "kustomizations": {
              "description": "Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.",
              "type": "object",
              "x-nullable": true,
              "additionalProperties": {
                "type": "object",
                "$ref": "#/definitions/KustomizationPatchDefinition"
              }
            },
            "configurationProtectedSettings": {
              "description": "Key-value pairs of protected configuration settings for the configuration",
              "type": "object",
              "x-nullable": true,
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "FluxConfigurationsList": {
      "description": "Result of the request to list Flux Configurations.  It contains a list of FluxConfiguration objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FluxConfiguration"
          },
          "description": "List of Flux Configurations within a Kubernetes cluster."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "URL to get the next set of configuration objects, if any."
        }
      }
    },
    "Resource": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureEntityResource": {
      "x-ms-client-name": "AzureEntityResource",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "managedBy": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "kind": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. "
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          },
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Identity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "description": "Plan for the resource.",
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      }
    },
    "ErrorResponse": {
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "Operation": {
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "type": "string",
          "readOnly": true,
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          }
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        }
      }
    },
    "OperationListResult": {
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of operations supported by the resource provider",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "description": "The current status of an async operation.",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "id": {
          "description": "Fully qualified ID for the async operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the async operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "type": "string"
        },
        "percentComplete": {
          "description": "Percent of the operation that is complete.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "description": "The start time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The end time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "operations": {
          "description": "The operations list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "description": "If present, details of the operation error.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "locationData": {
      "description": "Metadata pertaining to the geographic location of the resource.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 256,
          "description": "A canonical name for the geographic or physical location."
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "encryptionProperties": {
      "description": "Configuration of key for data encryption",
      "type": "object",
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identity": {
          "description": "The client ID of the identity which will be used to access key vault.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "description": "The check availability request body.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource for which availability needs to be checked.",
          "type": "string"
        },
        "type": {
          "description": "The resource type.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "description": "The check availability result.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Indicates if the resource name is available.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason why the given name is not available.",
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Detailed reason why the given name is available.",
          "type": "string"
        }
      }
    }
  }
}