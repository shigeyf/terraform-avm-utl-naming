{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ComputeSchedule",
    "version": "2025-05-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.ComputeSchedule/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MaximumSet_Gen - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesCancelOperations",
        "description": "VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CancelOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesCancelOperations_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesCancelOperations_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteCreate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteCreate",
        "description": "VirtualMachinesExecuteCreate: Execute create operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteCreate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteCreate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteCreate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteCreate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDeallocate",
        "description": "VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDelete": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDelete",
        "description": "VirtualMachinesExecuteDelete: Execute delete operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDelete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDelete_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteDelete_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDelete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteHibernate",
        "description": "VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteStart",
        "description": "VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteStart_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteStart_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationErrors",
        "description": "VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesGetOperationErrors_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationErrors_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationStatus",
        "description": "VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitDeallocate",
        "description": "VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitHibernate",
        "description": "VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitStart",
        "description": "VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitStart_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitStart_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "CancelOperationsRequest": {
      "type": "object",
      "description": "This is the request to cancel running operations in scheduled actions using the operation ids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to cancel operations on",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "CancelOperationsResponse": {
      "type": "object",
      "description": "This is the response from a cancel operations request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations that were successfully cancelled",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "CreateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a create request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the create request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DeadlineType": {
      "type": "string",
      "description": "The types of deadlines supported by ScheduledActions",
      "enum": [
        "Unknown",
        "InitiateAt",
        "CompleteBy"
      ],
      "x-ms-enum": {
        "name": "DeadlineType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Default value of Unknown."
          },
          {
            "name": "InitiateAt",
            "value": "InitiateAt",
            "description": "Initiate the operation at the given deadline."
          },
          {
            "name": "CompleteBy",
            "value": "CompleteBy",
            "description": "Complete the operation by the given deadline."
          }
        ]
      }
    },
    "DeallocateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a deallocate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the deallocate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the deallocate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the deallocate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DeleteResourceOperationResponse": {
      "type": "object",
      "description": "The response from a delete request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the delete request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "ExecuteCreateRequest": {
      "type": "object",
      "description": "The ExecuteCreateRequest request for create operations",
      "properties": {
        "resourceConfigParameters": {
          "$ref": "#/definitions/ResourceProvisionPayload",
          "description": "resource creation payload"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "resourceConfigParameters",
        "executionParameters"
      ]
    },
    "ExecuteDeallocateRequest": {
      "type": "object",
      "description": "The ExecuteDeallocateRequest request for executeDeallocate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteDeleteRequest": {
      "type": "object",
      "description": "The ExecuteDeleteRequest for delete VM operation",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        },
        "forceDeletion": {
          "type": "boolean",
          "description": "Forced delete resource item"
        }
      },
      "required": [
        "executionParameters",
        "resources"
      ]
    },
    "ExecuteHibernateRequest": {
      "type": "object",
      "description": "The ExecuteHibernateRequest request for executeHibernate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteStartRequest": {
      "type": "object",
      "description": "The ExecuteStartRequest request for executeStart operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecutionParameters": {
      "type": "object",
      "description": "Extra details needed to run the user's request",
      "properties": {
        "optimizationPreference": {
          "$ref": "#/definitions/OptimizationPreference",
          "description": "Details that could optimize the user's request"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      }
    },
    "GetOperationErrorsRequest": {
      "type": "object",
      "description": "This is the request to get errors per vm operations",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to query errors of",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operationIds"
      ]
    },
    "GetOperationErrorsResponse": {
      "type": "object",
      "description": "This is the response from a get operations errors request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of operationids and their corresponding errors if any",
          "items": {
            "$ref": "#/definitions/OperationErrorsResult"
          },
          "x-ms-identifiers": [
            "operationId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "GetOperationStatusRequest": {
      "type": "object",
      "description": "This is the request to get operation status using operationids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to get the status of",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "GetOperationStatusResponse": {
      "type": "object",
      "description": "This is the response from a get operations status request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations based on their operation ids",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "HibernateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a Hibernate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the Hibernate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the Hibernate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the Hibernate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "OperationErrorDetails": {
      "type": "object",
      "description": "This defines a list of operation errors associated with a unique operationId",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "The error code of the operation"
        },
        "errorDetails": {
          "type": "string",
          "description": "The error details of the operation"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the error occurence"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the error occurence"
        },
        "azureOperationName": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        },
        "crpOperationId": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "OperationErrorsResult": {
      "type": "object",
      "description": "This is the first level of operation errors from the request when clients get errors per vm operation",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operationId identifying a vm operation"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the error result"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The activation time of a vm operation"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The completion time of the operation if the operation was completed"
        },
        "operationErrors": {
          "type": "array",
          "description": "A list of errors associated with the operationid",
          "items": {
            "$ref": "#/definitions/OperationErrorDetails"
          },
          "x-ms-identifiers": []
        },
        "requestErrorCode": {
          "type": "string",
          "description": "Request level error code"
        },
        "requestErrorDetails": {
          "type": "string",
          "description": "Request level error details"
        }
      }
    },
    "OperationState": {
      "type": "string",
      "description": "Values that define the states of operations in Scheduled Actions",
      "enum": [
        "Unknown",
        "PendingScheduling",
        "Scheduled",
        "PendingExecution",
        "Executing",
        "Succeeded",
        "Failed",
        "Cancelled",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for the operation state enum"
          },
          {
            "name": "PendingScheduling",
            "value": "PendingScheduling",
            "description": "Operations that are pending scheduling"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Operations that have been scheduled"
          },
          {
            "name": "PendingExecution",
            "value": "PendingExecution",
            "description": "Operations that are waiting to be executed"
          },
          {
            "name": "Executing",
            "value": "Executing",
            "description": "Operations that are in the process of being executed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Operations that suceeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operations that have failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Operations that have been Cancelled by the user"
          },
          {
            "name": "Blocked",
            "value": "Blocked",
            "description": "Operations that are blocked"
          }
        ]
      }
    },
    "OptimizationPreference": {
      "type": "string",
      "description": "The preferences customers can select to optimize their requests to ScheduledActions",
      "enum": [
        "Cost",
        "Availability",
        "CostAvailabilityBalanced"
      ],
      "x-ms-enum": {
        "name": "OptimizationPreference",
        "modelAsString": true,
        "values": [
          {
            "name": "Cost",
            "value": "Cost",
            "description": "Optimize while considering cost savings"
          },
          {
            "name": "Availability",
            "value": "Availability",
            "description": "Optimize while considering availability of resources"
          },
          {
            "name": "CostAvailabilityBalanced",
            "value": "CostAvailabilityBalanced",
            "description": "Optimize while considering a balance of cost and availability"
          }
        ]
      }
    },
    "ResourceOperation": {
      "type": "object",
      "description": "High level response from an operation on a resource",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "errorCode": {
          "type": "string",
          "description": "Resource level error code if it exists"
        },
        "errorDetails": {
          "type": "string",
          "description": "Resource level error details if they exist"
        },
        "operation": {
          "$ref": "#/definitions/ResourceOperationDetails",
          "description": "Details of the operation performed on a resource"
        }
      }
    },
    "ResourceOperationDetails": {
      "type": "object",
      "description": "The details of a response from an operation on a resource",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Operation identifier for the unique operation"
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "opType": {
          "type": "string",
          "description": "Type of operation performed on the resources",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Start",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "ResourceOperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for this enum type"
              },
              {
                "name": "Start",
                "value": "Start",
                "description": "Start operations on the resources"
              },
              {
                "name": "Deallocate",
                "value": "Deallocate",
                "description": "Deallocate operations on the resources"
              },
              {
                "name": "Hibernate",
                "value": "Hibernate",
                "description": "Hibernate operations on the resources"
              }
            ]
          }
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id attached to the request"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Deadline for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "Type of deadline of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        },
        "state": {
          "type": "string",
          "description": "Current state of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "PendingScheduling",
            "Scheduled",
            "PendingExecution",
            "Executing",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Blocked"
          ],
          "x-ms-enum": {
            "name": "OperationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for the operation state enum"
              },
              {
                "name": "PendingScheduling",
                "value": "PendingScheduling",
                "description": "Operations that are pending scheduling"
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "Operations that have been scheduled"
              },
              {
                "name": "PendingExecution",
                "value": "PendingExecution",
                "description": "Operations that are waiting to be executed"
              },
              {
                "name": "Executing",
                "value": "Executing",
                "description": "Operations that are in the process of being executed"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Operations that suceeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Operations that have failed"
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Operations that have been Cancelled by the user"
              },
              {
                "name": "Blocked",
                "value": "Blocked",
                "description": "Operations that are blocked"
              }
            ]
          }
        },
        "timezone": {
          "type": "string",
          "description": "Timezone for the operation"
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone for the operation"
        },
        "resourceOperationError": {
          "$ref": "#/definitions/ResourceOperationError",
          "description": "Operation level errors if they exist"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the operation was complete if errors are null"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      },
      "required": [
        "operationId"
      ]
    },
    "ResourceOperationError": {
      "type": "object",
      "description": "These describe errors that occur at the resource level",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "Code for the error eg 404, 500"
        },
        "errorDetails": {
          "type": "string",
          "description": "Detailed message about the error"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "ResourceOperationType": {
      "type": "string",
      "description": "The kind of operation types that can be performed on resources using ScheduledActions",
      "enum": [
        "Unknown",
        "Start",
        "Deallocate",
        "Hibernate"
      ],
      "x-ms-enum": {
        "name": "ResourceOperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for this enum type"
          },
          {
            "name": "Start",
            "value": "Start",
            "description": "Start operations on the resources"
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Deallocate operations on the resources"
          },
          {
            "name": "Hibernate",
            "value": "Hibernate",
            "description": "Hibernate operations on the resources"
          }
        ]
      }
    },
    "ResourceProvisionPayload": {
      "type": "object",
      "description": "Resource creation data model",
      "properties": {
        "baseProfile": {
          "type": "object",
          "description": "JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in baseProfile)",
          "additionalProperties": {}
        },
        "resourceOverrides": {
          "type": "array",
          "description": "JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName property, you pass computerNames for each VM in batch in this array), service will merge baseProfile with VM specific overrides and create a merged VMProfile.",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of VMs to be created"
        },
        "resourcePrefix": {
          "type": "string",
          "description": "if resourceOverrides doesn't contain \"name\", service will create name based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1.."
        }
      },
      "required": [
        "resourceCount"
      ]
    },
    "Resources": {
      "type": "object",
      "description": "The resources needed for the user request",
      "properties": {
        "ids": {
          "type": "array",
          "description": "The resource ids used for the request",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "RetryPolicy": {
      "type": "object",
      "description": "The retry policy for the user request",
      "properties": {
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Retry count for user request"
        },
        "retryWindowInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Retry window in minutes for user request"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "The schedule details for the user request",
      "properties": {
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The deadline for the operation"
        },
        "deadLine": {
          "type": "string",
          "format": "date-time",
          "description": "The deadline for the operation"
        },
        "timezone": {
          "type": "string",
          "description": "The timezone for the operation"
        },
        "timeZone": {
          "type": "string",
          "description": "The timezone for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "The deadlinetype of the operation, this can either be InitiateAt or CompleteBy",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        }
      },
      "required": [
        "deadlineType"
      ]
    },
    "StartResourceOperationResponse": {
      "type": "object",
      "description": "The response from a start request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the start request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "SubmitDeallocateRequest": {
      "type": "object",
      "description": "The deallocate request for resources",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitHibernateRequest": {
      "type": "object",
      "description": "This is the request for hibernate",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitStartRequest": {
      "type": "object",
      "description": "This is the request for start",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}