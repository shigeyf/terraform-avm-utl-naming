{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Orbital",
    "version": "2022-11-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.Orbital/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Orbital Rest API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/spacecrafts": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Returns list of spacecrafts by subscription.",
        "operationId": "Spacecrafts_ListBySubscription",
        "x-ms-examples": {
          "List of Spacecraft by Subscription": {
            "$ref": "./examples/SpacecraftsBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of spacecraft resources.",
            "schema": {
              "$ref": "#/definitions/SpacecraftListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Returns list of spacecrafts by resource group.",
        "operationId": "Spacecrafts_List",
        "x-ms-examples": {
          "List of Spacecraft by Resource Group": {
            "$ref": "./examples/SpacecraftsByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of spacecraft resources.",
            "schema": {
              "$ref": "#/definitions/SpacecraftListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}": {
      "get": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_Get",
        "description": "Gets the specified spacecraft in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Spacecraft": {
            "$ref": "./examples/SpacecraftGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Spacecraft"
        ],
        "description": "Creates or updates a spacecraft resource.",
        "operationId": "Spacecrafts_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            },
            "description": "The parameters to provide for the created spacecraft."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a spacecraft": {
            "$ref": "./examples/SpacecraftCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_Delete",
        "description": "Deletes a specified spacecraft resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Spacecraft": {
            "$ref": "./examples/SpacecraftDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Spacecraft"
        ],
        "operationId": "Spacecrafts_UpdateTags",
        "x-ms-examples": {
          "Update Spacecraft tags": {
            "$ref": "./examples/SpacecraftUpdateTags.json"
          }
        },
        "description": "Updates the specified spacecraft tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update spacecraft tags."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Spacecraft resource.",
            "schema": {
              "$ref": "#/definitions/Spacecraft"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "description": "Returns list of contacts by spacecraftName.",
        "operationId": "Contacts_List",
        "x-ms-examples": {
          "List of Spacecraft": {
            "$ref": "./examples/ContactsBySpacecraftNameList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contacts by spacecraftName.",
            "schema": {
              "$ref": "#/definitions/ContactListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts/{contactName}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contacts_Get",
        "description": "Gets the specified contact in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Contact resource.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Contact": {
            "$ref": "./examples/ContactGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "description": "Creates a contact.",
        "operationId": "Contacts_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            },
            "description": "The parameters to provide for the created contact."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting contact resource.",
            "schema": {
              "$ref": "#/definitions/Contact"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a contact": {
            "$ref": "./examples/ContactCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contacts_Delete",
        "description": "Deletes a specified contact.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "$ref": "#/parameters/contactNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Contact": {
            "$ref": "./examples/ContactDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/listAvailableContacts": {
      "post": {
        "tags": [
          "Contact"
        ],
        "description": "Returns list of available contacts. A contact is available if the spacecraft is visible from the ground station for more than the minimum viable contact duration provided in the contact profile.",
        "operationId": "Spacecrafts_ListAvailableContacts",
        "x-ms-examples": {
          "List of Contact": {
            "$ref": "./examples/AvailableContactsList.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/spacecraftNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/ContactParameters"
            },
            "description": "The parameters to provide for the contacts."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of available contacts resources.",
            "schema": {
              "$ref": "#/definitions/AvailableContactsListResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_Get",
        "description": "Gets the specified contact Profile in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a contact profile": {
            "$ref": "./examples/ContactProfileGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Creates or updates a contact profile.",
        "operationId": "ContactProfiles_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            },
            "description": "The parameters to provide for the created Contact Profile."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ContactProfile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a contact profile": {
            "$ref": "./examples/ContactProfileCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_Delete",
        "description": "Deletes a specified contact profile resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Contact Profile": {
            "$ref": "./examples/ContactProfileDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Contact Profile"
        ],
        "operationId": "ContactProfiles_UpdateTags",
        "x-ms-examples": {
          "Update Contact Profile tags": {
            "$ref": "./examples/ContactProfileUpdateTag.json"
          }
        },
        "description": "Updates the specified contact profile tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update contact profile tags."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/contactProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Contact Profile resource.",
            "schema": {
              "$ref": "#/definitions/ContactProfile"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/contactProfiles": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Returns list of contact profiles by Subscription.",
        "operationId": "ContactProfiles_ListBySubscription",
        "x-ms-examples": {
          "List of Contact Profiles": {
            "$ref": "./examples/ContactProfilesBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contact profile resources.",
            "schema": {
              "$ref": "#/definitions/ContactProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles": {
      "get": {
        "tags": [
          "Contact Profile"
        ],
        "description": "Returns list of contact profiles by Resource Group.",
        "operationId": "ContactProfiles_List",
        "x-ms-examples": {
          "List of Contact Profiles  by Resource Group": {
            "$ref": "./examples/ContactProfilesByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of contact profile resources.",
            "schema": {
              "$ref": "#/definitions/ContactProfileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/availableGroundStations": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "description": "Returns list of available ground stations.",
        "operationId": "AvailableGroundStations_ListByCapability",
        "x-ms-examples": {
          "List of Ground Stations by Capability": {
            "$ref": "./examples/AvailableGroundStationsByCapabilityList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/capabilityParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Ground Station resources.",
            "schema": {
              "$ref": "#/definitions/AvailableGroundStationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/locations/{location}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Returns operation results.",
        "operationId": "OperationsResults_Get",
        "x-ms-examples": {
          "KustoOperationResultsGet": {
            "$ref": "./examples/OperationResultsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the operation result.",
            "schema": {
              "$ref": "#/definitions/OperationResult"
            }
          },
          "202": {
            "description": "The operation is still in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "parameters": {
    "contactNameParameter": {
      "name": "contactName",
      "in": "path",
      "description": "Contact name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "contactProfileNameParameter": {
      "name": "contactProfileName",
      "in": "path",
      "description": "Contact Profile name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "spacecraftNameParameter": {
      "name": "spacecraftName",
      "in": "path",
      "description": "Spacecraft ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "capabilityParameter": {
      "name": "capability",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "capabilityParameter",
        "modelAsString": true
      },
      "description": "Ground Station Capability.",
      "x-ms-parameter-location": "method"
    },
    "skipTokenParameter": {
      "name": "$skiptoken",
      "description": "An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "SpacecraftsProperties": {
      "type": "object",
      "required": [
        "titleLine",
        "tleLine1",
        "tleLine2",
        "links"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "noradId": {
          "type": "string",
          "description": "NORAD ID of the spacecraft."
        },
        "titleLine": {
          "type": "string",
          "description": "Title line of the two-line element set (TLE)."
        },
        "tleLine1": {
          "type": "string",
          "description": "Line 1 of the two-line element set (TLE)."
        },
        "tleLine2": {
          "type": "string",
          "description": "Line 2 of the two-line element set (TLE)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpacecraftLink"
          },
          "x-ms-identifiers": [],
          "description": "Immutable list of Spacecraft links.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "List of Spacecraft Resource Properties."
    },
    "SpacecraftListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Spacecraft"
          },
          "description": "A list of spacecraft resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListSpacecrafts API service call."
    },
    "SpacecraftLink": {
      "type": "object",
      "required": [
        "name",
        "centerFrequencyMHz",
        "bandwidthMHz",
        "direction",
        "polarization"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Link name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "centerFrequencyMHz": {
          "type": "number",
          "description": "Center Frequency in MHz.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bandwidthMHz": {
          "type": "number",
          "description": "Bandwidth in MHz.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "direction": {
          "type": "string",
          "description": "Direction (Uplink or Downlink).",
          "enum": [
            "Uplink",
            "Downlink"
          ],
          "x-ms-enum": {
            "name": "direction",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "polarization": {
          "type": "string",
          "description": "Polarization. e.g. (RHCP, LHCP).",
          "enum": [
            "RHCP",
            "LHCP",
            "linearVertical",
            "linearHorizontal"
          ],
          "x-ms-enum": {
            "name": "polarization",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authorizations": {
          "type": "array",
          "description": "Authorized Ground Stations",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AuthorizedGroundstation"
          },
          "x-ms-identifiers": []
        }
      },
      "description": "List of authorized spacecraft links per ground station and the expiration date of the authorization."
    },
    "Spacecraft": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SpacecraftsProperties",
          "description": "Spacecraft Properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Customer creates a spacecraft resource to schedule a contact."
    },
    "ResourceReference": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Resource Reference."
    },
    "EndPoint": {
      "type": "object",
      "required": [
        "ipAddress",
        "endPointName",
        "port",
        "protocol"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP Address (IPv4)."
        },
        "endPointName": {
          "type": "string",
          "description": "Name of an end point."
        },
        "port": {
          "type": "string",
          "description": "TCP port to listen on to receive data."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol either UDP or TCP.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true
          }
        }
      },
      "description": "Customer end point to store and retrieve data during a contact with the spacecraft."
    },
    "ContactsProperties": {
      "type": "object",
      "required": [
        "reservationStartTime",
        "reservationEndTime",
        "groundStationName",
        "contactProfile"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "scheduled",
            "cancelled",
            "succeeded",
            "failed",
            "providerCancelled"
          ],
          "x-ms-enum": {
            "name": "ContactsStatus",
            "modelAsString": true
          },
          "description": "Status of a contact."
        },
        "reservationStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reservation start time of a contact (ISO 8601 UTC standard).",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "reservationEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reservation end time of a contact (ISO 8601 UTC standard).",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "rxStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Receive start time of a contact (ISO 8601 UTC standard)."
        },
        "rxEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Receive end time of a contact (ISO 8601 UTC standard)."
        },
        "txStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Transmit start time of a contact (ISO 8601 UTC standard)."
        },
        "txEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Transmit end time of a contact (ISO 8601 UTC standard)."
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Any error message while scheduling a contact."
        },
        "maximumElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Maximum elevation of the antenna during the contact in decimal degrees."
        },
        "startAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the start of the contact in decimal degrees."
        },
        "endAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the end of the contact in decimal degrees."
        },
        "groundStationName": {
          "type": "string",
          "description": "Azure Ground Station name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "startElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact start."
        },
        "endElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact end."
        },
        "antennaConfiguration": {
          "type": "object",
          "readOnly": true,
          "description": "The configuration associated with the allocated antenna.",
          "properties": {
            "destinationIp": {
              "type": "string",
              "description": "The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to."
            },
            "sourceIps": {
              "type": "array",
              "description": "List of Source IP",
              "items": {
                "type": "string",
                "description": "The source IP a packet can have when being sent. You need to make sure you accept data from all these IPs in your application."
              }
            }
          }
        },
        "contactProfile": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the contact profile resource."
        }
      },
      "description": "Properties of the Contact Resource."
    },
    "ContactProfilesProperties": {
      "type": "object",
      "required": [
        "links",
        "networkConfiguration"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "minimumViableContactDuration": {
          "type": "string",
          "description": "Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station."
        },
        "minimumElevationDegrees": {
          "type": "number",
          "description": "Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station."
        },
        "autoTrackingConfiguration": {
          "type": "string",
          "enum": [
            "disabled",
            "xBand",
            "sBand"
          ],
          "x-ms-enum": {
            "name": "AutoTrackingConfiguration",
            "modelAsString": false
          },
          "description": "Auto-tracking configuration."
        },
        "eventHubUri": {
          "type": "string",
          "description": "ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub."
        },
        "networkConfiguration": {
          "type": "object",
          "required": [
            "subnetId"
          ],
          "description": "Network configuration of customer virtual network.",
          "properties": {
            "subnetId": {
              "type": "string",
              "description": "ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it."
            }
          }
        },
        "thirdPartyConfigurations": {
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/ContactProfileThirdPartyConfiguration"
          },
          "description": "Third-party mission configuration of the Contact Profile. Describes RF links, modem processing, and IP endpoints."
        },
        "links": {
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/ContactProfileLink"
          },
          "description": "Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints."
        }
      },
      "description": "List of Contact Profile Resource Properties."
    },
    "ContactProfileListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactProfile"
          },
          "description": "A list of contact profile resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListContactProfiles API service call."
    },
    "ContactProfileLinkChannel": {
      "type": "object",
      "required": [
        "name",
        "centerFrequencyMHz",
        "bandwidthMHz",
        "endPoint"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Channel name."
        },
        "centerFrequencyMHz": {
          "type": "number",
          "description": "Center Frequency in MHz."
        },
        "bandwidthMHz": {
          "type": "number",
          "description": "Bandwidth in MHz."
        },
        "endPoint": {
          "$ref": "#/definitions/EndPoint"
        },
        "modulationConfiguration": {
          "type": "string",
          "description": "Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream."
        },
        "demodulationConfiguration": {
          "type": "string",
          "description": "Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream."
        },
        "encodingConfiguration": {
          "type": "string",
          "description": "Currently unused."
        },
        "decodingConfiguration": {
          "type": "string",
          "description": "Currently unused."
        }
      },
      "description": "Contact Profile Link Channel."
    },
    "ContactProfileLink": {
      "type": "object",
      "required": [
        "name",
        "polarization",
        "direction",
        "channels"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Link name."
        },
        "polarization": {
          "type": "string",
          "description": "Polarization. e.g. (RHCP, LHCP).",
          "enum": [
            "RHCP",
            "LHCP",
            "linearVertical",
            "linearHorizontal"
          ],
          "x-ms-enum": {
            "name": "polarization",
            "modelAsString": true
          }
        },
        "direction": {
          "type": "string",
          "description": "Direction (Uplink or Downlink).",
          "enum": [
            "Uplink",
            "Downlink"
          ],
          "x-ms-enum": {
            "name": "direction",
            "modelAsString": true
          }
        },
        "gainOverTemperature": {
          "type": "number",
          "description": "Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet."
        },
        "eirpdBW": {
          "type": "number",
          "description": "Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet."
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactProfileLinkChannel"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Contact Profile Link Channel."
        }
      },
      "description": "Contact Profile Link."
    },
    "ContactProfile": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContactProfilesProperties"
            }
          ],
          "description": "Properties of the contact profile resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact."
    },
    "ContactParameters": {
      "type": "object",
      "description": "Parameters that define the contact resource.",
      "required": [
        "contactProfile",
        "groundStationName",
        "startTime",
        "endTime"
      ],
      "properties": {
        "contactProfile": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the contact profile resource."
        },
        "groundStationName": {
          "type": "string",
          "description": "Name of Azure Ground Station."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a contact (ISO 8601 UTC standard)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a contact (ISO 8601 UTC standard)."
        }
      }
    },
    "ContactListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "description": "A list of contact resources in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListContacts API service call."
    },
    "ContactInstanceProperties": {
      "type": "object",
      "properties": {
        "maximumElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Maximum elevation of the antenna during the contact in decimal degrees."
        },
        "txStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time at which antenna transmit will be enabled (ISO 8601 UTC standard)."
        },
        "txEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time at which antenna transmit will be disabled (ISO 8601 UTC standard)."
        },
        "rxStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Earliest time to receive a signal (ISO 8601 UTC standard)."
        },
        "rxEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time to lost receiving a signal (ISO 8601 UTC standard)."
        },
        "startAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the start of the contact in decimal degrees."
        },
        "endAzimuthDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Azimuth of the antenna at the end of the contact in decimal degrees."
        },
        "startElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact start."
        },
        "endElevationDegrees": {
          "type": "number",
          "readOnly": true,
          "description": "Spacecraft elevation above the horizon at contact end."
        }
      },
      "description": "Contact Instance Properties."
    },
    "Contact": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContactsProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Customer creates a contact resource for a spacecraft resource."
    },
    "AvailableContactsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableContacts"
          },
          "x-ms-identifiers": [],
          "description": "A list of available contacts."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListAvailableContacts API service call."
    },
    "AvailableContacts": {
      "type": "object",
      "properties": {
        "spacecraft": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "The reference to the spacecraft resource."
        },
        "groundStationName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of Azure Ground Station."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ContactInstanceProperties"
            }
          ],
          "description": "Properties of Contact resource."
        }
      },
      "description": "Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact."
    },
    "AvailableGroundStationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableGroundStation"
          },
          "description": "A list of ground station resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the AvailableGroundStations API service call."
    },
    "AvailableGroundStation": {
      "type": "object",
      "x-ms-client-flatten": true,
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of groundStation."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the ground station."
        },
        "location": {
          "type": "string",
          "description": "Azure region."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/AvailableGroundStationProperties"
            }
          ],
          "description": "The properties bag for this resource."
        }
      },
      "description": "Ground Stations available to schedule Contacts."
    },
    "AvailableGroundStationProperties": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "description": "City of ground station."
        },
        "providerName": {
          "type": "string",
          "description": "Ground station provider name."
        },
        "longitudeDegrees": {
          "type": "number",
          "description": "Longitude of the ground station in decimal degrees."
        },
        "latitudeDegrees": {
          "type": "number",
          "description": "Latitude of the ground station in decimal degrees."
        },
        "altitudeMeters": {
          "type": "number",
          "description": "Altitude of the ground station."
        },
        "releaseMode": {
          "type": "string",
          "enum": [
            "Preview",
            "GA"
          ],
          "x-ms-enum": {
            "name": "releaseMode",
            "modelAsString": true
          },
          "description": "Release Status of a ground station."
        }
      },
      "description": "Properties object for Available groundstation."
    },
    "Capability": {
      "type": "string",
      "description": "Capability of the Ground Station.",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "Capability",
        "modelAsString": true
      }
    },
    "ResourceIdListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Azure Resource ID."
              }
            }
          },
          "description": "A list of Azure Resource IDs."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists the resource IDs of resources associated with another resource."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "creating",
        "succeeded",
        "failed",
        "canceled",
        "updating",
        "deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "description": "The current state of the resource's creation, deletion, or modification.",
      "readOnly": true
    },
    "AuthorizedGroundstation": {
      "type": "object",
      "required": [
        "groundStation",
        "expirationDate"
      ],
      "readOnly": true,
      "properties": {
        "groundStation": {
          "type": "string",
          "description": "Groundstation name."
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Date of authorization expiration."
        }
      },
      "description": "Authorized groundstation."
    },
    "OperationResult": {
      "description": "Operation Result Entity.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "ID of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Name of the resource.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "startTime": {
          "description": "The operation start time (ISO 8601 UTC standard).",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The operation end time (ISO 8601 UTC standard).",
          "readOnly": true,
          "type": "string",
          "format": "date-time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100,
          "description": "Percentage completed.",
          "readOnly": true
        },
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {}
          },
          "x-ms-identifiers": [],
          "description": "A list of results when the operation returns multiple results."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationResultProperties"
        },
        "error": {
          "$ref": "#/definitions/OperationResultErrorProperties"
        }
      }
    },
    "Status": {
      "readOnly": true,
      "description": "The status of operation.",
      "type": "string",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Running"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "OperationResultProperties": {
      "type": "object",
      "properties": {},
      "description": "Operation result properties."
    },
    "OperationResultErrorProperties": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        }
      },
      "description": "Operation result error properties."
    },
    "ContactProfileThirdPartyConfiguration": {
      "type": "object",
      "required": [
        "providerName",
        "missionConfiguration"
      ],
      "description": "Contact Profile third-party partner configuration.",
      "properties": {
        "providerName": {
          "type": "string",
          "description": "Name of the third-party provider."
        },
        "missionConfiguration": {
          "type": "string",
          "description": "Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network."
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}