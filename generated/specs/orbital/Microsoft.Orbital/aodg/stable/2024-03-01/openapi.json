{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Orbital.aodg",
    "version": "2024-03-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.Orbital/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Orbital Rest API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/groundStations": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "description": "Return list of ground stations.",
        "operationId": "GroundStations_ListBySubscription",
        "x-ms-examples": {
          "List of Ground Stations by Subscription": {
            "$ref": "./examples/GroundStationsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Ground Station resources.",
            "schema": {
              "$ref": "#/definitions/GroundStationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/groundStations": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "description": "Return list of ground stations.",
        "operationId": "GroundStations_List",
        "x-ms-examples": {
          "List of Ground Stations": {
            "$ref": "./examples/GroundStationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Ground Station resources.",
            "schema": {
              "$ref": "#/definitions/GroundStationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/groundStations/{groundStationName}": {
      "get": {
        "tags": [
          "Ground Station"
        ],
        "operationId": "GroundStations_Get",
        "description": "Gets the specified ground station in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting ground station resource.",
            "schema": {
              "$ref": "#/definitions/GroundStation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get GroundStation": {
            "$ref": "./examples/GroundStationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Ground Station"
        ],
        "description": "Creates or updates a ground station resource.",
        "operationId": "GroundStations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/GroundStation"
            },
            "description": "The parameters to provide for the created ground station."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ground station resource.",
            "schema": {
              "$ref": "#/definitions/GroundStation"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ground station resource.",
            "schema": {
              "$ref": "#/definitions/GroundStation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a ground station": {
            "$ref": "./examples/GroundStationCreate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Ground Station"
        ],
        "operationId": "GroundStations_UpdateTags",
        "x-ms-examples": {
          "Update Ground Station tags": {
            "$ref": "./examples/GroundStationUpdateTags.json"
          }
        },
        "description": "Updates the specified ground station tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update ground station tags."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Ground Station resource.",
            "schema": {
              "$ref": "#/definitions/GroundStation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ground Station"
        ],
        "operationId": "GroundStations_Delete",
        "description": "Deletes a specified ground station resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Ground Station": {
            "$ref": "./examples/GroundStationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/edgeSites/{edgeSiteName}": {
      "get": {
        "tags": [
          "Edge Site"
        ],
        "operationId": "EdgeSites_Get",
        "description": "Gets the specified edge site in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/edgeSiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting EdgeSite resource.",
            "schema": {
              "$ref": "#/definitions/EdgeSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Edge Site": {
            "$ref": "./examples/EdgeSiteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Edge Site"
        ],
        "description": "Creates or updates an edge site.",
        "operationId": "EdgeSites_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/edgeSiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/EdgeSite"
            },
            "description": "The parameters to provide for the created Edge Site."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting EdgeSite resource.",
            "schema": {
              "$ref": "#/definitions/EdgeSite"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting EdgeSite resource.",
            "schema": {
              "$ref": "#/definitions/EdgeSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Edge Site": {
            "$ref": "./examples/EdgeSiteCreate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Edge Site"
        ],
        "operationId": "EdgeSites_Delete",
        "description": "Deletes a specified edge site resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/edgeSiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Edge Site": {
            "$ref": "./examples/EdgeSiteDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Edge Site"
        ],
        "operationId": "EdgeSites_UpdateTags",
        "x-ms-examples": {
          "Update Edge Site tags": {
            "$ref": "./examples/EdgeSiteUpdateTag.json"
          }
        },
        "description": "Updates the specified edge site's tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update the edge site's tags."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/edgeSiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Edge Site resource.",
            "schema": {
              "$ref": "#/definitions/EdgeSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/edgeSites": {
      "get": {
        "tags": [
          "Edge Site"
        ],
        "description": "Returns a list of edge sites for a subscription.",
        "operationId": "EdgeSites_ListBySubscription",
        "x-ms-examples": {
          "List of Edge Sites by Subscription": {
            "$ref": "./examples/EdgeSitesBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of edge site resources.",
            "schema": {
              "$ref": "#/definitions/EdgeSiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/edgeSites": {
      "get": {
        "tags": [
          "Edge Site"
        ],
        "description": "Returns a list of edge sites for a resource group.",
        "operationId": "EdgeSites_List",
        "x-ms-examples": {
          "List of Edge Sites by Resource Group": {
            "$ref": "./examples/EdgeSitesByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of edge site resources.",
            "schema": {
              "$ref": "#/definitions/EdgeSiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/l2Connections/{l2ConnectionName}": {
      "get": {
        "tags": [
          "L2 Connection"
        ],
        "operationId": "L2Connections_Get",
        "description": "Gets the specified L2 connection in a specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/l2ConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting L2Connection resource.",
            "schema": {
              "$ref": "#/definitions/L2Connection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get L2 Connection": {
            "$ref": "./examples/L2ConnectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "L2 Connection"
        ],
        "description": "Creates or updates an L2 Connection.",
        "operationId": "L2Connections_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/l2ConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/L2Connection"
            },
            "description": "The parameters to provide for the created L2 Connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting L2Connection resource.",
            "schema": {
              "$ref": "#/definitions/L2Connection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting L2Connection resource.",
            "schema": {
              "$ref": "#/definitions/L2Connection"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL for checking the ongoing status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create L2 Connection": {
            "$ref": "./examples/L2ConnectionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "L2 Connection"
        ],
        "operationId": "L2Connections_Delete",
        "description": "Deletes a specified L2 Connection resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/l2ConnectionNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete L2 Connection": {
            "$ref": "./examples/L2ConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "L2 Connection"
        ],
        "operationId": "L2Connections_UpdateTags",
        "x-ms-examples": {
          "Update L2 Connection tags": {
            "$ref": "./examples/L2ConnectionUpdateTag.json"
          }
        },
        "description": "Updates the specified L2 Connection's tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update the L2 Connection's tags."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/l2ConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting L2 Connection resource.",
            "schema": {
              "$ref": "#/definitions/L2Connection"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/l2Connections": {
      "get": {
        "tags": [
          "L2 Connection"
        ],
        "description": "Returns a list of L2 Connections attached to an orbital gateway.",
        "operationId": "L2Connections_List",
        "x-ms-examples": {
          "List of L2 Connections by Resource Group": {
            "$ref": "./examples/L2ConnectionsByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of L2 Connection resources.",
            "schema": {
              "$ref": "#/definitions/L2ConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/l2Connections": {
      "get": {
        "tags": [
          "L2 Connection"
        ],
        "description": "Returns a list of L2 Connections attached to a subscription.",
        "operationId": "L2Connections_ListBySubscription",
        "x-ms-examples": {
          "List of L2 Connections by Subscription": {
            "$ref": "./examples/L2ConnectionsBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of L2 Connection resources.",
            "schema": {
              "$ref": "#/definitions/L2ConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/edgeSites/{edgeSiteName}/listL2Connections": {
      "post": {
        "tags": [
          "L2 Connection"
        ],
        "description": "Returns a list of L2 Connections attached to an edge site.",
        "operationId": "EdgeSites_ListL2Connections",
        "x-ms-examples": {
          "List of L2 Connections by Edge site": {
            "$ref": "./examples/L2ConnectionsByEdgeSiteNameList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/edgeSiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of L2 Connection resources.",
            "schema": {
              "$ref": "#/definitions/ResourceIdListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/groundStations/{groundStationName}/listL2Connections": {
      "post": {
        "tags": [
          "L2 Connection"
        ],
        "description": "Returns a list of L2 Connections attached to an ground station.",
        "operationId": "GroundStations_ListL2Connections",
        "x-ms-examples": {
          "List of L2 Connections by Ground Station": {
            "$ref": "./examples/L2ConnectionsByGroundStationNameList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/groundStationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of L2 Connection resources.",
            "schema": {
              "$ref": "#/definitions/ResourceIdListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/globalCommunicationsSites": {
      "get": {
        "tags": [
          "Global Communications Site"
        ],
        "description": "Returns a list of the global communications sites that a subscription is authorized to use.",
        "operationId": "GlobalCommunicationsSites_ListBySubscription",
        "x-ms-examples": {
          "List of Global Communications Sites": {
            "$ref": "./examples/GlobalCommunicationsSitesBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of global communications sites.",
            "schema": {
              "$ref": "#/definitions/GlobalCommunicationsSiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "groundStationNameParameter": {
      "name": "groundStationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Ground Station name.",
      "pattern": "^[A-Za-z][A-Za-z0-9-_]+$",
      "minLength": 2,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "capabilityParameter": {
      "name": "capability",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "capabilityParameter",
        "modelAsString": true
      },
      "description": "Ground Station Capability.",
      "x-ms-parameter-location": "method"
    },
    "edgeSiteNameParameter": {
      "name": "edgeSiteName",
      "in": "path",
      "description": "Edge site name.",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z][A-Za-z0-9-_]+$",
      "minLength": 2,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "l2ConnectionNameParameter": {
      "name": "l2ConnectionName",
      "in": "path",
      "description": "L2 Connection name.",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z][A-Za-z0-9-_]+$",
      "minLength": 2,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "skipTokenParameter": {
      "name": "$skiptoken",
      "description": "An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "GroundStationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroundStation"
          },
          "description": "A list of ground station resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for the ListGroundStations API service call."
    },
    "GroundStation": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/GroundStationsProperties"
            }
          ],
          "description": "Properties of the Ground Station."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Ground Station contains one or more antennas."
    },
    "Capability": {
      "type": "string",
      "description": "Capability of the Ground Station.",
      "enum": [
        "EarthObservation",
        "Communication"
      ],
      "x-ms-enum": {
        "name": "Capability",
        "modelAsString": true
      }
    },
    "EdgeSitesProperties": {
      "type": "object",
      "required": [
        "globalCommunicationsSite"
      ],
      "properties": {
        "globalCommunicationsSite": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "A reference to global communications site."
        }
      },
      "description": "Properties object for an edge site."
    },
    "PartnerRouter": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The unique name of the partnerRouter."
        }
      },
      "description": "One of the partner routers within a global communications site."
    },
    "LocationData": {
      "type": "object",
      "required": [
        "city",
        "district",
        "country"
      ],
      "properties": {
        "city": {
          "type": "string",
          "description": "The city of the location (e.g., Miami)."
        },
        "district": {
          "type": "string",
          "description": "For example, the state (e.g., Florida), province (e.g., Ontario), or region (e.g., Tuscany) of the location."
        },
        "country": {
          "type": "string",
          "description": "The nation (e.g., United States of America) of the location."
        },
        "closestAzureRegion": {
          "type": "string",
          "description": "The name of the closest Azure region, (e.g., westus2)."
        },
        "extra": {
          "type": "string",
          "x-nullable": true,
          "description": "Any extra information needed to uniquely identify the location (e.g., zip code)."
        }
      },
      "description": "Describes a location outside of Azure."
    },
    "GlobalCommunicationsSiteType": {
      "type": "string",
      "enum": [
        "Edge",
        "GroundStation"
      ],
      "x-ms-enum": {
        "name": "GlobalCommunicationsSiteType",
        "modelAsString": true
      },
      "description": "The type of the global communications site. groundStations can only use sites of type GroundStation, and edgeSites can only use sites of type Edge."
    },
    "GlobalCommunicationsSitesProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "allOf": [
            {
              "$ref": "#/definitions/LocationData"
            }
          ],
          "description": "Describes the location of the global communications site."
        },
        "globalCommunicationsSiteType": {
          "type": "string",
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsSiteType"
            }
          ],
          "description": "The type of the global communications site. EdgeSite or GroundStation."
        },
        "partnerRouters": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PartnerRouter"
          },
          "x-ms-identifiers": [],
          "description": "Partner routers connected to this site."
        },
        "partnerSiteBandwidth": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "readOnly": true,
          "description": "The bandwidth per partner router cross-connection at this global communications site, measured in bits per second."
        }
      },
      "description": "Properties object for a global communications site."
    },
    "GlobalCommunicationsSite": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/GlobalCommunicationsSitesProperties"
            }
          ],
          "description": "The properties bag for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "A site where the Orbital network is connected to a partner network."
    },
    "GlobalCommunicationsSiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalCommunicationsSite"
          },
          "description": "A list of global communications sites."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists Global Communications Sites."
    },
    "EdgeSite": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/EdgeSitesProperties"
            }
          ],
          "description": "The properties bag for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "A customer's reference to a global communications site site."
    },
    "EdgeSiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EdgeSite"
          },
          "description": "A list of edge site resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists Edge Sites."
    },
    "L2ConnectionsProperties": {
      "type": "object",
      "required": [
        "edgeSite",
        "edgeSitePartnerRouter",
        "groundStation",
        "groundStationPartnerRouter",
        "vlanId"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ProvisioningState"
            }
          ],
          "description": "The current state of the resource's creation, deletion, or modification."
        },
        "circuitId": {
          "type": "string",
          "readOnly": true,
          "description": "Globally-unique identifier for this connection that is to be used as a circuit ID."
        },
        "edgeSite": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "A reference to an Microsoft.Orbital/edgeSites resource to route traffic for."
        },
        "edgeSitePartnerRouter": {
          "type": "object",
          "x-ms-client-flatten": true,
          "required": [
            "name"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the partner router that cross-connects with the Orbital Edge Router at the edge site."
            }
          },
          "description": "The name of the partner router that cross-connects with the Orbital Edge Router at the edge site."
        },
        "groundStation": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "A reference to an Microsoft.Orbital/groundStations resource to route traffic for."
        },
        "groundStationPartnerRouter": {
          "type": "object",
          "x-ms-client-flatten": true,
          "required": [
            "name"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the partner router that cross-connects with the Orbital Edge Router at the ground station site."
            }
          },
          "description": "The name of the partner router to establish a connection to within the ground station."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 4094,
          "description": "The VLAN ID for the L2 connection."
        }
      },
      "description": "Properties object for an L2 Connection."
    },
    "L2Connection": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/L2ConnectionsProperties"
            }
          ],
          "description": "The properties bag for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Connects an edge site to an orbital gateway and describes what layer 2 traffic to forward between them."
    },
    "L2ConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/L2Connection"
          },
          "description": "A list of L2 Connection resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists L2 Connections."
    },
    "ResourceIdListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Azure Resource ID."
              }
            }
          },
          "description": "A list of Azure Resource IDs."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "Response for an API service call that lists the resource IDs of resources associated with another resource."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Creating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "description": "The current state of the resource's creation, deletion, or modification.",
      "readOnly": true
    },
    "GroundStationsProperties": {
      "type": "object",
      "required": [
        "capabilities",
        "globalCommunicationsSite"
      ],
      "properties": {
        "city": {
          "type": "string",
          "description": "City of ground station."
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "description": "Ground station capabilities."
        },
        "providerName": {
          "type": "string",
          "description": "Ground station provider name."
        },
        "longitudeDegrees": {
          "type": "number",
          "description": "Longitude of the ground station in decimal degrees."
        },
        "latitudeDegrees": {
          "type": "number",
          "description": "Latitude of the ground station in decimal degrees."
        },
        "altitudeMeters": {
          "type": "number",
          "description": "Altitude of the ground station."
        },
        "releaseMode": {
          "type": "string",
          "enum": [
            "Preview",
            "GA"
          ],
          "x-ms-enum": {
            "name": "releaseMode",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "Release Status of a ground station."
        },
        "globalCommunicationsSite": {
          "allOf": [
            {
              "$ref": "#/definitions/ResourceReference"
            }
          ],
          "description": "A reference to global communications site."
        }
      },
      "description": "List of ground station resource properties."
    },
    "ProvisionedBandwidth": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "mbps": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "description": "The approximate number of megabits per second that are provisioned for the partner on this global communications site."
        }
      },
      "description": "The approximate bandwidth provisioned for a partner on a global communications site."
    },
    "ResourceReference": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Resource Reference."
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}