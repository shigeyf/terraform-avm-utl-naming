{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.NotificationHubs",
    "version": "2023-09-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Checks the availability of the given notificationHub in a namespace.",
        "operationId": "NotificationHubs_CheckNotificationHubAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CheckNotificationHubAvailability": {
            "$ref": "./examples/NotificationHubs/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the notification hub.",
        "operationId": "NotificationHubs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Get": {
            "$ref": "./examples/NotificationHubs/Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Hubs"
        ],
        "summary": "Creates/Update a NotificationHub in a namespace.",
        "operationId": "NotificationHubs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdate": {
            "$ref": "./examples/NotificationHubs/CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Hubs"
        ],
        "summary": "Patch a NotificationHub in a namespace.",
        "operationId": "NotificationHubs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationHubPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Update": {
            "$ref": "./examples/NotificationHubs/Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Hubs"
        ],
        "summary": "Deletes a notification hub associated with a namespace.",
        "operationId": "NotificationHubs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Delete": {
            "$ref": "./examples/NotificationHubs/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Lists the notification hubs associated with a namespace.",
        "operationId": "NotificationHubs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Page size.",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NotificationHubs_List": {
            "$ref": "./examples/NotificationHubs/List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Test send a push notification.",
        "operationId": "NotificationHubs_DebugSend",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DebugSendResponse"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DebugSend": {
            "$ref": "./examples/NotificationHubs/DebugSend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Hubs"
        ],
        "summary": "Creates/Updates an authorization rule for a NotificationHub",
        "operationId": "NotificationHubs_CreateOrUpdateAuthorizationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Hubs"
        ],
        "summary": "Deletes a notificationHub authorization rule",
        "operationId": "NotificationHubs_DeleteAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DeleteAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets an authorization rule for a NotificationHub by name.",
        "operationId": "NotificationHubs_GetAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the authorization rules for a NotificationHub.",
        "operationId": "NotificationHubs_ListAuthorizationRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NotificationHubs_ListAuthorizationRules": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the Primary and Secondary ConnectionStrings to the NotificationHub",
        "operationId": "NotificationHubs_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_ListKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule",
        "operationId": "NotificationHubs_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_RegenerateKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Lists the PNS Credentials associated with a notification hub.",
        "operationId": "NotificationHubs_GetPnsCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetPnsCredentials": {
            "$ref": "./examples/NotificationHubs/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "operationId": "Namespaces_CheckAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CheckAvailability": {
            "$ref": "./examples/Namespaces/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Returns the given namespace.",
        "operationId": "Namespaces_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Get": {
            "$ref": "./examples/Namespaces/Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Creates / Updates a Notification Hub namespace. This operation is idempotent.",
        "operationId": "Namespaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdate": {
            "$ref": "./examples/Namespaces/CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Patches the existing namespace.",
        "operationId": "Namespaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespacePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Update": {
            "$ref": "./examples/Namespaces/Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.",
        "operationId": "Namespaces_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Delete": {
            "$ref": "./examples/Namespaces/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Lists all the available namespaces within the subscription.",
        "operationId": "Namespaces_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for subsequent requests.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_ListAll": {
            "$ref": "./examples/Namespaces/ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Lists the available namespaces within a resource group.",
        "operationId": "Namespaces_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for subsequent requests.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_List": {
            "$ref": "./examples/Namespaces/ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Creates an authorization rule for a namespace",
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Deletes a namespace authorization rule",
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_DeleteAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Gets an authorization rule for a namespace by name.",
        "operationId": "Namespaces_GetAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_GetAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Gets the authorization rules for a namespace.",
        "operationId": "Namespaces_ListAuthorizationRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_ListAuthorizationRules": {
            "$ref": "./examples/Namespaces/AuthorizationRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Gets the Primary and Secondary ConnectionStrings to the namespace.",
        "operationId": "Namespaces_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_ListKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule",
        "operationId": "Namespaces_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_RegenerateKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/pnsCredentials": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Lists the PNS credentials associated with a namespace.",
        "operationId": "Namespaces_GetPnsCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_GetPnsCredentials": {
            "$ref": "./examples/Namespaces/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/providers/Microsoft.NotificationHubs/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all available Notification Hubs operations.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/NHOperationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Approves or rejects Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "Description of the Private Endpoint Connection resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Update": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Deletes the Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns a Private Endpoint Connection with a given name. \r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResourceListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": null
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_List": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources/{subResourceName}": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns Group Id response. \r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.",
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "operationId": "PrivateEndpointConnections_GetGroupId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "path",
            "name": "subResourceName",
            "description": "Name of the Private Link sub-resource. The only supported sub-resource is \"namespace\"",
            "required": true,
            "type": "string",
            "pattern": "^namespace$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_GetGroupId": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns all Group Ids supported by the Notification Hubs RP.\r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.",
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "operationId": "PrivateEndpointConnections_ListGroupIds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error code with reason.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": null
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListGroupIds": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceList.json"
          }
        }
      }
    }
  },
  "parameters": {
    "NamespaceName": {
      "in": "path",
      "name": "namespaceName",
      "description": "Namespace name",
      "required": true,
      "maxLength": 50,
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "HubName": {
      "in": "path",
      "name": "notificationHubName",
      "description": "Notification Hub name",
      "required": true,
      "maxLength": 265,
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AuthorizationRuleName": {
      "in": "path",
      "name": "authorizationRuleName",
      "description": "Authorization Rule Name",
      "required": true,
      "maxLength": 256,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9!()*-._]+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "in": "path",
      "name": "privateEndpointConnectionName",
      "description": "Private Endpoint Connection Name",
      "required": true,
      "maxLength": 87,
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AccessRights": {
      "description": "Defines values for AccessRights.",
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AccessRights",
        "modelAsString": true
      }
    },
    "AdmCredential": {
      "description": "Description of a NotificationHub AdmCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdmCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "AdmCredentialProperties": {
      "description": "Description of a NotificationHub AdmCredential.",
      "required": [
        "authTokenUrl",
        "clientId",
        "clientSecret"
      ],
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Gets or sets the client identifier.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "clientSecret": {
          "description": "Gets or sets the credential secret access key.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "authTokenUrl": {
          "description": "Gets or sets the URL of the authorization token.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ApnsCredential": {
      "description": "Description of a NotificationHub ApnsCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "ApnsCredentialProperties": {
      "description": "Description of a NotificationHub ApnsCredential.",
      "required": [
        "endpoint"
      ],
      "type": "object",
      "properties": {
        "apnsCertificate": {
          "description": "Gets or sets the APNS certificate.",
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "description": "Gets or sets the certificate key.",
          "type": "string",
          "x-ms-secret": true
        },
        "endpoint": {
          "description": "Gets or sets the endpoint of this credential.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "thumbprint": {
          "description": "Gets or sets the APNS certificate Thumbprint",
          "type": "string",
          "x-ms-secret": true
        },
        "keyId": {
          "description": "Gets or sets a 10-character key identifier (kid) key, obtained from\r\nyour developer account",
          "type": "string",
          "x-ms-secret": true
        },
        "appName": {
          "description": "Gets or sets the name of the application",
          "type": "string",
          "x-ms-secret": true
        },
        "appId": {
          "description": "Gets or sets the issuer (iss) registered claim key, whose value is\r\nyour 10-character Team ID, obtained from your developer account",
          "type": "string",
          "x-ms-secret": true
        },
        "token": {
          "description": "Gets or sets provider Authentication Token, obtained through your\r\ndeveloper account",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "Availability": {
      "description": "Represents metric availability (part of RP operation descriptions).",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain of the availability.",
          "type": "string",
          "readOnly": true
        },
        "blobDuration": {
          "description": "Duration of the availability blob.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BaiduCredential": {
      "description": "Description of a NotificationHub BaiduCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BaiduCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "BaiduCredentialProperties": {
      "description": "Description of a NotificationHub BaiduCredential.",
      "required": [
        "baiduApiKey",
        "baiduEndPoint",
        "baiduSecretKey"
      ],
      "type": "object",
      "properties": {
        "baiduApiKey": {
          "description": "Gets or sets baidu Api Key.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "baiduEndPoint": {
          "description": "Gets or sets baidu Endpoint.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "baiduSecretKey": {
          "description": "Gets or sets baidu Secret Key",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "BrowserCredential": {
      "description": "Description of a NotificationHub BrowserCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrowserCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "BrowserCredentialProperties": {
      "description": "Description of a NotificationHub BrowserCredential.",
      "required": [
        "subject",
        "vapidPrivateKey",
        "vapidPublicKey"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "description": "Gets or sets web push subject.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "vapidPrivateKey": {
          "description": "Gets or sets VAPID private key.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "vapidPublicKey": {
          "description": "Gets or sets VAPID public key.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "CheckAvailabilityParameters": {
      "description": "Parameters supplied to the Check Name Availability for Namespace and\r\nNotificationHubs.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets resource Id",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets resource name",
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "description": "Gets resource type",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Gets or sets resource location",
          "type": "string"
        },
        "tags": {
          "description": "Gets or sets resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isAvailiable": {
          "description": "Not used and deprecated since API version 2023-09-01",
          "type": "boolean"
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        }
      }
    },
    "CheckAvailabilityResult": {
      "description": "Description of a CheckAvailability resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "isAvailiable": {
          "description": "Gets or sets true if the name is available and can be used to\r\ncreate new Namespace/NotificationHub. Otherwise false.",
          "type": "boolean"
        },
        "location": {
          "description": "Deprecated - only for compatibility.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "description": "Deprecated - only for compatibility.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        }
      }
    },
    "ConnectionDetails": {
      "description": "Part of Private Endpoint description that stores information about a connection between Private Endpoint and Notification Hubs namespace.\r\nThis is internal class, not visible to customers, and we use it only to discover the link identifier.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique ID of the connection. This is not the ARM id, but rather an internal identifier set by the Networking RP. Notification Hubs code\r\ndoes not analyze it.",
          "type": "string",
          "readOnly": true
        },
        "privateIpAddress": {
          "description": "IP address of the Private Endpoint. This is not used by Notification Hubs.",
          "type": "string",
          "readOnly": true
        },
        "linkIdentifier": {
          "description": "Link identifier. This is a string representation of an integer that is also encoded in every IPv6 frame received by Front Door,\r\nand we use it to create implicit authorization rule that allows connection from the associated Private Endpoint.",
          "type": "string",
          "readOnly": true
        },
        "groupId": {
          "description": "Group name. Always \"namespace\" for Notification Hubs.",
          "type": "string",
          "readOnly": true
        },
        "memberName": {
          "description": "Member name. Always \"namespace\" for Notification Hubs.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DebugSendResponse": {
      "description": "Description of a NotificationHub Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DebugSendResult"
        },
        "location": {
          "description": "Deprecated - only for compatibility.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "description": "Deprecated - only for compatibility.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DebugSendResult": {
      "description": "Result of DebugSend operations.",
      "type": "object",
      "properties": {
        "success": {
          "format": "int64",
          "description": "Gets or sets successful send",
          "type": "integer",
          "readOnly": true
        },
        "failure": {
          "format": "int64",
          "description": "Gets or sets send failure",
          "type": "integer",
          "readOnly": true
        },
        "results": {
          "description": "Gets or sets actual failure description",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistrationResult"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "GcmCredential": {
      "description": "Description of a NotificationHub GcmCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GcmCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "GcmCredentialProperties": {
      "description": "Description of a NotificationHub GcmCredential.",
      "required": [
        "googleApiKey"
      ],
      "type": "object",
      "properties": {
        "gcmEndpoint": {
          "description": "Gets or sets the GCM endpoint.",
          "type": "string",
          "x-ms-secret": true
        },
        "googleApiKey": {
          "description": "Gets or sets the Google API key.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "GroupConnectivityInformation": {
      "description": "Represents a connectivity information to Notification Hubs namespace. This is part of PrivateLinkService proxy that tell\r\nthe Networking RP how to connect to the Notification Hubs namespace.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "Group id. Always set to \"namespace\".",
          "type": "string",
          "readOnly": true
        },
        "memberName": {
          "description": "Member name. Always set to \"namespace\".",
          "type": "string",
          "readOnly": true
        },
        "customerVisibleFqdns": {
          "description": "List of customer-visible domain names that point to a Notification Hubs namespace.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "internalFqdn": {
          "description": "One of the domain name from the customer-visible names; this is used internally by Private Link service to make connection to Notification Hubs\r\nnamespace.",
          "type": "string",
          "readOnly": true
        },
        "redirectMapId": {
          "description": "Not used by Notification Hubs.",
          "type": "string",
          "readOnly": true
        },
        "privateLinkServiceArmRegion": {
          "description": "ARM region for Private Link Service. We use the region that contains the connected Notification Hubs namespace.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpRule": {
      "description": "A network authorization rule that filters traffic based on IP address.",
      "required": [
        "ipMask",
        "rights"
      ],
      "type": "object",
      "properties": {
        "ipMask": {
          "description": "IP mask.",
          "minLength": 1,
          "type": "string"
        },
        "rights": {
          "description": "List of access rights.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      }
    },
    "LogSpecification": {
      "description": "A single log category specification.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log category.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of the log category.",
          "type": "string",
          "readOnly": true
        },
        "blobDuration": {
          "description": "Duration of data written to a single blob.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MetricSpecification": {
      "description": "A metric specification.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Metric name / id.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "User-visible metric name.",
          "type": "string",
          "readOnly": true
        },
        "displayDescription": {
          "description": "Description of the metric.",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "description": "Metric unit.",
          "type": "string",
          "readOnly": true
        },
        "aggregationType": {
          "description": "Type of the aggregation (Average, Minimum, Maximum, Total or Count).",
          "type": "string",
          "readOnly": true
        },
        "availabilities": {
          "description": "List of availabilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "metricFilterPattern": {
          "description": "The matching regex pattern to be applied to the field pointed by the \"metricsFilterPathSelector\" flag in the ARM manifest.",
          "type": "string",
          "readOnly": true
        },
        "fillGapWithZero": {
          "description": "Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "MpnsCredential": {
      "description": "Description of a NotificationHub MpnsCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MpnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "MpnsCredentialProperties": {
      "description": "Description of a NotificationHub MpnsCredential.",
      "required": [
        "certificateKey",
        "mpnsCertificate",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "mpnsCertificate": {
          "description": "Gets or sets the MPNS certificate.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "description": "Gets or sets the certificate key for this credential.",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "thumbprint": {
          "description": "Gets or sets the MPNS certificate Thumbprint",
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "NamespaceListResult": {
      "description": "The response of the List Namespace operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets result of the List AuthorizationRules operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets or sets link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NamespacePatchParameters": {
      "description": "Patch parameter for NamespaceResource.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NamespaceProperties": {
      "description": "Represents namespace properties.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Notification Hubs namespace. This is immutable property, set automatically \r\nby the service when the namespace is created.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OperationProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/NamespaceStatus"
        },
        "enabled": {
          "description": "Gets or sets whether or not the namespace is currently enabled.",
          "type": "boolean",
          "readOnly": true
        },
        "critical": {
          "description": "Gets or sets whether or not the namespace is set as Critical.",
          "type": "boolean",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Namespace subscription id.",
          "type": "string",
          "readOnly": true
        },
        "region": {
          "description": "Region. The value is always set to the same value as Namespace.Location, so we are deprecating\r\nthis property.",
          "type": "string",
          "readOnly": true
        },
        "metricId": {
          "description": "Azure Insights Metrics id.",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "format": "date-time",
          "description": "Time when the namespace was created.",
          "type": "string",
          "readOnly": true
        },
        "updatedAt": {
          "format": "date-time",
          "description": "Time when the namespace was updated.",
          "type": "string",
          "readOnly": true
        },
        "namespaceType": {
          "$ref": "#/definitions/NamespaceType"
        },
        "replicationRegion": {
          "$ref": "#/definitions/ReplicationRegion"
        },
        "zoneRedundancy": {
          "$ref": "#/definitions/ZoneRedundancyPreference"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkAcls"
        },
        "pnsCredentials": {
          "$ref": "#/definitions/PnsCredentials"
        },
        "serviceBusEndpoint": {
          "description": "Gets or sets endpoint you can use to perform NotificationHub\r\noperations.",
          "type": "string",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "description": "Private Endpoint Connections for namespace",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        },
        "scaleUnit": {
          "description": "Gets or sets scaleUnit where the namespace gets created",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataCenter": {
          "description": "Deprecated.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        }
      }
    },
    "NamespaceResource": {
      "description": "Notification Hubs Namespace Resource.",
      "required": [
        "location",
        "sku"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties"
        }
      }
    },
    "NamespaceStatus": {
      "description": "Namespace status.",
      "enum": [
        "Created",
        "Creating",
        "Suspended",
        "Deleting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NamespaceStatus",
        "modelAsString": true
      }
    },
    "NamespaceType": {
      "description": "Defines values for NamespaceType.",
      "enum": [
        "Messaging",
        "NotificationHub"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NamespaceType",
        "modelAsString": true
      }
    },
    "NetworkAcls": {
      "description": "A collection of network authorization rules.",
      "type": "object",
      "properties": {
        "ipRules": {
          "description": "List of IP rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRule"
          },
          "x-ms-identifiers": []
        },
        "publicNetworkRule": {
          "$ref": "#/definitions/PublicInternetAuthorizationRule"
        }
      }
    },
    "NotificationHubListResult": {
      "description": "The response of the List NotificationHub operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets result of the List AuthorizationRules operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationHubResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets or sets link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NotificationHubPatchParameters": {
      "description": "Patch parameter for NamespaceResource.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationHubProperties"
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NotificationHubProperties": {
      "description": "NotificationHub properties.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the NotificationHub name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "registrationTtl": {
          "description": "Gets or sets the RegistrationTtl of the created NotificationHub",
          "type": "string"
        },
        "authorizationRules": {
          "description": "Gets or sets the AuthorizationRules of the created NotificationHub",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
          },
          "readOnly": true,
          "x-ms-secret": true,
          "x-ms-identifiers": [
            "keyName"
          ]
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential"
        },
        "admCredential": {
          "$ref": "#/definitions/AdmCredential"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential"
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential"
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential"
        },
        "dailyMaxActiveDevices": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NotificationHubResource": {
      "description": "Notification Hub Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationHubProperties"
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Gets service provider: Microsoft.NotificationHubs",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "Gets resource on which the operation is performed: Invoice, etc.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "Gets operation type: Read, write, delete, etc.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Human-friendly operation description.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationProperties": {
      "description": "Optional operation properties.",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "OperationProvisioningState": {
      "description": "Defines values for OperationProvisioningState.",
      "enum": [
        "Unknown",
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperationProvisioningState",
        "modelAsString": true
      }
    },
    "PnsCredentials": {
      "description": "Collection of Notification Hub or Notification Hub Namespace PNS credentials.",
      "type": "object",
      "properties": {
        "admCredential": {
          "$ref": "#/definitions/AdmCredential"
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential"
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential"
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential"
        }
      },
      "x-ms-secret": true
    },
    "PnsCredentialsResource": {
      "description": "Description of a NotificationHub PNS Credentials. This is a response of the POST requests that return namespace or hubs\r\nPNS credentials.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PnsCredentials"
        },
        "location": {
          "description": "Deprecated - only for compatibility.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "description": "Deprecated - only for compatibility.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PolicyKeyResource": {
      "description": "Namespace / NotificationHub Regenerate Keys request.",
      "required": [
        "policyKey"
      ],
      "type": "object",
      "properties": {
        "policyKey": {
          "$ref": "#/definitions/PolicyKeyType"
        }
      }
    },
    "PolicyKeyType": {
      "description": "Type of Shared Access Policy Key (primary or secondary).",
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PolicyKeyType",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Private Endpoint Connection properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState"
        },
        "privateEndpoint": {
          "$ref": "#/definitions/RemotePrivateEndpointConnection"
        },
        "groupIds": {
          "description": "List of group ids. For Notification Hubs, it always contains a single \"namespace\" element.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/RemotePrivateLinkServiceConnectionState"
        }
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "description": "State of Private Endpoint Connection.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Creating",
        "Updating",
        "UpdatingByProxy",
        "Deleting",
        "DeletingByProxy",
        "Deleted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionResource": {
      "description": "Represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties"
        }
      }
    },
    "PrivateEndpointConnectionResourceListResult": {
      "description": "The response of the List Private Endpoint Connections operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets result of the List AuthorizationRules operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets or sets link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkConnectionStatus": {
      "description": "State of Private Link Connection.",
      "enum": [
        "Disconnected",
        "Pending",
        "Approved",
        "Rejected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrivateLinkConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "description": "A Private Link Arm Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties"
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "The response of the List Private Link Resources operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets result of the List AuthorizationRules operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets or sets link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Represents properties of Private Link Resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "A Group Id for Private Link. For Notification Hubs, it is always set to \"namespace\".",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required members. For Notification Hubs, it's always a collection with a single \"namespace\" item.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "Required DNS zone names. For Notification Hubs, it contains two CNames for Service Bus and Notification Hubs zones.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnection": {
      "description": "A customer-visible sub-resource of Private Endpoint, which describe the connection between Private Endpoint and Notification Hubs namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Private Link Service connection.",
          "type": "string"
        },
        "groupIds": {
          "description": "List of group ids. Always contains a single element - \"namespace\" - for Notification Hub Namespace.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requestMessage": {
          "description": "Request message provided by the user that created the connection. This is usually used when the connection requires manual approval.",
          "type": "string"
        }
      }
    },
    "PublicInternetAuthorizationRule": {
      "description": "A default (public Internet) network authorization rule, which contains rights if no other network rule matches.",
      "required": [
        "rights"
      ],
      "type": "object",
      "properties": {
        "rights": {
          "description": "List of access rights.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      }
    },
    "PublicNetworkAccess": {
      "description": "Type of public network access.",
      "default": "Enabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "RegistrationResult": {
      "description": "Notification result for a single registration.",
      "type": "object",
      "properties": {
        "applicationPlatform": {
          "description": "PNS type.",
          "type": "string",
          "readOnly": true
        },
        "pnsHandle": {
          "description": "PNS handle.",
          "type": "string",
          "readOnly": true
        },
        "registrationId": {
          "description": "Registration id.",
          "type": "string",
          "readOnly": true
        },
        "outcome": {
          "description": "Notification outcome.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RemotePrivateEndpointConnection": {
      "description": "Represents a Private Endpoint that is connected to Notification Hubs namespace using Private Endpoint Connection.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ARM resource ID of the Private Endpoint. This may belong to different subscription and resource group than a Notification Hubs namespace.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RemotePrivateLinkServiceConnectionState": {
      "description": "State of the Private Link Service connection.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkConnectionStatus"
        },
        "description": {
          "description": "Human-friendly description.",
          "type": "string",
          "readOnly": true
        },
        "actionsRequired": {
          "description": "Human-friendly description of required actions.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReplicationRegion": {
      "description": "Allowed replication region",
      "enum": [
        "Default",
        "WestUs2",
        "NorthEurope",
        "AustraliaEast",
        "BrazilSouth",
        "SouthEastAsia",
        "SouthAfricaNorth",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReplicationRegion",
        "modelAsString": true
      }
    },
    "ResourceListKeys": {
      "description": "Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).",
      "type": "object",
      "properties": {
        "primaryConnectionString": {
          "description": "Gets or sets primaryConnectionString of the AuthorizationRule.",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryConnectionString": {
          "description": "Gets or sets secondaryConnectionString of the created\r\nAuthorizationRule",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "primaryKey": {
          "description": "Gets or sets primaryKey of the created AuthorizationRule.",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryKey": {
          "description": "Gets or sets secondaryKey of the created AuthorizationRule",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "keyName": {
          "description": "Gets or sets keyName of the created AuthorizationRule",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceSpecification": {
      "description": "Optional service specification used in Operations API.",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Log specifications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "metricSpecifications": {
          "description": "Metric specification.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "unit"
          ]
        }
      }
    },
    "SharedAccessAuthorizationRuleListResult": {
      "description": "The response of the List Namespace operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets result of the List AuthorizationRules operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets or sets link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SharedAccessAuthorizationRuleProperties": {
      "description": "SharedAccessAuthorizationRule properties.",
      "required": [
        "rights"
      ],
      "type": "object",
      "properties": {
        "rights": {
          "description": "Gets or sets the rights associated with the rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        },
        "primaryKey": {
          "description": "Gets a base64-encoded 256-bit primary key for signing and\r\nvalidating the SAS token.",
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "description": "Gets a base64-encoded 256-bit primary key for signing and\r\nvalidating the SAS token.",
          "type": "string",
          "x-ms-secret": true
        },
        "keyName": {
          "description": "Gets a string that describes the authorization rule.",
          "type": "string",
          "readOnly": true
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "Gets the last modified time for this rule",
          "type": "string",
          "readOnly": true
        },
        "createdTime": {
          "format": "date-time",
          "description": "Gets the created time for this rule",
          "type": "string",
          "readOnly": true
        },
        "claimType": {
          "description": "Gets a string that describes the claim type",
          "type": "string",
          "readOnly": true
        },
        "claimValue": {
          "description": "Gets a string that describes the claim value",
          "type": "string",
          "readOnly": true
        },
        "revision": {
          "format": "int32",
          "description": "Gets the revision number for the rule",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SharedAccessAuthorizationRuleResource": {
      "description": "Response for POST requests that return single SharedAccessAuthorizationRule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        },
        "location": {
          "description": "Deprecated - only for compatibility.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "description": "Deprecated - only for compatibility.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "description": "Namespace SKU name.",
      "enum": [
        "Free",
        "Basic",
        "Standard"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "WnsCredential": {
      "description": "Description of a NotificationHub WnsCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "WnsCredentialProperties": {
      "description": "Description of a NotificationHub WnsCredential.",
      "type": "object",
      "properties": {
        "packageSid": {
          "description": "Gets or sets the package ID for this credential.",
          "type": "string",
          "x-ms-secret": true
        },
        "secretKey": {
          "description": "Gets or sets the secret key.",
          "type": "string",
          "x-ms-secret": true
        },
        "windowsLiveEndpoint": {
          "description": "Gets or sets the Windows Live endpoint.",
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "description": "Ges or sets the WNS Certificate Key.",
          "type": "string",
          "x-ms-secret": true
        },
        "wnsCertificate": {
          "description": "Gets or sets the WNS Certificate.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "XiaomiCredential": {
      "description": "Description of a NotificationHub XiaomiCredential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/XiaomiCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "XiaomiCredentialProperties": {
      "description": "Description of a NotificationHub XiaomiCredentialProperties.",
      "type": "object",
      "properties": {
        "appSecret": {
          "description": "Gets or sets app secret.",
          "type": "string",
          "x-ms-secret": true
        },
        "endpoint": {
          "description": "Gets or sets xiaomi service endpoint.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ZoneRedundancyPreference": {
      "description": "Namespace SKU name.",
      "default": "Disabled",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ZoneRedundancyPreference",
        "modelAsString": true
      },
      "x-ms-mutability": [
        "create",
        "read"
      ]
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}