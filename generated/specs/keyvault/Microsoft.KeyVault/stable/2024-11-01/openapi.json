{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.KeyVault",
    "version": "2024-11-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}": {
      "put": {
        "tags": [
          "Secrets"
        ],
        "operationId": "Secrets_CreateOrUpdate",
        "description": "Create or update a secret in a key vault in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "Name of the secret. The value you provide may be copied globally for the purpose of running the service. The value provided should not include personally identifiable or sensitive information."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretCreateOrUpdateParameters"
            },
            "description": "Parameters to create or update the secret"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created or updated vault",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "200": {
            "description": "Created or updated secret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a secret": {
            "$ref": "./examples/createSecret.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "Secrets"
        ],
        "operationId": "Secrets_Update",
        "description": "Update a secret in the specified subscription.  NOTE: This API is intended for internal use in ARM deployments.  Users should use the data-plane REST service for interaction with vault secrets.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "Name of the secret"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretPatchParameters"
            },
            "description": "Parameters to patch the secret"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Patched secret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "200": {
            "description": "Patched secret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update a secret": {
            "$ref": "./examples/updateSecret.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Secrets"
        ],
        "operationId": "Secrets_Get",
        "description": "Gets the specified secret.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the secret."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved secret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a secret": {
            "$ref": "./examples/getSecret.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "operationId": "Secrets_List",
        "description": "The List operation gets information about the secrets in a vault.  NOTE: This API is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about secrets in the specified vault.",
            "schema": {
              "$ref": "#/definitions/SecretListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List secrets in the vault": {
            "$ref": "./examples/listSecrets.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/providers/Microsoft.KeyVault/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Key Vault Rest API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Lists available Rest API operations.": {
            "$ref": "./examples/listOperations.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/keys/{keyName}": {
      "put": {
        "tags": [
          "ManagedHsmKeys"
        ],
        "operationId": "ManagedHsmKeys_CreateIfNotExist",
        "description": "Creates the first version of a new key if it does not exist. If it already exists, then the existing key is returned without any write operations being performed. This API does not create subsequent versions, and does not update existing keys.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMKeyName"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedHsmKeyCreateParameters"
            },
            "description": "The parameters used to create the specified key."
          }
        ],
        "responses": {
          "200": {
            "description": "The created key.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a key": {
            "$ref": "./examples/managedHsmCreateKey.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "ManagedHsmKeys"
        ],
        "operationId": "ManagedHsmKeys_Get",
        "description": "Gets the current version of the specified key from the specified managed HSM.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMName"
          },
          {
            "$ref": "#/parameters/ManagedHSMKeyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved key.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a key": {
            "$ref": "./examples/managedHsmGetKey.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/keys": {
      "get": {
        "tags": [
          "ManagedHsmKeys"
        ],
        "operationId": "ManagedHsmKeys_List",
        "description": "Lists the keys in the specified managed HSM.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved page of keys.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmKeyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List keys in the managed HSM": {
            "$ref": "./examples/managedHsmListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/keys/{keyName}/versions/{keyVersion}": {
      "get": {
        "tags": [
          "ManagedHsmKeys"
        ],
        "operationId": "ManagedHsmKeys_GetVersion",
        "description": "Gets the specified version of the specified key in the specified managed HSM.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMName"
          },
          {
            "$ref": "#/parameters/ManagedHSMKeyName"
          },
          {
            "$ref": "#/parameters/ManagedHSMKeyVersion"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved key version.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a key version": {
            "$ref": "./examples/managedHsmGetKeyVersion.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/keys/{keyName}/versions": {
      "get": {
        "tags": [
          "ManagedHsmKeys"
        ],
        "operationId": "ManagedHsmKeys_ListVersions",
        "description": "Lists the versions of the specified key in the specified managed HSM.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ManagedHSMName"
          },
          {
            "$ref": "#/parameters/ManagedHSMKeyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved page of key versions.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmKeyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List key versions in the managed HSM": {
            "$ref": "./examples/managedHsmListKeyVersions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}": {
      "put": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "description": "Create or update a key vault in the specified subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the server belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultCreateOrUpdateParameters"
            },
            "description": "Parameters to create or update the vault"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created or updated vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "200": {
            "description": "Created or updated vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a new vault or update an existing vault": {
            "$ref": "./examples/createVault.json"
          },
          "Create or update a vault with network acls": {
            "$ref": "./examples/createVaultWithNetworkAcls.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_Update",
        "description": "Update a key vault in the specified subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the server belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultPatchParameters"
            },
            "description": "Parameters to patch the vault"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Patched vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "200": {
            "description": "Patched vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update an existing vault": {
            "$ref": "./examples/updateVault.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_Delete",
        "description": "Deletes the specified Azure key vault.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK Response."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a vault": {
            "$ref": "./examples/deleteVault.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_Get",
        "description": "Gets the specified Azure key vault.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a vault": {
            "$ref": "./examples/getVault.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicies/{operationKind}": {
      "put": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_UpdateAccessPolicy",
        "description": "Update access policies in a key vault in the specified subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "name": "operationKind",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "add",
              "replace",
              "remove"
            ],
            "x-ms-enum": {
              "name": "AccessPolicyUpdateKind",
              "modelAsString": false
            },
            "description": "Name of the operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultAccessPolicyParameters"
            },
            "description": "Access policy to merge into the vault"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The updated access policies",
            "schema": {
              "$ref": "#/definitions/VaultAccessPolicyParameters"
            }
          },
          "200": {
            "description": "The updated access policies",
            "schema": {
              "$ref": "#/definitions/VaultAccessPolicyParameters"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Add an access policy, or update an access policy with new permissions": {
            "$ref": "./examples/updateAccessPoliciesAdd.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_ListByResourceGroup",
        "description": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all key vaults in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/VaultListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List vaults in the specified resource group": {
            "$ref": "./examples/listVaultByResourceGroup.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_ListBySubscription",
        "description": "The List operation gets information about the vaults associated with the subscription.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all key vaults in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/VaultListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List vaults in the specified subscription": {
            "$ref": "./examples/listVaultBySubscription.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_ListDeleted",
        "description": "Gets information about the deleted vaults in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about all deleted key vaults in a subscription.",
            "schema": {
              "$ref": "#/definitions/DeletedVaultListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List deleted vaults in the specified subscription": {
            "$ref": "./examples/listDeletedVaults.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_GetDeleted",
        "description": "Gets the deleted Azure key vault.",
        "parameters": [
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the deleted vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about the deleted vault.",
            "schema": {
              "$ref": "#/definitions/DeletedVault"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a deleted vault": {
            "$ref": "./examples/getDeletedVault.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge": {
      "post": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_PurgeDeleted",
        "x-ms-long-running-operation": true,
        "description": "Permanently deletes the specified vault. aka Purges the deleted Azure key vault.",
        "parameters": [
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the soft-deleted vault."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the soft-deleted vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The vault is purged."
          },
          "202": {
            "description": "Vault is being purged."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Purge a deleted vault": {
            "$ref": "./examples/purgeDeletedVault.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_List",
        "description": "The List operation gets information about the vaults associated with the subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "resourceType eq 'Microsoft.KeyVault/vaults'"
            ],
            "x-ms-enum": {
              "name": "VaultListFilterTypes",
              "modelAsString": false
            },
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "x-ms-api-version": false,
            "type": "string",
            "enum": [
              "2015-11-01"
            ],
            "x-ms-enum": {
              "name": "ResourceManagerApiVersions",
              "modelAsString": false
            },
            "description": "Azure Resource Manager Api Version."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all key vaults in the subscription.",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List vaults in the specified subscription": {
            "$ref": "./examples/listVault.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability": {
      "post": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_CheckNameAvailability",
        "description": "Checks that the vault name is valid and is not already in use.",
        "parameters": [
          {
            "name": "vaultName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultCheckNameAvailabilityParameters"
            },
            "description": "The name of the vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the vault name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Validate a vault name": {
            "$ref": "./examples/checkVaultNameAvailability.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the key vault.",
        "x-ms-examples": {
          "KeyVaultGetPrivateEndpointConnection": {
            "$ref": "./examples/getPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Private endpoint connection successfully returned.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "204": {
            "description": "The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Put",
        "description": "Updates the specified private endpoint connection associated with the key vault.",
        "x-ms-examples": {
          "KeyVaultPutPrivateEndpointConnection": {
            "$ref": "./examples/putPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The intended state of private endpoint connection."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The state of private endpoint connection was updated successfully.",
            "headers": {
              "Retry-After": {
                "description": "(specified only if operation does not finish synchronously) The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "(specified only if operation does not finish synchronously) The URI to poll for completion status. The response of this URI may be synchronous or asynchronous.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the key vault.",
        "x-ms-examples": {
          "KeyVaultDeletePrivateEndpointConnection": {
            "$ref": "./examples/deletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The private endpoint connection was successfully deleted.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "The private endpoint connection is being deleted.",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in the location header.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByResource",
        "description": "The List operation gets information about the private endpoint connections associated with the vault.",
        "x-ms-examples": {
          "KeyVaultListPrivateEndpointConnection": {
            "$ref": "./examples/listPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get information about all private endpoint connections in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByVault",
        "description": "Gets the private link resources supported for the key vault.",
        "x-ms-examples": {
          "KeyVaultListPrivateLinkResources": {
            "$ref": "./examples/listPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}": {
      "put": {
        "tags": [
          "Keys"
        ],
        "operationId": "Keys_CreateIfNotExist",
        "description": "Creates the first version of a new key if it does not exist. If it already exists, then the existing key is returned without any write operations being performed. This API does not create subsequent versions, and does not update existing keys.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group which contains the specified key vault."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "The name of the key vault which contains the key to be created."
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "The name of the key to be created. The value you provide may be copied globally for the purpose of running the service. The value provided should not include personally identifiable or sensitive information."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyCreateParameters"
            },
            "description": "The parameters used to create the specified key."
          }
        ],
        "responses": {
          "200": {
            "description": "The created key.",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a key": {
            "$ref": "./examples/createKey.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "Keys"
        ],
        "operationId": "Keys_Get",
        "description": "Gets the current version of the specified key from the specified key vault.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group which contains the specified key vault."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "The name of the vault which contains the key to be retrieved."
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "The name of the key to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved key.",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a key": {
            "$ref": "./examples/getKey.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys": {
      "get": {
        "tags": [
          "Keys"
        ],
        "operationId": "Keys_List",
        "description": "Lists the keys in the specified key vault.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group which contains the specified key vault."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "The name of the vault which contains the keys to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved page of keys.",
            "schema": {
              "$ref": "#/definitions/KeyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List keys in the vault": {
            "$ref": "./examples/listKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}/versions/{keyVersion}": {
      "get": {
        "tags": [
          "Keys"
        ],
        "operationId": "Keys_GetVersion",
        "description": "Gets the specified version of the specified key in the specified key vault.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group which contains the specified key vault."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "The name of the vault which contains the key version to be retrieved."
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "The name of the key version to be retrieved."
          },
          {
            "name": "keyVersion",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-fA-F0-9]{32}$",
            "description": "The version of the key to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved key version.",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a key version": {
            "$ref": "./examples/getKeyVersion.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}/versions": {
      "get": {
        "tags": [
          "Keys"
        ],
        "operationId": "Keys_ListVersions",
        "description": "Lists the versions of the specified key in the specified key vault.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group which contains the specified key vault."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "The name of the vault which contains the key versions to be retrieved."
          },
          {
            "name": "keyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{1,127}$",
            "description": "The name of the key versions to be retrieved."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved page of key versions.",
            "schema": {
              "$ref": "#/definitions/KeyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List key versions in the vault": {
            "$ref": "./examples/listKeyVersions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}": {
      "put": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "description": "Create or update a managed HSM Pool in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            },
            "description": "Parameters to create or update the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            }
          },
          "200": {
            "description": "Created or updated managed HSM Pool",
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Create a new managed HSM Pool or update an existing managed HSM Pool": {
            "$ref": "./examples/ManagedHsm_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_Update",
        "x-ms-long-running-operation": true,
        "description": "Update a managed HSM Pool in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            },
            "description": "Parameters to patch the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            }
          },
          "200": {
            "description": "Patched managed HSM Pool",
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Update an existing managed HSM Pool": {
            "$ref": "./examples/ManagedHsm_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified managed HSM Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the managed HSM Pool to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a managed HSM Pool": {
            "$ref": "./examples/ManagedHsm_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_Get",
        "description": "Gets the specified managed HSM Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the managed HSM Pool."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved managed HSM Pool",
            "schema": {
              "$ref": "#/definitions/ManagedHsm"
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a managed HSM Pool": {
            "$ref": "./examples/ManagedHsm_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs": {
      "get": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_ListByResourceGroup",
        "description": "The List operation gets information about the managed HSM Pools associated with the subscription and within the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all managed HSM Pools in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmListResult"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List managed HSM Pools in a resource group": {
            "$ref": "./examples/ManagedHsm_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs": {
      "get": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_ListBySubscription",
        "description": "The List operation gets information about the managed HSM Pools associated with the subscription.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all managed HSM Pools in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmListResult"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "List managed HSM Pools in a subscription": {
            "$ref": "./examples/ManagedHsm_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections": {
      "get": {
        "tags": [
          "MHSMListPrivateEndpointConnections"
        ],
        "operationId": "MHSMPrivateEndpointConnections_ListByResource",
        "description": "The List operation gets information about the private endpoint connections associated with the managed HSM Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all managed HSM Pools in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/MHSMPrivateEndpointConnectionsListResult"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "List managed HSM Pools in a subscription": {
            "$ref": "./examples/ManagedHsm_ListPrivateEndpointConnectionsByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedManagedHSMs": {
      "get": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_ListDeleted",
        "description": "The List operation gets information about the deleted managed HSMs associated with the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about all managed HSMs in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/DeletedManagedHsmListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List deleted managed HSMs in the specified subscription": {
            "$ref": "./examples/DeletedManagedHsm_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}": {
      "get": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_GetDeleted",
        "description": "Gets the specified deleted managed HSM.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the deleted managed HSM."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the deleted managed HSM."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about the specified deleted managed HSM.",
            "schema": {
              "$ref": "#/definitions/DeletedManagedHsm"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve a deleted managed HSM": {
            "$ref": "./examples/DeletedManagedHsm_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedManagedHSMs/{name}/purge": {
      "post": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_PurgeDeleted",
        "x-ms-long-running-operation": true,
        "description": "Permanently deletes the specified managed HSM.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the soft-deleted managed HSM."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the soft-deleted managed HSM."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "Purge a managed HSM Pool": {
            "$ref": "./examples/DeletedManagedHsm_Purge.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "MHSMPrivateEndpointConnections"
        ],
        "operationId": "MHSMPrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the managed HSM Pool.",
        "x-ms-examples": {
          "ManagedHsmGetPrivateEndpointConnection": {
            "$ref": "./examples/ManagedHsm_getPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/MHSMPrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Private endpoint connection successfully returned.",
            "schema": {
              "$ref": "#/definitions/MHSMPrivateEndpointConnection"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MHSMPrivateEndpointConnections"
        ],
        "operationId": "MHSMPrivateEndpointConnections_Put",
        "description": "Updates the specified private endpoint connection associated with the managed hsm pool.",
        "x-ms-examples": {
          "ManagedHsmPutPrivateEndpointConnection": {
            "$ref": "./examples/ManagedHsm_putPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/MHSMPrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MHSMPrivateEndpointConnection"
            },
            "description": "The intended state of private endpoint connection."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The state of private endpoint connection was updated successfully.",
            "headers": {
              "Retry-After": {
                "description": "(specified only if operation does not finish synchronously) The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int32"
              },
              "Azure-AsyncOperation": {
                "description": "(specified only if operation does not finish synchronously) The URI to poll for completion status. The response of this URI may be synchronous or asynchronous.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/MHSMPrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MHSMPrivateEndpointConnections"
        ],
        "operationId": "MHSMPrivateEndpointConnections_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified private endpoint connection associated with the managed hsm pool.",
        "x-ms-examples": {
          "ManagedHsmDeletePrivateEndpointConnection": {
            "$ref": "./examples/ManagedHsm_deletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/MHSMPrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The private endpoint connection was successfully deleted.",
            "schema": {
              "$ref": "#/definitions/MHSMPrivateEndpointConnection"
            }
          },
          "202": {
            "description": "The private endpoint connection is being deleted.",
            "headers": {
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateLinkResources": {
      "get": {
        "tags": [
          "MHSMPrivateLinkResources"
        ],
        "operationId": "MHSMPrivateLinkResources_ListByMHSMResource",
        "description": "Gets the private link resources supported for the managed hsm pool.",
        "x-ms-examples": {
          "KeyVaultListPrivateLinkResources": {
            "$ref": "./examples/ManagedHsm_listPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/MHSMPrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/regions": {
      "get": {
        "tags": [
          "MHSMListRegions"
        ],
        "operationId": "MHSMRegions_ListByResource",
        "description": "The List operation gets information about the regions associated with the managed HSM Pool.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ManagedHsmResourceGroupName"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the managed HSM Pool"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all managed HSM Pools in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/MHSMRegionsListResult"
            }
          },
          "default": {
            "description": "The error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ManagedHsmError"
            }
          }
        },
        "x-ms-examples": {
          "List managed HSM Pools in a subscription": {
            "$ref": "./examples/ManagedHsm_ListRegionsByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkMhsmNameAvailability": {
      "post": {
        "tags": [
          "ManagedHsms"
        ],
        "operationId": "ManagedHsms_CheckMhsmNameAvailability",
        "description": "Checks that the managed hsm name is valid and is not already in use.",
        "parameters": [
          {
            "name": "mhsmName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckMhsmNameAvailabilityParameters"
            },
            "description": "The name of the managed hsm."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the mhsm name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckMhsmNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "common.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Validate a managed hsm name": {
            "$ref": "./examples/ManagedHsm_checkMhsmNameAvailability.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ManagedHSMName": {
      "name": "name",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Managed HSM Pool within the specified resource group.",
      "pattern": "^[A-Za-z]([A-Za-z0-9]|\\-[A-Za-z0-9])+$",
      "maxLength": 24,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    },
    "ManagedHSMKeyName": {
      "name": "keyName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9-]{1,127}$",
      "description": "The name of the key to be created. The value you provide may be copied globally for the purpose of running the service. The value provided should not include personally identifiable or sensitive information.",
      "x-ms-parameter-location": "method"
    },
    "ManagedHSMKeyVersion": {
      "name": "keyVersion",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-fA-F0-9]{32}$",
      "description": "The version of the key to be retrieved.",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the resource group that contains the key vault.",
      "x-ms-parameter-location": "method"
    },
    "VaultName": {
      "name": "vaultName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9-]{3,24}$",
      "description": "The name of the key vault.",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the private endpoint connection associated with the key vault.",
      "x-ms-parameter-location": "method"
    },
    "ManagedHsmResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the resource group that contains the managed HSM pool.",
      "x-ms-parameter-location": "method"
    },
    "MHSMPrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the private endpoint connection associated with the managed hsm pool.",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Attributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether the object is enabled."
        },
        "nbf": {
          "x-ms-client-name": "NotBefore",
          "type": "integer",
          "format": "unixtime",
          "description": "Not before date in seconds since 1970-01-01T00:00:00Z."
        },
        "exp": {
          "x-ms-client-name": "Expires",
          "type": "integer",
          "format": "unixtime",
          "description": "Expiry date in seconds since 1970-01-01T00:00:00Z."
        },
        "created": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
        },
        "updated": {
          "type": "integer",
          "format": "unixtime",
          "readOnly": true,
          "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
        }
      },
      "description": "The object attributes managed by the KeyVault service.",
      "type": "object"
    },
    "SecretProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the secret."
        },
        "attributes": {
          "$ref": "#/definitions/SecretAttributes",
          "description": "The attributes of the secret."
        },
        "secretUri": {
          "type": "string",
          "description": "The URI to retrieve the current version of the secret.",
          "readOnly": true
        },
        "secretUriWithVersion": {
          "type": "string",
          "description": "The URI to retrieve the specific version of the secret.",
          "readOnly": true
        }
      },
      "description": "Properties of the secret",
      "type": "object"
    },
    "SecretPatchProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the secret."
        },
        "attributes": {
          "$ref": "#/definitions/SecretAttributes",
          "description": "The attributes of the secret."
        }
      },
      "description": "Properties of the secret",
      "type": "object"
    },
    "SecretAttributes": {
      "allOf": [
        {
          "$ref": "#/definitions/Attributes"
        }
      ],
      "description": "The secret management attributes.",
      "type": "object"
    },
    "SecretCreateOrUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the secret. "
        },
        "properties": {
          "$ref": "#/definitions/SecretProperties",
          "description": "Properties of the secret"
        }
      },
      "description": "Parameters for creating or updating a secret",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "SecretPatchParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the secret. "
        },
        "properties": {
          "$ref": "#/definitions/SecretPatchProperties",
          "description": "Properties of the secret"
        }
      },
      "description": "Parameters for patching a secret",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "Secret": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecretProperties",
          "description": "Properties of the secret"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "./keyvault.json#/definitions/Resource"
        }
      ],
      "description": "Resource information with extended details.",
      "type": "object"
    },
    "SecretListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "description": "The list of secrets."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of secrets."
        }
      },
      "description": "List of secrets",
      "type": "object"
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationProperties": {
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      },
      "type": "object"
    },
    "ServiceSpecification": {
      "description": "One property of operation, include log specifications.",
      "properties": {
        "logSpecifications": {
          "description": "Log specifications of operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "metricSpecifications": {
          "description": "Metric specifications of operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "type": "object"
    },
    "LogSpecification": {
      "description": "Log specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of log specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of log specification."
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of specification."
        }
      },
      "type": "object"
    },
    "MetricSpecification": {
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'."
        },
        "aggregationType": {
          "type": "string",
          "description": "The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "The supported aggregation types for the metrics.",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "The supported time grain types for the metrics.",
          "items": {
            "type": "string"
          }
        },
        "lockAggregationType": {
          "type": "string",
          "description": "The metric lock aggregation type."
        },
        "dimensions": {
          "type": "array",
          "description": "The dimensions of metric",
          "items": {
            "$ref": "#/definitions/DimensionProperties"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Property to specify whether to fill gap with zero."
        },
        "internalMetricName": {
          "type": "string",
          "description": "The internal metric name."
        }
      },
      "type": "object"
    },
    "DimensionProperties": {
      "description": "Type of operation: get, read, delete, etc.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Property to specify whether the dimension should be exported for Shoebox."
        }
      },
      "type": "object"
    },
    "ManagedHsmKeyProperties": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/ManagedHsmKeyAttributes",
          "description": "The attributes of the key."
        },
        "kty": {
          "type": "string",
          "minLength": 1,
          "description": "The type of the key. For valid values, see JsonWebKeyType.",
          "enum": [
            "EC",
            "EC-HSM",
            "RSA",
            "RSA-HSM"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyType",
            "modelAsString": true
          }
        },
        "keyOps": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The permitted JSON web key operations of the key. For more information, see JsonWebKeyOperation.",
            "enum": [
              "encrypt",
              "decrypt",
              "sign",
              "verify",
              "wrapKey",
              "unwrapKey",
              "import",
              "release"
            ],
            "x-ms-enum": {
              "name": "JsonWebKeyOperation",
              "modelAsString": true
            }
          }
        },
        "keySize": {
          "type": "integer",
          "format": "int32",
          "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA. Default for RSA and RSA-HSM keys is 2048. Exception made for bring your own key (BYOK), key exchange keys default to 4096."
        },
        "curveName": {
          "type": "string",
          "description": "The elliptic curve name. For valid values, see JsonWebKeyCurveName. Default for EC and EC-HSM keys is P-256",
          "enum": [
            "P-256",
            "P-384",
            "P-521",
            "P-256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyCurveName",
            "modelAsString": true
          }
        },
        "keyUri": {
          "type": "string",
          "description": "The URI to retrieve the current version of the key.",
          "readOnly": true
        },
        "keyUriWithVersion": {
          "type": "string",
          "description": "The URI to retrieve the specific version of the key.",
          "readOnly": true
        },
        "rotationPolicy": {
          "$ref": "#/definitions/ManagedHsmRotationPolicy",
          "description": "Key rotation policy in response. It will be used for both output and input. Omitted if empty"
        },
        "release_policy": {
          "$ref": "#/definitions/ManagedHsmKeyReleasePolicy",
          "description": "Key release policy in response. It will be used for both output and input. Omitted if empty"
        }
      },
      "description": "The properties of the key.",
      "type": "object"
    },
    "ManagedHsmKeyAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether or not the object is enabled."
        },
        "nbf": {
          "x-ms-client-name": "NotBefore",
          "type": "integer",
          "format": "int64",
          "description": "Not before date in seconds since 1970-01-01T00:00:00Z."
        },
        "exp": {
          "x-ms-client-name": "Expires",
          "type": "integer",
          "format": "int64",
          "description": "Expiry date in seconds since 1970-01-01T00:00:00Z."
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "The deletion recovery level currently in effect for the object. If it contains 'Purgeable', then the object can be permanently deleted by a privileged user; otherwise, only the system can purge the object at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        },
        "exportable": {
          "type": "boolean",
          "description": "Indicates if the private key can be exported."
        }
      },
      "description": "The object attributes managed by the Azure Key Vault service.",
      "type": "object"
    },
    "ManagedHsmKeyCreateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key."
        },
        "properties": {
          "$ref": "#/definitions/ManagedHsmKeyProperties",
          "description": "The properties of the key to be created."
        }
      },
      "description": "The parameters used to create a key.",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "ManagedHsmKey": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ManagedHsmKeyProperties",
          "description": "The properties of the key."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResourceWithoutSystemData"
        }
      ],
      "description": "The key resource.",
      "type": "object"
    },
    "ManagedHsmKeyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedHsmKey"
          },
          "description": "The key resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next page of keys."
        }
      },
      "description": "The page of keys.",
      "type": "object"
    },
    "ManagedHsmRotationPolicy": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/ManagedHsmKeyRotationPolicyAttributes",
          "description": "The attributes of key rotation policy."
        },
        "lifetimeActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedHsmLifetimeAction"
          },
          "x-ms-identifiers": [],
          "description": "The lifetimeActions for key rotation action."
        }
      },
      "type": "object"
    },
    "ManagedHsmKeyRotationPolicyAttributes": {
      "properties": {
        "created": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
        },
        "expiryTime": {
          "type": "string",
          "description": "The expiration time for the new key version. It should be in ISO8601 format. Eg: 'P90D', 'P1Y'."
        }
      },
      "type": "object"
    },
    "ManagedHsmLifetimeAction": {
      "properties": {
        "trigger": {
          "$ref": "#/definitions/ManagedHsmTrigger",
          "description": "The trigger of key rotation policy lifetimeAction."
        },
        "action": {
          "$ref": "#/definitions/ManagedHsmAction",
          "description": "The action of key rotation policy lifetimeAction."
        }
      },
      "type": "object"
    },
    "ManagedHsmTrigger": {
      "properties": {
        "timeAfterCreate": {
          "type": "string",
          "description": "The time duration after key creation to rotate the key. It only applies to rotate. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'."
        },
        "timeBeforeExpiry": {
          "type": "string",
          "description": "The time duration before key expiring to rotate or notify. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'."
        }
      },
      "type": "object"
    },
    "ManagedHsmAction": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of action.",
          "enum": [
            "rotate",
            "notify"
          ],
          "x-ms-enum": {
            "name": "KeyRotationPolicyActionType",
            "modelAsString": false
          }
        }
      },
      "type": "object"
    },
    "ManagedHsmKeyReleasePolicy": {
      "properties": {
        "contentType": {
          "description": "Content type and version of key release policy",
          "type": "string",
          "default": "application/json; charset=utf-8"
        },
        "data": {
          "description": "Blob encoding the policy rules under which the key can be released.",
          "type": "string",
          "format": "base64url"
        }
      },
      "type": "object"
    },
    "ProxyResourceWithoutSystemData": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "CloudError": {
      "description": "An error response from Key Vault resource provider",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "x-ms-external": true,
      "type": "object"
    },
    "CloudErrorBody": {
      "description": "An error response from Key Vault resource provider",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code. This is a mnemonic that can be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "User friendly error message. The message is typically localized and may vary with service version."
        }
      },
      "x-ms-external": true,
      "type": "object"
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the key vault resource.",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the key vault resource."
        },
        "createdByType": {
          "description": "The type of identity that created the key vault resource.",
          "$ref": "#/definitions/IdentityType"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the key vault resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the key vault resource."
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the key vault resource.",
          "$ref": "#/definitions/IdentityType"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the key vault resource last modification (UTC)."
        }
      },
      "type": "object"
    },
    "IdentityType": {
      "type": "string",
      "description": "The type of identity.",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "identityType",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "AccessPolicyEntry": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "objectId": {
          "type": "string",
          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies."
        },
        "applicationId": {
          "type": "string",
          "format": "uuid",
          "description": " Application ID of the client making request on behalf of a principal"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions",
          "description": "Permissions the identity has for keys, secrets and certificates."
        }
      },
      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
      "required": [
        "tenantId",
        "objectId",
        "permissions"
      ],
      "type": "object"
    },
    "Permissions": {
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "encrypt",
              "decrypt",
              "wrapKey",
              "unwrapKey",
              "sign",
              "verify",
              "get",
              "list",
              "create",
              "update",
              "import",
              "delete",
              "backup",
              "restore",
              "recover",
              "purge",
              "release",
              "rotate",
              "getrotationpolicy",
              "setrotationpolicy"
            ],
            "x-ms-enum": {
              "name": "KeyPermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to keys"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "get",
              "list",
              "set",
              "delete",
              "backup",
              "restore",
              "recover",
              "purge"
            ],
            "x-ms-enum": {
              "name": "SecretPermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to secrets"
        },
        "certificates": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "get",
              "list",
              "delete",
              "create",
              "import",
              "update",
              "managecontacts",
              "getissuers",
              "listissuers",
              "setissuers",
              "deleteissuers",
              "manageissuers",
              "recover",
              "purge",
              "backup",
              "restore"
            ],
            "x-ms-enum": {
              "name": "CertificatePermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to certificates"
        },
        "storage": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "all",
              "get",
              "list",
              "delete",
              "set",
              "update",
              "regeneratekey",
              "recover",
              "purge",
              "backup",
              "restore",
              "setsas",
              "listsas",
              "getsas",
              "deletesas"
            ],
            "x-ms-enum": {
              "name": "StoragePermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to storage accounts"
        }
      },
      "description": "Permissions the identity has for keys, secrets, certificates and storage.",
      "type": "object"
    },
    "VaultProperties": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU details"
        },
        "accessPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPolicyEntry"
          },
          "x-ms-identifiers": [
            "tenantId",
            "objectId",
            "permissions"
          ],
          "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required."
        },
        "vaultUri": {
          "type": "string",
          "description": "The URI of the vault for performing operations on keys and secrets."
        },
        "hsmPoolResourceId": {
          "type": "string",
          "description": "The resource id of HSM Pool.",
          "readOnly": true
        },
        "enabledForDeployment": {
          "type": "boolean",
          "default": false,
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        },
        "enabledForDiskEncryption": {
          "type": "boolean",
          "default": false,
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
        },
        "enabledForTemplateDeployment": {
          "type": "boolean",
          "default": false,
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        },
        "enableSoftDelete": {
          "type": "boolean",
          "default": true,
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false."
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32",
          "default": 90,
          "description": "softDelete data retention days. It accepts >=7 and <=90."
        },
        "enableRbacAuthorization": {
          "type": "boolean",
          "default": false,
          "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC."
        },
        "createMode": {
          "type": "string",
          "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
          "enum": [
            "recover",
            "default"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "enablePurgeProtection": {
          "type": "boolean",
          "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "Rules governing the accessibility of the key vault from specific network locations."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the vault.",
          "enum": [
            "Succeeded",
            "RegisteringDns"
          ],
          "x-ms-enum": {
            "name": "VaultProvisioningState",
            "modelAsString": true
          }
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionItem"
          },
          "description": "List of private endpoint connections associated with the key vault."
        },
        "publicNetworkAccess": {
          "type": "string",
          "default": "enabled",
          "description": "Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules."
        }
      },
      "required": [
        "tenantId",
        "sku"
      ],
      "description": "Properties of the vault",
      "type": "object"
    },
    "VaultPatchProperties": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU details"
        },
        "accessPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPolicyEntry"
          },
          "x-ms-identifiers": [
            "tenantId",
            "objectId",
            "permissions"
          ],
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
        },
        "enabledForDeployment": {
          "type": "boolean",
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        },
        "enabledForDiskEncryption": {
          "type": "boolean",
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
        },
        "enabledForTemplateDeployment": {
          "type": "boolean",
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        },
        "enableSoftDelete": {
          "type": "boolean",
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
        },
        "enableRbacAuthorization": {
          "type": "boolean",
          "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change."
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32",
          "description": "softDelete data retention days. It accepts >=7 and <=90."
        },
        "createMode": {
          "type": "string",
          "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
          "enum": [
            "recover",
            "default"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": false
          }
        },
        "enablePurgeProtection": {
          "type": "boolean",
          "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "A collection of rules governing the accessibility of the vault from specific network locations."
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules."
        }
      },
      "description": "Properties of the vault",
      "type": "object"
    },
    "VaultAccessPolicyProperties": {
      "properties": {
        "accessPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPolicyEntry"
          },
          "x-ms-identifiers": [
            "tenantId",
            "objectId",
            "permissions"
          ],
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
        }
      },
      "required": [
        "accessPolicies"
      ],
      "description": "Properties of the vault access policy",
      "type": "object"
    },
    "DeletedVaultProperties": {
      "properties": {
        "vaultId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id of the original vault."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the original vault."
        },
        "deletionDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The deleted date."
        },
        "scheduledPurgeDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The scheduled purged date."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags of the original vault."
        },
        "purgeProtectionEnabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Purge protection status of the original vault."
        }
      },
      "description": "Properties of the deleted vault.",
      "type": "object"
    },
    "VaultCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The supported Azure location where the key vault should be created."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault."
        },
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        }
      },
      "description": "Parameters for creating or updating a vault",
      "required": [
        "location",
        "properties"
      ],
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "VaultPatchParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault. "
        },
        "properties": {
          "$ref": "#/definitions/VaultPatchProperties",
          "description": "Properties of the vault"
        }
      },
      "description": "Parameters for creating or updating a vault",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "VaultAccessPolicyParameters": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id of the access policy."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name of the access policy."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name of the access policy."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the access policy."
        },
        "properties": {
          "$ref": "#/definitions/VaultAccessPolicyProperties",
          "description": "Properties of the access policy"
        }
      },
      "description": "Parameters for updating the access policy in a vault",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "Vault": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified identifier of the key vault resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the key vault resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type of the key vault resource."
        },
        "location": {
          "type": "string",
          "description": "Azure location of the key vault resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags assigned to the key vault resource."
        },
        "systemData": {
          "description": "System metadata for the key vault.",
          "$ref": "common.json#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Resource information with extended details.",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "DeletedVault": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource ID for the deleted key vault."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the key vault."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the key vault."
        },
        "properties": {
          "$ref": "#/definitions/DeletedVaultProperties",
          "description": "Properties of the vault"
        }
      },
      "description": "Deleted vault information with extended details.",
      "type": "object"
    },
    "VaultListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vault"
          },
          "description": "The list of vaults."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of vaults."
        }
      },
      "description": "List of vaults",
      "type": "object"
    },
    "DeletedVaultListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedVault"
          },
          "description": "The list of deleted vaults."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of deleted vaults."
        }
      },
      "description": "List of vaults",
      "type": "object"
    },
    "ResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "description": "The list of vault resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of vault resources."
        }
      },
      "description": "List of vault resources.",
      "type": "object"
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "VaultCheckNameAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The vault name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.KeyVault/vaults"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.KeyVault/vaults"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The parameters used to check the availability of the vault name.",
      "type": "object"
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.",
          "enum": [
            "AccountNameInvalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "Reason",
            "modelAsString": false
          }
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "An error message explaining the Reason value in more detail."
        }
      },
      "description": "The CheckNameAvailability operation response.",
      "type": "object"
    },
    "NetworkRuleSet": {
      "properties": {
        "bypass": {
          "type": "string",
          "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.",
          "enum": [
            "AzureServices",
            "None"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleBypassOptions",
            "modelAsString": true
          }
        },
        "defaultAction": {
          "type": "string",
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleAction",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPRule"
          },
          "description": "The list of IP address rules."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "The list of virtual network rules."
        }
      },
      "description": "A set of rules governing the network accessibility of a vault.",
      "type": "object"
    },
    "IPRule": {
      "properties": {
        "value": {
          "type": "string",
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
        }
      },
      "required": [
        "value"
      ],
      "description": "A rule governing the accessibility of a vault from a specific ip address or ip range.",
      "type": "object"
    },
    "VirtualNetworkRule": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured."
        }
      },
      "required": [
        "id"
      ],
      "description": "A rule governing the accessibility of a vault from a specific virtual network.",
      "type": "object"
    },
    "PrivateEndpointConnectionItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of private endpoint connection."
        },
        "etag": {
          "type": "string",
          "description": "Modified whenever there is a change in the state of private endpoint connection."
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Private endpoint connection properties."
        }
      },
      "description": "Private endpoint connection item.",
      "type": "object"
    },
    "PrivateEndpointConnection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        },
        "etag": {
          "type": "string",
          "description": "Modified whenever there is a change in the state of private endpoint connection."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Private endpoint connection resource.",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "PrivateEndpointConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "The list of private endpoint connections."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of private endpoint connections."
        }
      },
      "description": "List of private endpoint connections.",
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "Properties of the private endpoint object."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Approval state of the private link connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the private endpoint connection."
        }
      },
      "description": "Properties of the private endpoint connection resource.",
      "type": "object"
    },
    "PrivateEndpoint": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full identifier of the private endpoint resource."
        }
      },
      "description": "Private endpoint object properties.",
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been approved, rejected or removed by the key vault owner."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval or rejection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "enum": [
            "None"
          ],
          "x-ms-enum": {
            "name": "ActionsRequired",
            "modelAsString": true
          }
        }
      },
      "description": "An object that represents the approval state of the private link connection.",
      "type": "object"
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Deleting",
        "Failed",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources",
      "type": "object"
    },
    "PrivateLinkResource": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A private link resource",
      "type": "object"
    },
    "PrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "Group identifier of private link resource.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required member names of private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required DNS zone names of the the private link resource."
        }
      },
      "description": "Properties of a private link resource.",
      "type": "object"
    },
    "KeyProperties": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/KeyAttributes",
          "description": "The attributes of the key."
        },
        "kty": {
          "type": "string",
          "minLength": 1,
          "description": "The type of the key. For valid values, see JsonWebKeyType.",
          "enum": [
            "EC",
            "EC-HSM",
            "RSA",
            "RSA-HSM"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyType",
            "modelAsString": true
          }
        },
        "keyOps": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The permitted JSON web key operations of the key. For more information, see JsonWebKeyOperation.",
            "enum": [
              "encrypt",
              "decrypt",
              "sign",
              "verify",
              "wrapKey",
              "unwrapKey",
              "import",
              "release"
            ],
            "x-ms-enum": {
              "name": "JsonWebKeyOperation",
              "modelAsString": true
            }
          }
        },
        "keySize": {
          "type": "integer",
          "format": "int32",
          "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA. Default for RSA and RSA-HSM keys is 2048. Exception made for bring your own key (BYOK), key exchange keys default to 4096."
        },
        "curveName": {
          "type": "string",
          "description": "The elliptic curve name. For valid values, see JsonWebKeyCurveName. Default for EC and EC-HSM keys is P-256",
          "enum": [
            "P-256",
            "P-384",
            "P-521",
            "P-256K"
          ],
          "x-ms-enum": {
            "name": "JsonWebKeyCurveName",
            "modelAsString": true
          }
        },
        "keyUri": {
          "type": "string",
          "description": "The URI to retrieve the current version of the key.",
          "readOnly": true
        },
        "keyUriWithVersion": {
          "type": "string",
          "description": "The URI to retrieve the specific version of the key.",
          "readOnly": true
        },
        "rotationPolicy": {
          "$ref": "#/definitions/RotationPolicy",
          "description": "Key rotation policy in response. It will be used for both output and input. Omitted if empty"
        },
        "release_policy": {
          "$ref": "#/definitions/KeyReleasePolicy",
          "description": "Key release policy in response. It will be used for both output and input. Omitted if empty"
        }
      },
      "description": "The properties of the key.",
      "type": "object"
    },
    "KeyAttributes": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether or not the object is enabled."
        },
        "nbf": {
          "x-ms-client-name": "NotBefore",
          "type": "integer",
          "format": "int64",
          "description": "Not before date in seconds since 1970-01-01T00:00:00Z."
        },
        "exp": {
          "x-ms-client-name": "Expires",
          "type": "integer",
          "format": "int64",
          "description": "Expiry date in seconds since 1970-01-01T00:00:00Z."
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
        },
        "recoveryLevel": {
          "type": "string",
          "description": "The deletion recovery level currently in effect for the object. If it contains 'Purgeable', then the object can be permanently deleted by a privileged user; otherwise, only the system can purge the object at the end of the retention interval.",
          "enum": [
            "Purgeable",
            "Recoverable+Purgeable",
            "Recoverable",
            "Recoverable+ProtectedSubscription"
          ],
          "x-ms-enum": {
            "name": "DeletionRecoveryLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-nullable": false
        },
        "exportable": {
          "type": "boolean",
          "description": "Indicates if the private key can be exported.",
          "default": false
        }
      },
      "description": "The object attributes managed by the Azure Key Vault service.",
      "type": "object"
    },
    "KeyCreateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key."
        },
        "properties": {
          "$ref": "#/definitions/KeyProperties",
          "description": "The properties of the key to be created."
        }
      },
      "description": "The parameters used to create a key.",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "Key": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/KeyProperties",
          "description": "The properties of the key."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "./keyvault.json#/definitions/Resource"
        }
      ],
      "description": "The key resource.",
      "type": "object"
    },
    "KeyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Key"
          },
          "description": "The key resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next page of keys."
        }
      },
      "description": "The page of keys.",
      "type": "object"
    },
    "RotationPolicy": {
      "properties": {
        "attributes": {
          "$ref": "#/definitions/KeyRotationPolicyAttributes",
          "description": "The attributes of key rotation policy."
        },
        "lifetimeActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LifetimeAction"
          },
          "x-ms-identifiers": [],
          "description": "The lifetimeActions for key rotation action."
        }
      },
      "type": "object"
    },
    "KeyRotationPolicyAttributes": {
      "properties": {
        "created": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Creation time in seconds since 1970-01-01T00:00:00Z."
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Last updated time in seconds since 1970-01-01T00:00:00Z."
        },
        "expiryTime": {
          "type": "string",
          "description": "The expiration time for the new key version. It should be in ISO8601 format. Eg: 'P90D', 'P1Y'."
        }
      },
      "type": "object"
    },
    "LifetimeAction": {
      "properties": {
        "trigger": {
          "$ref": "#/definitions/Trigger",
          "description": "The trigger of key rotation policy lifetimeAction."
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The action of key rotation policy lifetimeAction."
        }
      },
      "type": "object"
    },
    "Trigger": {
      "properties": {
        "timeAfterCreate": {
          "type": "string",
          "description": "The time duration after key creation to rotate the key. It only applies to rotate. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'."
        },
        "timeBeforeExpiry": {
          "type": "string",
          "description": "The time duration before key expiring to rotate or notify. It will be in ISO 8601 duration format. Eg: 'P90D', 'P1Y'."
        }
      },
      "type": "object"
    },
    "Action": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of action.",
          "enum": [
            "rotate",
            "notify"
          ],
          "x-ms-enum": {
            "name": "KeyRotationPolicyActionType",
            "modelAsString": false
          }
        }
      },
      "type": "object"
    },
    "KeyReleasePolicy": {
      "properties": {
        "contentType": {
          "description": "Content type and version of key release policy",
          "type": "string",
          "default": "application/json; charset=utf-8"
        },
        "data": {
          "description": "Blob encoding the policy rules under which the key can be released.",
          "type": "string",
          "format": "base64url"
        }
      },
      "type": "object"
    },
    "ManagedHsmSku": {
      "properties": {
        "family": {
          "type": "string",
          "description": "SKU Family of the managed HSM Pool",
          "enum": [
            "B",
            "C"
          ],
          "x-ms-client-default": "B",
          "x-ms-enum": {
            "name": "ManagedHsmSkuFamily",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "SKU of the managed HSM Pool",
          "enum": [
            "Standard_B1",
            "Custom_B32",
            "Custom_B6",
            "Custom_C42",
            "Custom_C10"
          ],
          "x-ms-enum": {
            "name": "ManagedHsmSkuName",
            "modelAsString": false
          }
        }
      },
      "description": "SKU details",
      "required": [
        "name",
        "family"
      ],
      "type": "object"
    },
    "ManagedHsmProperties": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool."
        },
        "initialAdminObjectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of initial administrators object ids for this managed hsm pool."
        },
        "hsmUri": {
          "type": "string",
          "readOnly": true,
          "description": "The URI of the managed hsm pool for performing operations on keys."
        },
        "enableSoftDelete": {
          "type": "boolean",
          "default": true,
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. Soft delete is enabled by default for all managed HSMs and is immutable."
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32",
          "default": 90,
          "description": "Soft deleted data retention days. When you delete an HSM or a key, it will remain recoverable for the configured retention period or for a default period of 90 days. It accepts values between 7 and 90."
        },
        "enablePurgeProtection": {
          "type": "boolean",
          "default": true,
          "description": "Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. Enabling this functionality is irreversible."
        },
        "createMode": {
          "type": "string",
          "description": "The create mode to indicate whether the resource is being created or is being recovered from a deleted resource.",
          "enum": [
            "recover",
            "default"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": false,
            "values": [
              {
                "value": "recover",
                "description": "Recover the managed HSM pool from a soft-deleted resource."
              },
              {
                "value": "default",
                "description": "Create a new managed HSM pool. This is the default option."
              }
            ]
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Status Message."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state.",
          "enum": [
            "Succeeded",
            "Provisioning",
            "Failed",
            "Updating",
            "Deleting",
            "Activated",
            "SecurityDomainRestore",
            "Restoring"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Succeeded",
                "description": "The managed HSM Pool has been full provisioned."
              },
              {
                "value": "Provisioning",
                "description": "The managed HSM Pool is currently being provisioned."
              },
              {
                "value": "Failed",
                "description": "Provisioning of the managed HSM Pool has failed."
              },
              {
                "value": "Updating",
                "description": "The managed HSM Pool is currently being updated."
              },
              {
                "value": "Deleting",
                "description": "The managed HSM Pool is currently being deleted."
              },
              {
                "value": "Activated",
                "description": "The managed HSM pool is ready for normal use."
              },
              {
                "value": "SecurityDomainRestore",
                "description": "The managed HSM pool is waiting for a security domain restore action."
              },
              {
                "value": "Restoring",
                "description": "The managed HSM pool is being restored from full HSM backup."
              }
            ]
          }
        },
        "networkAcls": {
          "$ref": "#/definitions/MHSMNetworkRuleSet",
          "description": "Rules governing the accessibility of the key vault from specific network locations."
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMGeoReplicatedRegion"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of all regions associated with the managed hsm pool."
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMPrivateEndpointConnectionItem"
          },
          "description": "List of private endpoint connections associated with the managed hsm pool."
        },
        "publicNetworkAccess": {
          "description": "Control permission to the managed HSM from public networks.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "scheduledPurgeDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The scheduled purge date in UTC."
        },
        "securityDomainProperties": {
          "readOnly": true,
          "$ref": "#/definitions/ManagedHSMSecurityDomainProperties",
          "description": "Managed HSM security domain properties."
        }
      },
      "description": "Properties of the managed HSM Pool",
      "type": "object"
    },
    "ManagedHsm": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedHsmProperties",
          "description": "Properties of the managed HSM"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedHsmResource"
        }
      ],
      "description": "Resource information with extended details.",
      "type": "object"
    },
    "ManagedHsmResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The Azure Resource Manager resource ID for the managed HSM Pool."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the managed HSM Pool."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the managed HSM Pool."
        },
        "location": {
          "type": "string",
          "description": "The supported Azure location where the managed HSM Pool should be created.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sku": {
          "$ref": "#/definitions/ManagedHsmSku",
          "description": "SKU details"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "common.json#/definitions/SystemData"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      },
      "description": "Managed HSM resource",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "ManagedHsmListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedHsm"
          },
          "description": "The list of managed HSM Pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of managed HSM Pools."
        }
      },
      "description": "List of managed HSM Pools",
      "type": "object"
    },
    "MHSMPrivateEndpointConnectionsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMPrivateEndpointConnection"
          },
          "description": "The private endpoint connection associated with a managed HSM Pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of managed HSM Pools."
        }
      },
      "description": "List of private endpoint connections associated with a managed HSM Pools",
      "type": "object"
    },
    "MHSMRegionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMGeoReplicatedRegion"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The region associated with a managed HSM Pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of managed HSM Pools."
        }
      },
      "description": "List of regions associated with a managed HSM Pools"
    },
    "ManagedHsmError": {
      "properties": {
        "error": {
          "readOnly": true,
          "description": "The server error.",
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The error exception.",
      "type": "object"
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The error message."
        },
        "innererror": {
          "x-ms-client-name": "innerError",
          "readOnly": true,
          "description": "The inner error, contains a more specific error code.",
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The server error.",
      "type": "object"
    },
    "DeletedManagedHsm": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The Azure Resource Manager resource ID for the deleted managed HSM Pool."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the managed HSM Pool."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the managed HSM Pool."
        },
        "properties": {
          "$ref": "#/definitions/DeletedManagedHsmProperties",
          "description": "Properties of the deleted managed HSM"
        }
      },
      "type": "object"
    },
    "DeletedManagedHsmProperties": {
      "properties": {
        "mhsmId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id of the original managed HSM."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the original managed HSM."
        },
        "deletionDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The deleted date."
        },
        "scheduledPurgeDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The scheduled purged date."
        },
        "purgeProtectionEnabled": {
          "readOnly": true,
          "type": "boolean",
          "description": "Purge protection status of the original managed HSM."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags of the original managed HSM."
        }
      },
      "description": "Properties of the deleted managed HSM.",
      "type": "object"
    },
    "DeletedManagedHsmListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedManagedHsm"
          },
          "description": "The list of deleted managed HSM Pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of deleted managed HSM Pools."
        }
      },
      "description": "List of deleted managed HSM Pools",
      "type": "object"
    },
    "MHSMGeoReplicatedRegion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the geo replicated region."
        },
        "provisioningState": {
          "$ref": "#/definitions/MHSMGeoReplicationRegionProvisioningState",
          "description": "Provisioning state of the geo replicated region."
        },
        "isPrimary": {
          "type": "boolean",
          "description": "A boolean value that indicates whether the region is the primary region or a secondary region."
        }
      },
      "description": "A region that this managed HSM Pool has been extended to."
    },
    "MHSMNetworkRuleSet": {
      "properties": {
        "bypass": {
          "type": "string",
          "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.",
          "enum": [
            "AzureServices",
            "None"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleBypassOptions",
            "modelAsString": true
          }
        },
        "defaultAction": {
          "type": "string",
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleAction",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMIPRule"
          },
          "x-ms-identifiers": [
            "value"
          ],
          "description": "The list of IP address rules."
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MHSMVirtualNetworkRule"
          },
          "description": "The list of virtual network rules."
        }
      },
      "description": "A set of rules governing the network accessibility of a managed hsm pool.",
      "type": "object"
    },
    "MHSMIPRule": {
      "properties": {
        "value": {
          "type": "string",
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
        }
      },
      "required": [
        "value"
      ],
      "description": "A rule governing the accessibility of a managed HSM pool from a specific IP address or IP range.",
      "type": "object"
    },
    "MHSMVirtualNetworkRule": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
        }
      },
      "required": [
        "id"
      ],
      "description": "A rule governing the accessibility of a managed hsm pool from a specific virtual network.",
      "type": "object"
    },
    "MHSMPrivateEndpointConnectionItem": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of private endpoint connection."
        },
        "etag": {
          "type": "string",
          "description": "Modified whenever there is a change in the state of private endpoint connection."
        },
        "properties": {
          "$ref": "#/definitions/MHSMPrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Private endpoint connection properties."
        }
      },
      "description": "Private endpoint connection item.",
      "type": "object"
    },
    "MHSMPrivateEndpointConnection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/MHSMPrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        },
        "etag": {
          "type": "string",
          "description": "Modified whenever there is a change in the state of private endpoint connection."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedHsmResource"
        }
      ],
      "description": "Private endpoint connection resource.",
      "x-ms-azure-resource": true,
      "type": "object"
    },
    "MHSMPrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/MHSMPrivateEndpoint",
          "description": "Properties of the private endpoint object."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/MHSMPrivateLinkServiceConnectionState",
          "description": "Approval state of the private link connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/MHSMPrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the private endpoint connection."
        }
      },
      "description": "Properties of the private endpoint connection resource.",
      "type": "object"
    },
    "MHSMPrivateEndpoint": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full identifier of the private endpoint resource."
        }
      },
      "description": "Private endpoint object properties.",
      "type": "object"
    },
    "MHSMPrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "$ref": "#/definitions/MHSMPrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been approved, rejected or removed by the key vault owner."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval or rejection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "enum": [
            "None"
          ],
          "x-ms-enum": {
            "name": "ActionsRequired",
            "modelAsString": true
          }
        }
      },
      "description": "An object that represents the approval state of the private link connection.",
      "type": "object"
    },
    "MHSMPrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "MHSMPrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Deleting",
        "Failed",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "MHSMPrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/MHSMPrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources",
      "type": "object"
    },
    "MHSMPrivateLinkResource": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/MHSMPrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedHsmResource"
        }
      ],
      "description": "A private link resource",
      "type": "object"
    },
    "MHSMPrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "Group identifier of private link resource.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required member names of private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required DNS zone names of the the private link resource."
        }
      },
      "description": "Properties of a private link resource.",
      "type": "object"
    },
    "MHSMGeoReplicationRegionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Preprovisioning",
        "Provisioning",
        "Succeeded",
        "Failed",
        "Deleting",
        "Cleanup"
      ],
      "x-ms-enum": {
        "name": "GeoReplicationRegionProvisioningState",
        "modelAsString": true
      }
    },
    "CheckMhsmNameAvailabilityParameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The managed hsm name."
        }
      },
      "required": [
        "name"
      ],
      "description": "The parameters used to check the availability of the managed hsm name."
    },
    "CheckMhsmNameAvailabilityResult": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason that a managed hsm name could not be used. The reason element is only returned if NameAvailable is false.",
          "enum": [
            "AccountNameInvalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "Reason",
            "modelAsString": true
          }
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "An error message explaining the Reason value in more detail."
        }
      },
      "description": "The CheckMhsmNameAvailability operation response."
    },
    "ManagedHSMSecurityDomainProperties": {
      "type": "object",
      "properties": {
        "activationStatus": {
          "readOnly": true,
          "type": "string",
          "description": "Activation Status",
          "enum": [
            "Active",
            "NotActivated",
            "Unknown",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ActivationStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Active",
                "description": "The managed HSM Pool is active."
              },
              {
                "value": "NotActivated",
                "description": "The managed HSM Pool is not yet activated."
              },
              {
                "value": "Unknown",
                "description": "An unknown error occurred while activating managed hsm."
              },
              {
                "value": "Failed",
                "description": "Failed to activate managed hsm."
              }
            ]
          }
        },
        "activationStatusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Activation Status Message."
        }
      },
      "description": "The security domain properties of the managed hsm."
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}