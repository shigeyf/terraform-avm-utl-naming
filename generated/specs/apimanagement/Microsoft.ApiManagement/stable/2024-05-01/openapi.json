{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ApiManagement",
    "version": "2024-05-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders": {
      "get": {
        "tags": [
          "AuthorizationProvider"
        ],
        "operationId": "AuthorizationProvider_ListByService",
        "description": "Lists a collection of authorization providers defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListAuthorizationProviders": {
            "$ref": "./examples/ApiManagementListAuthorizationProviders.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Authorization Provider entities for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationProviderCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/AuthorizationProviderContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}": {
      "get": {
        "tags": [
          "AuthorizationProvider"
        ],
        "operationId": "AuthorizationProvider_Get",
        "description": "Gets the details of the authorization provider specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetAuthorizationProvider": {
            "$ref": "./examples/ApiManagementGetAuthorizationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified authorization provider entity. No secrets included",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuthorizationProvider"
        ],
        "operationId": "AuthorizationProvider_CreateOrUpdate",
        "description": "Creates or updates authorization provider.",
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationProviderAADAuthCode": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderAADAuthCode.json"
          },
          "ApiManagementCreateAuthorizationProviderAADClientCred": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderAADClientCred.json"
          },
          "ApiManagementCreateAuthorizationProviderGenericOAuth2": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderGenericOAuth2.json"
          },
          "ApiManagementCreateAuthorizationProviderOOBGoogle": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderOOBGoogle.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationProviderContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Authorization provider was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The existing Authorization provider was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizationProvider"
        ],
        "operationId": "AuthorizationProvider_Delete",
        "description": "Deletes specific authorization provider from the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationProvider": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization provider was successfully deleted."
          },
          "204": {
            "description": "The authorization server settings were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations": {
      "get": {
        "tags": [
          "Authorizations"
        ],
        "operationId": "Authorization_ListByAuthorizationProvider",
        "description": "Lists a collection of authorization providers defined within a authorization provider.",
        "x-ms-examples": {
          "ApiManagementListAuthorizationsAuthCode": {
            "$ref": "./examples/ApiManagementListAuthorizationsAuthCode.json"
          },
          "ApiManagementListAuthorizationsClientCred": {
            "$ref": "./examples/ApiManagementListAuthorizationsClientCred.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Authorization entities for the specified Authorization provider.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/AuthorizationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}": {
      "get": {
        "tags": [
          "Authorization"
        ],
        "operationId": "Authorization_Get",
        "description": "Gets the details of the authorization specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetAuthorization": {
            "$ref": "./examples/ApiManagementGetAuthorization.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified authorization entity. No secrets included",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Authorization"
        ],
        "operationId": "Authorization_CreateOrUpdate",
        "description": "Creates or updates authorization.",
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationAADAuthCode": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAADAuthCode.json"
          },
          "ApiManagementCreateAuthorizationAADClientCred": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAADClientCred.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Authorization was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The existing Authorization was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Authorization"
        ],
        "operationId": "Authorization_Delete",
        "description": "Deletes specific Authorization from the Authorization provider.",
        "x-ms-examples": {
          "ApiManagementDeleteAuthorization": {
            "$ref": "./examples/ApiManagementDeleteAuthorization.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization was successfully deleted."
          },
          "204": {
            "description": "The authorization resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/getLoginLinks": {
      "post": {
        "tags": [
          "AuthorizationLoginLinks"
        ],
        "operationId": "AuthorizationLoginLinks_Post",
        "description": "Gets authorization login links.",
        "x-ms-examples": {
          "ApiManagementGetAuthorizationLoginRequest": {
            "$ref": "./examples/ApiManagementGetAuthorizationLoginRequest.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationLoginRequestContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified authorization login link.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationLoginResponseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/confirmConsentCode": {
      "post": {
        "tags": [
          "AuthorizationConfirmConsentCode"
        ],
        "operationId": "Authorization_ConfirmConsentCode",
        "description": "Confirm valid consent code to suppress Authorizations anti-phishing page.",
        "x-ms-examples": {
          "ApiManagementPostAuthorizationConfirmConsentCodeRequest": {
            "$ref": "./examples/ApiManagementPostAuthorizationConfirmConsentCodeRequest.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationConfirmConsentCodeRequestContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body is empty.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/accessPolicies": {
      "get": {
        "tags": [
          "AuthorizationAccessPolicy"
        ],
        "operationId": "AuthorizationAccessPolicy_ListByAuthorization",
        "description": "Lists a collection of authorization access policy defined within a authorization.",
        "x-ms-examples": {
          "ApiManagementListAuthorizationAccessPolicies": {
            "$ref": "./examples/ApiManagementListAuthorizationAccessPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Authorization Access Policy entities for the specified Authorization provider.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationAccessPolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/AuthorizationAccessPolicyContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/accessPolicies/{authorizationAccessPolicyId}": {
      "get": {
        "tags": [
          "AuthorizationAccessPolicy"
        ],
        "operationId": "AuthorizationAccessPolicy_Get",
        "description": "Gets the details of the authorization access policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementGetAuthorizationAccessPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationAccessPolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified authorization access policy entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuthorizationAccessPolicy"
        ],
        "operationId": "AuthorizationAccessPolicy_CreateOrUpdate",
        "description": "Creates or updates Authorization Access Policy.",
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAccessPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationAccessPolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationAccessPolicyContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Authorization access policy was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The existing Authorization access policy was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizationAccessPolicy"
        ],
        "operationId": "AuthorizationAccessPolicy_Delete",
        "description": "Deletes specific access policy from the Authorization.",
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationAccessPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationProviderIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationIdParameter"
          },
          {
            "$ref": "#/parameters/AuthorizationAccessPolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization access policy was successfully deleted."
          },
          "204": {
            "description": "The authorization server settings were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers": {
      "get": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_ListByService",
        "description": "Lists a collection of loggers in the specified service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs"
        },
        "x-ms-examples": {
          "ApiManagementListLoggers": {
            "$ref": "./examples/ApiManagementListLoggers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Logger entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/LoggerContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}": {
      "head": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the logger specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadLogger": {
            "$ref": "./examples/ApiManagementHeadLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified logger entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_Get",
        "description": "Gets the details of the logger specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetLogger": {
            "$ref": "./examples/ApiManagementGetLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Logger entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_CreateOrUpdate",
        "description": "Creates or Updates a logger.",
        "x-ms-examples": {
          "ApiManagementCreateEHLogger": {
            "$ref": "./examples/ApiManagementCreateEHLogger.json"
          },
          "ApiManagementCreateAILogger": {
            "$ref": "./examples/ApiManagementCreateAILogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Logger was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The existing logger was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_Update",
        "description": "Updates an existing logger.",
        "x-ms-examples": {
          "ApiManagementUpdateLogger": {
            "$ref": "./examples/ApiManagementUpdateLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerUpdateContract"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing logger was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Logger"
        ],
        "operationId": "Logger_Delete",
        "description": "Deletes the specified logger.",
        "x-ms-examples": {
          "ApiManagementDeleteLogger": {
            "$ref": "./examples/ApiManagementDeleteLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The logger was successfully deleted."
          },
          "204": {
            "description": "The logger was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers": {
      "get": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_ListByService",
        "description": "Lists a collection of authorization servers defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListAuthorizationServers": {
            "$ref": "./examples/ApiManagementListAuthorizationServers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Authorization Server entities for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/AuthorizationServerContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}": {
      "head": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the authorizationServer specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadAuthorizationServer": {
            "$ref": "./examples/ApiManagementHeadAuthorizationServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified authorization server entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_Get",
        "description": "Gets the details of the authorization server specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetAuthorizationServer": {
            "$ref": "./examples/ApiManagementGetAuthorizationServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the specified authorization server. No secrets included.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_CreateOrUpdate",
        "description": "Creates new authorization server or updates an existing authorization server.",
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationServer": {
            "$ref": "./examples/ApiManagementCreateAuthorizationServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Authorization server was successfully registered.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerContract"
            }
          },
          "200": {
            "description": "Authorization server is already registered.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_Update",
        "description": "Updates the details of the authorization server specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateAuthorizationServer": {
            "$ref": "./examples/ApiManagementUpdateAuthorizationServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerUpdateContract"
            },
            "description": "OAuth2 Server settings Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The authorization server settings were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_Delete",
        "description": "Deletes specific authorization server instance.",
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationServer": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The authorization server settings were successfully deleted."
          },
          "204": {
            "description": "The authorization server settings were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}/listSecrets": {
      "post": {
        "tags": [
          "AuthorizationServer"
        ],
        "operationId": "AuthorizationServer_ListSecrets",
        "description": "Gets the client secret details of the authorization server.",
        "x-ms-examples": {
          "ApiManagementAuthorizationServerListSecrets": {
            "$ref": "./examples/ApiManagementAuthorizationServerListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the secrets of the specified authorization server.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AuthorizationServerSecretsContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings": {
      "get": {
        "deprecated": true,
        "tags": [
          "PortalSettings"
        ],
        "operationId": "PortalSettings_ListByService",
        "description": "Lists a collection of portalsettings defined within a service instance..",
        "x-ms-examples": {
          "ApiManagementListPortalSettings": {
            "$ref": "./examples/ApiManagementListPortalSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Portal Settings entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSettingsCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin": {
      "head": {
        "deprecated": true,
        "tags": [
          "SignInSettings"
        ],
        "operationId": "SignInSettings_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the SignInSettings.",
        "x-ms-examples": {
          "ApiManagementHeadSignInSettings": {
            "$ref": "./examples/ApiManagementHeadSignInSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "deprecated": true,
        "tags": [
          "SignInSettings"
        ],
        "operationId": "SignInSettings_Get",
        "description": "Get Sign In Settings for the Portal",
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsGetSignIn.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sign-In settings.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSigninSettings"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "deprecated": true,
        "tags": [
          "SignInSettings"
        ],
        "operationId": "SignInSettings_Update",
        "description": "Update Sign-In settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateSignIn.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSigninSettings"
            },
            "description": "Update Sign-In settings."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Sign-In settings was updated successfully."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "deprecated": true,
        "tags": [
          "SignInSettings"
        ],
        "operationId": "SignInSettings_CreateOrUpdate",
        "description": "Create or Update Sign-In settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsPutSignIn.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSigninSettings"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sign-In settings was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSigninSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup": {
      "head": {
        "deprecated": true,
        "tags": [
          "SignUpSettings"
        ],
        "operationId": "SignUpSettings_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the SignUpSettings.",
        "x-ms-examples": {
          "ApiManagementHeadSignUpSettings": {
            "$ref": "./examples/ApiManagementHeadSignUpSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "deprecated": true,
        "tags": [
          "SignUpSettings"
        ],
        "operationId": "SignUpSettings_Get",
        "description": "Get Sign Up Settings for the Portal",
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsGetSignUp.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sign-Up settings.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSignupSettings"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "deprecated": true,
        "tags": [
          "SignUpSettings"
        ],
        "operationId": "SignUpSettings_Update",
        "description": "Update Sign-Up settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateSignUp.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSignupSettings"
            },
            "description": "Update Sign-Up settings."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Sign-Up settings was updated successfully."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "deprecated": true,
        "tags": [
          "SignUpSettings"
        ],
        "operationId": "SignUpSettings_CreateOrUpdate",
        "description": "Create or Update Sign-Up settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsPutSignUp.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSignupSettings"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sign-Up settings was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSignupSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation": {
      "head": {
        "deprecated": true,
        "tags": [
          "DelegationSettings"
        ],
        "operationId": "DelegationSettings_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the DelegationSettings.",
        "x-ms-examples": {
          "ApiManagementHeadDelegationSettings": {
            "$ref": "./examples/ApiManagementHeadDelegationSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "deprecated": true,
        "tags": [
          "DelegationSettings"
        ],
        "operationId": "DelegationSettings_Get",
        "description": "Get Delegation Settings for the Portal.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsGetDelegation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delegation settings.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalDelegationSettings"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "deprecated": true,
        "tags": [
          "DelegationSettings"
        ],
        "operationId": "DelegationSettings_Update",
        "description": "Update Delegation settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateDelegation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalDelegationSettings"
            },
            "description": "Update Delegation settings."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delegation settings was updated successfully."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "deprecated": true,
        "tags": [
          "DelegationSettings"
        ],
        "operationId": "DelegationSettings_CreateOrUpdate",
        "description": "Create or Update Delegation settings.",
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsPutDelegation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalDelegationSettings"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delegation settings was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalDelegationSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation/listSecrets": {
      "post": {
        "deprecated": true,
        "tags": [
          "DelegationSettings"
        ],
        "operationId": "DelegationSettings_ListSecrets",
        "description": "Gets the secret validation key of the DelegationSettings.",
        "x-ms-examples": {
          "ApiManagementListSecretsPortalSettings": {
            "$ref": "./examples/ApiManagementListSecretsPortalSettingsValidationKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the validation key.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalSettingValidationKeyContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas": {
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "GlobalSchema_ListByService",
        "description": "Lists a collection of schemas registered with service instance.",
        "x-ms-examples": {
          "ApiManagementListSchemas": {
            "$ref": "./examples/ApiManagementListGlobalSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Schema entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GlobalSchemaContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "Schema"
        ],
        "operationId": "GlobalSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApi": {
            "$ref": "./examples/ApiManagementHeadGlobalSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "GlobalSchema_Get",
        "description": "Gets the details of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetSchema1": {
            "$ref": "./examples/ApiManagementGetGlobalSchema1.json"
          },
          "ApiManagementGetSchema2": {
            "$ref": "./examples/ApiManagementGetGlobalSchema2.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Schema entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "GlobalSchema_CreateOrUpdate",
        "description": "Creates new or updates existing specified Schema of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateSchema1": {
            "$ref": "./examples/ApiManagementCreateGlobalSchema1.json"
          },
          "ApiManagementCreateSchema2": {
            "$ref": "./examples/ApiManagementCreateGlobalSchema2.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Schema was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "200": {
            "description": "The Schema details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "Schema"
        ],
        "operationId": "GlobalSchema_Delete",
        "description": "Deletes specific Schema.",
        "x-ms-examples": {
          "ApiManagementDeleteSchema": {
            "$ref": "./examples/ApiManagementDeleteGlobalSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Schema was successfully deleted."
          },
          "204": {
            "description": "The Schema was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyRestrictions": {
      "get": {
        "tags": [
          "PolicyRestrictions"
        ],
        "operationId": "PolicyRestriction_ListByService",
        "description": "Gets all policy restrictions of API Management services.",
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementListPolicyRestrictions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Policy Restrictions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyRestrictions/{policyRestrictionId}": {
      "head": {
        "tags": [
          "PolicyRestriction"
        ],
        "operationId": "PolicyRestriction_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the policy restriction in the Api Management service.",
        "x-ms-examples": {
          "ApiManagementHeadPolicyRestriction": {
            "$ref": "./examples/ApiManagementHeadPolicyRestriction.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyRestrictionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PolicyRestriction"
        ],
        "operationId": "PolicyRestriction_Get",
        "description": "Get the policy restriction of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementGetPolicyRestriction": {
            "$ref": "./examples/ApiManagementGetPolicyRestriction.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyRestrictionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the policy restriction of the Api Management service.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyRestriction"
        ],
        "operationId": "PolicyRestriction_CreateOrUpdate",
        "description": "Creates or updates the policy restriction configuration of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementCreatePolicyRestriction": {
            "$ref": "./examples/ApiManagementCreatePolicyRestriction.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyRestrictionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionContract"
            },
            "description": "The policy restriction to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Policy restriction configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Policy restriction configuration of the Api Management service was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PolicyRestriction"
        ],
        "operationId": "PolicyRestriction_Update",
        "description": "Updates the policy restriction configuration of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementUpdatePolicyRestriction": {
            "$ref": "./examples/ApiManagementUpdatePolicyRestriction.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyRestrictionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionUpdateContract"
            },
            "description": "The policy restriction to apply."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy restriction configuration of the Api Management service was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PolicyRestriction"
        ],
        "operationId": "PolicyRestriction_Delete",
        "description": "Deletes the policy restriction configuration of the Api Management Service.",
        "x-ms-examples": {
          "ApiManagementDeletePolicyRestriction": {
            "$ref": "./examples/ApiManagementDeletePolicyRestriction.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyRestrictionIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy restriction was successfully removed."
          },
          "204": {
            "description": "Policy restriction was successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaceLinks": {
      "get": {
        "tags": [
          "ApiManagementWorkspaceLinks"
        ],
        "operationId": "ApiManagementWorkspaceLinks_ListByService",
        "description": "List all API Management workspaceLinks for a service.",
        "x-ms-examples": {
          "ApiManagementListGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementListWorkspaceLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateway workspaceLinks list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiManagementWorkspaceLinksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaceLinks/{workspaceId}": {
      "get": {
        "tags": [
          "ApiManagementWorkspaceLinks"
        ],
        "operationId": "ApiManagementWorkspaceLink_Get",
        "description": "Gets an API Management WorkspaceLink resource description.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceLinks": {
            "$ref": "./examples/ApiManagementGetWorkspaceLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the API Management WorkspaceLink resource.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiManagementWorkspaceLinksResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings": {
      "get": {
        "deprecated": true,
        "tags": [
          "TenantSettings"
        ],
        "operationId": "TenantSettings_ListByService",
        "description": "Public settings.",
        "x-ms-examples": {
          "ApiManagementListTenantSettings": {
            "$ref": "./examples/ApiManagementListTenantSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Not used"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TenantSettings entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TenantSettingsCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TenantSettingsContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}": {
      "get": {
        "deprecated": true,
        "tags": [
          "TenantSettings"
        ],
        "operationId": "TenantSettings_Get",
        "description": "Get tenant settings.",
        "x-ms-examples": {
          "ApiManagementGetTenantSettings": {
            "$ref": "./examples/ApiManagementGetTenantSettings.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SettingsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Settings.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TenantSettingsContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions": {
      "get": {
        "tags": [
          "PolicyDescription"
        ],
        "operationId": "PolicyDescription_ListByService",
        "description": "Lists all policy descriptions.",
        "x-ms-examples": {
          "ApiManagementListPolicyDescriptions": {
            "$ref": "./examples/ApiManagementListPolicyDescriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Policy scope.",
            "enum": [
              "Tenant",
              "Product",
              "Api",
              "Operation",
              "All"
            ],
            "x-ms-enum": {
              "name": "PolicyScopeContract",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of policy descriptions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyDescriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis": {
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_ListByService",
        "description": "Lists all APIs of the API Management service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "x-ms-examples": {
          "ApiManagementListApis": {
            "$ref": "./examples/ApiManagementListApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "name": "expandApiVersionSet",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include full ApiVersionSet resource in response"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of Apis.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}": {
      "head": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApi": {
            "$ref": "./examples/ApiManagementHeadApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_Get",
        "description": "Gets the details of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiContract": {
            "$ref": "./examples/ApiManagementGetApiContract.json"
          },
          "ApiManagementGetApiRevisionContract": {
            "$ref": "./examples/ApiManagementGetApiRevision.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_CreateOrUpdate",
        "description": "Creates new or updates existing specified API of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateApiUsingOai3Import": {
            "$ref": "./examples/ApiManagementCreateApiUsingOai3Import.json"
          },
          "ApiManagementCreateApiUsingOai3ImportWithTranslateRequiredQueryParametersConduct": {
            "$ref": "./examples/ApiManagementCreateApiUsingOai3ImportWithTranslateRequiredQueryParametersConduct.json"
          },
          "ApiManagementCreateApiUsingSwaggerImport": {
            "$ref": "./examples/ApiManagementCreateApiUsingSwaggerImport.json"
          },
          "ApiManagementCreateApiUsingWadlImport": {
            "$ref": "./examples/ApiManagementCreateApiUsingWadlImport.json"
          },
          "ApiManagementCreateSoapToRestApiUsingWsdlImport": {
            "$ref": "./examples/ApiManagementCreateSoapToRestApiUsingWsdlImport.json"
          },
          "ApiManagementCreateSoapPassThroughApiUsingWsdlImport": {
            "$ref": "./examples/ApiManagementCreateSoapPassThroughApiUsingWsdlImport.json"
          },
          "ApiManagementCreateApi": {
            "$ref": "./examples/ApiManagementCreateApi.json"
          },
          "ApiManagementCreateApiWithMultipleAuthServers": {
            "$ref": "./examples/ApiManagementCreateApiWithMultipleAuthServers.json"
          },
          "ApiManagementCreateApiWithMultipleOpenIdConnectProviders": {
            "$ref": "./examples/ApiManagementCreateApiWithMultipleOpenIdConnectProviders.json"
          },
          "ApiManagementCreateWebSocketApi": {
            "$ref": "./examples/ApiManagementCreateWebsocketApi.json"
          },
          "ApiManagementCreateApiRevisionFromExistingApi": {
            "$ref": "./examples/ApiManagementCreateApiRevisionFromExistingApi.json"
          },
          "ApiManagementCreateApiNewVersionUsingExistingApi": {
            "$ref": "./examples/ApiManagementCreateApiNewVersionUsingExistingApi.json"
          },
          "ApiManagementCreateApiClone": {
            "$ref": "./examples/ApiManagementCreateApiClone.json"
          },
          "ApiManagementCreateApiWithOpenIdConnect": {
            "$ref": "./examples/ApiManagementCreateApiWithOpenIdConnect.json"
          },
          "ApiManagementCreateApiUsingImportOverrideServiceUrl": {
            "$ref": "./examples/ApiManagementCreateApiUsingImportOverrideServiceUrl.json"
          },
          "ApiManagementCreateGraphQLApi": {
            "$ref": "./examples/ApiManagementCreateGraphQLApi.json"
          },
          "ApiManagementCreateODataApi": {
            "$ref": "./examples/ApiManagementCreateODataApi.json"
          },
          "ApiManagementCreateGrpcApi": {
            "$ref": "./examples/ApiManagementCreateGrpcApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCreateOrUpdateParameter"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "API was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_Update",
        "description": "Updates the specified API of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementUpdateApi": {
            "$ref": "./examples/ApiManagementUpdateApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiUpdateContract"
            },
            "description": "API Update Contract parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Api"
        ],
        "operationId": "Api_Delete",
        "description": "Deletes the specified API of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteApi": {
            "$ref": "./examples/ApiManagementDeleteApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "deleteRevisions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete all revisions of the Api."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The API was scheduled for deletion.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The API was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions": {
      "get": {
        "tags": [
          "ApiRevision"
        ],
        "operationId": "ApiRevision_ListByService",
        "description": "Lists all revisions of an API.",
        "x-ms-examples": {
          "ApiManagementListApiRevisions": {
            "$ref": "./examples/ApiManagementListApiRevisions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of revision details.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiRevisionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiRevisionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases": {
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_ListByService",
        "description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "x-ms-examples": {
          "ApiManagementListApiReleases": {
            "$ref": "./examples/ApiManagementListApiReleases.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of API Releases.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiReleaseContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}": {
      "head": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_GetEntityTag",
        "description": "Returns the etag of an API release.",
        "x-ms-examples": {
          "ApiManagementHeadApiRelease": {
            "$ref": "./examples/ApiManagementHeadApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity state (Etag) version of the api release as specified by its identifier.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_Get",
        "description": "Returns the details of an API release.",
        "x-ms-examples": {
          "ApiManagementGetApiRelease": {
            "$ref": "./examples/ApiManagementGetApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns the details of an API Release.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_CreateOrUpdate",
        "description": "Creates a new Release for the API.",
        "x-ms-examples": {
          "ApiManagementCreateApiRelease": {
            "$ref": "./examples/ApiManagementCreateApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Release was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_Update",
        "description": "Updates the details of the release of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateApiRelease": {
            "$ref": "./examples/ApiManagementUpdateApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "API Release Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "ApiRelease_Delete",
        "description": "Deletes the specified release in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteApiRelease": {
            "$ref": "./examples/ApiManagementDeleteApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API release successfully removed"
          },
          "204": {
            "description": "API release successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations": {
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_ListByApi",
        "description": "Lists a collection of the operations for the specified API.",
        "x-ms-examples": {
          "ApiManagementListApiOperations": {
            "$ref": "./examples/ApiManagementListApiOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of operation summary entities at the API level.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/OperationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}": {
      "head": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiOperation": {
            "$ref": "./examples/ApiManagementHeadApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_Get",
        "description": "Gets the details of the API Operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiOperation": {
            "$ref": "./examples/ApiManagementGetApiOperation.json"
          },
          "ApiManagementGetApiOperationPetStore": {
            "$ref": "./examples/ApiManagementGetApiOperationPetStore.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Operation entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_CreateOrUpdate",
        "description": "Creates a new operation in the API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiOperation": {
            "$ref": "./examples/ApiManagementCreateApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_Update",
        "description": "Updates the details of the operation in the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateApiOperation": {
            "$ref": "./examples/ApiManagementUpdateApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationUpdateContract"
            },
            "description": "API Operation Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "ApiOperation_Delete",
        "description": "Deletes the specified operation in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteApiOperation": {
            "$ref": "./examples/ApiManagementDeleteApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API operation successfully removed"
          },
          "204": {
            "description": "API operation successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies": {
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "ApiOperationPolicy_ListByOperation",
        "description": "Get the list of policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementListApiOperationPolicies": {
            "$ref": "./examples/ApiManagementListApiOperationPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operations Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "ApiOperationPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiOperationPolicy": {
            "$ref": "./examples/ApiManagementHeadApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "ApiOperationPolicy_Get",
        "description": "Get the policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementGetApiOperationPolicy": {
            "$ref": "./examples/ApiManagementGetApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operation Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "ApiOperationPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API Operation level.",
        "x-ms-examples": {
          "ApiManagementCreateApiOperationPolicy": {
            "$ref": "./examples/ApiManagementCreateApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Operation policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Operation policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "ApiOperationPolicy_Delete",
        "description": "Deletes the policy configuration at the Api Operation.",
        "x-ms-examples": {
          "ApiManagementDeleteApiOperationPolicy": {
            "$ref": "./examples/ApiManagementDeleteApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags": {
      "get": {
        "tags": [
          "ApiOperationTag"
        ],
        "operationId": "Tag_ListByOperation",
        "description": "Lists all Tags associated with the Operation.",
        "x-ms-examples": {
          "ApiManagementListApiOperationTags": {
            "$ref": "./examples/ApiManagementListApiOperationTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Operation entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}": {
      "head": {
        "tags": [
          "ApiOperationTag"
        ],
        "operationId": "Tag_GetEntityStateByOperation",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiOperationTag": {
            "$ref": "./examples/ApiManagementHeadApiOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperationTag"
        ],
        "operationId": "Tag_GetByOperation",
        "description": "Get tag associated with the Operation.",
        "x-ms-examples": {
          "ApiManagementGetApiOperationTag": {
            "$ref": "./examples/ApiManagementGetApiOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperationTag"
        ],
        "operationId": "Tag_AssignToOperation",
        "description": "Assign tag to the Operation.",
        "x-ms-examples": {
          "ApiManagementCreateApiOperationTag": {
            "$ref": "./examples/ApiManagementCreateApiOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Operation.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag is already assigned to the Operation.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperationTag"
        ],
        "operationId": "Tag_DetachFromOperation",
        "description": "Detach the tag from the Operation.",
        "x-ms-examples": {
          "ApiManagementDeleteApiOperationTag": {
            "$ref": "./examples/ApiManagementDeleteApiOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag was successfully removed from Operation"
          },
          "204": {
            "description": "Tag successfully removed by previous request or does not exist in Operation"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers": {
      "get": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_ListByApi",
        "description": "Lists a collection of the resolvers for the specified GraphQL API.",
        "x-ms-examples": {
          "ApiManagementListGraphQLApiResolvers": {
            "$ref": "./examples/ApiManagementListGraphQLApiResolvers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of resolvers summary entities at the GraphQL API level.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverCollection"
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ResolverContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}": {
      "head": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the GraphQL API resolver specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementHeadGraphQLApiResolver.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified GraphQL API resolver entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_Get",
        "description": "Gets the details of the GraphQL API Resolver specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementGetGraphQLApiResolver.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Resolver entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_CreateOrUpdate",
        "description": "Creates a new resolver in the GraphQL API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementCreateGraphQLApiResolver.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Resolver was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Resolver was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_Update",
        "description": "Updates the details of the resolver in the GraphQL API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementUpdateGraphQLApiResolver.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverUpdateContract"
            },
            "description": "GraphQL API Resolver Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resolver was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GraphQLApiResolver"
        ],
        "operationId": "GraphQLApiResolver_Delete",
        "description": "Deletes the specified resolver in the GraphQL API.",
        "x-ms-examples": {
          "ApiManagementDeleteGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementDeleteGraphQLApiResolver.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "GraphQL API resolver successfully removed"
          },
          "204": {
            "description": "GraphQL API resolver successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}/policies": {
      "get": {
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "operationId": "GraphQLApiResolverPolicy_ListByResolver",
        "description": "Get the list of policy configuration at the GraphQL API Resolver level.",
        "x-ms-examples": {
          "ApiManagementListGraphQLApiResolverPolicies": {
            "$ref": "./examples/ApiManagementListGraphQLApiResolverPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "GraphQL Api Resolvers Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}/policies/{policyId}": {
      "head": {
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "operationId": "GraphQLApiResolverPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the GraphQL API resolver policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementHeadGraphQLApiResolverPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified GraphQL API resolver policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "operationId": "GraphQLApiResolverPolicy_Get",
        "description": "Get the policy configuration at the GraphQL API Resolver level.",
        "x-ms-examples": {
          "ApiManagementGetGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementGetGraphQLApiResolverPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "GraphQL Api Resolver Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "operationId": "GraphQLApiResolverPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the GraphQL API Resolver level.",
        "x-ms-examples": {
          "ApiManagementCreateGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementCreateGraphQLApiResolverPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "GraphQL Api Resolver policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "GraphQL Api Resolver policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "operationId": "GraphQLApiResolverPolicy_Delete",
        "description": "Deletes the policy configuration at the GraphQL Api Resolver.",
        "x-ms-examples": {
          "ApiManagementDeleteGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementDeleteGraphQLApiResolverPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ResolverIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the resolver failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products": {
      "get": {
        "tags": [
          "ApiProduct"
        ],
        "operationId": "ApiProduct_ListByApis",
        "description": "Lists all Products, which the API is part of.",
        "x-ms-examples": {
          "ApiManagementListApiProducts": {
            "$ref": "./examples/ApiManagementListApiProducts.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of products which have the Api entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies": {
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "ApiPolicy_ListByApi",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListApiPolicies": {
            "$ref": "./examples/ApiManagementListApiPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "ApiPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiPolicy": {
            "$ref": "./examples/ApiManagementHeadApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API Policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "ApiPolicy_Get",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetApiPolicy": {
            "$ref": "./examples/ApiManagementGetApiPolicy.json"
          }
        },
        "produces": [
          "application/json",
          "application/vnd.ms-azure-apim.policy+xml",
          "application/vnd.ms-azure-apim.policy.raw+xml"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "ApiPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateApiPolicy": {
            "$ref": "./examples/ApiManagementCreateApiPolicy.json"
          },
          "ApiManagementCreateApiPolicyNonXmlEncoded": {
            "$ref": "./examples/ApiManagementCreateApiPolicyNonXmlEncoded.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "ApiPolicy_Delete",
        "description": "Deletes the policy configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiPolicy": {
            "$ref": "./examples/ApiManagementDeleteApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas": {
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_ListByApi",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListApiSchemas": {
            "$ref": "./examples/ApiManagementListApiSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Schema Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiSchema": {
            "$ref": "./examples/ApiManagementHeadApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_Get",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetApiSchema": {
            "$ref": "./examples/ApiManagementGetApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Schema information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_CreateOrUpdate",
        "description": "Creates or updates schema configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateApiSchema": {
            "$ref": "./examples/ApiManagementCreateApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "description": "The schema contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api schema configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api schema configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "ApiSchema_Delete",
        "description": "Deletes the schema configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiSchema": {
            "$ref": "./examples/ApiManagementDeleteApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true removes all references to the schema before deleting it."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics": {
      "get": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_ListByService",
        "description": "Lists all diagnostics of an API.",
        "x-ms-examples": {
          "ApiManagementListApiDiagnostics": {
            "$ref": "./examples/ApiManagementListApiDiagnostics.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of diagnostics for an API.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/DiagnosticContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}": {
      "head": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiDiagnostic": {
            "$ref": "./examples/ApiManagementHeadApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_Get",
        "description": "Gets the details of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiDiagnostic": {
            "$ref": "./examples/ApiManagementGetApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Diagnostic entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_CreateOrUpdate",
        "description": "Creates a new Diagnostic for an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiDiagnostic": {
            "$ref": "./examples/ApiManagementCreateApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Diagnostic was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Diagnostic was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_Update",
        "description": "Updates the details of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateApiDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Diagnostic Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "ApiDiagnostic_Delete",
        "description": "Deletes the specified Diagnostic from an API.",
        "x-ms-examples": {
          "ApiManagementDeleteApiDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic successfully removed"
          },
          "204": {
            "description": "Diagnostic successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues": {
      "get": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_ListByService",
        "description": "Lists all issues associated with the specified API.",
        "x-ms-examples": {
          "ApiManagementListApiIssues": {
            "$ref": "./examples/ApiManagementListApiIssues.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>"
          },
          {
            "name": "expandCommentsAttachments",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Expand the comment attachments. "
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of issues for the API.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/IssueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}": {
      "head": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Issue for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiIssue": {
            "$ref": "./examples/ApiManagementHeadApiIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_Get",
        "description": "Gets the details of the Issue for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiIssue": {
            "$ref": "./examples/ApiManagementGetApiIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "name": "expandCommentsAttachments",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Expand the comment attachments. "
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Issue entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_CreateOrUpdate",
        "description": "Creates a new Issue for an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiIssue": {
            "$ref": "./examples/ApiManagementCreateApiIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "New api issue successfully added",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api issue successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_Update",
        "description": "Updates an existing issue for an API.",
        "x-ms-examples": {
          "ApiManagementUpdateApiIssue": {
            "$ref": "./examples/ApiManagementUpdateApiIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueUpdateContract"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api issue updated successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiIssue"
        ],
        "operationId": "ApiIssue_Delete",
        "description": "Deletes the specified Issue from an API.",
        "x-ms-examples": {
          "ApiManagementDeleteApiIssue": {
            "$ref": "./examples/ApiManagementDeleteApiIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Issue successfully removed"
          },
          "204": {
            "description": "Issue successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments": {
      "get": {
        "tags": [
          "ApiIssueComment"
        ],
        "operationId": "ApiIssueComment_ListByService",
        "description": "Lists all comments for the Issue associated with the specified API.",
        "x-ms-examples": {
          "ApiManagementListApiIssueComments": {
            "$ref": "./examples/ApiManagementListApiIssueComments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of issue comments for the API.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCommentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/IssueCommentContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}": {
      "head": {
        "tags": [
          "ApiIssueComment"
        ],
        "operationId": "ApiIssueComment_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the issue Comment for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiIssueComment": {
            "$ref": "./examples/ApiManagementHeadApiIssueComment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/CommentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiIssueComment"
        ],
        "operationId": "ApiIssueComment_Get",
        "description": "Gets the details of the issue Comment for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiIssueComment": {
            "$ref": "./examples/ApiManagementGetApiIssueComment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/CommentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified issue Comment entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiIssueComment"
        ],
        "operationId": "ApiIssueComment_CreateOrUpdate",
        "description": "Creates a new Comment for the Issue in an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiIssueComment": {
            "$ref": "./examples/ApiManagementCreateApiIssueComment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/CommentIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCommentContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "New api issue comment successfully added",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api issue comment successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiIssueComment"
        ],
        "operationId": "ApiIssueComment_Delete",
        "description": "Deletes the specified comment from an Issue.",
        "x-ms-examples": {
          "ApiManagementDeleteApiIssueComment": {
            "$ref": "./examples/ApiManagementDeleteApiIssueComment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/CommentIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment successfully removed"
          },
          "204": {
            "description": "Comment successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments": {
      "get": {
        "tags": [
          "ApiIssueAttachment"
        ],
        "operationId": "ApiIssueAttachment_ListByService",
        "description": "Lists all attachments for the Issue associated with the specified API.",
        "x-ms-examples": {
          "ApiManagementListApiIssueAttachments": {
            "$ref": "./examples/ApiManagementListApiIssueAttachments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of issue attachments for the API.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueAttachmentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/IssueAttachmentContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}": {
      "head": {
        "tags": [
          "ApiIssueAttachment"
        ],
        "operationId": "ApiIssueAttachment_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the issue Attachment for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiIssueAttachment": {
            "$ref": "./examples/ApiManagementHeadApiIssueAttachment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/AttachmentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiIssueAttachment"
        ],
        "operationId": "ApiIssueAttachment_Get",
        "description": "Gets the details of the issue Attachment for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiIssueAttachment": {
            "$ref": "./examples/ApiManagementGetApiIssueAttachment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/AttachmentIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified issue Attachment entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiIssueAttachment"
        ],
        "operationId": "ApiIssueAttachment_CreateOrUpdate",
        "description": "Creates a new Attachment for the Issue in an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiIssueAttachment": {
            "$ref": "./examples/ApiManagementCreateApiIssueAttachment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/AttachmentIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueAttachmentContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "New api issue attachment successfully added",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api issue attachment successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiIssueAttachment"
        ],
        "operationId": "ApiIssueAttachment_Delete",
        "description": "Deletes the specified comment from an Issue.",
        "x-ms-examples": {
          "ApiManagementDeleteApiIssueAttachment": {
            "$ref": "./examples/ApiManagementDeleteApiIssueAttachment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/AttachmentIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment successfully removed"
          },
          "204": {
            "description": "Attachment successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions": {
      "get": {
        "tags": [
          "ApiTagDescription"
        ],
        "operationId": "ApiTagDescription_ListByService",
        "description": "Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations",
        "x-ms-examples": {
          "ApiManagementListApiTagDescriptions": {
            "$ref": "./examples/ApiManagementListApiTagDescriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tagDescriptions associated with the Api entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagDescriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagDescriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}": {
      "head": {
        "tags": [
          "ApiTagDescription"
        ],
        "operationId": "ApiTagDescription_GetEntityTag",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiTagDescription": {
            "$ref": "./examples/ApiManagementHeadApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagDescriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiTagDescription"
        ],
        "operationId": "ApiTagDescription_Get",
        "description": "Get Tag description in scope of API",
        "x-ms-examples": {
          "ApiManagementGetApiTagDescription": {
            "$ref": "./examples/ApiManagementGetApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagDescriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the description of the tag specified by its identifier in scope if the Api.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiTagDescription"
        ],
        "operationId": "ApiTagDescription_CreateOrUpdate",
        "description": "Create/Update tag description in scope of the Api.",
        "x-ms-examples": {
          "ApiManagementCreateApiTagDescription": {
            "$ref": "./examples/ApiManagementCreateApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagDescriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagDescriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag Description was created for the Api.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Tag Description was updated for the Api.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiTagDescription"
        ],
        "operationId": "ApiTagDescription_Delete",
        "description": "Delete tag description for the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiTagDescription": {
            "$ref": "./examples/ApiManagementDeleteApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagDescriptionIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag description successfully removed"
          },
          "204": {
            "description": "Tag description successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags": {
      "get": {
        "tags": [
          "ApiTag"
        ],
        "operationId": "Tag_ListByApi",
        "description": "Lists all Tags associated with the API.",
        "x-ms-examples": {
          "ApiManagementListApiTags": {
            "$ref": "./examples/ApiManagementListApiTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Api entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}": {
      "head": {
        "tags": [
          "ApiTag"
        ],
        "operationId": "Tag_GetEntityStateByApi",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiTag": {
            "$ref": "./examples/ApiManagementHeadApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiTag"
        ],
        "operationId": "Tag_GetByApi",
        "description": "Get tag associated with the API.",
        "x-ms-examples": {
          "ApiManagementGetApiTag": {
            "$ref": "./examples/ApiManagementGetApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiTag"
        ],
        "operationId": "Tag_AssignToApi",
        "description": "Assign tag to the Api.",
        "x-ms-examples": {
          "ApiManagementCreateApiTag": {
            "$ref": "./examples/ApiManagementCreateApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Api.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Tag is already assigned to the Api.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiTag"
        ],
        "operationId": "Tag_DetachFromApi",
        "description": "Detach the tag from the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiTag": {
            "$ref": "./examples/ApiManagementDeleteApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API/Tag association successfully removed"
          },
          "204": {
            "description": "API/Tag association successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags": {
      "get": {
        "tags": [
          "ApiOperationsByTag"
        ],
        "operationId": "Operation_ListByTags",
        "description": "Lists a collection of operations associated with tags.",
        "x-ms-examples": {
          "ApiManagementListApiOperationsByTags": {
            "$ref": "./examples/ApiManagementListApiOperationsByTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "includeNotTaggedOperations",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include not tagged Operations."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TagResource entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagResourceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/wikis/default": {
      "head": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWiki_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Wiki for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiWiki": {
            "$ref": "./examples/ApiManagementHeadApiWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWiki_Get",
        "description": "Gets the details of the Wiki for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiWiki": {
            "$ref": "./examples/ApiManagementGetApiWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Wiki entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWiki_CreateOrUpdate",
        "description": "Creates a new Wiki for an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateApiWiki": {
            "$ref": "./examples/ApiManagementCreateApiWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Wiki was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Wiki was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWiki_Update",
        "description": "Updates the details of the Wiki for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateApiWiki": {
            "$ref": "./examples/ApiManagementUpdateApiWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiUpdateContract"
            },
            "description": "Wiki Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Wiki was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWiki_Delete",
        "description": "Deletes the specified Wiki from an API.",
        "x-ms-examples": {
          "ApiManagementDeleteApiWiki": {
            "$ref": "./examples/ApiManagementDeleteApiWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Wiki successfully removed"
          },
          "204": {
            "description": "Wiki successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/wikis": {
      "get": {
        "tags": [
          "ApiWiki"
        ],
        "operationId": "ApiWikis_List",
        "description": "Gets the wikis for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementListApiWikis": {
            "$ref": "./examples/ApiManagementListApiWikis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Wiki entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/WikiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "operationId": "OutboundNetworkDependenciesEndpoints_ListByService",
        "description": "Gets the network endpoints of all outbound dependencies of a ApiManagement service.",
        "x-ms-examples": {
          "ApiManagementServiceGetOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ApiManagementServiceGetOutboundNetworkDependenciesEndpoints.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_List",
        "description": "Lists all subscriptions of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListSubscriptions": {
            "$ref": "./examples/ApiManagementListSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the Subscription entities for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SubscriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}": {
      "head": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadSubscription": {
            "$ref": "./examples/ApiManagementHeadSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_Get",
        "description": "Gets the specified Subscription entity.",
        "x-ms-examples": {
          "ApiManagementGetSubscription": {
            "$ref": "./examples/ApiManagementGetSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Subscription entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_CreateOrUpdate",
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "x-ms-examples": {
          "ApiManagementCreateSubscription": {
            "$ref": "./examples/ApiManagementCreateSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "200": {
            "description": "The user already subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_Update",
        "description": "Updates the details of a subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateSubscription": {
            "$ref": "./examples/ApiManagementUpdateSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_Delete",
        "description": "Deletes the specified subscription.",
        "x-ms-examples": {
          "ApiManagementDeleteSubscription": {
            "$ref": "./examples/ApiManagementDeleteSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully deleted."
          },
          "204": {
            "description": "The subscription details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_RegeneratePrimaryKey",
        "description": "Regenerates primary key of existing subscription of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementSubscriptionRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegeneratePrimaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_RegenerateSecondaryKey",
        "description": "Regenerates secondary key of existing subscription of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementSubscriptionRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegenerateSecondaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/listSecrets": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "Subscription_ListSecrets",
        "description": "Gets the specified Subscription keys.",
        "x-ms-examples": {
          "ApiManagementSubscriptionListSecrets": {
            "$ref": "./examples/ApiManagementSubscriptionListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains subscription keys.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionKeysContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments": {
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_ListByService",
        "description": "Gets all policy fragments.",
        "x-ms-examples": {
          "ApiManagementListPolicyFragments": {
            "$ref": "./examples/ApiManagementListPolicyFragments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter, orderBy | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| value | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of policy fragments.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments/{id}": {
      "head": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_GetEntityTag",
        "description": "Gets the entity state (Etag) version of a policy fragment.",
        "x-ms-examples": {
          "ApiManagementHeadPolicyFragment": {
            "$ref": "./examples/ApiManagementHeadPolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified policy fragment exists and the current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_Get",
        "description": "Gets a policy fragment.",
        "x-ms-examples": {
          "ApiManagementGetPolicyFragment": {
            "$ref": "./examples/ApiManagementGetPolicyFragment.json"
          },
          "ApiManagementGetPolicyFragmentFormat": {
            "$ref": "./examples/ApiManagementGetPolicyFragmentFormat.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyFragmentContentFormat"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a policy fragment.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_CreateOrUpdate",
        "description": "Creates or updates a policy fragment.",
        "x-ms-examples": {
          "ApiManagementCreatePolicy": {
            "$ref": "./examples/ApiManagementCreatePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "description": "The policy fragment contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "The policy fragment was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_Delete",
        "description": "Deletes a policy fragment.",
        "x-ms-examples": {
          "ApiManagementDeletePolicy": {
            "$ref": "./examples/ApiManagementDeletePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully removed."
          },
          "204": {
            "description": "The policy fragment successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments/{id}/listReferences": {
      "post": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "PolicyFragment_ListReferences",
        "description": "Lists policy resources that reference the policy fragment.",
        "x-ms-examples": {
          "ApiManagementListPolicyFragmentReferences": {
            "$ref": "./examples/ApiManagementListPolicyFragmentReferences.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of references to policy resources that include the policy fragment in their definitions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates": {
      "get": {
        "tags": [
          "EmailTemplate"
        ],
        "operationId": "EmailTemplate_ListByService",
        "description": "Gets all email templates",
        "x-ms-examples": {
          "ApiManagementListTemplates": {
            "$ref": "./examples/ApiManagementListTemplates.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Email Template for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}": {
      "head": {
        "tags": [
          "EmailTemplates"
        ],
        "operationId": "EmailTemplate_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the email template specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadEmailTemplate": {
            "$ref": "./examples/ApiManagementHeadEmailTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified email template entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "EmailTemplates"
        ],
        "operationId": "EmailTemplate_Get",
        "description": "Gets the details of the email template specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetTemplate": {
            "$ref": "./examples/ApiManagementGetTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Email template.",
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailTemplates"
        ],
        "operationId": "EmailTemplate_CreateOrUpdate",
        "description": "Updates an Email Template.",
        "x-ms-examples": {
          "ApiManagementCreateTemplate": {
            "$ref": "./examples/ApiManagementCreateTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateUpdateParameters"
            },
            "description": "Email Template update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Email Template was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateContract"
            }
          },
          "200": {
            "description": "Email Template was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "EmailTemplates"
        ],
        "operationId": "EmailTemplate_Update",
        "description": "Updates API Management email template",
        "x-ms-examples": {
          "ApiManagementUpdateTemplate": {
            "$ref": "./examples/ApiManagementUpdateTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "email template successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/EmailTemplateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailTemplates"
        ],
        "operationId": "EmailTemplate_Delete",
        "description": "Reset the Email Template to default template provided by the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteTemplate": {
            "$ref": "./examples/ApiManagementDeleteTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TemplateNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Email Template was successfully reset to default."
          },
          "204": {
            "description": "Email Template was successfully reset to default."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus": {
      "get": {
        "tags": [
          "NetworkStatus"
        ],
        "operationId": "NetworkStatus_ListByService",
        "description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.",
        "x-ms-examples": {
          "ApiManagementServiceGetNetworkStatus": {
            "$ref": "./examples/ApiManagementServiceGetNetworkStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the list Network status details for all regions in which service is deployed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkStatusContractByLocation"
              },
              "description": "List of Network Status values."
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus": {
      "get": {
        "tags": [
          "NetworkStatus"
        ],
        "operationId": "NetworkStatus_ListByLocation",
        "description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.",
        "x-ms-examples": {
          "ApiManagementServiceGetNetworkStatusByLocation": {
            "$ref": "./examples/ApiManagementServiceGetNetworkStatusByLocation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the Network status details.",
            "schema": {
              "$ref": "#/definitions/NetworkStatusContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnection_ListByService",
        "description": "Lists all private endpoint connections of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListPrivateEndpointConnections": {
            "$ref": "./examples/ApiManagementListPrivateEndpointConnections.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnection_GetByName",
        "description": "Gets the details of the Private Endpoint Connection specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetPrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementGetPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnection_CreateOrUpdate",
        "description": "Creates a new Private Endpoint Connection or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementApproveOrRejectPrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementApproveOrRejectPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "privateEndpointConnectionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PrivateEndpointConnectionRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request to approve or reject private endpoint connection. Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Private Endpoint Connection Request was completed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnection_Delete",
        "description": "Deletes the specified Private Endpoint Connection.",
        "x-ms-examples": {
          "ApiManagementDeletePrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementDeletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Private Endpoint Connection was successfully deleted."
          },
          "202": {
            "description": "Request to delete API was accepted. Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the private link resources",
        "operationId": "PrivateEndpointConnection_ListPrivateLinkResources",
        "x-ms-examples": {
          "ApiManagementListPrivateLinkGroupResources": {
            "$ref": "./examples/ApiManagementListPrivateLinkGroupResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the private link resources",
        "operationId": "PrivateEndpointConnection_GetPrivateLinkResource",
        "x-ms-examples": {
          "ApiManagementGetPrivateLinkGroupResource": {
            "$ref": "./examples/ApiManagementGetPrivateLinkGroupResource.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "privateLinkSubResourceName",
            "in": "path",
            "description": "Name of the private link resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_ListByService",
        "description": "Lists all diagnostics of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListDiagnostics": {
            "$ref": "./examples/ApiManagementListDiagnostics.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of diagnostics.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/DiagnosticContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}": {
      "head": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadDiagnostic": {
            "$ref": "./examples/ApiManagementHeadDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity tag of the diagnostic",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_Get",
        "description": "Gets the details of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetDiagnostic": {
            "$ref": "./examples/ApiManagementGetDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Diagnostic entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_CreateOrUpdate",
        "description": "Creates a new Diagnostic or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateDiagnostic": {
            "$ref": "./examples/ApiManagementCreateDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Diagnostic was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "200": {
            "description": "Diagnostic successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_Update",
        "description": "Updates the details of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Diagnostic Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "Diagnostic_Delete",
        "description": "Deletes the specified Diagnostic.",
        "x-ms-examples": {
          "ApiManagementDeleteDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Diagnostic was successfully deleted."
          },
          "204": {
            "description": "The Diagnostic was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}": {
      "put": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_CreateOrUpdate",
        "description": "Creates or updates an API Management gateway. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementCreateStandardGateway": {
            "$ref": "./examples/ApiManagementCreateStandardGateway.json"
          },
          "ApiManagementCreateWorkspacePremiumGateway": {
            "$ref": "./examples/ApiManagementCreateWorkspacePremiumGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The gateway was successfully set up.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_Update",
        "description": "Updates an existing API Management gateway.",
        "x-ms-examples": {
          "ApiManagementUpdateStandardGateway": {
            "$ref": "./examples/ApiManagementUpdateStandardGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayUpdateParameters"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The gateway was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "202": {
            "description": "The gateway update request was Accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_Get",
        "description": "Gets an API Management gateway resource description.",
        "x-ms-examples": {
          "ApiManagementGatewayGetGateway": {
            "$ref": "./examples/ApiManagementGatewayGetGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the API Management gateway Resource.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_Delete",
        "description": "Deletes an existing API Management gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayDeleteGateway": {
            "$ref": "./examples/ApiManagementGatewayDeleteGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The gateway delete request was accepted.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            },
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The gateway does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways": {
      "get": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_ListByResourceGroup",
        "description": "List all API Management gateways within a resource group.",
        "x-ms-examples": {
          "ApiManagementListGatewaysBySubscriptionAndResourceGroup": {
            "$ref": "./examples/ApiManagementListGatewaysBySubscriptionAndResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateways list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/gateways": {
      "get": {
        "tags": [
          "ApiGateway"
        ],
        "operationId": "ApiGateway_List",
        "description": "List all API Management gateways within a subscription.",
        "x-ms-examples": {
          "ApiManagementListGatewaysBySubscription": {
            "$ref": "./examples/ApiManagementListGatewaysBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateways list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/skus": {
      "get": {
        "tags": [
          "ApiManagementGatewaySkus"
        ],
        "summary": "Gets available SKUs for API Management gateway",
        "description": "Gets all available SKU for a given API Management gateway",
        "operationId": "ApiManagementGatewaySkus_ListAvailableSkus",
        "x-ms-examples": {
          "ApiManagementListSKUs-Gateways": {
            "$ref": "./examples/ApiManagementListSKUs-Gateways.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of SKUs.",
            "schema": {
              "$ref": "#/definitions/GatewayResourceSkuResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices": {
      "get": {
        "tags": [
          "DeletedService"
        ],
        "operationId": "DeletedServices_ListBySubscription",
        "description": "Lists all soft-deleted services available for undelete for the given subscription.",
        "x-ms-examples": {
          "ApiManagementDeletedServicesListBySubscription": {
            "$ref": "./examples/ApiManagementDeletedServicesListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all soft-deleted services available for undelete for the given subscription.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DeletedServicesCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}": {
      "get": {
        "tags": [
          "DeletedService"
        ],
        "operationId": "DeletedServices_GetByName",
        "description": "Get soft-deleted Api Management Service by name.",
        "x-ms-examples": {
          "ApiManagementGetDeletedServiceByName": {
            "$ref": "./examples/ApiManagementGetDeletedServiceByName.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the deleted API Management service."
          }
        ],
        "responses": {
          "200": {
            "description": "Soft-deleted Api Management Service.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DeletedServiceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeletedService"
        ],
        "operationId": "DeletedServices_Purge",
        "description": "Purges Api Management Service (deletes it with no option to undelete).",
        "x-ms-examples": {
          "ApiManagementDeletedServicesPurge": {
            "$ref": "./examples/ApiManagementDeletedServicesPurge.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the deleted API Management service."
          }
        ],
        "responses": {
          "200": {
            "description": "Api Service was successfully purged."
          },
          "202": {
            "description": "Api Service purge started.",
            "headers": {
              "location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DeletedServiceContract"
            }
          },
          "204": {
            "description": "The service does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_ListByService",
        "description": "Lists a collection of properties defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListNotifications": {
            "$ref": "./examples/ApiManagementListNotifications.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Notification for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Get",
        "description": "Gets the details of the Notification specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetNotification": {
            "$ref": "./examples/ApiManagementGetNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_CreateOrUpdate",
        "description": "Create or Update API Management publisher notification.",
        "x-ms-examples": {
          "ApiManagementCreateNotification": {
            "$ref": "./examples/ApiManagementCreateNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_ListByNotification",
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientUsers": {
            "$ref": "./examples/ApiManagementListNotificationRecipientUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient User collection for the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}": {
      "head": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_CheckEntityExists",
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The User is subscribed to receive the notification."
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_CreateOrUpdate",
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementCreateNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient User was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "200": {
            "description": "Recipient User is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_Delete",
        "description": "Removes the API Management user from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "204": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_ListByNotification",
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientEmails": {
            "$ref": "./examples/ApiManagementListNotificationRecipientEmails.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient Email collection subscribed to the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}": {
      "head": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_CheckEntityExists",
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Users is subscribed to receive the notification."
          },
          "404": {
            "description": "The Users is not subscribed to receive the notification."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_CreateOrUpdate",
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient Email was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "200": {
            "description": "Recipient Email is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_Delete",
        "description": "Removes the email from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "204": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_ListByService",
        "description": "Lists a collection of groups defined within a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups"
        },
        "x-ms-examples": {
          "ApiManagementListGroups": {
            "$ref": "./examples/ApiManagementListGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Group entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GroupContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}": {
      "head": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadGroup": {
            "$ref": "./examples/ApiManagementHeadGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified group entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_Get",
        "description": "Gets the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetGroup": {
            "$ref": "./examples/ApiManagementGetGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Group entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_CreateOrUpdate",
        "description": "Creates or Updates a group.",
        "x-ms-examples": {
          "ApiManagementCreateGroup": {
            "$ref": "./examples/ApiManagementCreateGroup.json"
          },
          "ApiManagementCreateGroupExternal": {
            "$ref": "./examples/ApiManagementCreateGroupExternal.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Group was created successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Group already exists.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_Update",
        "description": "Updates the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateGroup": {
            "$ref": "./examples/ApiManagementUpdateGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group details were successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "Group_Delete",
        "description": "Deletes specific group of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteGroup": {
            "$ref": "./examples/ApiManagementDeleteGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully deleted."
          },
          "204": {
            "description": "The group was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users": {
      "get": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "GroupUser_List",
        "description": "Lists a collection of user entities associated with the group.",
        "x-ms-examples": {
          "ApiManagementListGroupUsers": {
            "$ref": "./examples/ApiManagementListGroupUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of user entities associated with the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/UserContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}": {
      "head": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "GroupUser_CheckEntityExists",
        "description": "Checks that user entity specified by identifier is associated with the group entity.",
        "x-ms-examples": {
          "ApiManagementHeadGroupUser": {
            "$ref": "./examples/ApiManagementHeadGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Entity exists"
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "GroupUser_Create",
        "description": "Add existing user to existing group",
        "x-ms-examples": {
          "ApiManagementCreateGroupUser": {
            "$ref": "./examples/ApiManagementCreateGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully added to the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "200": {
            "description": "The specified user is already a member of the specified group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "GroupUser_Delete",
        "description": "Remove existing user from existing group.",
        "x-ms-examples": {
          "ApiManagementDeleteGroupUser": {
            "$ref": "./examples/ApiManagementDeleteGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was successfully removed from the group."
          },
          "204": {
            "description": "The user was successfully removed from the group."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/documentations": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_ListByService",
        "description": "Lists all Documentations of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListApis": {
            "$ref": "./examples/ApiManagementListDocumentations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of Documentations.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/DocumentationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/documentations/{documentationId}": {
      "head": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Documentation by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadDocumentation": {
            "$ref": "./examples/ApiManagementHeadDocumentation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DocumentationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_Get",
        "description": "Gets the details of the Documentation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetDocumentation": {
            "$ref": "./examples/ApiManagementGetDocumentation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DocumentationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Documentation entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_CreateOrUpdate",
        "description": "Creates a new Documentation or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateDocumentation": {
            "$ref": "./examples/ApiManagementCreateDocumentation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DocumentationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Documentation was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Documentation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_Update",
        "description": "Updates the details of the Documentation for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateDocumentation": {
            "$ref": "./examples/ApiManagementUpdateDocumentation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DocumentationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationUpdateContract"
            },
            "description": "Documentation Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Documentation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documentation"
        ],
        "operationId": "Documentation_Delete",
        "description": "Deletes the specified Documentation from an API.",
        "x-ms-examples": {
          "ApiManagementDeleteDocumentation": {
            "$ref": "./examples/ApiManagementDeleteDocumentation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/DocumentationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Documentation successfully removed"
          },
          "204": {
            "description": "Documentation successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/allPolicies": {
      "get": {
        "tags": [
          "AllPolicies"
        ],
        "operationId": "AllPolicies_ListByService",
        "description": "Status of all policies of API Management services.",
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementAllPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Policy Status.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AllPoliciesCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/configConnections": {
      "get": {
        "tags": [
          "ApiGatewayConfigConnection"
        ],
        "operationId": "ApiGatewayConfigConnection_ListByGateway",
        "description": "List all API Management gateway config connections within a gateway.",
        "x-ms-examples": {
          "ApiManagementListGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementListGatewayConfigConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateway config connection list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/configConnections/{configConnectionName}": {
      "get": {
        "tags": [
          "ApiGatewayConfigConnection"
        ],
        "operationId": "ApiGatewayConfigConnection_Get",
        "description": "Gets an API Management gateway config connection resource description.",
        "x-ms-examples": {
          "ApiManagementGetGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementGetGatewayConfigConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the API Management gateway config connection resource.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiGatewayConfigConnection"
        ],
        "operationId": "ApiGatewayConfigConnection_CreateOrUpdate",
        "description": "Creates or updates an API Management gateway config connection. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementCreateGatewayConfigConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway config connection operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The gateway config connection was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          },
          "201": {
            "description": "The gateway config connection was successfully created.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ApiGatewayConfigConnection"
        ],
        "operationId": "ApiGatewayConfigConnection_Delete",
        "description": "Deletes an existing API Management gateway config connection.",
        "x-ms-examples": {
          "ApiManagementGatewayDeleteGateway": {
            "$ref": "./examples/ApiManagementDeleteGatewayConfigConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The gateway config connection delete request was accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The gateway config connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/diagnostics": {
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_ListByWorkspace",
        "description": "Lists all diagnostics in the specified workspace.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceDiagnostics": {
            "$ref": "./examples/ApiManagementListWorkspaceDiagnostics.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of diagnostics.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/DiagnosticContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/diagnostics/{diagnosticId}": {
      "head": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementHeadWorkspaceDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity tag of the diagnostic",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_Get",
        "description": "Gets the details of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementGetWorkspaceDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Diagnostic entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_CreateOrUpdate",
        "description": "Creates a new Diagnostic or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementCreateWorkspaceDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Diagnostic was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "200": {
            "description": "Diagnostic successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_Update",
        "description": "Updates the details of the Diagnostic specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticUpdateContract"
            },
            "description": "Diagnostic Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Diagnostic"
        ],
        "operationId": "WorkspaceDiagnostic_Delete",
        "description": "Deletes the specified Diagnostic.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Diagnostic was successfully deleted."
          },
          "204": {
            "description": "The Diagnostic was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/diagnostics": {
      "get": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_ListByWorkspace",
        "description": "Lists all diagnostics of an API.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiDiagnostics": {
            "$ref": "./examples/ApiManagementListWorkspaceApiDiagnostics.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of diagnostics for an API.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/DiagnosticContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/diagnostics/{diagnosticId}": {
      "head": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_Get",
        "description": "Gets the details of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Diagnostic entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_CreateOrUpdate",
        "description": "Creates a new Diagnostic for an API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Diagnostic was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Diagnostic was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_Update",
        "description": "Updates the details of the Diagnostic for an API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticUpdateContract"
            },
            "description": "Diagnostic Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiDiagnostic"
        ],
        "operationId": "WorkspaceApiDiagnostic_Delete",
        "description": "Deletes the specified Diagnostic from an API.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiDiagnostic.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic successfully removed"
          },
          "204": {
            "description": "Diagnostic successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_ListByService",
        "description": "Lists a collection of products in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListProducts": {
            "$ref": "./examples/ApiManagementListProducts.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "expandGroups",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains an array of groups that have visibility to the product. The default is false."
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Products which are part of a specific tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Product entities for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}": {
      "head": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadProduct": {
            "$ref": "./examples/ApiManagementHeadProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Product entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Get",
        "description": "Gets the details of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetProduct": {
            "$ref": "./examples/ApiManagementGetProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Product entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_CreateOrUpdate",
        "description": "Creates or Updates a product.",
        "x-ms-examples": {
          "ApiManagementCreateProduct": {
            "$ref": "./examples/ApiManagementCreateProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Update",
        "description": "Update existing product details.",
        "x-ms-examples": {
          "ApiManagementUpdateProduct": {
            "$ref": "./examples/ApiManagementUpdateProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "Product_Delete",
        "description": "Delete product.",
        "x-ms-examples": {
          "ApiManagementDeleteProduct": {
            "$ref": "./examples/ApiManagementDeleteProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete existing subscriptions associated with the product or not."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed."
          },
          "204": {
            "description": "Product was successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis": {
      "get": {
        "tags": [
          "ProductApi"
        ],
        "operationId": "ProductApi_ListByProduct",
        "description": "Lists a collection of the APIs associated with a product.",
        "x-ms-examples": {
          "ApiManagementListProductApis": {
            "$ref": "./examples/ApiManagementListProductApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of Api entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}": {
      "head": {
        "tags": [
          "ProductApi"
        ],
        "operationId": "ProductApi_CheckEntityExists",
        "description": "Checks that API entity specified by identifier is associated with the Product entity.",
        "x-ms-examples": {
          "ApiManagementHeadProductApi": {
            "$ref": "./examples/ApiManagementHeadProductApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Entity exists"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductApi"
        ],
        "operationId": "ProductApi_CreateOrUpdate",
        "description": "Adds an API to the specified product.",
        "x-ms-examples": {
          "ApiManagementCreateProductApi": {
            "$ref": "./examples/ApiManagementCreateProductApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductApi"
        ],
        "operationId": "ProductApi_Delete",
        "description": "Deletes the specified API from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductApi": {
            "$ref": "./examples/ApiManagementDeleteProductApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from product"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "operationId": "ProductGroup_ListByProduct",
        "description": "Lists the collection of developer groups associated with the specified product.",
        "x-ms-examples": {
          "ApiManagementListProductGroups": {
            "$ref": "./examples/ApiManagementListProductGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     |</br>| displayName | filter | eq, ne |     |</br>| description | filter | eq, ne |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Group entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GroupContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}": {
      "head": {
        "tags": [
          "ProductGroup"
        ],
        "operationId": "ProductGroup_CheckEntityExists",
        "description": "Checks that Group entity specified by identifier is associated with the Product entity.",
        "x-ms-examples": {
          "ApiManagementHeadProductGroup": {
            "$ref": "./examples/ApiManagementHeadProductGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Group is associated with the Product."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroup"
        ],
        "operationId": "ProductGroup_CreateOrUpdate",
        "description": "Adds the association between the specified developer group with the specified product.",
        "x-ms-examples": {
          "ApiManagementCreateProductGroup": {
            "$ref": "./examples/ApiManagementCreateProductGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The group was successfully associated with the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            }
          },
          "200": {
            "description": "The specified group is already associated with the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroup"
        ],
        "operationId": "ProductGroup_Delete",
        "description": "Deletes the association between the specified group and product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductGroup": {
            "$ref": "./examples/ApiManagementDeleteProductGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully disassociated with the product."
          },
          "204": {
            "description": "The group was successfully disassociated with the product."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions": {
      "get": {
        "tags": [
          "ProductSubscription"
        ],
        "operationId": "ProductSubscriptions_List",
        "description": "Lists the collection of subscriptions to the specified product.",
        "x-ms-examples": {
          "ApiManagementListProductSubscriptions": {
            "$ref": "./examples/ApiManagementListProductSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of subscription entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SubscriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies": {
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "ProductPolicy_ListByProduct",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementListProductPolicies": {
            "$ref": "./examples/ApiManagementListProductPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "ProductPolicy_GetEntityTag",
        "description": "Get the ETag of the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementHeadProductPolicy": {
            "$ref": "./examples/ApiManagementHeadProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy Etag information.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "ProductPolicy_Get",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementGetProductPolicy": {
            "$ref": "./examples/ApiManagementGetProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "ProductPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the Product.",
        "x-ms-examples": {
          "ApiManagementCreateProductPolicy": {
            "$ref": "./examples/ApiManagementCreateProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "ProductPolicy_Delete",
        "description": "Deletes the policy configuration at the Product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductPolicy": {
            "$ref": "./examples/ApiManagementDeleteProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags": {
      "get": {
        "tags": [
          "ProductTag"
        ],
        "operationId": "Tag_ListByProduct",
        "description": "Lists all Tags associated with the Product.",
        "x-ms-examples": {
          "ApiManagementListProductTags": {
            "$ref": "./examples/ApiManagementListProductTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Product entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}": {
      "head": {
        "tags": [
          "ProductTag"
        ],
        "operationId": "Tag_GetEntityStateByProduct",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadProductTag": {
            "$ref": "./examples/ApiManagementHeadProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductTag"
        ],
        "operationId": "Tag_GetByProduct",
        "description": "Get tag associated with the Product.",
        "x-ms-examples": {
          "ApiManagementGetProductTag": {
            "$ref": "./examples/ApiManagementGetProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductTag"
        ],
        "operationId": "Tag_AssignToProduct",
        "description": "Assign tag to the Product.",
        "x-ms-examples": {
          "ApiManagementCreateProductTag": {
            "$ref": "./examples/ApiManagementCreateProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag is already assigned to the Product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductTag"
        ],
        "operationId": "Tag_DetachFromProduct",
        "description": "Detach the tag from the Product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductTag": {
            "$ref": "./examples/ApiManagementDeleteProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully detached the tag from the Product."
          },
          "204": {
            "description": "Successfully detached the tag from the Product."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/wikis/default": {
      "head": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWiki_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Wiki for a Product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadProductWiki": {
            "$ref": "./examples/ApiManagementHeadProductWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWiki_Get",
        "description": "Gets the details of the Wiki for a Product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetProductWiki": {
            "$ref": "./examples/ApiManagementGetProductWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Wiki entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWiki_CreateOrUpdate",
        "description": "Creates a new Wiki for a Product or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateProductWiki": {
            "$ref": "./examples/ApiManagementCreateProductWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Wiki was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Wiki was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWiki_Update",
        "description": "Updates the details of the Wiki for a Product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateProductWiki": {
            "$ref": "./examples/ApiManagementUpdateProductWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiUpdateContract"
            },
            "description": "Wiki Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Wiki was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWiki_Delete",
        "description": "Deletes the specified Wiki from a Product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductWiki": {
            "$ref": "./examples/ApiManagementDeleteProductWiki.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Wiki successfully removed"
          },
          "204": {
            "description": "Wiki successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/wikis": {
      "get": {
        "tags": [
          "ProductWiki"
        ],
        "operationId": "ProductWikis_list",
        "description": "Gets the details of the Wiki for a Product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiWiki": {
            "$ref": "./examples/ApiManagementListProductWikis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Wiki entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WikiCollection"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/WikiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apiLinks": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "ProductApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListProductApiLinks": {
            "$ref": "./examples/ApiManagementListProductApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "ProductApiLink_Get",
        "description": "Gets the API link for the product.",
        "x-ms-examples": {
          "ApiManagementGetProductApiLink": {
            "$ref": "./examples/ApiManagementGetProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "ProductApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateProductApiLink": {
            "$ref": "./examples/ApiManagementCreateProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The specified API is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "201": {
            "description": "The API was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "ProductApiLink_Delete",
        "description": "Deletes the specified API from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductApiLink": {
            "$ref": "./examples/ApiManagementDeleteProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from product"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groupLinks": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "ProductGroupLink_ListByProduct",
        "description": "Lists a collection of the group links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListProductGroupLinks": {
            "$ref": "./examples/ApiManagementListProductGroupLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| groupId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of group link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductGroupLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groupLinks/{groupLinkId}": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "ProductGroupLink_Get",
        "description": "Gets the group link for the product.",
        "x-ms-examples": {
          "ApiManagementGetProductGroupLink": {
            "$ref": "./examples/ApiManagementGetProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified group link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "ProductGroupLink_CreateOrUpdate",
        "description": "Adds a group to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateProductGroupLink": {
            "$ref": "./examples/ApiManagementCreateProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The specified group is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "201": {
            "description": "The group was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "ProductGroupLink_Delete",
        "description": "Deletes the specified group from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductGroupLink": {
            "$ref": "./examples/ApiManagementDeleteProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Group was successfully removed from product"
          },
          "204": {
            "description": "Group successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByApi",
        "description": "Lists report records by API.",
        "x-ms-examples": {
          "ApiManagementGetReportsByApi": {
            "$ref": "./examples/ApiManagementGetReportsByApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByUser",
        "description": "Lists report records by User.",
        "x-ms-examples": {
          "ApiManagementGetReportsByUser": {
            "$ref": "./examples/ApiManagementGetReportsByUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId | select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByOperation",
        "description": "Lists report records by API Operations.",
        "x-ms-examples": {
          "ApiManagementGetReportsByOperation": {
            "$ref": "./examples/ApiManagementGetReportsByOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByProduct",
        "description": "Lists report records by Product.",
        "x-ms-examples": {
          "ApiManagementGetReportsByProduct": {
            "$ref": "./examples/ApiManagementGetReportsByProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByGeo",
        "description": "Lists report records by geography.",
        "x-ms-examples": {
          "ApiManagementGetReportsByGeo": {
            "$ref": "./examples/ApiManagementGetReportsByGeo.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |     | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListBySubscription",
        "description": "Lists report records by subscription.",
        "x-ms-examples": {
          "ApiManagementGetReportsBySubscription": {
            "$ref": "./examples/ApiManagementGetReportsBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByTime",
        "description": "Lists report records by Time.",
        "x-ms-examples": {
          "ApiManagementGetReportsByTime": {
            "$ref": "./examples/ApiManagementGetReportsByTime.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "duration",
            "description": "By time interval. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByRequest",
        "description": "Lists report records by Request.",
        "x-ms-examples": {
          "ApiManagementGetReportsByRequest": {
            "$ref": "./examples/ApiManagementGetReportsByRequest.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Report record.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RequestReportCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "./definitions.json#/definitions/RequestReportRecordContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders": {
      "get": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_ListByService",
        "description": "Lists a collection of Identity Provider configured in the specified service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-authorize-developer-accounts-using-azure-active-directory"
        },
        "x-ms-examples": {
          "ApiManagementListIdentityProviders": {
            "$ref": "./examples/ApiManagementListIdentityProviders.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Identity Providers.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}": {
      "head": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the identityProvider specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadIdentityProvider": {
            "$ref": "./examples/ApiManagementHeadIdentityProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified identity provider entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_Get",
        "description": "Gets the configuration details of the identity Provider configured in specified service instance.",
        "x-ms-examples": {
          "ApiManagementGetIdentityProvider": {
            "$ref": "./examples/ApiManagementGetIdentityProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified IdentityProvider entity configuration details.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_CreateOrUpdate",
        "description": "Creates or Updates the IdentityProvider configuration.",
        "x-ms-examples": {
          "ApiManagementCreateIdentityProvider": {
            "$ref": "./examples/ApiManagementCreateIdentityProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderCreateContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "IdentityProvider configuration were successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderContract"
            }
          },
          "200": {
            "description": "The existing Identity Provider was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_Update",
        "description": "Updates an existing IdentityProvider configuration.",
        "x-ms-examples": {
          "ApiManagementUpdateIdentityProvider": {
            "$ref": "./examples/ApiManagementUpdateIdentityProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing Identity Provider was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/IdentityProviderContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_Delete",
        "description": "Deletes the specified identity provider configuration.",
        "x-ms-examples": {
          "ApiManagementDeleteIdentityProvider": {
            "$ref": "./examples/ApiManagementDeleteIdentityProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The identity provider configuration was successfully deleted."
          },
          "204": {
            "description": "The identity provider configuration was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}/listSecrets": {
      "post": {
        "tags": [
          "IdentityProvider"
        ],
        "operationId": "IdentityProvider_ListSecrets",
        "description": "Gets the client secret details of the Identity Provider.",
        "x-ms-examples": {
          "ApiManagementIdentityProviderListSecrets": {
            "$ref": "./examples/ApiManagementIdentityProviderListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IdentityProviderNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the client secret.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ClientSecretContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.ApiManagement/operations": {
      "get": {
        "tags": [
          "ApiManagementOperations"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.ApiManagement provider.",
        "operationId": "ApiManagementOperations_List",
        "x-ms-examples": {
          "ApiManagementListOperations": {
            "$ref": "./examples/ApiManagementListOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus": {
      "get": {
        "tags": [
          "ApiManagementServiceSkus"
        ],
        "summary": "Gets available SKUs for API Management service",
        "description": "Gets all available SKU for a given API Management service",
        "operationId": "ApiManagementServiceSkus_ListAvailableServiceSkus",
        "x-ms-examples": {
          "ApiManagementListSKUs-Dedicated": {
            "$ref": "./examples/ApiManagementListSKUs-Dedicated.json"
          },
          "ApiManagementListSKUs-Consumption": {
            "$ref": "./examples/ApiManagementListSKUs-Consumption.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of SKUs.",
            "schema": {
              "$ref": "#/definitions/ResourceSkuResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Restore",
        "description": "Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementRestoreService": {
            "$ref": "./examples/ApiManagementRestoreWithAccessKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceBackupRestoreParameters"
            },
            "description": "Parameters supplied to the Restore API Management service from backup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restored the backup onto the API Management service.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Backup",
        "description": "Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementBackupWithAccessKey": {
            "$ref": "./examples/ApiManagementBackupWithAccessKey.json"
          },
          "ApiManagementBackupWithSystemManagedIdentity": {
            "$ref": "./examples/ApiManagementBackupWithSystemManagedIdentity.json"
          },
          "ApiManagementBackupWithUserAssignedManagedIdentity": {
            "$ref": "./examples/ApiManagementBackupWithUserAssignedManagedIdentity.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceBackupRestoreParameters"
            },
            "description": "Parameters supplied to the ApiManagementService_Backup operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully backed up the API Management service to the storage account.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}": {
      "put": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_CreateOrUpdate",
        "description": "Creates or updates an API Management service. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementCreateService": {
            "$ref": "./examples/ApiManagementCreateService.json"
          },
          "ApiManagementCreateServiceWithDeveloperPortal": {
            "$ref": "./examples/ApiManagementCreateServiceWithDeveloperPortal.json"
          },
          "ApiManagementCreateServiceInVnetWithPublicIP": {
            "$ref": "./examples/ApiManagementCreateServiceInVnetWithPublicIP.json"
          },
          "ApiManagementCreateMultiRegionServiceWithCustomHostname": {
            "$ref": "./examples/ApiManagementCreateMultiRegionServiceWithCustomHostname.json"
          },
          "ApiManagementCreateServiceHavingMsi": {
            "$ref": "./examples/ApiManagementCreateServiceHavingMsi.json"
          },
          "ApiManagementCreateServiceWithSystemCertificates": {
            "$ref": "./examples/ApiManagementCreateServiceWithSystemCertificates.json"
          },
          "ApiManagementCreateServiceWithUserAssignedIdentity": {
            "$ref": "./examples/ApiManagementCreateServiceWithUserAssignedIdentity.json"
          },
          "ApiManagementCreateServiceInZones": {
            "$ref": "./examples/ApiManagementCreateServiceInZones.json"
          },
          "ApiManagementCreateServiceSkuv2Service": {
            "$ref": "./examples/ApiManagementCreateServiceSkuv2Service.json"
          },
          "ApiManagementUndelete": {
            "$ref": "./examples/ApiManagementUndelete.json"
          },
          "ApiManagementCreateServiceWithCustomHostnameKeyVault": {
            "$ref": "./examples/ApiManagementCreateServiceWithCustomHostnameKeyVault.json"
          },
          "ApiManagementCreateServiceWithNatGatewayEnabled": {
            "$ref": "./examples/ApiManagementCreateServiceWithNatGatewayEnabled.json"
          },
          "ApiManagementCreateServiceWithoutLegacyConfigurationApi": {
            "$ref": "./examples/ApiManagementCreateServiceWithoutLegacyConfigurationApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully set up.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Update",
        "description": "Updates an existing API Management service.",
        "x-ms-examples": {
          "ApiManagementUpdateServiceDisableTls10": {
            "$ref": "./examples/ApiManagementUpdateServiceDisableTls10.json"
          },
          "ApiManagementUpdateServicePublisherDetails": {
            "$ref": "./examples/ApiManagementUpdateServicePublisherDetails.json"
          },
          "ApiManagementUpdateServiceToNewVnetAndAvailabilityZones": {
            "$ref": "./examples/ApiManagementUpdateServiceToNewVnetAndAZs.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceUpdateParameters"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "The service update request was Accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Get",
        "description": "Gets an API Management service resource description.",
        "x-ms-examples": {
          "ApiManagementServiceGetService": {
            "$ref": "./examples/ApiManagementServiceGetService.json"
          },
          "ApiManagementServiceGetServiceHavingMsi": {
            "$ref": "./examples/ApiManagementServiceGetServiceHavingMsi.json"
          },
          "ApiManagementServiceGetMultiRegionInternalVnet": {
            "$ref": "./examples/ApiManagementServiceGetMultiRegionInternalVnet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the API Management Service Resource.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Delete",
        "description": "Deletes an existing API Management service.",
        "x-ms-examples": {
          "ApiManagementServiceDeleteService": {
            "$ref": "./examples/ApiManagementServiceDeleteService.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Service was successfully deleted."
          },
          "202": {
            "description": "The service delete request was Accepted.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            },
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The service does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/migrateToStv2": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_MigrateToStv2",
        "description": "Upgrades an API Management service to the Stv2 platform. For details refer to https://aka.ms/apim-migrate-stv2. This change is not reversible. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementMigrateService": {
            "$ref": "./examples/ApiManagementServiceMigrateToStv2.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MigrateToStv2Contract"
            },
            "description": "Optional parameters supplied to migrate service."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully migrated.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Migration request submitted.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service": {
      "get": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_ListByResourceGroup",
        "description": "List all API Management services within a resource group.",
        "x-ms-examples": {
          "ApiManagementListServiceBySubscriptionAndResourceGroup": {
            "$ref": "./examples/ApiManagementListServiceBySubscriptionAndResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management service list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service": {
      "get": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_List",
        "description": "Lists all API Management services within an Azure subscription.",
        "x-ms-examples": {
          "ApiManagementListServiceBySubscription": {
            "$ref": "./examples/ApiManagementListServiceBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management service list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_GetSsoToken",
        "description": "Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.",
        "x-ms-examples": {
          "ApiManagementServiceGetSsoToken": {
            "$ref": "./examples/ApiManagementServiceGetSsoToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK if successful with the SSO Redirect URI.",
            "schema": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/ApiManagementServiceGetSsoTokenResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_CheckNameAvailability",
        "description": "Checks availability and correctness of a name for an API Management service.",
        "x-ms-examples": {
          "ApiManagementServiceCheckNameAvailability": {
            "$ref": "./examples/ApiManagementServiceCheckNameAvailability.json"
          }
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceCheckNameAvailabilityParameters"
            },
            "description": "Parameters supplied to the CheckNameAvailability operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of check name availability.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_GetDomainOwnershipIdentifier",
        "description": "Get the custom domain ownership identifier for an API Management service.",
        "x-ms-examples": {
          "ApiManagementServiceGetDomainOwnershipIdentifier": {
            "$ref": "./examples/ApiManagementServiceGetDomainOwnershipIdentifier.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of getting domain ownership identifier.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceGetDomainOwnershipIdentifierResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates": {
      "post": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_ApplyNetworkConfigurationUpdates",
        "description": "Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes.",
        "x-ms-examples": {
          "ApiManagementApplyNetworkConfigurationUpdates": {
            "$ref": "./examples/ApiManagementApplyNetworkConfigurationUpdates.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceApplyNetworkConfigurationParameters"
            },
            "description": "Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Network configuration updates were successfully applied on the Api Management service.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalconfigs": {
      "get": {
        "tags": [
          "PortalConfig"
        ],
        "operationId": "PortalConfig_ListByService",
        "description": "Lists the developer portal configurations.",
        "x-ms-examples": {
          "ApiManagementListPortalConfig": {
            "$ref": "./examples/ApiManagementListPortalConfig.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The developer portal configuration.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalconfigs/{portalConfigId}": {
      "head": {
        "tags": [
          "PortalConfig"
        ],
        "operationId": "PortalConfig_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the developer portal configuration.",
        "x-ms-examples": {
          "ApiManagementHeadPortalConfig": {
            "$ref": "./examples/ApiManagementHeadPortalConfig.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalConfigIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PortalConfig"
        ],
        "operationId": "PortalConfig_Get",
        "description": "Get the developer portal configuration.",
        "x-ms-examples": {
          "ApiManagementPortalConfig": {
            "$ref": "./examples/ApiManagementPortalConfig.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalConfigIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The developer portal configuration.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PortalConfig"
        ],
        "operationId": "PortalConfig_Update",
        "description": "Update the developer portal configuration.",
        "x-ms-examples": {
          "ApiManagementUpdatePortalConfig": {
            "$ref": "./examples/ApiManagementUpdatePortalConfig.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalConfigIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigContract"
            },
            "description": "Update the developer portal configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PortalConfig"
        ],
        "operationId": "PortalConfig_CreateOrUpdate",
        "description": "Create or update the developer portal configuration.",
        "x-ms-examples": {
          "ApiManagementCreatePortalConfig": {
            "$ref": "./examples/ApiManagementCreatePortalConfig.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalConfigIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigContract"
            },
            "description": "Update the developer portal configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalConfigContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_ListByService",
        "description": "Lists a collection of gateways registered with service instance.",
        "x-ms-examples": {
          "ApiManagementListGateways": {
            "$ref": "./examples/ApiManagementListGateways.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| region | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Gateway entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GatewayContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}": {
      "head": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadGateway": {
            "$ref": "./examples/ApiManagementHeadGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Get",
        "description": "Gets the details of the Gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetGateway": {
            "$ref": "./examples/ApiManagementGetGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_CreateOrUpdate",
        "description": "Creates or updates a Gateway to be used in Api Management instance.",
        "x-ms-examples": {
          "ApiManagementCreateGateway": {
            "$ref": "./examples/ApiManagementCreateGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Gateway was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          "200": {
            "description": "The Gateway details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Update",
        "description": "Updates the details of the gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateGateway": {
            "$ref": "./examples/ApiManagementUpdateGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Gateway details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Delete",
        "description": "Deletes specific Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGateway": {
            "$ref": "./examples/ApiManagementDeleteGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Gateway was successfully deleted."
          },
          "204": {
            "description": "The Gateway was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys": {
      "post": {
        "tags": [
          "GatewayListKeys"
        ],
        "operationId": "Gateway_ListKeys",
        "description": "Retrieves gateway keys.",
        "x-ms-examples": {
          "ApiManagementGatewayListKeys": {
            "$ref": "./examples/ApiManagementGatewayListKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway keys.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayKeysContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey": {
      "post": {
        "tags": [
          "GatewayRegenerateKey"
        ],
        "operationId": "Gateway_RegenerateKey",
        "description": "Regenerates specified gateway key invalidating any tokens created with it.",
        "x-ms-examples": {
          "ApiManagementGatewayRegenerateKey": {
            "$ref": "./examples/ApiManagementGatewayRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayKeyRegenerationRequestContract"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Key successfully regenerated"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken": {
      "post": {
        "tags": [
          "GatewayGenerateToken"
        ],
        "operationId": "Gateway_GenerateToken",
        "description": "Gets the Shared Access Authorization Token for the gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayGenerateToken": {
            "$ref": "./examples/ApiManagementGatewayGenerateToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayTokenRequestContract"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the authorization token for the gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayTokenContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations": {
      "get": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_ListByService",
        "description": "Lists the collection of hostname configurations for the specified gateway.",
        "x-ms-examples": {
          "ApiManagementListGatewayHostnameConfigurations": {
            "$ref": "./examples/ApiManagementListGatewayHostnameConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| hostname | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of hostname configuration entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}": {
      "head": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_GetEntityTag",
        "description": "Checks that hostname configuration entity specified by identifier exists for specified Gateway entity.",
        "x-ms-examples": {
          "ApiManagementHeadGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementHeadGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_Get",
        "description": "Get details of a hostname configuration",
        "x-ms-examples": {
          "ApiManagementGetGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementGetGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_CreateOrUpdate",
        "description": "Creates of updates hostname configuration for a Gateway.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementCreateGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Gateway hostname configuration was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          },
          "200": {
            "description": "The Gateway hostname configuration details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_Delete",
        "description": "Deletes the specified hostname configuration from the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementDeleteGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hostname configuration was successfully removed from Gateway."
          },
          "204": {
            "description": "Hostname configuration successfully removed by previous request or does not exist in Gateway."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis": {
      "get": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_ListByService",
        "description": "Lists a collection of the APIs associated with a gateway.",
        "x-ms-examples": {
          "ApiManagementListGatewayApis": {
            "$ref": "./examples/ApiManagementListGatewayApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of Api entities in the gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}": {
      "head": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_GetEntityTag",
        "description": "Checks that API entity specified by identifier is associated with the Gateway entity.",
        "x-ms-examples": {
          "ApiManagementHeadGatewayApi": {
            "$ref": "./examples/ApiManagementHeadGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_CreateOrUpdate",
        "description": "Adds an API to the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayApi": {
            "$ref": "./examples/ApiManagementCreateGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "./definitions.json#/definitions/AssociationContract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the Gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the Gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_Delete",
        "description": "Deletes the specified API from the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGatewayApi": {
            "$ref": "./examples/ApiManagementDeleteGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from Gateway"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in Gateway"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities": {
      "get": {
        "tags": [
          "GatewayCertificateAuthority"
        ],
        "operationId": "GatewayCertificateAuthority_ListByService",
        "description": "Lists the collection of Certificate Authorities for the specified Gateway entity.",
        "x-ms-examples": {
          "ApiManagementListGatewaycertificateAuthorities": {
            "$ref": "./examples/ApiManagementListGatewayCertificateAuthorities.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq, ne |  |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of Gateway Certificate Authority entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCertificateAuthorityCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GatewayCertificateAuthorityContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}": {
      "head": {
        "tags": [
          "GatewayCertificateAuthority"
        ],
        "operationId": "GatewayCertificateAuthority_GetEntityTag",
        "description": "Checks if Certificate entity is assigned to Gateway entity as Certificate Authority.",
        "x-ms-examples": {
          "ApiManagementHeadGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementHeadGatewayCertificateAuthority.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway Certificate Authority entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GatewayCertificateAuthority"
        ],
        "operationId": "GatewayCertificateAuthority_Get",
        "description": "Get assigned Gateway Certificate Authority details.",
        "x-ms-examples": {
          "ApiManagementGetGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementGetGatewayCertificateAuthority.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway Certificate Authority entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCertificateAuthorityContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GatewayCertificateAuthority"
        ],
        "operationId": "GatewayCertificateAuthority_CreateOrUpdate",
        "description": "Assign Certificate entity to Gateway entity as Certificate Authority.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementCreateGatewayCertificateAuthority.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCertificateAuthorityContract"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Certificate entity was successfully assigned to Gateway entity as Certificate Authority.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCertificateAuthorityContract"
            }
          },
          "200": {
            "description": "Gateway Certificate Authority details were successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCertificateAuthorityContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GatewayCertificateAuthority"
        ],
        "operationId": "GatewayCertificateAuthority_Delete",
        "description": "Remove relationship between Certificate Authority and Gateway entity.",
        "x-ms-examples": {
          "ApiManagementDeleteGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementDeleteGatewayCertificateAuthority.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate entity was successfully removed from Gateway entity as Certificate Authority."
          },
          "204": {
            "description": "Certificate was successfully removed from Gateway entity as Certificate Authority by one of the previous requests or never assigned."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/invalidateDebugCredentials": {
      "post": {
        "tags": [
          "GatewayInvalidateDebugCredentials"
        ],
        "operationId": "Gateway_InvalidateDebugCredentials",
        "description": "Action is invalidating all debug credentials issued for gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayInvalidateDebugCredentials": {
            "$ref": "./examples/ApiManagementGatewayInvalidateDebugCredentials.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "All debug credentials for gateway are now invalidated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listDebugCredentials": {
      "post": {
        "tags": [
          "GatewayListDebugCredentials"
        ],
        "operationId": "Gateway_ListDebugCredentials",
        "description": "Create new debug credentials for gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayListDebugCredentials": {
            "$ref": "./examples/ApiManagementGatewayListDebugCredentials.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "List debug credentials properties.",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayListDebugCredentialsContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains debug credentials to use in gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayDebugCredentialsContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listTrace": {
      "post": {
        "tags": [
          "GatewayListTrace"
        ],
        "operationId": "Gateway_ListTrace",
        "description": "Fetches trace collected by gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayListTrace": {
            "$ref": "./examples/ApiManagementGatewayListTrace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "List trace properties.",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayListTraceContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains trace collected by gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayTraceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags": {
      "get": {
        "tags": [
          "ApisByTag"
        ],
        "operationId": "Api_ListByTags",
        "description": "Lists a collection of apis associated with tags.",
        "x-ms-examples": {
          "ApiManagementListApisByTags": {
            "$ref": "./examples/ApiManagementListApisByTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "includeNotTaggedApis",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include not tagged APIs."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TagResource entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagResourceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant": {
      "get": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_ListByService",
        "description": "Returns list of access infos - for Git and Management endpoints.",
        "x-ms-examples": {
          "ApiManagementListTenantAccess": {
            "$ref": "./examples/ApiManagementListTenantAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Not used"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TenantAccessInfo entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/AccessInformationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}": {
      "head": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_GetEntityTag",
        "description": "Tenant access metadata",
        "x-ms-examples": {
          "ApiManagementHeadTenantAccess": {
            "$ref": "./examples/ApiManagementHeadTenantAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_Get",
        "description": "Get tenant access information details without secrets.",
        "x-ms-examples": {
          "ApiManagementGetTenantAccess": {
            "$ref": "./examples/ApiManagementGetTenantAccess.json"
          },
          "ApiManagementGetTenantGitAccess": {
            "$ref": "./examples/ApiManagementGetTenantGitAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Access information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_Create",
        "description": "Update tenant access information details.",
        "x-ms-examples": {
          "ApiManagementCreateTenantAccess": {
            "$ref": "./examples/ApiManagementCreateTenantAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationCreateParameters"
            },
            "description": "Parameters supplied to retrieve the Tenant Access Information."
          },
          {
            "$ref": "#/parameters/AccessParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Access information was updated successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_Update",
        "description": "Update tenant access information details.",
        "x-ms-examples": {
          "ApiManagementUpdateTenantAccess": {
            "$ref": "./examples/ApiManagementUpdateTenantAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationUpdateParameters"
            },
            "description": "Parameters supplied to retrieve the Tenant Access Information."
          },
          {
            "$ref": "#/parameters/AccessParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Access information was updated successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_RegeneratePrimaryKey",
        "description": "Regenerate primary access key",
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_RegenerateSecondaryKey",
        "description": "Regenerate secondary access key",
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/listSecrets": {
      "post": {
        "tags": [
          "TenantAccess"
        ],
        "operationId": "TenantAccess_ListSecrets",
        "description": "Get tenant access information details.",
        "x-ms-examples": {
          "ApiManagementListSecretsTenantAccess": {
            "$ref": "./examples/ApiManagementListSecretsTenantAccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Access information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/AccessInformationSecretsContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "TenantAccessGit"
        ],
        "operationId": "TenantAccessGit_RegeneratePrimaryKey",
        "description": "Regenerate primary access key for GIT.",
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "TenantAccessGit"
        ],
        "operationId": "TenantAccessGit_RegenerateSecondaryKey",
        "description": "Regenerate secondary access key for GIT.",
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy": {
      "post": {
        "tags": [
          "TenantConfiguration"
        ],
        "operationId": "TenantConfiguration_Deploy",
        "description": "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.",
        "externalDocs": {
          "description": "To deploy any service configuration changes to the API Management service instance",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-deploy-any-service-configuration-changes-to-the-api-management-service-instance"
        },
        "x-ms-examples": {
          "ApiManagementTenantConfigurationDeploy": {
            "$ref": "./examples/ApiManagementTenantConfigurationDeploy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DeployConfigurationParameters"
            },
            "description": "Deploy Configuration parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Result of applying changes from Git branch to database.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationResultContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save": {
      "post": {
        "tags": [
          "TenantConfiguration"
        ],
        "operationId": "TenantConfiguration_Save",
        "description": "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.",
        "externalDocs": {
          "description": "To save the service configuration to the Git repository",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-save-the-service-configuration-to-the-git-repository"
        },
        "x-ms-examples": {
          "ApiManagementTenantConfigurationSave": {
            "$ref": "./examples/ApiManagementTenantConfigurationSave.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SaveConfigurationParameter"
            },
            "description": "Save Configuration parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Result of creating a commit in the repository.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationResultContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate": {
      "post": {
        "tags": [
          "TenantConfiguration"
        ],
        "operationId": "TenantConfiguration_Validate",
        "description": "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementTenantConfigurationValidate": {
            "$ref": "./examples/ApiManagementTenantConfigurationValidate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/DeployConfigurationParameters"
            },
            "description": "Validate Configuration parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Result of validating the changes in the specified Git branch.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationResultContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState": {
      "get": {
        "tags": [
          "TenantConfigurationSyncState"
        ],
        "operationId": "TenantConfiguration_GetSyncState",
        "description": "Gets the status of the most recent synchronization between the configuration database and the Git repository.",
        "x-ms-examples": {
          "ApiManagementTenantAccessSyncState": {
            "$ref": "./examples/ApiManagementTenantAccessSyncState.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Sync state result.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TenantConfigurationSyncStateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/loggers": {
      "get": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_ListByWorkspace",
        "description": "Lists a collection of loggers in the specified workspace.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceLoggers": {
            "$ref": "./examples/ApiManagementListWorkspaceLoggers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Logger entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/LoggerContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/loggers/{loggerId}": {
      "head": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the logger specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceLogger": {
            "$ref": "./examples/ApiManagementHeadWorkspaceLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified logger entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_Get",
        "description": "Gets the details of the logger specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceLogger": {
            "$ref": "./examples/ApiManagementGetWorkspaceLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Logger entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_CreateOrUpdate",
        "description": "Creates or Updates a logger.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceEHLogger": {
            "$ref": "./examples/ApiManagementCreateWorkspaceEHLogger.json"
          },
          "ApiManagementCreateWorkspaceAILogger": {
            "$ref": "./examples/ApiManagementCreateWorkspaceAILogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Logger was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "The existing logger was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_Update",
        "description": "Updates an existing logger.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceLogger": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerUpdateContract"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing logger was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Logger"
        ],
        "operationId": "WorkspaceLogger_Delete",
        "description": "Deletes the specified logger.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceLogger": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceLogger.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/LoggerIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The logger was successfully deleted."
          },
          "204": {
            "description": "The logger was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/backends": {
      "get": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_ListByWorkspace",
        "description": "Lists a collection of backends in the specified workspace.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceBackends": {
            "$ref": "./examples/ApiManagementListWorkspaceBackends.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Backend entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/BackendContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/backends/{backendId}": {
      "head": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the backend specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceBackend": {
            "$ref": "./examples/ApiManagementHeadWorkspaceBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified backend entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_Get",
        "description": "Gets the details of the backend specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceBackend": {
            "$ref": "./examples/ApiManagementGetWorkspaceBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Backend entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_CreateOrUpdate",
        "description": "Creates or Updates a backend.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceBackendServiceFabric": {
            "$ref": "./examples/ApiManagementCreateWorkspaceBackendServiceFabric.json"
          },
          "ApiManagementCreateWorkspaceBackendProxyBackend": {
            "$ref": "./examples/ApiManagementCreateWorkspaceBackendProxyBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "200": {
            "description": "The existing backend was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_Update",
        "description": "Updates an existing backend.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceBackend": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing backend was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backend"
        ],
        "operationId": "WorkspaceBackend_Delete",
        "description": "Deletes the specified backend.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceBackend": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backend was successfully deleted."
          },
          "204": {
            "description": "The backend was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_ListByService",
        "description": "Lists a collection of all certificates in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListCertificates": {
            "$ref": "./examples/ApiManagementListCertificates.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains only certificates entities which failed refresh."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of Certificate entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/CertificateContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}": {
      "head": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the certificate specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadCertificate": {
            "$ref": "./examples/ApiManagementHeadCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified certificate entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Get",
        "description": "Gets the details of the certificate specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetCertificate": {
            "$ref": "./examples/ApiManagementGetCertificate.json"
          },
          "ApiManagementGetCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementGetCertificateWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Certificate entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_CreateOrUpdate",
        "description": "Creates or updates the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "x-ms-examples": {
          "ApiManagementCreateCertificate": {
            "$ref": "./examples/ApiManagementCreateCertificate.json"
          },
          "ApiManagementCreateCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateCertificateWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateCreateOrUpdateParameters"
            },
            "description": "Create or Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new certificate was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "200": {
            "description": "The certificate details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_Delete",
        "description": "Deletes specific certificate.",
        "x-ms-examples": {
          "ApiManagementDeleteCertificate": {
            "$ref": "./examples/ApiManagementDeleteCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The certificate was successfully deleted."
          },
          "204": {
            "description": "The certificate was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}/refreshSecret": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "operationId": "Certificate_RefreshSecret",
        "description": "From KeyVault, Refresh the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "x-ms-examples": {
          "ApiManagementRefreshCertificate": {
            "$ref": "./examples/ApiManagementRefreshCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The certificate details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets": {
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "ApiVersionSet_ListByService",
        "description": "Lists a collection of API Version Sets in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListApiVersionSets": {
            "$ref": "./examples/ApiManagementListApiVersionSets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Api Version Set entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiVersionSetContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}": {
      "head": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "ApiVersionSet_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiVersionSet": {
            "$ref": "./examples/ApiManagementHeadApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Api Version Set entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "ApiVersionSet_Get",
        "description": "Gets the details of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetApiVersionSet": {
            "$ref": "./examples/ApiManagementGetApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the specified Api Version Set entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "ApiVersionSet_CreateOrUpdate",
        "description": "Creates or Updates a Api Version Set.",
        "x-ms-examples": {
          "ApiManagementCreateApiVersionSet": {
            "$ref": "./examples/ApiManagementCreateApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Version Set was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "ApiVersionSet_Update",
        "description": "Updates the details of the Api VersionSet specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateApiVersionSet": {
            "$ref": "./examples/ApiManagementUpdateApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiVersionSets"
        ],
        "operationId": "ApiVersionSet_Delete",
        "description": "Deletes specific Api Version Set.",
        "x-ms-examples": {
          "ApiManagementDeleteApiVersionSet": {
            "$ref": "./examples/ApiManagementDeleteApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "204": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues": {
      "get": {
        "tags": [
          "Issue"
        ],
        "operationId": "Issue_ListByService",
        "description": "Lists a collection of issues in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListIssues": {
            "$ref": "./examples/ApiManagementListIssues.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| authorName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Issue entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/IssueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}": {
      "get": {
        "tags": [
          "Issue"
        ],
        "operationId": "Issue_Get",
        "description": "Gets API Management issue details",
        "x-ms-examples": {
          "ApiManagementGetIssue": {
            "$ref": "./examples/ApiManagementGetIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the details of the issue.",
            "schema": {
              "$ref": "./definitions.json#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues": {
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_ListByService",
        "description": "Lists a collection of named values defined within a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties"
        },
        "x-ms-examples": {
          "ApiManagementListNamedValues": {
            "$ref": "./examples/ApiManagementListNamedValues.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains only named value entities which failed refresh."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the named value entities for the specified API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/NamedValueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}": {
      "head": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadNamedValue": {
            "$ref": "./examples/ApiManagementHeadNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified named value entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_Get",
        "description": "Gets the details of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetNamedValue": {
            "$ref": "./examples/ApiManagementGetNamedValue.json"
          },
          "ApiManagementGetNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementGetNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value entity. No secrets included",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_CreateOrUpdate",
        "description": "Creates or updates named value.",
        "x-ms-examples": {
          "ApiManagementCreateNamedValue": {
            "$ref": "./examples/ApiManagementCreateNamedValue.json"
          },
          "ApiManagementCreateNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCreateContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Named value was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_Update",
        "description": "Updates the specific named value.",
        "x-ms-examples": {
          "ApiManagementUpdateNamedValue": {
            "$ref": "./examples/ApiManagementUpdateNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to create or update named value was accepted.",
            "headers": {
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_Delete",
        "description": "Deletes specific named value from the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteNamedValue": {
            "$ref": "./examples/ApiManagementDeleteNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Named value was successfully deleted."
          },
          "204": {
            "description": "Named value was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/listValue": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_ListValue",
        "description": "Gets the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementNamedValueListValue": {
            "$ref": "./examples/ApiManagementNamedValueListValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value secret.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueSecretContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/refreshSecret": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "NamedValue_RefreshSecret",
        "description": "Refresh the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementRefreshNamedValue": {
            "$ref": "./examples/ApiManagementRefreshNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to refresh secret was accepted.",
            "headers": {
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_ListByService",
        "description": "Lists all workspaces of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaces": {
            "$ref": "./examples/ApiManagementListWorkspaces.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br></br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of workspaces.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/WorkspaceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}": {
      "head": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspace": {
            "$ref": "./examples/ApiManagementHeadWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity tag of the workspace",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Get",
        "description": "Gets the details of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspace": {
            "$ref": "./examples/ApiManagementGetWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified workspace entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_CreateOrUpdate",
        "description": "Creates a new workspace or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspace": {
            "$ref": "./examples/ApiManagementCreateWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Workspace was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "200": {
            "description": "Workspace successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Update",
        "description": "Updates the details of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspace": {
            "$ref": "./examples/ApiManagementUpdateWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "description": "Workspace Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Delete",
        "description": "Deletes the specified workspace.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspace": {
            "$ref": "./examples/ApiManagementDeleteWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The workspace was successfully deleted."
          },
          "204": {
            "description": "The workspace was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies": {
      "get": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_ListByApi",
        "description": "Get the policy configuration at the workspace level.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicies": {
            "$ref": "./examples/ApiManagementListWorkspacePolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies/{policyId}": {
      "head": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the workspace policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified workspace Policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_Get",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicy": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the workspace.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicy.json"
          },
          "ApiManagementCreateWorkspacePolicyNonXmlEncoded": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyNonXmlEncoded.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Workspace policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Workspace policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_Delete",
        "description": "Deletes the policy configuration at the workspace.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the workspace level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the workspace level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues": {
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_ListByService",
        "description": "Lists a collection of named values defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNamedValues": {
            "$ref": "./examples/ApiManagementListWorkspaceNamedValues.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "KeyVaultRefreshState",
              "modelAsString": true,
              "values": [
                {
                  "value": "true",
                  "description": "Entities for which KeyVault refresh failed."
                },
                {
                  "value": "false",
                  "description": "Entities for which KeyVault refresh succeeded"
                }
              ]
            },
            "description": "Query parameter to fetch named value entities based on refresh status."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the named value entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/NamedValueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}": {
      "head": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified named value entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Get",
        "description": "Gets the details of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValue.json"
          },
          "ApiManagementGetWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value entity. No secrets included",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_CreateOrUpdate",
        "description": "Creates or updates named value.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValue.json"
          },
          "ApiManagementCreateWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCreateContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Named value was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Update",
        "description": "Updates the specific named value.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to create or update named value was accepted.",
            "headers": {
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Delete",
        "description": "Deletes specific named value from the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Named value was successfully deleted."
          },
          "204": {
            "description": "Named value was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/listValue": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_ListValue",
        "description": "Gets the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementWorkspaceNamedValueListValue": {
            "$ref": "./examples/ApiManagementWorkspaceNamedValueListValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value secret.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueSecretContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/refreshSecret": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_RefreshSecret",
        "description": "Refresh the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementRefreshWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementRefreshWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to refresh secret was accepted.",
            "headers": {
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas": {
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_ListByService",
        "description": "Lists a collection of schemas registered with workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Schema entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GlobalSchemaContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_Get",
        "description": "Gets the details of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceSchema.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Schema entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_CreateOrUpdate",
        "description": "Creates new or updates existing specified Schema of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Schema was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "200": {
            "description": "The Schema details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_Delete",
        "description": "Deletes specific Schema.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Schema was successfully deleted."
          },
          "204": {
            "description": "The Schema was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_ListByService",
        "description": "Lists a collection of properties defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotifications": {
            "$ref": "./examples/ApiManagementListWorkspaceNotifications.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Notification for the specified workspace in a API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_Get",
        "description": "Gets the details of the Notification specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNotification": {
            "$ref": "./examples/ApiManagementGetWorkspaceNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_CreateOrUpdate",
        "description": "Create or Update API Management publisher notification for the workspace.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotification": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_ListByNotification",
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient User collection for the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}": {
      "head": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_CheckEntityExists",
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The User is subscribed to receive the notification."
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_CreateOrUpdate",
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient User was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "200": {
            "description": "Recipient User is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_Delete",
        "description": "Removes the API Management user from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "204": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_ListByNotification",
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientEmails": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientEmails.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient Email collection subscribed to the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}": {
      "head": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_CheckEntityExists",
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Users is subscribed to receive the notification."
          },
          "404": {
            "description": "The Users is not subscribed to receive the notification."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_CreateOrUpdate",
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient Email was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "200": {
            "description": "Recipient Email is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_Delete",
        "description": "Removes the email from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "204": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments": {
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_ListByService",
        "description": "Gets all policy fragments defined within a workspace.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragments": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter, orderBy | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| value | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of policy fragments.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}": {
      "head": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_GetEntityTag",
        "description": "Gets the entity state (Etag) version of a policy fragment.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified policy fragment exists and the current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_Get",
        "description": "Gets a policy fragment.",
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragment.json"
          },
          "ApiManagementGetWorkspacePolicyFragmentFormat": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragmentFormat.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyFragmentContentFormat"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a policy fragment.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_CreateOrUpdate",
        "description": "Creates or updates a policy fragment.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "description": "The policy fragment contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "The policy fragment was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_Delete",
        "description": "Deletes a policy fragment.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully removed."
          },
          "204": {
            "description": "The policy fragment successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}/listReferences": {
      "post": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_ListReferences",
        "description": "Lists policy resources that reference the policy fragment.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragmentReferences": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragmentReferences.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/IdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of references to policy resources that include the policy fragment in their definitions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_ListByService",
        "description": "Lists a collection of groups defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroups": {
            "$ref": "./examples/ApiManagementListWorkspaceGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Group entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GroupContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}": {
      "head": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroup": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified group entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Get",
        "description": "Gets the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceGroup": {
            "$ref": "./examples/ApiManagementGetWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Group entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_CreateOrUpdate",
        "description": "Creates or Updates a group.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroup.json"
          },
          "ApiManagementCreateWorkspaceGroupExternal": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupExternal.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Group was created successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Group already exists.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Update",
        "description": "Updates the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group details were successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Delete",
        "description": "Deletes specific group of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroup": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully deleted."
          },
          "204": {
            "description": "The group was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users": {
      "get": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_List",
        "description": "Lists a collection of user entities associated with the group.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroupUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceGroupUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of user entities associated with the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/UserContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users/{userId}": {
      "head": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_CheckEntityExists",
        "description": "Checks that user entity specified by identifier is associated with the group entity.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Entity exists"
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_Create",
        "description": "Add existing user to existing group",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully added to the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "200": {
            "description": "The specified user is already a member of the specified group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_Delete",
        "description": "Remove existing user from existing group.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was successfully removed from the group."
          },
          "204": {
            "description": "The user was successfully removed from the group."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_List",
        "description": "Lists all subscriptions of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceSubscriptions": {
            "$ref": "./examples/ApiManagementListWorkspaceSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the Subscription entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SubscriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}": {
      "head": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Get",
        "description": "Gets the specified Subscription entity.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementGetWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Subscription entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_CreateOrUpdate",
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "200": {
            "description": "The user already subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Update",
        "description": "Updates the details of a subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Delete",
        "description": "Deletes the specified subscription.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully deleted."
          },
          "204": {
            "description": "The subscription details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_RegeneratePrimaryKey",
        "description": "Regenerates primary key of existing subscription of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_RegenerateSecondaryKey",
        "description": "Regenerates secondary key of existing subscription of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/listSecrets": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_ListSecrets",
        "description": "Gets the specified Subscription keys.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionListSecrets": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains subscription keys.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionKeysContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets": {
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_ListByService",
        "description": "Lists a collection of API Version Sets in the specified workspace with a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiVersionSets": {
            "$ref": "./examples/ApiManagementListWorkspaceApiVersionSets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Api Version Set entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiVersionSetContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets/{versionSetId}": {
      "head": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Api Version Set entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_Get",
        "description": "Gets the details of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the specified Api Version Set entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_CreateOrUpdate",
        "description": "Creates or Updates a Api Version Set.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Version Set was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_Update",
        "description": "Updates the details of the Api VersionSet specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiVersionSets"
        ],
        "operationId": "WorkspaceApiVersionSet_Delete",
        "description": "Deletes specific Api Version Set.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "204": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis": {
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_ListByService",
        "description": "Lists all APIs of the workspace in an API Management service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApis": {
            "$ref": "./examples/ApiManagementListWorkspaceApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "name": "expandApiVersionSet",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include full ApiVersionSet resource in response"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of Apis.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}": {
      "head": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApi": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Get",
        "description": "Gets the details of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiContract": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiContract.json"
          },
          "ApiManagementGetWorkspaceApiRevision": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRevision.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_CreateOrUpdate",
        "description": "Creates new or updates existing specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApi": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCreateOrUpdateParameter"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "API was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Update",
        "description": "Updates the specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApi": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiUpdateContract"
            },
            "description": "API Update Contract parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Delete",
        "description": "Deletes the specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApi": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "deleteRevisions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete all revisions of the Api."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API was successfully deleted."
          },
          "204": {
            "description": "The API was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/revisions": {
      "get": {
        "tags": [
          "ApiRevision"
        ],
        "operationId": "WorkspaceApiRevision_ListByService",
        "description": "Lists all revisions of an API.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiRevisions": {
            "$ref": "./examples/ApiManagementListWorkspaceApiRevisions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of revision details.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiRevisionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiRevisionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases": {
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_ListByService",
        "description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiReleases": {
            "$ref": "./examples/ApiManagementListWorkspaceApiReleases.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of API Releases.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiReleaseContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases/{releaseId}": {
      "head": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_GetEntityTag",
        "description": "Returns the etag of an API release.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity state (Etag) version of the api release as specified by its identifier.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Get",
        "description": "Returns the details of an API release.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns the details of an API Release.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_CreateOrUpdate",
        "description": "Creates a new Release for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Release was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Update",
        "description": "Updates the details of the release of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "API Release Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Delete",
        "description": "Deletes the specified release in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdParameter"
          },
          {
            "$ref": "#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API release successfully removed"
          },
          "204": {
            "description": "API release successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations": {
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_ListByApi",
        "description": "Lists a collection of the operations for the specified API.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperations": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of operation summary entities at the API level.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/OperationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}": {
      "head": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Get",
        "description": "Gets the details of the API Operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Operation entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_CreateOrUpdate",
        "description": "Creates a new operation in the API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Update",
        "description": "Updates the details of the operation in the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationUpdateContract"
            },
            "description": "API Operation Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Delete",
        "description": "Deletes the specified operation in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API operation successfully removed"
          },
          "204": {
            "description": "API operation successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies": {
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_ListByOperation",
        "description": "Get the list of policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperationPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperationPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operations Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_Get",
        "description": "Get the policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operation Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API Operation level.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Operation policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Operation policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_Delete",
        "description": "Deletes the policy configuration at the Api Operation.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies": {
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_ListByApi",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API Policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_Get",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_Delete",
        "description": "Deletes the policy configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas": {
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_ListByApi",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceApiSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Schema Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SchemaContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_Get",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Schema information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_CreateOrUpdate",
        "description": "Creates or updates schema configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "description": "The schema contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api schema configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api schema configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_Delete",
        "description": "Deletes the schema configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/SchemaIdParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true removes all references to the schema before deleting it."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_ListByService",
        "description": "Lists a collection of products in the specified workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProducts": {
            "$ref": "./examples/ApiManagementListWorkspaceProducts.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "expandGroups",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains an array of groups that have visibility to the product. The default is false."
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Products which are part of a specific tag."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Product entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}": {
      "head": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProduct": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Product entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Get",
        "description": "Gets the details of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProduct": {
            "$ref": "./examples/ApiManagementGetWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Product entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_CreateOrUpdate",
        "description": "Creates or Updates a product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Update",
        "description": "Update existing product details.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Delete",
        "description": "Delete product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProduct": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete existing subscriptions associated with the product or not."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed."
          },
          "204": {
            "description": "Product was successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_Get",
        "description": "Gets the API link for the product.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_Delete",
        "description": "Deletes the specified API from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from product"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_ListByProduct",
        "description": "Lists a collection of the group links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductGroupLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductGroupLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| groupId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of group link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductGroupLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks/{groupLinkId}": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_Get",
        "description": "Gets the group link for the product.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified group link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_CreateOrUpdate",
        "description": "Adds a group to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The group was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "200": {
            "description": "The specified group is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_Delete",
        "description": "Deletes the specified group from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Group was successfully removed from product"
          },
          "204": {
            "description": "Group successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies": {
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_ListByProduct",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceProductPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_GetEntityTag",
        "description": "Get the ETag of the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy Etag information.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_Get",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the Product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_Delete",
        "description": "Deletes the policy configuration at the Product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_ListByService",
        "description": "Lists a collection of tags defined within a workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTags": {
            "$ref": "./examples/ApiManagementListWorkspaceTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Scope like 'apis', 'products' or 'apis/{apiId}"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Tag entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}": {
      "head": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_GetEntityState",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceTag": {
            "$ref": "./examples/ApiManagementHeadWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Get",
        "description": "Gets the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTag": {
            "$ref": "./examples/ApiManagementGetWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Tag entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_CreateOrUpdate",
        "description": "Creates a tag.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTag": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was created successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag already exists.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Update",
        "description": "Updates the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceTag": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Delete",
        "description": "Deletes specific tag of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTag": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully removed"
          },
          "204": {
            "description": "Tag successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_Get",
        "description": "Gets the API link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_Delete",
        "description": "Deletes the specified API from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from tag"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_ListByProduct",
        "description": "Lists a collection of the operation links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagOperationLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagOperationLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| operationId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of operation link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagOperationLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks/{operationLinkId}": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_Get",
        "description": "Gets the operation link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified operation link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_CreateOrUpdate",
        "description": "Adds an operation to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "200": {
            "description": "The specified operation is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_Delete",
        "description": "Deletes the specified operation from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully removed from tag"
          },
          "204": {
            "description": "Operation successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_ListByProduct",
        "description": "Lists a collection of the product links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagProductLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagProductLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of product link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagProductLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks/{productLinkId}": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_Get",
        "description": "Gets the product link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified product link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_CreateOrUpdate",
        "description": "Adds a product to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The product was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "200": {
            "description": "The specified product is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_Delete",
        "description": "Deletes the specified product from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed from tag"
          },
          "204": {
            "description": "Product successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck": {
      "post": {
        "tags": [
          "PerformConnectivityCheck"
        ],
        "operationId": "PerformConnectivityCheckAsync",
        "description": "Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it.",
        "x-ms-examples": {
          "TCP Connectivity Check": {
            "$ref": "./examples/ApiManagementPerformConnectivityCheck.json"
          },
          "HTTP Connectivity Check": {
            "$ref": "./examples/ApiManagementPerformConnectivityCheckHttpConnect.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "connectivityCheckRequestParams",
            "description": "Connectivity Check request parameters.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ConnectivityCheckRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted and is currently running. Location header contains the URL where the status of the long running operation can be checked and the result eventually retrieved.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Connectivity Check Request was completed.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ConnectivityCheckResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources": {
      "get": {
        "tags": [
          "TagResource"
        ],
        "operationId": "TagResource_ListByService",
        "description": "Lists a collection of resources associated with tags.",
        "x-ms-examples": {
          "ApiManagementListTagResources": {
            "$ref": "./examples/ApiManagementListTagResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| isCurrent | filter | eq |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TagResource entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagResourceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_ListByService",
        "description": "Lists a collection of registered users in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListUsers": {
            "$ref": "./examples/ApiManagementListUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| groups | expand |     |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "expandGroups",
            "in": "query",
            "type": "boolean",
            "description": "Detailed Group in response."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of User entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/UserContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}": {
      "head": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the user specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadUser": {
            "$ref": "./examples/ApiManagementHeadUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified user entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_Get",
        "description": "Gets the details of the user specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetUser": {
            "$ref": "./examples/ApiManagementGetUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the specified user entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_CreateOrUpdate",
        "description": "Creates or Updates a user.",
        "x-ms-examples": {
          "ApiManagementCreateUser": {
            "$ref": "./examples/ApiManagementCreateUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/UserCreateParameters"
            },
            "description": "Create or update parameters."
          },
          {
            "name": "notify",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Send an Email notification to the User."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "User was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "User was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "User_Update",
        "description": "Updates the details of the user specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateUser": {
            "$ref": "./examples/ApiManagementUpdateUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/UserUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "User was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "User_Delete",
        "description": "Deletes specific user.",
        "x-ms-examples": {
          "ApiManagementDeleteUser": {
            "$ref": "./examples/ApiManagementDeleteUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Whether to delete user's subscription or not."
          },
          {
            "name": "notify",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Send an Account Closed Email notification to the User."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to delete user details was accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The user details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/generateSsoUrl": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "User_GenerateSsoUrl",
        "description": "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.",
        "x-ms-examples": {
          "ApiManagementUserGenerateSsoUrl": {
            "$ref": "./examples/ApiManagementUserGenerateSsoUrl.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the single sign-on URL.",
            "schema": {
              "x-ms-client-flatten": true,
              "$ref": "./definitions.json#/definitions/GenerateSsoUrlResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/groups": {
      "get": {
        "tags": [
          "UserGroup"
        ],
        "operationId": "UserGroup_List",
        "description": "Lists all user groups.",
        "x-ms-examples": {
          "ApiManagementListUserGroups": {
            "$ref": "./examples/ApiManagementListUserGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|------------------------|-----------------------------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Group entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GroupContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions": {
      "get": {
        "tags": [
          "UserSubscription"
        ],
        "operationId": "UserSubscription_List",
        "description": "Lists the collection of subscriptions of the specified user.",
        "x-ms-examples": {
          "ApiManagementListUserSubscriptions": {
            "$ref": "./examples/ApiManagementListUserSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field     |     Usage     |     Supported operators    | Supported functions               |</br>|-------------|------------------------|-----------------------------------|</br>|name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Subscription entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SubscriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions/{sid}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "UserSubscription_Get",
        "description": "Gets the specified Subscription entity associated with a particular user.",
        "x-ms-examples": {
          "ApiManagementGetUserSubscription": {
            "$ref": "./examples/ApiManagementGetUserSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Subscription entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/identities": {
      "get": {
        "tags": [
          "UserIdentity"
        ],
        "operationId": "UserIdentities_List",
        "description": "List of all user identities.",
        "x-ms-examples": {
          "ApiManagementListUserIdentities": {
            "$ref": "./examples/ApiManagementListUserIdentities.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists of User Identities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserIdentityCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/token": {
      "post": {
        "tags": [
          "UserToken"
        ],
        "operationId": "User_GetSharedAccessToken",
        "description": "Gets the Shared Access Authorization Token for the User.",
        "x-ms-examples": {
          "ApiManagementUserToken": {
            "$ref": "./examples/ApiManagementUserToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/UserTokenParameters"
            },
            "description": "Create Authorization Token parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the authorization token for the user.",
            "schema": {
              "x-ms-client-flatten": true,
              "$ref": "./definitions.json#/definitions/UserTokenResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/confirmations/password/send": {
      "post": {
        "tags": [
          "UserConfirmationPasswordSend"
        ],
        "operationId": "UserConfirmationPassword_Send",
        "description": "Sends confirmation",
        "x-ms-examples": {
          "ApiManagementUserConfirmationPasswordSend": {
            "$ref": "./examples/ApiManagementUserConfirmationPasswordSend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/UserIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Notification successfully sent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_ListByService",
        "description": "Lists all the Global Policy definitions of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementListPolicies": {
            "$ref": "./examples/ApiManagementListPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Policy Contracts.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}": {
      "head": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Global policy definition in the Api Management service.",
        "x-ms-examples": {
          "ApiManagementHeadPolicy": {
            "$ref": "./examples/ApiManagementHeadPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Get",
        "description": "Get the Global policy definition of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementGetPolicy": {
            "$ref": "./examples/ApiManagementGetPolicy.json"
          },
          "ApiManagementGetPolicyFormat": {
            "$ref": "./examples/ApiManagementGetPolicyFormat.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the Global policy definition of the Api Management service.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_CreateOrUpdate",
        "description": "Creates or updates the global policy configuration of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementCreatePolicy": {
            "$ref": "./examples/ApiManagementCreatePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Global policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Global policy configuration of the Api Management service was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Delete",
        "description": "Deletes the global policy configuration of the Api Management Service.",
        "x-ms-examples": {
          "ApiManagementDeletePolicy": {
            "$ref": "./examples/ApiManagementDeletePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy was successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus": {
      "get": {
        "tags": [
          "Skus"
        ],
        "operationId": "ApiManagementSkus_List",
        "description": "Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.",
        "x-ms-examples": {
          "Lists all available Resource SKUs": {
            "$ref": "./examples/ApiManagementListSku.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiManagementSkusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders": {
      "get": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_ListByService",
        "description": "Lists of all the OpenId Connect Providers.",
        "x-ms-examples": {
          "ApiManagementListOpenIdConnectProviders": {
            "$ref": "./examples/ApiManagementListOpenIdConnectProviders.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists of all the OpenId Connect Providers.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenIdConnectProviderCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/OpenidConnectProviderContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}": {
      "head": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the openIdConnectProvider specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementHeadOpenIdConnectProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified openidConnectProvider entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_Get",
        "description": "Gets specific OpenID Connect Provider without secrets.",
        "x-ms-examples": {
          "ApiManagementGetOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementGetOpenIdConnectProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified OpenId Connect Provider entity without secrets.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_CreateOrUpdate",
        "description": "Creates or updates the OpenID Connect Provider.",
        "x-ms-examples": {
          "ApiManagementCreateOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementCreateOpenIdConnectProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "OpenIdConnect Provider was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderContract"
            }
          },
          "200": {
            "description": "OpenIdConnect Provider was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_Update",
        "description": "Updates the specific OpenID Connect Provider.",
        "x-ms-examples": {
          "ApiManagementUpdateOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementUpdateOpenIdConnectProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderUpdateContract"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OpenIdConnect Provider was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/OpenidConnectProviderContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_Delete",
        "description": "Deletes specific OpenID Connect Provider of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementDeleteOpenIdConnectProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OpenId Connect Provider was successfully deleted."
          },
          "204": {
            "description": "OpenId Connect Provider was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}/listSecrets": {
      "post": {
        "tags": [
          "OpenidConnectProvider"
        ],
        "operationId": "OpenIdConnectProvider_ListSecrets",
        "description": "Gets the client secret details of the OpenID Connect Provider.",
        "x-ms-examples": {
          "ApiManagementOpenidConnectProviderListSecrets": {
            "$ref": "./examples/ApiManagementOpenidConnectProviderListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/OpenIdConnectIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified OpenId Connect Provider secrets.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ClientSecretContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/validatePolicies": {
      "post": {
        "tags": [
          "PolicyRestrictionsValidations"
        ],
        "operationId": "PolicyRestrictionValidations_ByService",
        "description": "Validate all policies of API Management services.",
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementValidatePolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "location": {
                "description": "location of the header.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Policy Restrictions are successfully validated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationResultContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes": {
      "get": {
        "tags": [
          "ContentType"
        ],
        "operationId": "ContentType_ListByService",
        "description": "Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints.",
        "x-ms-examples": {
          "ApiManagementListContentTypes": {
            "$ref": "./examples/ApiManagementListContentTypes.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of the Content Type entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentTypeCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}": {
      "get": {
        "tags": [
          "ContentType"
        ],
        "operationId": "ContentType_Get",
        "description": "Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.",
        "x-ms-examples": {
          "ApiManagementGetContentType": {
            "$ref": "./examples/ApiManagementGetContentType.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the details of the specified content type.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentTypeContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContentType"
        ],
        "operationId": "ContentType_CreateOrUpdate",
        "description": "Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified.",
        "x-ms-examples": {
          "ApiManagementCreateContentType": {
            "$ref": "./examples/ApiManagementCreateContentType.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentTypeContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The content type was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentTypeContract"
            }
          },
          "200": {
            "description": "The existing content type was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentTypeContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContentType"
        ],
        "operationId": "ContentType_Delete",
        "description": "Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed.",
        "x-ms-examples": {
          "ApiManagementDeleteContentType": {
            "$ref": "./examples/ApiManagementDeleteContentType.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The content type was successfully deleted."
          },
          "204": {
            "description": "The content type was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems": {
      "get": {
        "tags": [
          "ContentTypeContentItem"
        ],
        "operationId": "ContentItem_ListByService",
        "description": "Lists developer portal's content items specified by the provided content type.",
        "x-ms-examples": {
          "ApiManagementListContentTypeContentItems": {
            "$ref": "./examples/ApiManagementListContentTypeContentItems.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of Content Type entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentItemCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}": {
      "head": {
        "tags": [
          "ContentTypeContentItem"
        ],
        "operationId": "ContentItem_GetEntityTag",
        "description": "Returns the entity state (ETag) version of the developer portal's content item specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadContentTypeContentItem": {
            "$ref": "./examples/ApiManagementHeadContentTypeContentItem.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ContentItemIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified content item entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ContentTypeContentItem"
        ],
        "operationId": "ContentItem_Get",
        "description": "Returns the developer portal's content item specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetContentTypeContentItem": {
            "$ref": "./examples/ApiManagementGetContentTypeContentItem.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ContentItemIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the content item.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentItemContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContentTypeContentItem"
        ],
        "operationId": "ContentItem_CreateOrUpdate",
        "description": "Creates a new developer portal's content item specified by the provided content type.",
        "x-ms-examples": {
          "ApiManagementCreateContentTypeContentItem": {
            "$ref": "./examples/ApiManagementCreateContentTypeContentItem.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ContentItemIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentItemContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The content item was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentItemContract"
            }
          },
          "200": {
            "description": "The existing content item was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/ContentItemContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContentTypeContentItem"
        ],
        "operationId": "ContentItem_Delete",
        "description": "Removes the specified developer portal's content item.",
        "x-ms-examples": {
          "ApiManagementDeleteContentTypeContentItem": {
            "$ref": "./examples/ApiManagementDeleteContentTypeContentItem.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ContentTypeIdParameter"
          },
          {
            "$ref": "#/parameters/ContentItemIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The content item was successfully deleted."
          },
          "204": {
            "description": "The content item was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_ListByWorkspace",
        "description": "Lists a collection of all certificates in the specified workspace.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceCertificates": {
            "$ref": "./examples/ApiManagementListWorkspaceCertificates.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains only certificates entities which failed refresh."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of Certificate entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/CertificateContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates/{certificateId}": {
      "head": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the certificate specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementWorkspaceHeadCertificate": {
            "$ref": "./examples/ApiManagementHeadWorkspaceCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified certificate entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_Get",
        "description": "Gets the details of the certificate specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementGetWorkspaceCertificate.json"
          },
          "ApiManagementGetWorkspaceCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementGetWorkspaceCertificateWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Certificate entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_CreateOrUpdate",
        "description": "Creates or updates the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementCreateWorkspaceCertificate.json"
          },
          "ApiManagementCreateWorkspaceCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateWorkspaceCertificateWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateCreateOrUpdateParameters"
            },
            "description": "Create or Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new certificate was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "200": {
            "description": "The certificate details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_Delete",
        "description": "Deletes specific certificate.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The certificate was successfully deleted."
          },
          "204": {
            "description": "The certificate was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates/{certificateId}/refreshSecret": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "operationId": "WorkspaceCertificate_RefreshSecret",
        "description": "From KeyVault, Refresh the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "x-ms-examples": {
          "ApiManagementRefreshWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementRefreshWorkspaceCertificate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "#/parameters/CertificateIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The certificate details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CertificateContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_ListByService",
        "description": "Lists a collection of tags defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListTags": {
            "$ref": "./examples/ApiManagementListTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Scope like 'apis', 'products' or 'apis/{apiId}"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Tag entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}": {
      "head": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_GetEntityState",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadTag": {
            "$ref": "./examples/ApiManagementHeadTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_Get",
        "description": "Gets the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetTag": {
            "$ref": "./examples/ApiManagementGetTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Tag entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_CreateOrUpdate",
        "description": "Creates a tag.",
        "x-ms-examples": {
          "ApiManagementCreateTag": {
            "$ref": "./examples/ApiManagementCreateTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was created successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag already exists.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_Update",
        "description": "Updates the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateTag": {
            "$ref": "./examples/ApiManagementUpdateTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "operationId": "Tag_Delete",
        "description": "Deletes specific tag of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteTag": {
            "$ref": "./examples/ApiManagementDeleteTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully removed"
          },
          "204": {
            "description": "Tag successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/apiLinks": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "TagApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListTagApiLinks": {
            "$ref": "./examples/ApiManagementListTagApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "TagApiLink_Get",
        "description": "Gets the API link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetTagApiLink": {
            "$ref": "./examples/ApiManagementGetTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "TagApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateTagApiLink": {
            "$ref": "./examples/ApiManagementCreateTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The specified API is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "201": {
            "description": "The API was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "TagApiLink_Delete",
        "description": "Deletes the specified API from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteTagApiLink": {
            "$ref": "./examples/ApiManagementDeleteTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from tag"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/operationLinks": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "TagOperationLink_ListByProduct",
        "description": "Lists a collection of the operation links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListTagOperationLinks": {
            "$ref": "./examples/ApiManagementListTagOperationLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| operationId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of operation link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagOperationLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/operationLinks/{operationLinkId}": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "TagOperationLink_Get",
        "description": "Gets the operation link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetTagOperationLink": {
            "$ref": "./examples/ApiManagementGetTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified operation link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "TagOperationLink_CreateOrUpdate",
        "description": "Adds an operation to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateTagOperationLink": {
            "$ref": "./examples/ApiManagementCreateTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The specified operation is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "201": {
            "description": "The operation was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "TagOperationLink_Delete",
        "description": "Deletes the specified operation from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteTagOperationLink": {
            "$ref": "./examples/ApiManagementDeleteTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully removed from tag"
          },
          "204": {
            "description": "Operation successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/productLinks": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "TagProductLink_ListByProduct",
        "description": "Lists a collection of the product links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListTagProductLinks": {
            "$ref": "./examples/ApiManagementListTagProductLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of product link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagProductLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/productLinks/{productLinkId}": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "TagProductLink_Get",
        "description": "Gets the product link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetTagProductLink": {
            "$ref": "./examples/ApiManagementGetTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified product link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "TagProductLink_CreateOrUpdate",
        "description": "Adds a product to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateTagProductLink": {
            "$ref": "./examples/ApiManagementCreateTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The specified product is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "201": {
            "description": "The product was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "TagProductLink_Delete",
        "description": "Deletes the specified product from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteTagProductLink": {
            "$ref": "./examples/ApiManagementDeleteTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed from tag"
          },
          "204": {
            "description": "Product successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions": {
      "get": {
        "tags": [
          "PortalRevision"
        ],
        "operationId": "PortalRevision_ListByService",
        "description": "Lists developer portal's revisions.",
        "x-ms-examples": {
          "ApiManagementListPortalRevisions": {
            "$ref": "./examples/ApiManagementListPortalRevisions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n\r\n|name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|isCurrent | eq, ne |    |\n"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists portal's revisions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}": {
      "head": {
        "tags": [
          "PortalRevision"
        ],
        "operationId": "PortalRevision_GetEntityTag",
        "description": "Gets the developer portal revision specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadPortalRevision": {
            "$ref": "./examples/ApiManagementHeadPortalRevision.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalRevisionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified portal revision entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PortalRevision"
        ],
        "operationId": "PortalRevision_Get",
        "description": "Gets the developer portal's revision specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetPortalRevision": {
            "$ref": "./examples/ApiManagementGetPortalRevision.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalRevisionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the specified portal's revision.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PortalRevision"
        ],
        "operationId": "PortalRevision_CreateOrUpdate",
        "description": "Creates a new developer portal's revision by running the portal's publishing. The `isCurrent` property indicates if the revision is publicly accessible.",
        "x-ms-examples": {
          "ApiManagementCreatePortalRevision": {
            "$ref": "./examples/ApiManagementCreatePortalRevision.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalRevisionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionContract"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The developer portal revision was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              },
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "PortalRevision"
        ],
        "operationId": "PortalRevision_Update",
        "description": "Updates the description of specified portal revision or makes it current.",
        "x-ms-examples": {
          "ApiManagementUpdatePortalRevision": {
            "$ref": "./examples/ApiManagementUpdatePortalRevision.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/PortalRevisionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionContract"
            }
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to update developer portal revision was accepted.",
            "headers": {
              "location": {
                "description": "Location header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Developer portal revision was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PortalRevisionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions": {
      "get": {
        "tags": [
          "Region"
        ],
        "operationId": "Region_ListByService",
        "description": "Lists all azure regions in which the service exists.",
        "x-ms-examples": {
          "ApiManagementListRegions": {
            "$ref": "./examples/ApiManagementListRegions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists of Regions in which the service is deployed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/RegionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends": {
      "get": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_ListByService",
        "description": "Lists a collection of backends in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListBackends": {
            "$ref": "./examples/ApiManagementListBackends.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Backend entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/BackendContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}": {
      "head": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the backend specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadBackend": {
            "$ref": "./examples/ApiManagementHeadBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified backend entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_Get",
        "description": "Gets the details of the backend specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetBackend": {
            "$ref": "./examples/ApiManagementGetBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Backend entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_CreateOrUpdate",
        "description": "Creates or Updates a backend.",
        "x-ms-examples": {
          "ApiManagementCreateBackendServiceFabric": {
            "$ref": "./examples/ApiManagementCreateBackendServiceFabric.json"
          },
          "ApiManagementCreateBackendProxyBackend": {
            "$ref": "./examples/ApiManagementCreateBackendProxyBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "200": {
            "description": "The existing backend was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_Update",
        "description": "Updates an existing backend.",
        "x-ms-examples": {
          "ApiManagementUpdateBackend": {
            "$ref": "./examples/ApiManagementUpdateBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The existing backend was successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backend"
        ],
        "operationId": "Backend_Delete",
        "description": "Deletes the specified backend.",
        "x-ms-examples": {
          "ApiManagementDeleteBackend": {
            "$ref": "./examples/ApiManagementDeleteBackend.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backend was successfully deleted."
          },
          "204": {
            "description": "The backend was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}/reconnect": {
      "post": {
        "tags": [
          "BackendReconnect"
        ],
        "operationId": "Backend_Reconnect",
        "description": "Notifies the API Management gateway to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used.",
        "x-ms-examples": {
          "ApiManagementBackendReconnect": {
            "$ref": "./examples/ApiManagementBackendReconnect.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/BackendIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "./definitions.json#/definitions/BackendReconnectContract"
            },
            "description": "Reconnect request parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Reconnect request accepted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches": {
      "get": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_ListByService",
        "description": "Lists a collection of all external Caches in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListCaches": {
            "$ref": "./examples/ApiManagementListCaches.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of Cache entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}": {
      "head": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Cache specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadCache": {
            "$ref": "./examples/ApiManagementHeadCache.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CacheIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Cache entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_Get",
        "description": "Gets the details of the Cache specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetCache": {
            "$ref": "./examples/ApiManagementGetCache.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CacheIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Cache entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_CreateOrUpdate",
        "description": "Creates or updates an External Cache to be used in Api Management instance.",
        "externalDocs": {
          "description": "Use an external cache in Azure API Management",
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external"
        },
        "x-ms-examples": {
          "ApiManagementCreateCache": {
            "$ref": "./examples/ApiManagementCreateCache.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CacheIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheContract"
            },
            "description": "Create or Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Cache was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheContract"
            }
          },
          "200": {
            "description": "The Cache details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_Update",
        "description": "Updates the details of the cache specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateCache": {
            "$ref": "./examples/ApiManagementUpdateCache.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CacheIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Cache details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/CacheContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cache"
        ],
        "operationId": "Cache_Delete",
        "description": "Deletes specific Cache.",
        "x-ms-examples": {
          "ApiManagementDeleteCache": {
            "$ref": "./examples/ApiManagementDeleteCache.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/CacheIdParameter"
          },
          {
            "$ref": "#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Cache was successfully deleted."
          },
          "204": {
            "description": "The Cache was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags": {
      "get": {
        "tags": [
          "ProductsByTag"
        ],
        "operationId": "Product_ListByTags",
        "description": "Lists a collection of products associated with tags.",
        "x-ms-examples": {
          "ApiManagementListProductsByTags": {
            "$ref": "./examples/ApiManagementListProductsByTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipQueryParameter"
          },
          {
            "name": "includeNotTaggedProducts",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include not tagged Products."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TagResource entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagResourceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}": {
      "get": {
        "tags": [
          "QuotaByCounterKeys"
        ],
        "operationId": "QuotaByCounterKeys_ListByService",
        "description": "Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies",
          "description": "Document describing how to configure the quota policies."
        },
        "x-ms-examples": {
          "ApiManagementGetQuotaCounterKeys": {
            "$ref": "./examples/ApiManagementGetQuotaCounterKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/QuotaCounterKeyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of the quota counter values.",
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QuotaByCounterKeys"
        ],
        "operationId": "QuotaByCounterKeys_Update",
        "description": "Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.",
        "x-ms-examples": {
          "ApiManagementUpdateQuotaCounterKey": {
            "$ref": "./examples/ApiManagementUpdateQuotaCounterKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/QuotaCounterKeyParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterValueUpdateContract"
            },
            "description": "The value of the quota counter to be applied to all quota counter periods."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Quota Counter Values.",
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}": {
      "get": {
        "tags": [
          "QuotaByPeriodKeys"
        ],
        "operationId": "QuotaByPeriodKeys_Get",
        "description": "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies",
          "description": "Document describing how to configure the quota policies."
        },
        "x-ms-examples": {
          "ApiManagementGetQuotaCounterKeysByQuotaPeriod": {
            "$ref": "./examples/ApiManagementGetQuotaCounterKeysByQuotaPeriod.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/QuotaCounterKeyParameter"
          },
          {
            "$ref": "#/parameters/QuotaPeriodKeyParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Quota counter details for the specified period.",
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QuotaByPeriodKeys"
        ],
        "operationId": "QuotaByPeriodKeys_Update",
        "description": "Updates an existing quota counter value in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementUpdateQuotaCounterKeyByQuotaPeriod": {
            "$ref": "./examples/ApiManagementUpdateQuotaCounterKeyByQuotaPeriod.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/QuotaCounterKeyParameter"
          },
          {
            "$ref": "#/parameters/QuotaPeriodKeyParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterValueUpdateContract"
            },
            "description": "The value of the Quota counter to be applied on the specified period."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Quota counter details for the specified period.",
            "schema": {
              "$ref": "./definitions.json#/definitions/QuotaCounterContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "description": "Returns the current status of an async operation.",
        "x-ms-examples": {
          "Get operation status": {
            "$ref": "./examples/ApiManagementGetOperationStatus.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested operation status",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Returns operation results for long running operations executing DELETE or PATCH on the resource.",
        "operationId": "OperationsResults_Get",
        "x-ms-examples": {
          "ApiManagementGetOperationResult": {
            "$ref": "./examples/ApiManagementGetOperationResult.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the operation result."
          },
          "202": {
            "description": "The operation is still in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "AccessParameter": {
      "name": "accessName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "access",
        "gitAccess"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AccessIdName"
      },
      "description": "The identifier of the Access configuration.",
      "x-ms-parameter-location": "method"
    },
    "SettingsParameter": {
      "name": "settingsType",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "public"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "settingsTypeName"
      },
      "description": "The identifier of the settings.",
      "x-ms-parameter-location": "method"
    },
    "ApiIdParameter": {
      "name": "apiId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "API identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ApiIdRevParameter": {
      "name": "apiId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionSetIdParameter": {
      "name": "versionSetId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AppTypeParameter": {
      "name": "appType",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
      "enum": [
        "portal",
        "developerPortal"
      ],
      "x-ms-enum": {
        "name": "AppType",
        "modelAsString": true,
        "values": [
          {
            "value": "portal",
            "description": "User create request was sent by legacy developer portal."
          },
          {
            "value": "developerPortal",
            "description": "User create request was sent by new developer portal."
          }
        ]
      },
      "default": "portal",
      "x-ms-parameter-location": "method"
    },
    "AttachmentIdParameter": {
      "name": "attachmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AuthorizationProviderIdParameter": {
      "name": "authorizationProviderId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the authorization provider.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AuthorizationIdParameter": {
      "name": "authorizationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the authorization.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AuthorizationAccessPolicyIdParameter": {
      "name": "authorizationAccessPolicyId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the authorization access policy.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AuthenticationServerIdParameter": {
      "name": "authsid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the authorization server.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "BackendIdParameter": {
      "name": "backendId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "CacheIdParameter": {
      "name": "cacheId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "CertificateIdParameter": {
      "name": "certificateId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "CommentIdParameter": {
      "name": "commentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "configuration"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "configurationIdName"
      },
      "description": "The identifier of the Git Configuration Operation.",
      "x-ms-parameter-location": "method"
    },
    "DiagnosticIdParameter": {
      "name": "diagnosticId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "EmailParameter": {
      "name": "email",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Email identifier.",
      "x-ms-parameter-location": "method"
    },
    "GatewayNameParameter": {
      "name": "gatewayName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management gateway.",
      "minLength": 1,
      "maxLength": 45,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "ConfigConnectionNameParameter": {
      "name": "configConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management gateway config connection.",
      "minLength": 1,
      "maxLength": 30,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "GroupIdParameter": {
      "name": "groupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Group identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "x-ms-parameter-location": "method"
    },
    "IdentityProviderNameParameter": {
      "name": "identityProviderName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "facebook",
        "google",
        "microsoft",
        "twitter",
        "aad",
        "aadB2C"
      ],
      "x-ms-enum": {
        "name": "IdentityProviderType",
        "modelAsString": true,
        "values": [
          {
            "value": "facebook",
            "description": "Facebook as Identity provider."
          },
          {
            "value": "google",
            "description": "Google as Identity provider."
          },
          {
            "value": "microsoft",
            "description": "Microsoft Live as Identity provider."
          },
          {
            "value": "twitter",
            "description": "Twitter as Identity provider."
          },
          {
            "value": "aad",
            "description": "Azure Active Directory as Identity provider."
          },
          {
            "value": "aadB2C",
            "description": "Azure Active Directory B2C as Identity provider."
          }
        ]
      },
      "description": "Identity Provider Type identifier.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchOptionalParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IfMatchRequiredParameter": {
      "name": "If-Match",
      "in": "header",
      "required": true,
      "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IssueIdParameter": {
      "name": "issueId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Issue identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "LoggerIdParameter": {
      "name": "loggerId",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "description": "Logger identifier. Must be unique in the API Management service instance.",
      "x-ms-parameter-location": "method"
    },
    "NotificationNameParameter": {
      "name": "notificationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "RequestPublisherNotificationMessage",
        "PurchasePublisherNotificationMessage",
        "NewApplicationNotificationMessage",
        "BCC",
        "NewIssuePublisherNotificationMessage",
        "AccountClosedPublisher",
        "QuotaLimitApproachingPublisherNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "NotificationName",
        "modelAsString": true,
        "values": [
          {
            "value": "RequestPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
          },
          {
            "value": "PurchasePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
          },
          {
            "value": "NewApplicationNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
          },
          {
            "value": "BCC",
            "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
          },
          {
            "value": "NewIssuePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
          },
          {
            "value": "AccountClosedPublisher",
            "description": "The following email recipients and users will receive email notifications when developer closes his account."
          },
          {
            "value": "QuotaLimitApproachingPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
          }
        ]
      },
      "description": "Notification Name Identifier.",
      "x-ms-parameter-location": "method"
    },
    "NotifySubscriptionStateChangeParameter": {
      "name": "notify",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription ",
      "x-ms-parameter-location": "method"
    },
    "OpenIdConnectIdParameter": {
      "name": "opid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the OpenID Connect Provider.",
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResolverIdParameter": {
      "name": "resolverId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "PolicyExportFormat": {
      "name": "format",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Policy Export Format.",
      "enum": [
        "xml",
        "rawxml"
      ],
      "x-ms-enum": {
        "name": "PolicyExportFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "xml",
            "description": "The contents are inline and Content type is an XML document."
          },
          {
            "value": "rawxml",
            "description": "The contents are inline and Content type is a non XML encoded policy document."
          }
        ]
      },
      "default": "xml",
      "x-ms-parameter-location": "method"
    },
    "PolicyIdParameter": {
      "name": "policyId",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "policy"
      ],
      "description": "The identifier of the Policy.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "PolicyIdName"
      },
      "x-ms-parameter-location": "method"
    },
    "IdParameter": {
      "name": "id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A resource identifier.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    },
    "PolicyFragmentContentFormat": {
      "name": "format",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Policy fragment content format.",
      "enum": [
        "xml",
        "rawxml"
      ],
      "x-ms-enum": {
        "name": "PolicyFragmentContentFormat",
        "modelAsString": true,
        "values": [
          {
            "value": "xml",
            "description": "The contents are inline and Content type is an XML document."
          },
          {
            "value": "rawxml",
            "description": "The contents are inline and Content type is a non XML encoded policy document."
          }
        ]
      },
      "default": "xml",
      "x-ms-parameter-location": "method"
    },
    "PolicyRestrictionIdParameter": {
      "name": "policyRestrictionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Policy restrictions after an entity level",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "PortalRevisionIdParameter": {
      "name": "portalRevisionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Portal revision identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "x-ms-parameter-location": "method"
    },
    "ProductIdParameter": {
      "name": "productId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Product identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "x-ms-parameter-location": "method"
    },
    "NamedValueIdParameter": {
      "name": "namedValueId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the NamedValue.",
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "QuotaCounterKeyParameter": {
      "name": "quotaCounterKey",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Quota counter key identifier.This is the result of expression defined in counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key=\"boo\" in the policy, then it\u2019s accessible by \"boo\" counter key. But if it\u2019s defined as counter-key=\"@(\"b\"+\"a\")\" then it will be accessible by \"ba\" key",
      "x-ms-parameter-location": "method"
    },
    "QuotaPeriodKeyParameter": {
      "name": "quotaPeriodKey",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Quota period key identifier.",
      "x-ms-parameter-location": "method"
    },
    "ReleaseIdParameter": {
      "name": "releaseId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the API Management service.",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
      "x-ms-parameter-location": "method"
    },
    "SkipQueryParameter": {
      "name": "$skip",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to skip.",
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionEntityIdParameter": {
      "name": "sid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TagIdParameter": {
      "name": "tagId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TagDescriptionIdParameter": {
      "name": "tagDescriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TemplateNameParameter": {
      "name": "templateName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "applicationApprovedNotificationMessage",
        "accountClosedDeveloper",
        "quotaLimitApproachingDeveloperNotificationMessage",
        "newDeveloperNotificationMessage",
        "emailChangeIdentityDefault",
        "inviteUserNotificationMessage",
        "newCommentNotificationMessage",
        "confirmSignUpIdentityDefault",
        "newIssueNotificationMessage",
        "purchaseDeveloperNotificationMessage",
        "passwordResetIdentityDefault",
        "passwordResetByAdminNotificationMessage",
        "rejectDeveloperNotificationMessage",
        "requestDeveloperNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "TemplateName",
        "modelAsString": true
      },
      "description": "Email Template Name Identifier.",
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    },
    "UserIdParameter": {
      "name": "userId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "User identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "GatewayIdParameter": {
      "name": "gatewayId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "GatewayHostnameConfigurationIdParameter": {
      "name": "hcId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ContentTypeIdParameter": {
      "name": "contentTypeId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Content type identifier.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "ContentItemIdParameter": {
      "name": "contentItemId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Content item identifier.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "SchemaIdParameter": {
      "name": "schemaId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Schema id identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "PortalConfigIdParameter": {
      "name": "portalConfigId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Portal configuration identifier.",
      "minLength": 1,
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "DocumentationIdParameter": {
      "name": "documentationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Documentation identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceIdParameter": {
      "name": "workspaceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Workspace identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ProductApiLinkIdParameter": {
      "name": "apiLinkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ProductGroupLinkIdParameter": {
      "name": "groupLinkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TagApiLinkIdParameter": {
      "name": "apiLinkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TagOperationLinkIdParameter": {
      "name": "operationLinkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "TagProductLinkIdParameter": {
      "name": "productLinkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "OutboundEnvironmentEndpointList": {
      "description": "Collection of Outbound Environment Endpoints",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundEnvironmentEndpoint": {
      "description": "Endpoints accessed for a common purpose that the Api Management Service requires outbound network access to.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The type of service accessed by the Api Management Service, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints that the Api Management Service reaches the service at.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "EndpointDependency": {
      "description": "A domain name that a service is reached at.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The Ports used when connecting to DomainName.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          },
          "x-ms-identifiers": [
            "region",
            "port"
          ]
        }
      }
    },
    "EndpointDetail": {
      "description": "Current TCP connectivity information from the Api Management Service to a single endpoint.",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "type": "integer"
        },
        "region": {
          "description": "The region of the dependency.",
          "type": "string"
        }
      }
    },
    "AccessInformationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessInformationContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged AccessInformation list representation."
    },
    "AccessInformationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AccessInformationContractProperties",
          "description": "AccessInformation entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tenant Settings."
    },
    "AccessInformationContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access Information type ('access' or 'gitAccess')"
        },
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      },
      "description": "Tenant access information contract of the API Management service."
    },
    "AccessInformationSecretsContract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access Information type ('access' or 'gitAccess')"
        },
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "primaryKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        },
        "secondaryKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      },
      "description": "Tenant access information contract of the API Management service."
    },
    "AccessInformationCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AccessInformationCreateParameterProperties",
          "description": "Tenant access information update parameter properties."
        }
      },
      "description": "Tenant access information update parameters."
    },
    "AccessInformationCreateParameterProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "primaryKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        },
        "secondaryKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      },
      "description": "Tenant access information update parameters of the API Management service"
    },
    "AccessInformationUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AccessInformationUpdateParameterProperties",
          "description": "Tenant access information update parameter properties."
        }
      },
      "description": "Tenant access information update parameters."
    },
    "AccessInformationUpdateParameterProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      },
      "description": "Tenant access information update parameters of the API Management service"
    },
    "TenantSettingsCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantSettingsContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged AccessInformation list representation."
    },
    "TenantSettingsContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TenantSettingsContractProperties",
          "description": "TenantSettings entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tenant Settings."
    },
    "TenantSettingsContractProperties": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tenant settings"
        }
      },
      "description": "Tenant access information contract of the API Management service."
    },
    "ApiCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged API list representation."
    },
    "DocumentationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentationContract"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Documentation list representation."
    },
    "WikiCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WikiContract"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Wiki list representation."
    },
    "ApiContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiContractProperties",
          "description": "API entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "API details."
    },
    "ApiContractProperties": {
      "type": "object",
      "properties": {
        "sourceApiId": {
          "type": "string",
          "description": "API identifier of the source API."
        },
        "displayName": {
          "type": "string",
          "description": "API name. Must be 1 to 300 characters long.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.",
          "minLength": 0,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https",
              "ws",
              "wss"
            ],
            "x-ms-enum": {
              "name": "Protocol",
              "modelAsString": true
            }
          },
          "description": "Describes on which protocols the operations in this API can be invoked."
        },
        "apiVersionSet": {
          "description": "Version set details",
          "$ref": "#/definitions/ApiVersionSetContractDetails"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ],
      "required": [
        "path"
      ],
      "description": "API Entity Properties"
    },
    "ApiCreateOrUpdateParameter": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiCreateOrUpdateProperties",
          "description": "API entity create of update properties."
        }
      },
      "description": "API Create or Update Parameters."
    },
    "ApiCreateOrUpdateProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Content value when Importing an API."
        },
        "format": {
          "type": "string",
          "description": "Format of the Content in which the API is getting imported. New formats can be added in the future",
          "enum": [
            "wadl-xml",
            "wadl-link-json",
            "swagger-json",
            "swagger-link-json",
            "wsdl",
            "wsdl-link",
            "openapi",
            "openapi+json",
            "openapi-link",
            "openapi+json-link",
            "graphql-link",
            "odata",
            "odata-link",
            "grpc",
            "grpc-link"
          ],
          "x-ms-enum": {
            "name": "ContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "wadl-xml",
                "description": "The contents are inline and Content type is a WADL document."
              },
              {
                "value": "wadl-link-json",
                "description": "The WADL document is hosted on a publicly accessible internet address."
              },
              {
                "value": "swagger-json",
                "description": "The contents are inline and Content Type is a OpenAPI 2.0 JSON Document."
              },
              {
                "value": "swagger-link-json",
                "description": "The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address."
              },
              {
                "value": "wsdl",
                "description": "The contents are inline and the document is a WSDL/Soap document."
              },
              {
                "value": "wsdl-link",
                "description": "The WSDL document is hosted on a publicly accessible internet address."
              },
              {
                "value": "openapi",
                "description": "The contents are inline and Content Type is a OpenAPI 3.0 YAML Document."
              },
              {
                "value": "openapi+json",
                "description": "The contents are inline and Content Type is a OpenAPI 3.0 JSON Document."
              },
              {
                "value": "openapi-link",
                "description": "The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address."
              },
              {
                "value": "openapi+json-link",
                "description": "The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address."
              },
              {
                "value": "graphql-link",
                "description": "The GraphQL API endpoint hosted on a publicly accessible internet address."
              },
              {
                "value": "odata",
                "description": "The contents are inline and Content Type is a OData XML Document."
              },
              {
                "value": "odata-link",
                "description": "The OData metadata document hosted on a publicly accessible internet address."
              },
              {
                "value": "grpc",
                "description": "The contents are inline and Content Type is a gRPC protobuf file."
              },
              {
                "value": "grpc-link",
                "description": "The gRPC protobuf file is hosted on a publicly accessible internet address."
              }
            ]
          }
        },
        "wsdlSelector": {
          "type": "object",
          "description": "Criteria to limit import of WSDL to a subset of the document.",
          "properties": {
            "wsdlServiceName": {
              "type": "string",
              "description": "Name of service to import from WSDL"
            },
            "wsdlEndpointName": {
              "type": "string",
              "description": "Name of endpoint(port) to import from WSDL"
            }
          }
        },
        "apiType": {
          "type": "string",
          "description": "Type of API to create. \n * `http` creates a REST API \n * `soap` creates a SOAP pass-through API  \n * `websocket` creates websocket API \n * `graphql` creates GraphQL API. \n New types can be added in the future.",
          "enum": [
            "http",
            "soap",
            "websocket",
            "graphql",
            "odata",
            "grpc"
          ],
          "x-ms-client-name": "SoapApiType",
          "x-ms-enum": {
            "name": "SoapApiType",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "Imports a SOAP API having a RESTful front end.",
                "name": "SoapToRest"
              },
              {
                "value": "soap",
                "description": "Imports the SOAP API having a SOAP front end.",
                "name": "SoapPassThrough"
              },
              {
                "value": "websocket",
                "description": "Imports the API having a Websocket front end.",
                "name": "WebSocket"
              },
              {
                "value": "graphql",
                "description": "Imports the API having a GraphQL front end.",
                "name": "GraphQL"
              },
              {
                "value": "odata",
                "description": "Imports the API having a OData front end.",
                "name": "OData"
              },
              {
                "value": "grpc",
                "description": "Imports the API having a gRPC front end.",
                "name": "gRPC"
              }
            ]
          }
        },
        "translateRequiredQueryParameters": {
          "type": "string",
          "description": "Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'",
          "enum": [
            "template",
            "query"
          ],
          "x-ms-client-name": "TranslateRequiredQueryParametersConduct",
          "x-ms-enum": {
            "name": "TranslateRequiredQueryParametersConduct",
            "modelAsString": true,
            "values": [
              {
                "value": "template",
                "description": "Translates required query parameters to template ones. Is a default value",
                "name": "Template"
              },
              {
                "value": "query",
                "description": "Leaves required query parameters as they are (no translation done).",
                "name": "Query"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiContractProperties"
        }
      ],
      "description": "API Create or Update Properties."
    },
    "ApiEntityBaseContract": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the API. May include HTML formatting tags."
        },
        "authenticationSettings": {
          "$ref": "#/definitions/AuthenticationSettingsContract",
          "description": "Collection of authentication settings included into this API."
        },
        "subscriptionKeyParameterNames": {
          "$ref": "#/definitions/SubscriptionKeyParameterNamesContract",
          "description": "Protocols over which API is made available."
        },
        "type": {
          "type": "string",
          "description": "Type of API.",
          "enum": [
            "http",
            "soap",
            "websocket",
            "graphql",
            "odata",
            "grpc"
          ],
          "x-ms-client-name": "ApiType",
          "x-ms-enum": {
            "name": "ApiType",
            "modelAsString": true
          }
        },
        "apiRevision": {
          "type": "string",
          "description": "Describes the revision of the API. If no value is provided, default revision 1 is created",
          "minLength": 1,
          "maxLength": 100
        },
        "apiVersion": {
          "type": "string",
          "description": "Indicates the version identifier of the API if the API is versioned",
          "maxLength": 100
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if API revision is current api revision."
        },
        "isOnline": {
          "type": "boolean",
          "description": "Indicates if API revision is accessible via the gateway.",
          "readOnly": true
        },
        "apiRevisionDescription": {
          "type": "string",
          "description": "Description of the API Revision.",
          "maxLength": 256
        },
        "apiVersionDescription": {
          "type": "string",
          "description": "Description of the API Version.",
          "maxLength": 256
        },
        "apiVersionSetId": {
          "type": "string",
          "description": "A resource identifier for the related ApiVersionSet."
        },
        "subscriptionRequired": {
          "type": "boolean",
          "description": "Specifies whether an API or Product subscription is required for accessing the API."
        },
        "termsOfServiceUrl": {
          "type": "string",
          "description": " A URL to the Terms of Service for the API. MUST be in the format of a URL."
        },
        "contact": {
          "$ref": "#/definitions/ApiContactInformation",
          "description": "Contact information for the API."
        },
        "license": {
          "$ref": "#/definitions/ApiLicenseInformation",
          "description": "License information for the API."
        }
      },
      "description": "API base contract details."
    },
    "ApiContactInformation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identifying name of the contact person/organization"
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the contact information. MUST be in the format of a URL"
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact person/organization. MUST be in the format of an email address"
        }
      },
      "description": "API contact information"
    },
    "ApiLicenseInformation": {
      "type": "object",
      "description": "API license information",
      "properties": {
        "name": {
          "type": "string",
          "description": "The license name used for the API"
        },
        "url": {
          "type": "string",
          "description": "A URL to the license used for the API. MUST be in the format of a URL"
        }
      }
    },
    "ApiExportResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ResourceId of the API which was exported."
        },
        "format": {
          "type": "string",
          "enum": [
            "swagger-link-json",
            "wadl-link-json",
            "wsdl-link+xml",
            "openapi-link"
          ],
          "x-ms-client-name": "ExportResultFormat",
          "x-ms-enum": {
            "name": "ExportResultFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "swagger-link-json",
                "description": "The API Definition is exported in OpenAPI Specification 2.0 format to the Storage Blob.",
                "name": "Swagger"
              },
              {
                "value": "wsdl-link+xml",
                "description": "The API Definition is exported in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`",
                "name": "Wsdl"
              },
              {
                "value": "wadl-link-json",
                "description": "Export the API Definition in WADL Schema to Storage Blob.",
                "name": "Wadl"
              },
              {
                "value": "openapi-link",
                "description": "Export the API Definition in OpenAPI Specification 3.0 to Storage Blob.",
                "name": "OpenApi"
              }
            ]
          },
          "description": "Format in which the API Details are exported to the Storage Blob with Sas Key valid for 5 minutes."
        },
        "value": {
          "type": "object",
          "description": "The object defining the schema of the exported API Detail",
          "properties": {
            "link": {
              "type": "string",
              "description": "Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes."
            }
          }
        }
      },
      "description": "API Export result."
    },
    "ApiReleaseCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiReleaseContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged ApiRelease list representation."
    },
    "ApiReleaseContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiReleaseContractProperties",
          "description": "ApiRelease entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "ApiRelease details."
    },
    "ApiReleaseContractProperties": {
      "type": "object",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Identifier of the API the release belongs to."
        },
        "createdDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "updatedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API release was updated."
        },
        "notes": {
          "type": "string",
          "description": "Release Notes"
        }
      },
      "description": "API Release details"
    },
    "ApiRevisionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiRevisionContract"
          },
          "x-ms-identifiers": [
            "apiId"
          ],
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged API Revision list representation."
    },
    "ApiRevisionContract": {
      "type": "object",
      "properties": {
        "apiId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the API Revision."
        },
        "apiRevision": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "readOnly": true,
          "description": "Revision number of API."
        },
        "createdDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "updatedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "maxLength": 256,
          "description": "Description of the API Revision."
        },
        "privateUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Gateway URL for accessing the non-current API Revision."
        },
        "isOnline": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if API revision is the current api revision."
        },
        "isCurrent": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if API revision is accessible via the gateway."
        }
      },
      "description": "Summary of revision metadata."
    },
    "ApiRevisionInfoContract": {
      "type": "object",
      "description": "Object used to create an API Revision or Version based on an existing API Revision",
      "properties": {
        "sourceApiId": {
          "type": "string",
          "description": "Resource identifier of API to be used to create the revision from."
        },
        "apiVersionName": {
          "type": "string",
          "maxLength": 100,
          "description": "Version identifier for the new API Version."
        },
        "apiRevisionDescription": {
          "type": "string",
          "maxLength": 256,
          "description": "Description of new API Revision."
        },
        "apiVersionSet": {
          "description": "Version set details",
          "$ref": "#/definitions/ApiVersionSetContractDetails"
        }
      }
    },
    "ApiTagResourceContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "API identifier in the form /apis/{apiId}."
        },
        "name": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 1,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https",
              "ws",
              "wss"
            ],
            "x-ms-enum": {
              "name": "Protocol",
              "modelAsString": true
            }
          },
          "description": "Describes on which protocols the operations in this API can be invoked."
        }
      },
      "allOf": [
        {
          "$ref": "./definitions.json#/definitions/ApiEntityBaseContract"
        }
      ],
      "description": "API contract properties for the Tag Resources."
    },
    "ApiUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiContractUpdateProperties",
          "description": "Properties of the API entity that can be updated."
        }
      },
      "description": "API update contract details."
    },
    "ApiContractUpdateProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 1,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "http",
              "https",
              "ws",
              "wss"
            ],
            "x-ms-enum": {
              "name": "Protocol",
              "modelAsString": true
            }
          },
          "description": "Describes on which protocols the operations in this API can be invoked."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ],
      "description": "API update contract properties."
    },
    "ApiVersionSetCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiVersionSetContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged API Version Set list representation."
    },
    "ApiVersionSetContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiVersionSetContractProperties",
          "description": "API VersionSet contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "API Version Set Contract details."
    },
    "ApiVersionSetContractDetails": {
      "type": "object",
      "description": "An API Version Set contains the common configuration for a set of API Versions relating ",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for existing API Version Set. Omit this value to create a new Version Set."
        },
        "name": {
          "type": "string",
          "description": "The display Name of the API Version Set."
        },
        "description": {
          "type": "string",
          "description": "Description of API Version Set."
        },
        "versioningScheme": {
          "type": "string",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
          "enum": [
            "Segment",
            "Query",
            "Header"
          ],
          "x-ms-enum": {
            "name": "versioningScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Segment",
                "description": "The API Version is passed in a path segment."
              },
              {
                "value": "Query",
                "description": "The API Version is passed in a query parameter."
              },
              {
                "value": "Header",
                "description": "The API Version is passed in a HTTP header."
              }
            ]
          }
        },
        "versionQueryName": {
          "type": "string",
          "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
        },
        "versionHeaderName": {
          "type": "string",
          "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
        }
      }
    },
    "ApiVersionSetContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of API Version Set",
          "minLength": 1,
          "maxLength": 100
        },
        "versioningScheme": {
          "type": "string",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
          "enum": [
            "Segment",
            "Query",
            "Header"
          ],
          "x-ms-enum": {
            "name": "versioningScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Segment",
                "description": "The API Version is passed in a path segment."
              },
              {
                "value": "Query",
                "description": "The API Version is passed in a query parameter."
              },
              {
                "value": "Header",
                "description": "The API Version is passed in a HTTP header."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiVersionSetEntityBase"
        }
      ],
      "required": [
        "displayName",
        "versioningScheme"
      ],
      "description": "Properties of an API Version Set."
    },
    "ApiVersionSetEntityBase": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of API Version Set."
        },
        "versionQueryName": {
          "type": "string",
          "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
          "minLength": 1,
          "maxLength": 100
        },
        "versionHeaderName": {
          "type": "string",
          "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "description": "API Version set base parameters"
    },
    "ApiVersionSetUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiVersionSetUpdateParametersProperties",
          "description": "Parameters to update or create an API Version Set Contract."
        }
      },
      "description": "Parameters to update or create an API Version Set Contract."
    },
    "ApiVersionSetUpdateParametersProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of API Version Set",
          "minLength": 1,
          "maxLength": 100
        },
        "versioningScheme": {
          "type": "string",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
          "enum": [
            "Segment",
            "Query",
            "Header"
          ],
          "x-ms-enum": {
            "name": "versioningScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Segment",
                "description": "The API Version is passed in a path segment."
              },
              {
                "value": "Query",
                "description": "The API Version is passed in a query parameter."
              },
              {
                "value": "Header",
                "description": "The API Version is passed in a HTTP header."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiVersionSetEntityBase"
        }
      ],
      "description": "Properties used to create or update an API Version Set."
    },
    "AuthenticationSettingsContract": {
      "type": "object",
      "properties": {
        "oAuth2": {
          "$ref": "#/definitions/OAuth2AuthenticationSettingsContract",
          "description": "OAuth2 Authentication settings"
        },
        "openid": {
          "$ref": "#/definitions/OpenIdAuthenticationSettingsContract",
          "description": "OpenID Connect Authentication Settings"
        },
        "oAuth2AuthenticationSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OAuth2AuthenticationSettingsContract"
          },
          "x-ms-identifiers": [
            "authorizationServerId"
          ],
          "description": "Collection of OAuth2 authentication settings included into this API."
        },
        "openidAuthenticationSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenIdAuthenticationSettingsContract"
          },
          "x-ms-identifiers": [
            "openidProviderId"
          ],
          "description": "Collection of Open ID Connect authentication settings included into this API."
        }
      },
      "description": "API Authentication Settings."
    },
    "AuthorizationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Authorization list representation."
    },
    "AuthorizationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationContractProperties",
          "description": "Properties of the Authorization Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Authorization contract."
    },
    "AuthorizationContractProperties": {
      "type": "object",
      "properties": {
        "authorizationType": {
          "type": "string",
          "description": "Authorization type options",
          "enum": [
            "OAuth2"
          ],
          "x-ms-client-name": "AuthorizationType",
          "x-ms-enum": {
            "name": "AuthorizationType",
            "modelAsString": true,
            "values": [
              {
                "value": "OAuth2",
                "description": "OAuth2 authorization type",
                "name": "OAuth2"
              }
            ]
          }
        },
        "oauth2grantType": {
          "type": "string",
          "description": "OAuth2 grant type options",
          "enum": [
            "AuthorizationCode",
            "ClientCredentials"
          ],
          "x-ms-client-name": "OAuth2GrantType",
          "x-ms-enum": {
            "name": "OAuth2GrantType",
            "modelAsString": true,
            "values": [
              {
                "value": "AuthorizationCode",
                "description": "Authorization Code grant",
                "name": "AuthorizationCode"
              },
              {
                "value": "ClientCredentials",
                "description": "Client Credential grant",
                "name": "ClientCredentials"
              }
            ]
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Authorization parameters"
        },
        "error": {
          "description": "",
          "$ref": "#/definitions/AuthorizationError"
        },
        "status": {
          "type": "string",
          "description": "Status of the Authorization"
        }
      },
      "description": "Authorization details."
    },
    "AuthorizationError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      },
      "description": "Authorization error details."
    },
    "AuthorizationAccessPolicyCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationAccessPolicyContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Authorization Access Policy list representation."
    },
    "AuthorizationAccessPolicyContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationAccessPolicyContractProperties",
          "description": "Properties of the Authorization Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Authorization access policy contract."
    },
    "AuthorizationAccessPolicyContractProperties": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The allowed Azure Active Directory Application IDs"
        },
        "tenantId": {
          "type": "string",
          "description": "The Tenant Id"
        },
        "objectId": {
          "type": "string",
          "description": "The Object Id"
        }
      },
      "description": "Authorization Access Policy details."
    },
    "AuthorizationLoginRequestContract": {
      "type": "object",
      "properties": {
        "postLoginRedirectUrl": {
          "type": "string",
          "description": "The redirect URL after login has completed."
        }
      },
      "description": "Authorization login request contract."
    },
    "AuthorizationLoginResponseContract": {
      "type": "object",
      "properties": {
        "loginLink": {
          "type": "string",
          "description": "The login link"
        }
      },
      "description": "Authorization login response contract."
    },
    "AuthorizationConfirmConsentCodeRequestContract": {
      "type": "object",
      "properties": {
        "consentCode": {
          "type": "string",
          "description": "The consent code from the authorization server after authorizing and consenting."
        }
      },
      "description": "Authorization confirm consent code request contract."
    },
    "AuthorizationProviderCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationProviderContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Authorization Provider list representation."
    },
    "AuthorizationProviderContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationProviderContractProperties",
          "description": "Properties of the Authorization Provider Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Authorization Provider contract."
    },
    "AuthorizationProviderContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Authorization Provider name. Must be 1 to 300 characters long.",
          "minLength": 1,
          "maxLength": 300
        },
        "identityProvider": {
          "type": "string",
          "description": "Identity provider name. Must be 1 to 300 characters long."
        },
        "oauth2": {
          "description": "OAuth2 settings",
          "$ref": "#/definitions/AuthorizationProviderOAuth2Settings"
        }
      },
      "description": "Authorization Provider details."
    },
    "AuthorizationProviderOAuth2Settings": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL to be set in the OAuth application."
        },
        "grantTypes": {
          "description": "OAuth2 settings",
          "$ref": "#/definitions/AuthorizationProviderOAuth2GrantTypes"
        }
      },
      "description": "OAuth2 settings details"
    },
    "AuthorizationProviderOAuth2GrantTypes": {
      "type": "object",
      "properties": {
        "authorizationCode": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "OAuth2 authorization code grant parameters"
        },
        "clientCredentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "OAuth2 client credential grant parameters"
        }
      },
      "description": "Authorization Provider oauth2 grant types settings"
    },
    "AuthorizationServerCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizationServerContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged OAuth2 Authorization Servers list representation."
    },
    "AuthorizationServerContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationServerContractProperties",
          "description": "Properties of the External OAuth authorization server Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "External OAuth authorization server settings."
    },
    "AuthorizationServerContractBaseProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the authorization server. Can contain HTML formatting tags."
        },
        "authorizationMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "HEAD",
              "OPTIONS",
              "TRACE",
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "x-ms-enum": {
              "name": "AuthorizationMethod",
              "modelAsString": false
            }
          },
          "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional."
        },
        "clientAuthenticationMethod": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Basic",
              "Body"
            ],
            "x-ms-enum": {
              "name": "ClientAuthenticationMethod",
              "modelAsString": true,
              "values": [
                {
                  "value": "Basic",
                  "description": "Basic Client Authentication method."
                },
                {
                  "value": "Body",
                  "description": "Body based Authentication method."
                }
              ]
            }
          },
          "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format."
        },
        "tokenBodyParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenBodyParameterContract"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "OAuth token endpoint. Contains absolute URI to entity being referenced.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
          }
        },
        "supportState": {
          "type": "boolean",
          "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
          }
        },
        "defaultScope": {
          "type": "string",
          "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-3.3"
          }
        },
        "bearerTokenSendingMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationHeader",
              "query"
            ],
            "x-ms-enum": {
              "name": "BearerTokenSendingMethod",
              "modelAsString": true
            }
          },
          "description": "Specifies the mechanism by which access token is passed to the API. ",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "resourceOwnerUsername": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
        },
        "resourceOwnerPassword": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
        }
      },
      "description": "External OAuth authorization server Update settings contract."
    },
    "AuthorizationServerContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided."
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationCode",
              "implicit",
              "resourceOwnerPassword",
              "clientCredentials"
            ],
            "x-ms-enum": {
              "name": "GrantType",
              "modelAsString": true,
              "values": [
                {
                  "value": "authorizationCode",
                  "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1."
                },
                {
                  "value": "implicit",
                  "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2."
                },
                {
                  "value": "resourceOwnerPassword",
                  "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3."
                },
                {
                  "value": "clientCredentials",
                  "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4."
                }
              ]
            }
          },
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ],
      "required": [
        "displayName",
        "clientRegistrationEndpoint",
        "authorizationEndpoint",
        "clientId",
        "grantTypes"
      ],
      "description": "External OAuth authorization server settings Properties."
    },
    "AuthorizationServerUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationServerUpdateContractProperties",
          "description": "Properties of the External OAuth authorization server update Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "External OAuth authorization server settings."
    },
    "AuthorizationServerUpdateContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided."
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorizationCode",
              "implicit",
              "resourceOwnerPassword",
              "clientCredentials"
            ],
            "x-ms-enum": {
              "name": "GrantType",
              "modelAsString": true,
              "values": [
                {
                  "value": "authorizationCode",
                  "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1."
                },
                {
                  "value": "implicit",
                  "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2."
                },
                {
                  "value": "resourceOwnerPassword",
                  "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3."
                },
                {
                  "value": "clientCredentials",
                  "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4."
                }
              ]
            }
          },
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "externalDocs": {
            "url": "http://tools.ietf.org/html/rfc6749#section-4"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ],
      "description": "External OAuth authorization server Update settings contract."
    },
    "AuthorizationServerSecretsContract": {
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true,
          "description": "oAuth Authorization Server Secrets."
        },
        "resourceOwnerUsername": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
        },
        "resourceOwnerPassword": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
        }
      },
      "description": "OAuth Server Secrets Contract."
    },
    "BackendAuthorizationHeaderCredentials": {
      "type": "object",
      "properties": {
        "scheme": {
          "type": "string",
          "description": "Authentication Scheme name.",
          "minLength": 1,
          "maxLength": 100
        },
        "parameter": {
          "type": "string",
          "description": "Authentication Parameter value.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "scheme",
        "parameter"
      ],
      "description": "Authorization header information."
    },
    "BackendBaseParameters": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Backend Title.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Backend Description.",
          "minLength": 1,
          "maxLength": 2000
        },
        "resourceId": {
          "type": "string",
          "description": "Management Uri of the Resource in External System. This URL can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.",
          "minLength": 1,
          "maxLength": 2000
        },
        "properties": {
          "$ref": "#/definitions/BackendProperties",
          "description": "Backend Properties contract"
        },
        "credentials": {
          "$ref": "#/definitions/BackendCredentialsContract",
          "description": "Backend Credentials Contract Properties"
        },
        "proxy": {
          "$ref": "#/definitions/BackendProxyContract",
          "description": "Backend gateway Contract Properties"
        },
        "tls": {
          "$ref": "#/definitions/BackendTlsProperties",
          "description": "Backend TLS Properties"
        },
        "circuitBreaker": {
          "$ref": "#/definitions/BackendCircuitBreaker",
          "description": "Backend Circuit Breaker Configuration"
        },
        "pool": {
          "allOf": [
            {
              "$ref": "#/definitions/BackendPool"
            },
            {
              "description": "Backend Pool Properties"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Single",
            "Pool"
          ],
          "x-ms-enum": {
            "name": "BackendType",
            "modelAsString": true,
            "values": [
              {
                "value": "Single",
                "description": "supports single backend"
              },
              {
                "value": "Pool",
                "description": "supports pool backend"
              }
            ]
          },
          "description": "Type of the backend. A backend can be either Single or Pool."
        }
      },
      "description": "Backend entity base Parameter set."
    },
    "BackendCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendContract"
          },
          "description": "Backend values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Backend list representation."
    },
    "BackendContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendContractProperties",
          "description": "Backend entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Backend details."
    },
    "BackendContractProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-enum": {
            "name": "BackendProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "The Backend is a RESTful service."
              },
              {
                "value": "soap",
                "description": "The Backend is a SOAP service."
              }
            ]
          },
          "description": "Backend communication protocol."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ],
      "required": [
        "url",
        "protocol"
      ],
      "description": "Parameters supplied to the Create Backend operation."
    },
    "BackendCredentialsContract": {
      "type": "object",
      "properties": {
        "certificateIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Client Certificate Ids."
        },
        "certificate": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided."
        },
        "query": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Query Parameter description."
        },
        "header": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": "Header Parameter description."
        },
        "authorization": {
          "description": "Authorization header authentication",
          "$ref": "#/definitions/BackendAuthorizationHeaderCredentials"
        }
      },
      "description": "Details of the Credentials used to connect to Backend."
    },
    "BackendProperties": {
      "type": "object",
      "properties": {
        "serviceFabricCluster": {
          "$ref": "#/definitions/BackendServiceFabricClusterProperties",
          "description": "Backend Service Fabric Cluster Properties"
        }
      },
      "description": "Properties specific to the Backend Type."
    },
    "BackendProxyContract": {
      "type": "object",
      "externalDocs": {
        "url": "https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx",
        "description": "Backend entity uses these details to connect to a WebProxy."
      },
      "properties": {
        "url": {
          "type": "string",
          "description": "WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.",
          "minLength": 1,
          "maxLength": 2000
        },
        "username": {
          "type": "string",
          "description": "Username to connect to the WebProxy server"
        },
        "password": {
          "type": "string",
          "description": "Password to connect to the WebProxy Server"
        }
      },
      "required": [
        "url"
      ],
      "description": "Details of the Backend WebProxy Server to use in the Request to Backend."
    },
    "BackendReconnectContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendReconnectProperties",
          "description": "Reconnect request properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Reconnect request parameters."
    },
    "BackendReconnectProperties": {
      "type": "object",
      "properties": {
        "after": {
          "type": "string",
          "format": "duration",
          "description": "Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the Reconnect is PT2M."
        }
      },
      "description": "Properties to control reconnect requests."
    },
    "BackendServiceFabricClusterProperties": {
      "type": "object",
      "properties": {
        "clientCertificateId": {
          "description": "The client certificate id for the management endpoint.",
          "type": "string"
        },
        "clientCertificatethumbprint": {
          "description": "The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided",
          "type": "string"
        },
        "maxPartitionResolutionRetries": {
          "description": "Maximum number of retries while attempting resolve the partition.",
          "format": "int32",
          "type": "integer"
        },
        "managementEndpoints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The cluster management endpoint."
        },
        "serverCertificateThumbprints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Thumbprints of certificates cluster management service uses for tls communication"
        },
        "serverX509Names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/X509CertificateName"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Server X509 Certificate Names Collection"
        }
      },
      "required": [
        "managementEndpoints"
      ],
      "description": "Properties of the Service Fabric Type Backend."
    },
    "BackendTlsProperties": {
      "type": "object",
      "properties": {
        "validateCertificateChain": {
          "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.",
          "type": "boolean",
          "default": true
        },
        "validateCertificateName": {
          "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.",
          "type": "boolean",
          "default": true
        }
      },
      "description": "Properties controlling TLS Certificate Validation."
    },
    "BackendUpdateParameterProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "soap"
          ],
          "x-ms-enum": {
            "name": "BackendProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "http",
                "description": "The Backend is a RESTful service."
              },
              {
                "value": "soap",
                "description": "The Backend is a SOAP service."
              }
            ]
          },
          "description": "Backend communication protocol."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Backend operation."
    },
    "BackendUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendUpdateParameterProperties",
          "description": "Backend entity update contract properties."
        }
      },
      "description": "Backend update parameters."
    },
    "BackendCircuitBreaker": {
      "type": "object",
      "description": "The configuration of the backend circuit breaker",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CircuitBreakerRule"
          },
          "maxItems": 15,
          "description": "The rules for tripping the backend.",
          "x-ms-identifiers": []
        }
      }
    },
    "CircuitBreakerRule": {
      "type": "object",
      "description": "Rule configuration to trip the backend.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The rule name."
        },
        "failureCondition": {
          "$ref": "#/definitions/CircuitBreakerFailureCondition",
          "description": "The conditions for tripping the circuit breaker."
        },
        "tripDuration": {
          "type": "string",
          "format": "duration",
          "description": "The duration for which the circuit will be tripped."
        },
        "acceptRetryAfter": {
          "type": "boolean",
          "description": "flag to accept Retry-After header from the backend."
        }
      }
    },
    "CircuitBreakerFailureCondition": {
      "type": "object",
      "description": "The trip conditions of the circuit breaker",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The threshold for opening the circuit."
        },
        "percentage": {
          "type": "integer",
          "format": "int64",
          "description": "The threshold for opening the circuit."
        },
        "interval": {
          "type": "string",
          "format": "duration",
          "description": "The interval during which the failures are counted."
        },
        "statusCodeRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStatusCodeRange"
          },
          "maxItems": 10,
          "description": "The status code ranges which are considered as failure.",
          "x-ms-identifiers": []
        },
        "errorReasons": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 200
          },
          "maxItems": 10,
          "description": "The error reasons which are considered as failure.",
          "x-ms-identifiers": []
        }
      }
    },
    "FailureStatusCodeRange": {
      "type": "object",
      "description": "The failure http status code range",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum http status code.",
          "minimum": 200,
          "maximum": 599
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum http status code.",
          "minimum": 200,
          "maximum": 599
        }
      }
    },
    "BackendPool": {
      "type": "object",
      "description": "Backend pool information",
      "properties": {
        "services": {
          "type": "array",
          "description": "The list of backend entities belonging to a pool.",
          "items": {
            "$ref": "#/definitions/BackendPoolItem"
          },
          "minItems": 1,
          "x-ms-identifiers": [],
          "example": {
            "services": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends"
          }
        }
      }
    },
    "BackendPoolItem": {
      "type": "object",
      "description": "Backend pool service information",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The unique ARM id of the backend entity. The ARM id should refer to an already existing backend entity.",
          "example": {
            "id": "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/backends/proxybackend"
          }
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight of the backend entity in the backend pool. Must be between 0 and 100. It can be also null if the value not specified.",
          "minimum": 0,
          "maximum": 100,
          "example": {
            "weight": 1
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the backend entity in the backend pool. Must be between 0 and 100. It can be also null if the value not specified.",
          "minimum": 0,
          "maximum": 100,
          "example": {
            "priority": 1
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "BearerTokenSendingMethodsContract": {
      "type": "string",
      "description": "Form of an authorization grant, which the client uses to request the access token.",
      "enum": [
        "authorizationHeader",
        "query"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "bearerTokenSendingMethods",
        "values": [
          {
            "value": "authorizationHeader",
            "description": "Access token will be transmitted in the Authorization header using Bearer schema"
          },
          {
            "value": "query",
            "description": "Access token will be transmitted as query parameters."
          }
        ]
      }
    },
    "BodyDiagnosticSettings": {
      "type": "object",
      "properties": {
        "bytes": {
          "type": "integer",
          "format": "int32",
          "maximum": 8192,
          "description": "Number of request body bytes to log."
        }
      },
      "description": "Body logging settings."
    },
    "CacheCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CacheContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Caches list representation."
    },
    "CacheContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheContractProperties",
          "description": "Cache properties details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Cache details."
    },
    "CacheContractProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Cache description",
          "maxLength": 2000
        },
        "connectionString": {
          "type": "string",
          "description": "Runtime connection string to cache",
          "maxLength": 300
        },
        "useFromLocation": {
          "type": "string",
          "description": "Location identifier to use cache from (should be either 'default' or valid Azure region identifier)",
          "maxLength": 256
        },
        "resourceId": {
          "type": "string",
          "description": "Original uri of entity in external system cache points to",
          "maxLength": 2000
        }
      },
      "required": [
        "connectionString",
        "useFromLocation"
      ],
      "description": "Properties of the Cache contract."
    },
    "CacheUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CacheUpdateProperties",
          "description": "Cache update properties details."
        }
      },
      "description": "Cache update details."
    },
    "CacheUpdateProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Cache description",
          "maxLength": 2000
        },
        "connectionString": {
          "type": "string",
          "description": "Runtime connection string to cache",
          "maxLength": 300
        },
        "useFromLocation": {
          "type": "string",
          "description": "Location identifier to use cache from (should be either 'default' or valid Azure region identifier)",
          "maxLength": 256
        },
        "resourceId": {
          "type": "string",
          "description": "Original uri of entity in external system cache points to",
          "maxLength": 2000
        }
      },
      "description": "Parameters supplied to the Update Cache operation."
    },
    "CertificateCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Certificates list representation."
    },
    "CertificateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CertificateContractProperties",
          "description": "Certificate properties details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Certificate details."
    },
    "CertificateContractProperties": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject attribute of the certificate."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractProperties",
          "description": "KeyVault location details of the certificate."
        }
      },
      "required": [
        "subject",
        "thumbprint",
        "expirationDate"
      ],
      "description": "Properties of the Certificate contract."
    },
    "CertificateCreateOrUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CertificateCreateOrUpdateProperties",
          "description": "Certificate create or update properties details."
        }
      },
      "description": "Certificate create or update details."
    },
    "CertificateCreateOrUpdateProperties": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Base 64 encoded certificate using the application/x-pkcs12 representation."
        },
        "password": {
          "type": "string",
          "description": "Password for the Certificate"
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the certificate."
        }
      },
      "description": "Parameters supplied to the CreateOrUpdate certificate operation."
    },
    "DataMasking": {
      "type": "object",
      "properties": {
        "queryParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataMaskingEntity"
          },
          "x-ms-identifiers": [],
          "description": "Masking settings for Url query parameters"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataMaskingEntity"
          },
          "x-ms-identifiers": [],
          "description": "Masking settings for headers"
        }
      }
    },
    "DataMaskingEntity": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of an entity to mask (e.g. a name of a header or a query parameter)."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Mask",
            "Hide"
          ],
          "x-ms-enum": {
            "name": "DataMaskingMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Mask",
                "description": "Mask the value of an entity."
              },
              {
                "value": "Hide",
                "description": "Hide the presence of an entity."
              }
            ]
          },
          "description": "Data masking mode."
        }
      }
    },
    "DeployConfigurationParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeployConfigurationParameterProperties",
          "description": "Deploy Configuration Parameter contract properties."
        }
      },
      "description": "Deploy Tenant Configuration Contract."
    },
    "DeployConfigurationParameterProperties": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch from which the configuration is to be deployed to the configuration database."
        },
        "force": {
          "type": "boolean",
          "description": "The value enforcing deleting subscriptions to products that are deleted in this update."
        }
      },
      "required": [
        "branch"
      ],
      "description": "Parameters supplied to the Deploy Configuration operation."
    },
    "DiagnosticCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Diagnostic list representation."
    },
    "DiagnosticContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticContractProperties",
          "description": "Diagnostic entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Diagnostic details."
    },
    "DiagnosticContractProperties": {
      "type": "object",
      "properties": {
        "alwaysLog": {
          "type": "string",
          "enum": [
            "allErrors"
          ],
          "x-ms-enum": {
            "name": "AlwaysLog",
            "modelAsString": true,
            "values": [
              {
                "value": "allErrors",
                "description": "Always log all erroneous request regardless of sampling settings."
              }
            ]
          },
          "description": "Specifies for what type of messages sampling settings should not apply."
        },
        "loggerId": {
          "type": "string",
          "description": "Resource Id of a target logger."
        },
        "sampling": {
          "$ref": "#/definitions/SamplingSettings",
          "description": "Sampling settings for Diagnostic."
        },
        "frontend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
        },
        "backend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Backend"
        },
        "logClientIp": {
          "type": "boolean",
          "description": "Log the ClientIP. Default is false."
        },
        "httpCorrelationProtocol": {
          "type": "string",
          "enum": [
            "None",
            "Legacy",
            "W3C"
          ],
          "x-ms-enum": {
            "name": "HttpCorrelationProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "Do not read and inject correlation headers."
              },
              {
                "value": "Legacy",
                "description": "Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md."
              },
              {
                "value": "W3C",
                "description": "Inject Trace Context headers. See https://w3c.github.io/trace-context."
              }
            ]
          },
          "description": "Sets correlation protocol to use for Application Insights diagnostics."
        },
        "verbosity": {
          "type": "string",
          "enum": [
            "verbose",
            "information",
            "error"
          ],
          "x-ms-enum": {
            "name": "Verbosity",
            "modelAsString": true,
            "values": [
              {
                "value": "verbose",
                "description": "All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance."
              },
              {
                "value": "information",
                "description": "Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance."
              },
              {
                "value": "error",
                "description": "Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance."
              }
            ]
          },
          "description": "The verbosity level applied to traces emitted by trace policies."
        },
        "operationNameFormat": {
          "type": "string",
          "enum": [
            "Name",
            "Url"
          ],
          "x-ms-enum": {
            "name": "OperationNameFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "Name",
                "description": "API_NAME;rev=API_REVISION - OPERATION_NAME"
              },
              {
                "value": "Url",
                "description": "HTTP_VERB URL"
              }
            ]
          },
          "description": "The format of the Operation Name for Application Insights telemetries. Default is Name."
        },
        "metrics": {
          "type": "boolean",
          "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings."
        }
      },
      "required": [
        "loggerId"
      ],
      "description": "Diagnostic Entity Properties"
    },
    "DiagnosticUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticContractUpdateProperties",
          "description": "Diagnostic entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Diagnostic details."
    },
    "DiagnosticContractUpdateProperties": {
      "type": "object",
      "properties": {
        "alwaysLog": {
          "type": "string",
          "enum": [
            "allErrors"
          ],
          "x-ms-enum": {
            "name": "AlwaysLog",
            "modelAsString": true,
            "values": [
              {
                "value": "allErrors",
                "description": "Always log all erroneous request regardless of sampling settings."
              }
            ]
          },
          "description": "Specifies for what type of messages sampling settings should not apply."
        },
        "loggerId": {
          "type": "string",
          "description": "Resource Id of a target logger."
        },
        "sampling": {
          "$ref": "#/definitions/SamplingSettings",
          "description": "Sampling settings for Diagnostic."
        },
        "frontend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
        },
        "backend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Backend"
        },
        "logClientIp": {
          "type": "boolean",
          "description": "Log the ClientIP. Default is false."
        },
        "httpCorrelationProtocol": {
          "type": "string",
          "enum": [
            "None",
            "Legacy",
            "W3C"
          ],
          "x-ms-enum": {
            "name": "HttpCorrelationProtocol",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "Do not read and inject correlation headers."
              },
              {
                "value": "Legacy",
                "description": "Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md."
              },
              {
                "value": "W3C",
                "description": "Inject Trace Context headers. See https://w3c.github.io/trace-context."
              }
            ]
          },
          "description": "Sets correlation protocol to use for Application Insights diagnostics."
        },
        "verbosity": {
          "type": "string",
          "enum": [
            "verbose",
            "information",
            "error"
          ],
          "x-ms-enum": {
            "name": "Verbosity",
            "modelAsString": true,
            "values": [
              {
                "value": "verbose",
                "description": "All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance."
              },
              {
                "value": "information",
                "description": "Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance."
              },
              {
                "value": "error",
                "description": "Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance."
              }
            ]
          },
          "description": "The verbosity level applied to traces emitted by trace policies."
        },
        "operationNameFormat": {
          "type": "string",
          "enum": [
            "Name",
            "Url"
          ],
          "x-ms-enum": {
            "name": "OperationNameFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "Name",
                "description": "API_NAME;rev=API_REVISION - OPERATION_NAME"
              },
              {
                "value": "Url",
                "description": "HTTP_VERB URL"
              }
            ]
          },
          "description": "The format of the Operation Name for Application Insights telemetries. Default is Name."
        },
        "metrics": {
          "type": "boolean",
          "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings."
        }
      },
      "description": "Diagnostic Entity Properties"
    },
    "EmailTemplateCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged email template list representation."
    },
    "EmailTemplateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EmailTemplateContractProperties",
          "description": "Email Template entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Email Template details."
    },
    "EmailTemplateContractProperties": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the Template.",
          "minLength": 1,
          "maxLength": 1000
        },
        "body": {
          "type": "string",
          "description": "Email Template Body. This should be a valid XDocument",
          "minLength": 1
        },
        "title": {
          "type": "string",
          "description": "Title of the Template."
        },
        "description": {
          "type": "string",
          "description": "Description of the Email Template."
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the template is the default template provided by API Management or has been edited.",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateParametersContractProperties"
          },
          "x-ms-identifiers": [
            "title"
          ],
          "description": "Email Template Parameter values."
        }
      },
      "required": [
        "body",
        "subject"
      ],
      "description": "Email Template Contract properties."
    },
    "EmailTemplateParametersContractProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Template parameter name.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "title": {
          "type": "string",
          "description": "Template parameter title.",
          "minLength": 1,
          "maxLength": 4096
        },
        "description": {
          "type": "string",
          "description": "Template parameter description.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        }
      },
      "description": "Email Template Parameter contract."
    },
    "EmailTemplateUpdateParameterProperties": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the Template.",
          "minLength": 1,
          "maxLength": 1000
        },
        "title": {
          "type": "string",
          "description": "Title of the Template."
        },
        "description": {
          "type": "string",
          "description": "Description of the Email Template."
        },
        "body": {
          "type": "string",
          "description": "Email Template Body. This should be a valid XDocument",
          "minLength": 1
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailTemplateParametersContractProperties"
          },
          "x-ms-identifiers": [
            "title"
          ],
          "description": "Email Template Parameter values."
        }
      },
      "description": "Email Template Update Contract properties."
    },
    "EmailTemplateUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EmailTemplateUpdateParameterProperties",
          "description": "Email Template Update contract properties."
        }
      },
      "description": "Email Template update Parameters."
    },
    "GenerateSsoUrlResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Redirect Url containing the SSO URL value."
        }
      },
      "description": "Generate SSO Url operations response details."
    },
    "GroupCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Group list representation."
    },
    "GroupContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupContractProperties",
          "description": "Group entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Contract details."
    },
    "GroupContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description. Can contain HTML formatting tags.",
          "maxLength": 1000
        },
        "builtIn": {
          "readOnly": true,
          "type": "boolean",
          "description": "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Group contract Properties."
    },
    "GroupCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupCreateParametersProperties",
          "description": "Properties supplied to Create Group operation."
        }
      },
      "description": "Parameters supplied to the Create Group operation."
    },
    "GroupCreateParametersProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Parameters supplied to the Create Group operation."
    },
    "GroupUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GroupUpdateParametersProperties",
          "description": "Group entity update contract properties."
        }
      },
      "description": "Parameters supplied to the Update Group operation."
    },
    "GroupUpdateParametersProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "maxLength": 300,
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "type": "string",
          "description": "Group type.",
          "enum": [
            "custom",
            "system",
            "external"
          ],
          "x-ms-enum": {
            "name": "GroupType",
            "modelAsString": false
          }
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "description": "Parameters supplied to the Update Group operation."
    },
    "HttpMessageDiagnostic": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of HTTP Headers to log."
        },
        "body": {
          "$ref": "#/definitions/BodyDiagnosticSettings",
          "description": "Body logging settings."
        },
        "dataMasking": {
          "$ref": "#/definitions/DataMasking",
          "description": "Data masking settings."
        }
      },
      "description": "Http message diagnostic settings."
    },
    "IdentityProviderBaseParameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "facebook",
            "google",
            "microsoft",
            "twitter",
            "aad",
            "aadB2C"
          ],
          "x-ms-enum": {
            "name": "IdentityProviderType",
            "modelAsString": true,
            "values": [
              {
                "value": "facebook",
                "description": "Facebook as Identity provider."
              },
              {
                "value": "google",
                "description": "Google as Identity provider."
              },
              {
                "value": "microsoft",
                "description": "Microsoft Live as Identity provider."
              },
              {
                "value": "twitter",
                "description": "Twitter as Identity provider."
              },
              {
                "value": "aad",
                "description": "Azure Active Directory as Identity provider."
              },
              {
                "value": "aadB2C",
                "description": "Azure Active Directory B2C as Identity provider."
              }
            ]
          },
          "description": "Identity Provider Type identifier."
        },
        "signinTenant": {
          "type": "string",
          "description": "The TenantId to use instead of Common when logging into Active Directory"
        },
        "allowedTenants": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "List of Allowed Tenants when configuring Azure Active Directory login."
        },
        "authority": {
          "type": "string",
          "description": "OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
        },
        "signupPolicyName": {
          "type": "string",
          "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "signinPolicyName": {
          "type": "string",
          "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "profileEditingPolicyName": {
          "type": "string",
          "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "passwordResetPolicyName": {
          "type": "string",
          "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "clientLibrary": {
          "type": "string",
          "description": "The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.",
          "minLength": 0,
          "maxLength": 16
        }
      },
      "description": "Identity Provider Base Parameter Properties."
    },
    "IdentityProviderCreateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderCreateContractProperties",
          "description": "Identity Provider contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Identity Provider details."
    },
    "IdentityProviderCreateContractProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "required": [
        "clientId",
        "clientSecret"
      ],
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
    },
    "IdentityProviderContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderContractProperties",
          "description": "Identity Provider contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Identity Provider details."
    },
    "IdentityProviderContractProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "required": [
        "clientId"
      ],
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users."
    },
    "IdentityProviderList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityProviderContract"
          },
          "description": "Identity Provider configuration values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of all the Identity Providers configured on the service instance."
    },
    "IdentityProviderUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IdentityProviderUpdateProperties",
          "description": "Identity Provider update properties."
        }
      },
      "description": "Parameters supplied to update Identity Provider"
    },
    "IdentityProviderUpdateProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Identity Provider operation."
    },
    "IssueAttachmentCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueAttachmentContract"
          },
          "description": "Issue Attachment values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue Attachment list representation."
    },
    "IssueAttachmentContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueAttachmentContractProperties",
          "description": "Properties of the Issue Attachment."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Issue Attachment Contract details."
    },
    "IssueAttachmentContractProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Filename by which the binary data will be saved."
        },
        "contentFormat": {
          "type": "string",
          "description": "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
        },
        "content": {
          "type": "string",
          "description": "An HTTP link or Base64-encoded binary data."
        }
      },
      "required": [
        "title",
        "contentFormat",
        "content"
      ],
      "description": "Issue Attachment contract Properties."
    },
    "IssueCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueContract"
          },
          "description": "Issue values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue list representation."
    },
    "IssueCommentCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueCommentContract"
          },
          "description": "Issue Comment values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Issue Comment list representation."
    },
    "IssueCommentContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueCommentContractProperties",
          "description": "Properties of the Issue Comment."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Issue Comment Contract details."
    },
    "IssueCommentContractProperties": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Comment text."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the comment was created."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user who left the comment."
        }
      },
      "required": [
        "text",
        "userId"
      ],
      "description": "Issue Comment contract Properties."
    },
    "IssueContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueContractProperties",
          "description": "Properties of the Issue."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Issue Contract details."
    },
    "IssueContractBaseProperties": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the issue was created."
        },
        "state": {
          "type": "string",
          "description": "Status of the issue.",
          "enum": [
            "proposed",
            "open",
            "removed",
            "resolved",
            "closed"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true,
            "values": [
              {
                "value": "proposed",
                "description": "The issue is proposed."
              },
              {
                "value": "open",
                "description": "The issue is opened."
              },
              {
                "value": "removed",
                "description": "The issue was removed."
              },
              {
                "value": "resolved",
                "description": "The issue is now resolved."
              },
              {
                "value": "closed",
                "description": "The issue was closed."
              }
            ]
          }
        },
        "apiId": {
          "type": "string",
          "description": "A resource identifier for the API the issue was created for."
        }
      },
      "description": "Issue contract Base Properties."
    },
    "IssueContractProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "required": [
        "title",
        "description",
        "userId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ],
      "description": "Issue contract Properties."
    },
    "IssueUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueUpdateContractProperties",
          "description": "Issue entity Update contract properties."
        }
      },
      "description": "Issue update Parameters."
    },
    "IssueUpdateContractProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ],
      "description": "Issue contract Update Properties."
    },
    "KeyVaultContractCreateProperties": {
      "type": "object",
      "properties": {
        "secretIdentifier": {
          "type": "string",
          "description": "Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi"
        },
        "identityClientId": {
          "type": "string",
          "description": "Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret."
        }
      },
      "description": "Create keyVault contract details."
    },
    "KeyVaultContractProperties": {
      "type": "object",
      "properties": {
        "lastStatus": {
          "$ref": "#/definitions/KeyVaultLastAccessStatusContractProperties",
          "description": "Last time sync and refresh status of secret from key vault."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/KeyVaultContractCreateProperties"
        }
      ],
      "description": "KeyVault contract details."
    },
    "KeyVaultLastAccessStatusContractProperties": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Last status code for sync and refresh of secret from key vault."
        },
        "message": {
          "type": "string",
          "description": "Details of the error else empty."
        },
        "timeStampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "description": "Issue contract Update Properties."
    },
    "LoggerCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoggerContract"
          },
          "description": "Logger values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Logger list representation."
    },
    "LoggerContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoggerContractProperties",
          "description": "Logger entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Logger details."
    },
    "LoggerContractProperties": {
      "type": "object",
      "properties": {
        "loggerType": {
          "type": "string",
          "description": "Logger type.",
          "enum": [
            "azureEventHub",
            "applicationInsights",
            "azureMonitor"
          ],
          "x-ms-enum": {
            "name": "LoggerType",
            "modelAsString": true,
            "values": [
              {
                "value": "azureEventHub",
                "description": "Azure Event Hub as log destination."
              },
              {
                "value": "applicationInsights",
                "description": "Azure Application Insights as log destination."
              },
              {
                "value": "azureMonitor",
                "description": "Azure Monitor"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Logger description.",
          "maxLength": 256
        },
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The name and SendRule connection string of the event hub for azureEventHub logger.\nInstrumentation key for applicationInsights logger.",
          "example": {
            "name": "apim",
            "connectionString": "Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=..."
          }
        },
        "isBuffered": {
          "type": "boolean",
          "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true."
        },
        "resourceId": {
          "type": "string",
          "description": "Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource)."
        }
      },
      "required": [
        "loggerType"
      ],
      "description": "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs."
    },
    "LoggerUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoggerUpdateParameters",
          "description": "Logger entity update contract properties."
        }
      },
      "description": "Logger update contract."
    },
    "LoggerUpdateParameters": {
      "type": "object",
      "properties": {
        "loggerType": {
          "type": "string",
          "description": "Logger type.",
          "enum": [
            "azureEventHub",
            "applicationInsights",
            "azureMonitor"
          ],
          "x-ms-enum": {
            "name": "LoggerType",
            "modelAsString": true,
            "values": [
              {
                "value": "azureEventHub",
                "description": "Azure Event Hub as log destination."
              },
              {
                "value": "applicationInsights",
                "description": "Azure Application Insights as log destination."
              },
              {
                "value": "azureMonitor",
                "description": "Azure Monitor"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Logger description."
        },
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Logger credentials."
        },
        "isBuffered": {
          "type": "boolean",
          "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true."
        }
      },
      "description": "Parameters supplied to the Update Logger operation."
    },
    "NotificationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Notification list representation."
    },
    "NotificationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationContractProperties",
          "description": "Notification entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Notification details."
    },
    "NotificationContractProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the Notification.",
          "minLength": 1,
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "Description of the Notification."
        },
        "recipients": {
          "$ref": "#/definitions/RecipientsContractProperties",
          "description": "Recipient Parameter values."
        }
      },
      "required": [
        "title"
      ],
      "description": "Notification Contract properties."
    },
    "OAuth2AuthenticationSettingsContract": {
      "type": "object",
      "properties": {
        "authorizationServerId": {
          "type": "string",
          "description": "OAuth authorization server identifier."
        },
        "scope": {
          "type": "string",
          "description": "operations scope."
        }
      },
      "description": "API OAuth2 Authentication settings details."
    },
    "OpenIdAuthenticationSettingsContract": {
      "type": "object",
      "properties": {
        "openidProviderId": {
          "type": "string",
          "description": "OAuth authorization server identifier."
        },
        "bearerTokenSendingMethods": {
          "description": "How to send token to the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BearerTokenSendingMethodsContract"
          }
        }
      },
      "description": "API OAuth2 Authentication settings details."
    },
    "OpenIdConnectProviderCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenidConnectProviderContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged OpenIdProviders list representation."
    },
    "OpenidConnectProviderContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OpenidConnectProviderContractProperties",
          "description": "OpenId Connect Provider contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "OpenId Connect Provider details."
    },
    "OpenidConnectProviderContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly OpenID Connect Provider name.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "User-friendly description of OpenID Connect Provider."
        },
        "metadataEndpoint": {
          "type": "string",
          "description": "Metadata endpoint URI."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID of developer console which is the client application."
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client Secret of developer console which is the client application."
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided."
        }
      },
      "required": [
        "displayName",
        "metadataEndpoint",
        "clientId"
      ],
      "description": "OpenID Connect Providers Contract."
    },
    "OpenidConnectProviderUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OpenidConnectProviderUpdateContractProperties",
          "description": "OpenId Connect Provider Update contract properties."
        }
      },
      "description": "Parameters supplied to the Update OpenID Connect Provider operation."
    },
    "OpenidConnectProviderUpdateContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly OpenID Connect Provider name.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "User-friendly description of OpenID Connect Provider."
        },
        "metadataEndpoint": {
          "type": "string",
          "description": "Metadata endpoint URI."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID of developer console which is the client application."
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Client Secret of developer console which is the client application."
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided."
        }
      },
      "description": "Parameters supplied to the Update OpenID Connect Provider operation."
    },
    "OperationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Operation list representation."
    },
    "OperationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationContractProperties",
          "description": "Properties of the Operation Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "API Operation details."
    },
    "OperationContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "externalDocs": {
            "description": "As defined by RFC.",
            "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
          }
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ],
      "required": [
        "displayName",
        "method",
        "urlTemplate"
      ],
      "description": "Operation Contract Properties"
    },
    "OperationEntityBaseContract": {
      "type": "object",
      "properties": {
        "templateParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ],
          "description": "Collection of URL template parameters."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation. May include HTML formatting tags.",
          "maxLength": 1000
        },
        "request": {
          "$ref": "#/definitions/RequestContract",
          "description": "An entity containing request details."
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseContract"
          },
          "x-ms-identifiers": [],
          "description": "Array of Operation responses."
        },
        "policies": {
          "type": "string",
          "description": "Operation Policies"
        }
      },
      "description": "API Operation Entity Base Contract details."
    },
    "OperationResultContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationResultContractProperties",
          "description": "Properties of the Operation Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Long Running Git Operation Results."
    },
    "OperationResultContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation result identifier."
        },
        "status": {
          "type": "string",
          "description": "Status of an async operation.",
          "enum": [
            "Started",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "AsyncOperationStatus",
            "modelAsString": false
          }
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "resultInfo": {
          "type": "string",
          "description": "Optional result info."
        },
        "error": {
          "$ref": "./apimanagement.json#/definitions/ErrorResponseBody",
          "description": "Error Body Contract"
        },
        "actionLog": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationResultLogItemContract"
          },
          "x-ms-identifiers": [
            "objectKey"
          ],
          "readOnly": true,
          "description": "This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation."
        }
      },
      "description": "Operation Result."
    },
    "OperationResultLogItemContract": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of entity contract."
        },
        "action": {
          "type": "string",
          "description": "Action like create/update/delete."
        },
        "objectKey": {
          "type": "string",
          "description": "Identifier of the entity being created/updated/deleted."
        }
      },
      "description": "Log of the entity being created, updated or deleted."
    },
    "OperationTagResourceContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the operation in form /operations/{operationId}."
        },
        "name": {
          "type": "string",
          "description": "Operation name.",
          "readOnly": true
        },
        "apiName": {
          "type": "string",
          "description": "API Name.",
          "readOnly": true
        },
        "apiRevision": {
          "type": "string",
          "description": "API Revision.",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "API Version.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Operation Description.",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "externalDocs": {
            "description": "As defined by RFC.",
            "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
          },
          "readOnly": true
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "readOnly": true
        }
      },
      "description": "Operation Entity contract Properties."
    },
    "OperationUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationUpdateContractProperties",
          "description": "Properties of the API Operation entity that can be updated."
        }
      },
      "description": "API Operation Update Contract details."
    },
    "OperationUpdateContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "externalDocs": {
            "description": "As defined by RFC.",
            "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
          }
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ],
      "description": "Operation Update Contract Properties."
    },
    "ParameterContract": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name."
        },
        "description": {
          "type": "string",
          "description": "Parameter description."
        },
        "type": {
          "type": "string",
          "description": "Parameter type."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default parameter value."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies whether parameter is required or not."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Parameter values."
        },
        "schemaId": {
          "type": "string",
          "description": "Schema identifier."
        },
        "typeName": {
          "type": "string",
          "description": "Type name defined by the schema."
        },
        "examples": {
          "$ref": "#/definitions/ParameterExamplesContract",
          "description": "Exampled defined for the parameter."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "Operation parameters details."
    },
    "ParameterExamplesContract": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterExampleContract",
        "description": "Parameter example."
      },
      "description": "Parameter examples."
    },
    "ParameterExampleContract": {
      "type": "object",
      "description": "Parameter example.",
      "properties": {
        "summary": {
          "type": "string",
          "description": "Short description for the example"
        },
        "description": {
          "type": "string",
          "description": "Long description for the example"
        },
        "value": {
          "description": "Example value. May be a primitive value, or an object."
        },
        "externalValue": {
          "type": "string",
          "description": "A URL that points to the literal example"
        }
      }
    },
    "PipelineDiagnosticSettings": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for request."
        },
        "response": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for response."
        }
      },
      "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
    },
    "PolicyCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyContract"
          },
          "description": "Policy Contract value."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of the list policy operation."
    },
    "PolicyContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyContractProperties",
          "description": "Properties of the Policy."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Policy Contract details."
    },
    "PolicyContractProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Contents of the Policy as defined by the format."
        },
        "format": {
          "type": "string",
          "description": "Format of the policyContent.",
          "enum": [
            "xml",
            "xml-link",
            "rawxml",
            "rawxml-link"
          ],
          "x-ms-enum": {
            "name": "PolicyContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "value": "xml-link",
                "description": "The policy XML document is hosted on a HTTP endpoint accessible from the API Management service."
              },
              {
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              },
              {
                "value": "rawxml-link",
                "description": "The policy document is not XML encoded and is hosted on a HTTP endpoint accessible from the API Management service."
              }
            ]
          },
          "default": "xml"
        }
      },
      "required": [
        "value"
      ],
      "description": "Policy contract Properties."
    },
    "PolicyWithComplianceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyWithComplianceContract"
          },
          "description": "Policy Contract value."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of the list policy operation."
    },
    "PolicyWithComplianceContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyWithComplianceContractProperties",
          "description": "Properties of the Policy."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Policy Contract details."
    },
    "PolicyWithComplianceContractProperties": {
      "type": "object",
      "properties": {
        "referencePolicyId": {
          "type": "string",
          "description": "Policy Identifier"
        },
        "complianceState": {
          "type": "string",
          "description": "Policy Restriction Compliance State",
          "enum": [
            "Pending",
            "NonCompliant",
            "Compliant"
          ],
          "x-ms-enum": {
            "name": "PolicyComplianceState",
            "modelAsString": true,
            "values": [
              {
                "value": "Pending",
                "description": "The policy restriction compliance state has not yet been determined."
              },
              {
                "value": "NonCompliant",
                "description": "The scope in restriction is out of compliance."
              },
              {
                "value": "Compliant",
                "description": "The scope in restriction is in compliance."
              }
            ]
          },
          "default": "Pending"
        }
      },
      "description": "Policy contract Properties."
    },
    "PolicyDescriptionContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyDescriptionContractProperties",
          "description": "Policy description contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Policy description details."
    },
    "PolicyDescriptionContractProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Policy description.",
          "readOnly": true
        },
        "scope": {
          "type": "integer",
          "format": "int64",
          "description": "Binary OR value of the Snippet scope.",
          "readOnly": true
        }
      },
      "description": "Policy description properties."
    },
    "PolicyDescriptionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyDescriptionContract"
          },
          "description": "Descriptions of API Management policies."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        }
      },
      "description": "Descriptions of API Management policies."
    },
    "PolicyFragmentCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyFragmentContract"
          },
          "description": "Policy fragment contract value."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of the get policy fragments operation."
    },
    "PolicyFragmentContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyFragmentContractProperties",
          "description": "Properties of the Policy Fragment."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Policy fragment contract details."
    },
    "PolicyFragmentContractProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Contents of the policy fragment."
        },
        "description": {
          "type": "string",
          "description": "Policy fragment description.",
          "minLength": 0,
          "maxLength": 1000
        },
        "format": {
          "type": "string",
          "description": "Format of the policy fragment content.",
          "enum": [
            "xml",
            "rawxml"
          ],
          "x-ms-enum": {
            "name": "PolicyFragmentContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              }
            ]
          },
          "default": "xml"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      },
      "required": [
        "value"
      ],
      "description": "Policy fragment contract properties."
    },
    "PolicyRestrictionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyRestrictionContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of the get policy restrictions operation."
    },
    "PolicyRestrictionUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyRestrictionContractProperties",
          "description": "Properties of the Policy Restriction."
        }
      },
      "description": "Policy restriction contract details."
    },
    "PolicyRestrictionContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyRestrictionContractProperties",
          "description": "Properties of the Policy Restriction."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Policy restriction contract details."
    },
    "PolicyRestrictionContractProperties": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "description": "Path to the policy document."
        },
        "requireBase": {
          "type": "string",
          "description": "Indicates if base policy should be enforced for the policy document.",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "PolicyRestrictionRequireBase",
            "modelAsString": true,
            "values": [
              {
                "value": "true",
                "description": "The policy is required to have base policy"
              },
              {
                "value": "false",
                "description": "The policy does not require to have base policy"
              }
            ]
          },
          "default": "false"
        }
      },
      "description": "Policy restrictions contract properties."
    },
    "AllPoliciesCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllPoliciesContract"
          },
          "description": "AllPolicies Contract value."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of All Policies."
    },
    "AllPoliciesContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AllPoliciesContractProperties",
          "description": "Properties of the All Policies."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "AllPolicies Contract details."
    },
    "AllPoliciesContractProperties": {
      "type": "object",
      "properties": {
        "referencePolicyId": {
          "type": "string",
          "description": "Policy Identifier"
        },
        "complianceState": {
          "type": "string",
          "description": "Policy Restriction Compliance State",
          "enum": [
            "Pending",
            "NonCompliant",
            "Compliant"
          ],
          "x-ms-enum": {
            "name": "PolicyComplianceState",
            "modelAsString": true,
            "values": [
              {
                "value": "Pending",
                "description": "The policy restriction compliance state has not yet been determined."
              },
              {
                "value": "NonCompliant",
                "description": "The scope in restriction is out of compliance."
              },
              {
                "value": "Compliant",
                "description": "The scope in restriction is in compliance."
              }
            ]
          },
          "default": "Pending"
        }
      },
      "description": "AllPolicies Properties."
    },
    "ResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
              }
            ]
          },
          "description": "A collection of resources."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "A collection of resources."
    },
    "PortalConfigCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalConfigContract"
          },
          "description": "The developer portal configurations."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "The collection of the developer portal configurations."
    },
    "PortalConfigContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalConfigProperties",
          "description": "The developer portal configuration contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The developer portal configuration contract."
    },
    "PortalConfigProperties": {
      "type": "object",
      "properties": {
        "enableBasicAuth": {
          "type": "boolean",
          "description": "Enable or disable Basic authentication method.",
          "default": true
        },
        "signin": {
          "type": "object",
          "properties": {
            "require": {
              "type": "boolean",
              "description": "Redirect anonymous users to the sign-in page.",
              "default": false
            }
          }
        },
        "signup": {
          "type": "object",
          "properties": {
            "termsOfService": {
              "type": "object",
              "$ref": "#/definitions/PortalConfigTermsOfServiceProperties",
              "description": "Terms of service settings."
            }
          }
        },
        "delegation": {
          "type": "object",
          "$ref": "#/definitions/PortalConfigDelegationProperties",
          "description": "The developer portal delegation settings."
        },
        "cors": {
          "type": "object",
          "$ref": "#/definitions/PortalConfigCorsProperties",
          "description": "The developer portal Cross-Origin Resource Sharing (CORS) settings."
        },
        "csp": {
          "type": "object",
          "$ref": "#/definitions/PortalConfigCspProperties",
          "description": "The developer portal Content Security Policy (CSP) settings."
        }
      },
      "description": "The developer portal configuration contract properties."
    },
    "PortalConfigDelegationProperties": {
      "type": "object",
      "properties": {
        "delegateRegistration": {
          "type": "boolean",
          "description": "Enable or disable delegation for user registration.",
          "default": false
        },
        "delegateSubscription": {
          "type": "boolean",
          "description": "Enable or disable delegation for product subscriptions.",
          "default": false
        },
        "delegationUrl": {
          "type": "string",
          "description": "A delegation endpoint URL."
        },
        "validationKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "A base64-encoded validation key to ensure requests originate from Azure API Management service."
        }
      }
    },
    "PortalConfigTermsOfServiceProperties": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "A terms of service text."
        },
        "requireConsent": {
          "type": "boolean",
          "description": "Ask user for consent to the terms of service.",
          "default": false
        }
      },
      "description": "Terms of service contract properties."
    },
    "PortalConfigCorsProperties": {
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed origins, e.g. `https://trusted.com`."
        }
      },
      "description": "The developer portal Cross-Origin Resource Sharing (CORS) settings."
    },
    "PortalConfigCspProperties": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The mode of the developer portal Content Security Policy (CSP).",
          "enum": [
            "enabled",
            "disabled",
            "reportOnly"
          ],
          "default": "disabled",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PortalSettingsCspMode",
            "values": [
              {
                "value": "enabled",
                "description": "The browser will block requests not matching allowed origins."
              },
              {
                "value": "disabled",
                "description": "The browser will not apply the origin restrictions."
              },
              {
                "value": "reportOnly",
                "description": "The browser will report requests not matching allowed origins without blocking them."
              }
            ]
          }
        },
        "reportUri": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The URLs used by the browser to report CSP violations."
        },
        "allowedSources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`."
        }
      },
      "description": "The developer portal Content Security Policy (CSP) settings."
    },
    "PortalDelegationSettings": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalDelegationSettingsProperties",
          "description": "Delegation settings contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Delegation settings for a developer portal."
    },
    "PortalDelegationSettingsProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A delegation Url."
        },
        "validationKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "A base64-encoded validation key to validate, that a request is coming from Azure API Management."
        },
        "subscriptions": {
          "$ref": "#/definitions/SubscriptionsDelegationSettingsProperties",
          "description": "Subscriptions delegation settings."
        },
        "userRegistration": {
          "$ref": "#/definitions/RegistrationDelegationSettingsProperties",
          "description": "User registration delegation settings."
        }
      },
      "description": "Delegation settings contract properties."
    },
    "PortalSettingsCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalSettingsContract"
          },
          "description": "Descriptions of API Management policies."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        }
      },
      "description": "Descriptions of API Management policies."
    },
    "PortalSettingsContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalSettingsContractProperties",
          "description": "Portal Settings contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Portal Settings for the Developer Portal."
    },
    "PortalSettingsContractProperties": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A delegation Url."
        },
        "validationKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "A base64-encoded validation key to validate, that a request is coming from Azure API Management."
        },
        "subscriptions": {
          "$ref": "#/definitions/SubscriptionsDelegationSettingsProperties",
          "description": "Subscriptions delegation settings."
        },
        "userRegistration": {
          "$ref": "#/definitions/RegistrationDelegationSettingsProperties",
          "description": "User registration delegation settings."
        },
        "enabled": {
          "type": "boolean",
          "description": "Redirect Anonymous users to the Sign-In page."
        },
        "termsOfService": {
          "type": "object",
          "$ref": "#/definitions/TermsOfServiceProperties",
          "description": "Terms of service contract properties."
        }
      },
      "description": "Sign-in settings contract properties."
    },
    "PortalSigninSettingProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Redirect Anonymous users to the Sign-In page."
        }
      },
      "description": "Sign-in settings contract properties."
    },
    "PortalSigninSettings": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalSigninSettingProperties",
          "description": "Sign-in settings contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Sign-In settings for the Developer Portal."
    },
    "PortalSignupSettings": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalSignupSettingsProperties",
          "description": "Sign-up settings contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Sign-Up settings for a developer portal."
    },
    "PortalSignupSettingsProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Allow users to sign up on a developer portal."
        },
        "termsOfService": {
          "type": "object",
          "$ref": "#/definitions/TermsOfServiceProperties",
          "description": "Terms of service contract properties."
        }
      },
      "description": "Sign-up settings contract properties."
    },
    "ProductCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Products list representation."
    },
    "ProductContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductContractProperties",
          "description": "Product entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Product details."
    },
    "ProductContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product name.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductEntityBaseParameters"
        }
      ],
      "required": [
        "displayName"
      ],
      "description": "Product profile."
    },
    "ProductEntityBaseParameters": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Product description. May include HTML formatting tags.",
          "minLength": 0,
          "maxLength": 1000
        },
        "terms": {
          "type": "string",
          "description": "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process."
        },
        "subscriptionRequired": {
          "description": "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.",
          "type": "boolean"
        },
        "approvalRequired": {
          "description": "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product\u2019s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product\u2019s APIs. Can be present only if subscriptionRequired property is present and has a value of false.",
          "type": "boolean"
        },
        "subscriptionsLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
        },
        "state": {
          "type": "string",
          "description": "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
          "enum": [
            "notPublished",
            "published"
          ],
          "x-ms-enum": {
            "name": "ProductState",
            "modelAsString": false
          }
        }
      },
      "description": "Product Entity Base Parameters"
    },
    "ProductTagResourceContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the product in the form of /products/{productId}"
        },
        "name": {
          "type": "string",
          "description": "Product name.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "allOf": [
        {
          "$ref": "./definitions.json#/definitions/ProductEntityBaseParameters"
        }
      ],
      "required": [
        "name"
      ],
      "description": "Product profile."
    },
    "ProductUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductUpdateProperties",
          "description": "Product entity Update contract properties."
        }
      },
      "description": "Product Update parameters."
    },
    "ProductUpdateProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product name.",
          "maxLength": 300,
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductEntityBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update Product operation."
    },
    "NamedValueCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamedValueContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged NamedValue list representation."
    },
    "NamedValueCreateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamedValueCreateContractProperties",
          "description": "NamedValue entity contract properties for PUT operation."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "NamedValue details."
    },
    "NamedValueCreateContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the namedValue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ],
      "required": [
        "displayName"
      ],
      "description": "NamedValue Contract properties."
    },
    "NamedValueContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamedValueContractProperties",
          "description": "NamedValue entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "NamedValue details."
    },
    "NamedValueContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractProperties",
          "description": "KeyVault location details of the namedValue."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ],
      "required": [
        "displayName"
      ],
      "description": "NamedValue Contract properties."
    },
    "NamedValueEntityBaseParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 32,
          "description": "Optional tags that when provided can be used to filter the NamedValue list."
        },
        "secret": {
          "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false.",
          "type": "boolean"
        }
      },
      "description": "NamedValue Entity Base Parameters set."
    },
    "NamedValueUpdateParameterProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace.",
          "minLength": 1,
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the namedValue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ],
      "description": "NamedValue Contract properties."
    },
    "NamedValueUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamedValueUpdateParameterProperties",
          "description": "NamedValue entity Update contract properties."
        }
      },
      "description": "NamedValue update Parameters."
    },
    "QuotaCounterCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaCounterContract"
          },
          "x-ms-identifiers": [
            "counterKey",
            "periodKey"
          ],
          "description": "Quota counter values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Quota Counter list representation."
    },
    "QuotaCounterContract": {
      "type": "object",
      "properties": {
        "counterKey": {
          "type": "string",
          "description": "The Key value of the Counter. Must not be empty.",
          "minLength": 1
        },
        "periodKey": {
          "type": "string",
          "description": "Identifier of the Period for which the counter was collected. Must not be empty.",
          "minLength": 1
        },
        "periodStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "periodEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "value": {
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota Value Properties"
        }
      },
      "required": [
        "counterKey",
        "periodKey",
        "periodStartTime",
        "periodEndTime"
      ],
      "description": "Quota counter details."
    },
    "QuotaCounterValueContract": {
      "type": "object",
      "properties": {
        "value": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota counter Value Properties."
        }
      },
      "description": "Quota counter value details."
    },
    "QuotaCounterValueContractProperties": {
      "type": "object",
      "properties": {
        "callsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times Counter was called."
        },
        "kbTransferred": {
          "type": "number",
          "format": "double",
          "description": "Data Transferred in KiloBytes."
        }
      },
      "description": "Quota counter value details."
    },
    "QuotaCounterValueUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota counter value details."
        }
      },
      "description": "Quota counter value details."
    },
    "RecipientEmailCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientEmailContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientEmailContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientEmailContractProperties",
          "description": "Recipient Email contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Recipient Email details."
    },
    "RecipientEmailContractProperties": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "User Email subscribed to notification."
        }
      },
      "description": "Recipient Email Contract Properties."
    },
    "RecipientsContractProperties": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Emails subscribed for the notification."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Users subscribed for the notification."
        }
      },
      "description": "Notification Parameter contract."
    },
    "RecipientUserCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientUserContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientUserContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientUsersContractProperties",
          "description": "Recipient User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Recipient User details."
    },
    "RecipientUsersContractProperties": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "API Management UserId subscribed to notification."
        }
      },
      "description": "Recipient User Contract Properties."
    },
    "RegistrationDelegationSettingsProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable delegation for user registration."
        }
      },
      "description": "User registration delegation settings properties."
    },
    "ReportCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportRecordContract"
          },
          "x-ms-identifiers": [
            "name",
            "userId"
          ],
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Report records list representation."
    },
    "ReportRecordContract": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name depending on report endpoint specifies product, API, operation or developer name."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "interval": {
          "type": "string",
          "description": "Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations)."
        },
        "country": {
          "type": "string",
          "description": "Country to which this record data is related."
        },
        "region": {
          "type": "string",
          "description": "Country region to which this record data is related."
        },
        "zip": {
          "type": "string",
          "description": "Zip code to which this record data is related."
        },
        "userId": {
          "readOnly": true,
          "type": "string",
          "description": "User identifier path. /users/{userId}"
        },
        "productId": {
          "readOnly": true,
          "type": "string",
          "description": "Product identifier path. /products/{productId}"
        },
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "apiRegion": {
          "type": "string",
          "description": "API region identifier."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "callCountSuccess": {
          "type": "integer",
          "format": "int32",
          "description": "Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect"
        },
        "callCountBlocked": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests"
        },
        "callCountFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls failed due to gateway or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600"
        },
        "callCountOther": {
          "type": "integer",
          "format": "int32",
          "description": "Number of other calls."
        },
        "callCountTotal": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of calls."
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth consumed."
        },
        "cacheHitCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times when content was served from cache policy."
        },
        "cacheMissCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times content was fetched from backend."
        },
        "apiTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request."
        },
        "apiTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request."
        },
        "apiTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request."
        },
        "serviceTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request on backend."
        },
        "serviceTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request on backend."
        },
        "serviceTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request on backend."
        }
      },
      "description": "Report data."
    },
    "RepresentationContract": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Specifies a registered or custom content type for this representation, e.g. application/xml."
        },
        "schemaId": {
          "type": "string",
          "description": "Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "typeName": {
          "type": "string",
          "description": "Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "formParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ],
          "description": "Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'.."
        },
        "examples": {
          "$ref": "#/definitions/ParameterExamplesContract",
          "description": "Exampled defined for the representation."
        }
      },
      "required": [
        "contentType"
      ],
      "description": "Operation request/response representation details."
    },
    "RequestContract": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Operation request description."
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ],
          "description": "Collection of operation request query parameters."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ],
          "description": "Collection of operation request headers."
        },
        "representations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "x-ms-identifiers": [],
          "description": "Collection of operation request representations."
        }
      },
      "description": "Operation request details."
    },
    "RequestReportCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestReportRecordContract"
          },
          "x-ms-identifiers": [
            "url"
          ],
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        }
      },
      "description": "Paged Report records list representation."
    },
    "RequestReportRecordContract": {
      "type": "object",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "productId": {
          "readOnly": true,
          "type": "string",
          "description": "Product identifier path. /products/{productId}"
        },
        "userId": {
          "readOnly": true,
          "type": "string",
          "description": "User identifier path. /users/{userId}"
        },
        "method": {
          "type": "string",
          "description": "The HTTP method associated with this request.."
        },
        "url": {
          "type": "string",
          "description": "The full URL associated with this request."
        },
        "ipAddress": {
          "type": "string",
          "description": "The client IP address associated with this request."
        },
        "backendResponseCode": {
          "type": "string",
          "description": "The HTTP status code received by the gateway as a result of forwarding this request to the backend."
        },
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code returned by the gateway."
        },
        "responseSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the response returned by the gateway."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when this request was received by the gateway in ISO 8601 format."
        },
        "cache": {
          "type": "string",
          "description": "Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the value is hit, cached response was returned. If the value is miss, the cache was used but lookup resulted in a miss and request was fulfilled by the backend."
        },
        "apiTime": {
          "type": "number",
          "format": "double",
          "description": "The total time it took to process this request."
        },
        "serviceTime": {
          "type": "number",
          "format": "double",
          "description": "he time it took to forward this request to the backend and get the response back."
        },
        "apiRegion": {
          "type": "string",
          "description": "Azure region where the gateway that processed this request is located."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "requestId": {
          "type": "string",
          "description": "Request Identifier."
        },
        "requestSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of this request.."
        }
      },
      "description": "Request Report data."
    },
    "ResolverCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolverContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Resolver list representation."
    },
    "ResolverContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResolverEntityBaseContract",
          "description": "Properties of the Resolver Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "GraphQL API Resolver details."
    },
    "ResolverEntityBaseContract": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Resolver Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "path": {
          "type": "string",
          "description": "Path is type/field being resolved.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Description of the resolver. May include HTML formatting tags.",
          "maxLength": 1000
        }
      },
      "description": "GraphQL API Resolver Entity Base Contract details."
    },
    "ResolverResultContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResolverResultContractProperties",
          "description": "Properties of the Resolver Contract."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Long Running Git Resolver Results."
    },
    "ResolverResultContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resolver result identifier."
        },
        "status": {
          "type": "string",
          "description": "Status of an async resolver.",
          "enum": [
            "Started",
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "AsyncResolverStatus",
            "modelAsString": false
          }
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of an async resolver. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update time of an async resolver. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "resultInfo": {
          "type": "string",
          "description": "Optional result info."
        },
        "error": {
          "$ref": "./apimanagement.json#/definitions/ErrorResponseBody",
          "description": "Error Body Contract"
        },
        "actionLog": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolverResultLogItemContract"
          },
          "x-ms-identifiers": [
            "objectKey"
          ],
          "readOnly": true,
          "description": "This property if only provided as part of the TenantConfiguration_Validate resolver. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy resolver."
        }
      },
      "description": "Resolver Result."
    },
    "ResolverResultLogItemContract": {
      "type": "object",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of entity contract."
        },
        "action": {
          "type": "string",
          "description": "Action like create/update/delete."
        },
        "objectKey": {
          "type": "string",
          "description": "Identifier of the entity being created/updated/deleted."
        }
      },
      "description": "Log of the entity being created, updated or deleted."
    },
    "ResolverUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResolverUpdateContractProperties",
          "description": "Properties of the GraphQL API Resolver entity that can be updated."
        }
      },
      "description": "GraphQL API Resolver Update Contract details."
    },
    "ResolverUpdateContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Resolver Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "path": {
          "type": "string",
          "description": "Path is type/field being resolved.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Description of the resolver. May include HTML formatting tags.",
          "maxLength": 1000
        }
      },
      "description": "Resolver Update Contract Properties."
    },
    "ResponseContract": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Operation response HTTP status code."
        },
        "description": {
          "type": "string",
          "description": "Operation response description."
        },
        "representations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "x-ms-identifiers": [],
          "description": "Collection of operation response representations."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ],
          "description": "Collection of operation response headers."
        }
      },
      "required": [
        "statusCode"
      ],
      "description": "Operation response details."
    },
    "SamplingSettings": {
      "type": "object",
      "properties": {
        "samplingType": {
          "type": "string",
          "description": "Sampling type.",
          "enum": [
            "fixed"
          ],
          "x-ms-enum": {
            "name": "SamplingType",
            "modelAsString": true,
            "values": [
              {
                "value": "fixed",
                "description": "Fixed-rate sampling."
              }
            ]
          }
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100,
          "description": "Rate of sampling for fixed-rate sampling."
        }
      },
      "description": "Sampling settings for Diagnostic."
    },
    "SaveConfigurationParameter": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SaveConfigurationParameterProperties",
          "description": "Properties of the Save Configuration Parameters."
        }
      },
      "description": "Save Tenant Configuration Contract details."
    },
    "SaveConfigurationParameterProperties": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch in which to commit the current configuration snapshot."
        },
        "force": {
          "type": "boolean",
          "description": "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten."
        }
      },
      "required": [
        "branch"
      ],
      "description": "Parameters supplied to the Save Tenant Configuration operation."
    },
    "SchemaCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaContract"
          },
          "description": "API Schema Contract value.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "The response of the list schema operation."
    },
    "SchemaContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SchemaContractProperties",
          "description": "Properties of the API Schema."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "API Schema Contract details."
    },
    "SchemaContractProperties": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml` </br> - `OData Schema` use `application/vnd.ms-azure-apim.odata.schema` </br> - `gRPC Schema` use `text/protobuf`."
        },
        "document": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SchemaDocumentProperties",
          "description": "Create or update Properties of the API Schema Document."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      },
      "required": [
        "contentType",
        "document"
      ],
      "description": "API Schema create or update contract Properties."
    },
    "SchemaDocumentProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
        },
        "definitions": {
          "type": "object",
          "description": "Types definitions. Used for Swagger/OpenAPI v1 schemas only, null otherwise."
        },
        "components": {
          "type": "object",
          "description": "Types definitions. Used for Swagger/OpenAPI v2/v3 schemas only, null otherwise."
        }
      },
      "description": "Api Schema Document Properties."
    },
    "GlobalSchemaCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalSchemaContract"
          },
          "description": "Global Schema Contract value.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "The response of the list schema operation."
    },
    "GlobalSchemaContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GlobalSchemaContractProperties",
          "description": "Properties of the Global Schema."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Global Schema Contract details."
    },
    "GlobalSchemaContractProperties": {
      "type": "object",
      "properties": {
        "schemaType": {
          "type": "string",
          "description": "Schema Type. Immutable.",
          "enum": [
            "xml",
            "json"
          ],
          "x-ms-client-name": "SchemaType",
          "x-ms-enum": {
            "name": "SchemaType",
            "modelAsString": true,
            "values": [
              {
                "value": "xml",
                "description": "XML schema type.",
                "name": "Xml"
              },
              {
                "value": "json",
                "description": "Json schema type.",
                "name": "Json"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Free-form schema entity description."
        },
        "value": {
          "description": "Json-encoded string for non json-based schema."
        },
        "document": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GlobalSchemaDocumentProperties",
          "description": "Global Schema document object for json-based schema formats(e.g. json schema)."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      },
      "required": [
        "schemaType"
      ],
      "description": "Schema create or update contract Properties."
    },
    "GlobalSchemaDocumentProperties": {
      "type": "object",
      "description": "Global Schema Document Properties."
    },
    "SubscriptionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Subscriptions list representation."
    },
    "SubscriptionContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionContractProperties",
          "description": "Subscription contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Subscription details."
    },
    "SubscriptionContractProperties": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}."
        },
        "displayName": {
          "type": "string",
          "description": "The name of the subscription, or null if the subscription has no name.",
          "minLength": 0,
          "maxLength": 100
        },
        "state": {
          "type": "string",
          "description": "Subscription state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "notificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "primaryKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "x-ms-secret": true,
          "type": "string",
          "description": "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "maxLength": 256
        },
        "stateComment": {
          "type": "string",
          "description": "Optional subscription comment added by an administrator when the state is changed to the 'rejected'."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing is enabled",
          "x-apim-code-nillable": true
        }
      },
      "required": [
        "scope",
        "state"
      ],
      "description": "Subscription details."
    },
    "SubscriptionCreateParameterProperties": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "User (user id path) for whom subscription is being created in form /users/{userId}"
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}."
        },
        "displayName": {
          "type": "string",
          "description": "Subscription name.",
          "minLength": 1,
          "maxLength": 100
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "state": {
          "type": "string",
          "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing can be enabled"
        }
      },
      "required": [
        "scope",
        "displayName"
      ],
      "description": "Parameters supplied to the Create subscription operation."
    },
    "SubscriptionCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionCreateParameterProperties",
          "description": "Subscription contract properties."
        }
      },
      "description": "Subscription create details."
    },
    "SubscriptionKeyParameterNamesContract": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "description": "Subscription key header name."
        },
        "query": {
          "type": "string",
          "description": "Subscription key query string parameter name."
        }
      },
      "description": "Subscription key parameter names details.",
      "example": {
        "subscriptionKeyParameterNames": {
          "query": "customQueryParameterName",
          "header": "customHeaderParameterName"
        }
      }
    },
    "SubscriptionsDelegationSettingsProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable delegation for subscriptions."
        }
      },
      "description": "Subscriptions delegation settings properties."
    },
    "SubscriptionUpdateParameterProperties": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "User identifier path: /users/{userId}"
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "displayName": {
          "type": "string",
          "description": "Subscription name."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary subscription key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary subscription key.",
          "minLength": 1,
          "maxLength": 256
        },
        "state": {
          "type": "string",
          "description": "Subscription state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
          "enum": [
            "suspended",
            "active",
            "expired",
            "submitted",
            "rejected",
            "cancelled"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "stateComment": {
          "type": "string",
          "description": "Comments describing subscription state change by the administrator when the state is changed to the 'rejected'."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing can be enabled"
        }
      },
      "description": "Parameters supplied to the Update subscription operation."
    },
    "SubscriptionUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubscriptionUpdateParameterProperties",
          "description": "Subscription Update contract properties."
        }
      },
      "description": "Subscription update details."
    },
    "TagCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag list representation."
    },
    "TagContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagContractProperties",
          "description": "Tag entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tag Contract details."
    },
    "TagContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "maxLength": 160,
          "minLength": 1
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Tag contract Properties."
    },
    "TagCreateUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagContractProperties",
          "description": "Properties supplied to Create Tag operation."
        }
      },
      "description": "Parameters supplied to Create/Update Tag operations."
    },
    "TagDescriptionBaseProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the Tag."
        },
        "externalDocsUrl": {
          "type": "string",
          "description": "Absolute URL of external resources describing the tag.",
          "maxLength": 2000
        },
        "externalDocsDescription": {
          "type": "string",
          "description": "Description of the external resources describing the tag."
        }
      },
      "description": "Parameters supplied to the Create TagDescription operation."
    },
    "TagDescriptionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDescriptionContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged TagDescription list representation."
    },
    "TagDescriptionContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagDescriptionContractProperties",
          "description": "TagDescription entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Contract details."
    },
    "TagDescriptionContractProperties": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Identifier of the tag in the form of /tags/{tagId}"
        },
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "maxLength": 160,
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TagDescriptionBaseProperties"
        }
      ],
      "description": "TagDescription contract Properties."
    },
    "TagDescriptionCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagDescriptionBaseProperties",
          "description": "Properties supplied to Create TagDescription operation."
        }
      },
      "description": "Parameters supplied to the Create TagDescription operation."
    },
    "TagResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagResourceContract"
          },
          "x-ms-identifiers": [
            "tag/id"
          ],
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag list representation."
    },
    "TagResourceContract": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/TagTagResourceContractProperties",
          "description": "Tag associated with the resource."
        },
        "api": {
          "$ref": "#/definitions/ApiTagResourceContractProperties",
          "description": "API associated with the tag."
        },
        "operation": {
          "$ref": "#/definitions/OperationTagResourceContractProperties",
          "description": "Operation associated with the tag."
        },
        "product": {
          "$ref": "#/definitions/ProductTagResourceContractProperties",
          "description": "Product associated with the tag."
        }
      },
      "required": [
        "tag"
      ],
      "description": "TagResource contract properties."
    },
    "TagTagResourceContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Tag identifier"
        },
        "name": {
          "type": "string",
          "description": "Tag Name",
          "minLength": 1,
          "maxLength": 160
        }
      },
      "description": "Contract defining the Tag property in the Tag Resource Contract"
    },
    "TenantConfigurationSyncStateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TenantConfigurationSyncStateContractProperties",
          "description": "Properties returned Tenant Configuration Sync State check."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Result of Tenant Configuration Sync State."
    },
    "TenantConfigurationSyncStateContractProperties": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of Git branch."
        },
        "commitId": {
          "type": "string",
          "description": "The latest commit Id."
        },
        "isExport": {
          "type": "boolean",
          "description": "value indicating if last sync was save (true) or deploy (false) operation."
        },
        "isSynced": {
          "type": "boolean",
          "description": "value indicating if last synchronization was later than the configuration change."
        },
        "isGitEnabled": {
          "type": "boolean",
          "description": "value indicating whether Git configuration access is enabled."
        },
        "syncDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "configurationChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "lastOperationId": {
          "type": "string",
          "description": "Most recent tenant configuration operation identifier"
        }
      },
      "description": "Tenant Configuration Synchronization State."
    },
    "TermsOfServiceProperties": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "A terms of service text."
        },
        "enabled": {
          "type": "boolean",
          "description": "Display terms of service during a sign-up process."
        },
        "consentRequired": {
          "type": "boolean",
          "description": "Ask user for consent to the terms of service."
        }
      },
      "description": "Terms of service contract properties."
    },
    "TokenBodyParameterContract": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "body parameter name."
        },
        "value": {
          "type": "string",
          "description": "body parameter value."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "OAuth acquire token request body parameter (www-url-form-encoded)."
    },
    "UserCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Users list representation."
    },
    "UserContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserContractProperties",
          "description": "User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "User details."
    },
    "UserContractProperties": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name."
        },
        "lastName": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "groups": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./definitions.json#/definitions/GroupContractProperties"
          },
          "x-ms-identifiers": [
            "displayName"
          ],
          "description": "Collection of groups user is part of."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "User profile."
    },
    "UserCreateParameterProperties": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "description": "User Password. If no value is provided, a default password is generated."
        },
        "appType": {
          "type": "string",
          "description": "Determines the type of application which send the create user request. Default is legacy portal.",
          "enum": [
            "portal",
            "developerPortal"
          ],
          "x-ms-enum": {
            "name": "AppType",
            "modelAsString": true,
            "values": [
              {
                "value": "portal",
                "description": "User create request was sent by legacy developer portal."
              },
              {
                "value": "developerPortal",
                "description": "User create request was sent by new developer portal."
              }
            ]
          }
        },
        "confirmation": {
          "type": "string",
          "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
          "enum": [
            "signup",
            "invite"
          ],
          "x-ms-enum": {
            "name": "Confirmation",
            "modelAsString": true,
            "values": [
              {
                "value": "signup",
                "description": "Send an e-mail to the user confirming they have successfully signed up."
              },
              {
                "value": "invite",
                "description": "Send an e-mail inviting the user to sign-up and complete registration."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "description": "Parameters supplied to the Create User operation."
    },
    "UserCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserCreateParameterProperties",
          "description": "User entity create contract properties."
        }
      },
      "description": "User create details."
    },
    "UserEntityBaseParameters": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
          "enum": [
            "active",
            "blocked",
            "pending",
            "deleted"
          ],
          "default": "active",
          "x-ms-enum": {
            "name": "UserState",
            "modelAsString": true,
            "values": [
              {
                "value": "active",
                "description": "User state is active."
              },
              {
                "value": "blocked",
                "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
              },
              {
                "value": "pending",
                "description": "User account is pending. Requires identity confirmation before it can be made active."
              },
              {
                "value": "deleted",
                "description": "User account is closed. All identities and related entities are removed."
              }
            ]
          }
        },
        "note": {
          "type": "string",
          "description": "Optional note about a user set by the administrator."
        },
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "Collection of user identities."
        }
      },
      "description": "User Entity Base Parameters set."
    },
    "UserIdentityCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          },
          "description": "User Identity values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "List of Users Identity list representation."
    },
    "UserIdentityContract": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Identity provider name."
        },
        "id": {
          "type": "string",
          "description": "Identifier value within provider."
        }
      },
      "description": "User identity details."
    },
    "UserTokenParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserTokenParameterProperties",
          "description": "User Token Parameter contract properties."
        }
      },
      "description": "Get User Token parameters."
    },
    "UserTokenParameterProperties": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate token for user.",
          "enum": [
            "primary",
            "secondary"
          ],
          "default": "primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "required": [
        "keyType",
        "expiry"
      ],
      "description": "Parameters supplied to the Get User Token operation."
    },
    "UserTokenResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authorization token for the User."
        }
      },
      "description": "Get User Token response details."
    },
    "UserUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserUpdateParametersProperties",
          "description": "User entity update contract properties."
        }
      },
      "description": "User update parameters."
    },
    "UserUpdateParametersProperties": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "password": {
          "type": "string",
          "description": "User Password."
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ],
      "description": "Parameters supplied to the Update User operation."
    },
    "X509CertificateName": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Common Name of the Certificate.",
          "type": "string"
        },
        "issuerCertificateThumbprint": {
          "description": "Thumbprint for the Issuer of the Certificate.",
          "type": "string"
        }
      },
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-windows-cluster-x509-security"
      },
      "description": "Properties of server X509Names."
    },
    "ClientSecretContract": {
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth."
        }
      },
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth."
    },
    "NamedValueSecretContract": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "This is secret value of the NamedValue entity."
        }
      },
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth."
    },
    "PortalSettingValidationKeyContract": {
      "type": "object",
      "properties": {
        "validationKey": {
          "type": "string",
          "x-ms-secret": true,
          "description": "This is secret value of the validation key in portal settings."
        }
      },
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth."
    },
    "SubscriptionKeysContract": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "string",
          "description": "Subscription primary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Subscription secondary key.",
          "minLength": 1,
          "maxLength": 256
        }
      },
      "description": "Subscription keys."
    },
    "GatewayCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Gateway list representation."
    },
    "GatewayContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GatewayContractProperties",
          "description": "Gateway details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Gateway details."
    },
    "GatewayContractProperties": {
      "type": "object",
      "properties": {
        "locationData": {
          "$ref": "#/definitions/ResourceLocationDataContract",
          "description": "Gateway location."
        },
        "description": {
          "type": "string",
          "description": "Gateway description",
          "maxLength": 1000
        }
      },
      "description": "Properties of the Gateway contract."
    },
    "WorkspaceLinksBaseProperties": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/workspaces"
              }
            ]
          },
          "description": "The link to the API Management service workspace."
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceLinksGateway"
          },
          "description": "The array of linked gateways."
        }
      }
    },
    "WorkspaceLinksGateway": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/gateways"
              }
            ]
          },
          "description": "The link to the API Management gateway."
        }
      }
    },
    "ApiManagementWorkspaceLinksProperties": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceLinksBaseProperties"
        }
      ],
      "description": "Properties of an API Management workspaceLinks resource."
    },
    "ApiManagementWorkspaceLinksResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementWorkspaceLinksProperties",
          "description": "Properties of the API Management WorkspaceLinks."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A single API Management WorkspaceLinks in List or Get response."
    },
    "ApiManagementWorkspaceLinksListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementWorkspaceLinksResource"
          },
          "description": "Result of the List API Management WorkspaceLinks operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ],
      "description": "The response of the List API Management WorkspaceLink operation."
    },
    "ResourceLocationDataContract": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located.",
          "maxLength": 256
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located.",
          "maxLength": 256
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located.",
          "maxLength": 256
        }
      },
      "required": [
        "name"
      ],
      "description": "Resource location data properties."
    },
    "GatewayKeysContract": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "string",
          "description": "Primary gateway key."
        },
        "secondary": {
          "type": "string",
          "description": "Secondary gateway key."
        }
      },
      "description": "Gateway authentication keys."
    },
    "GatewayTokenRequestContract": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate gateway token.",
          "enum": [
            "primary",
            "secondary"
          ],
          "default": "primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        }
      },
      "required": [
        "keyType",
        "expiry"
      ],
      "description": "Gateway token request contract properties."
    },
    "GatewayTokenContract": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authentication token value for the Gateway."
        }
      },
      "description": "Gateway access token."
    },
    "GatewayKeyRegenerationRequestContract": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key being regenerated.",
          "enum": [
            "primary",
            "secondary"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Gateway key regeneration request contract properties."
    },
    "GatewayHostnameConfigurationCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayHostnameConfigurationContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Gateway hostname configuration list representation."
    },
    "GatewayHostnameConfigurationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GatewayHostnameConfigurationContractProperties",
          "description": "Gateway hostname configuration details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Gateway hostname configuration details."
    },
    "GatewayHostnameConfigurationContractProperties": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname value. Supports valid domain name, partial or full wildcard"
        },
        "certificateId": {
          "type": "string",
          "description": "Identifier of Certificate entity that will be used for TLS connection establishment"
        },
        "negotiateClientCertificate": {
          "type": "boolean",
          "description": "Determines whether gateway requests client certificate"
        },
        "tls10Enabled": {
          "type": "boolean",
          "description": "Specifies if TLS 1.0 is supported"
        },
        "tls11Enabled": {
          "type": "boolean",
          "description": "Specifies if TLS 1.1 is supported"
        },
        "http2Enabled": {
          "type": "boolean",
          "description": "Specifies if HTTP/2.0 is supported"
        }
      },
      "description": "Gateway hostname configuration details."
    },
    "GatewayCertificateAuthorityCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayCertificateAuthorityContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged Gateway certificate authority list representation."
    },
    "GatewayCertificateAuthorityContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GatewayCertificateAuthorityContractProperties",
          "description": "Gateway certificate authority details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Gateway certificate authority details."
    },
    "GatewayCertificateAuthorityContractProperties": {
      "type": "object",
      "properties": {
        "isTrusted": {
          "type": "boolean",
          "description": "Determines whether certificate authority is trusted."
        }
      },
      "description": "Gateway certificate authority details."
    },
    "AssociationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state.",
              "enum": [
                "created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            }
          },
          "description": "Association entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Association entity details."
    },
    "ContentTypeCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentTypeContract"
          },
          "description": "Collection of content types.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link, if any.",
          "readOnly": true
        }
      },
      "description": "Paged list of content types."
    },
    "ContentTypeContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContentTypeContractProperties",
          "description": "Properties of the content type."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Content type contract details."
    },
    "ContentTypeContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Content type identifier"
        },
        "name": {
          "type": "string",
          "description": "Content type name. Must be 1 to 250 characters long."
        },
        "description": {
          "type": "string",
          "description": "Content type description."
        },
        "schema": {
          "type": "object",
          "description": "Content type schema."
        },
        "version": {
          "type": "string",
          "description": "Content type version."
        }
      }
    },
    "ContentItemCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentItemContract"
          },
          "description": "Collection of content items.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link, if any.",
          "readOnly": true
        }
      },
      "description": "Paged list of content items."
    },
    "ContentItemContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ContentItemContractProperties",
          "description": "Properties of the content item."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Content type contract details."
    },
    "ContentItemContractProperties": {
      "properties": {},
      "additionalProperties": true
    },
    "DeletedServicesCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedServiceContract"
          },
          "description": "Page values.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      },
      "description": "Paged deleted API Management Services List Representation."
    },
    "DeletedServiceContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeletedServiceContractProperties",
          "description": "Deleted API Management Service details."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "API Management Service Master Location."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Deleted API Management Service information."
    },
    "DeletedServiceContractProperties": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "description": "Fully-qualified API Management Service Resource ID"
        },
        "scheduledPurgeDate": {
          "type": "string",
          "format": "date-time",
          "description": "UTC Date and Time when the service will be automatically purged. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "UTC Timestamp when the service was soft-deleted. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        }
      }
    },
    "PortalRevisionCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalRevisionContract"
          },
          "description": "Collection of portal revisions.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link, if any.",
          "readOnly": true
        }
      },
      "description": "Paged list of portal revisions."
    },
    "PortalRevisionContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalRevisionContractProperties",
          "description": "Properties of the portal revisions."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Portal Revision's contract details."
    },
    "PortalRevisionContractProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Portal revision description.",
          "maxLength": 2000
        },
        "statusDetails": {
          "type": "string",
          "description": "Portal revision publishing status details.",
          "maxLength": 2000,
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the portal's revision.",
          "enum": [
            "pending",
            "publishing",
            "completed",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "portalRevisionStatus",
            "values": [
              {
                "value": "pending",
                "description": "Portal's revision has been queued."
              },
              {
                "value": "publishing",
                "description": "Portal's revision is being published."
              },
              {
                "value": "completed",
                "description": "Portal's revision publishing completed."
              },
              {
                "value": "failed",
                "description": "Portal's revision publishing failed."
              }
            ]
          },
          "readOnly": true
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if the portal's revision is public."
        },
        "createdDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Portal's revision creation date and time."
        },
        "updatedDateTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Last updated date and time."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state"
        }
      }
    },
    "PrivateEndpointConnectionRequest": {
      "description": "A request to approve or reject a private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "description": "Private Endpoint Connection Resource Id.",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "description": "The connection state of the private endpoint connection.",
          "properties": {
            "privateLinkServiceConnectionState": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkServiceConnectionState",
              "description": "A collection of information about the state of the connection between service consumer and provider."
            }
          }
        }
      }
    },
    "RemotePrivateEndpointConnectionWrapper": {
      "description": "Remote Private Endpoint Connection resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Private Endpoint connection resource id",
          "type": "string"
        },
        "name": {
          "description": "Private Endpoint Connection Name",
          "type": "string"
        },
        "type": {
          "description": "Private Endpoint Connection Resource Type",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionWrapperProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      }
    },
    "PrivateEndpointConnectionWrapperProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/ArmIdWrapper",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state of the private endpoint connection resource."
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "All the Group ids."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "type": "object"
    },
    "ArmIdWrapper": {
      "description": "A wrapper for an ARM resource id",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConnectivityCheckRequest": {
      "description": "A request to perform the connectivity check operation on a API Management service.",
      "type": "object",
      "required": [
        "source",
        "destination"
      ],
      "properties": {
        "source": {
          "description": "Definitions about the connectivity check origin.",
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "region": {
              "description": "The API Management service region from where to start the connectivity check operation.",
              "type": "string",
              "example": "westus"
            },
            "instance": {
              "description": "The particular VMSS instance from which to fire the request.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "destination": {
          "description": "The connectivity check operation destination.",
          "type": "object",
          "required": [
            "address",
            "port"
          ],
          "properties": {
            "address": {
              "description": "Destination address. Can either be an IP address or a FQDN.",
              "type": "string",
              "example": "microsoft.com"
            },
            "port": {
              "description": "Destination port.",
              "type": "integer",
              "format": "int64",
              "example": 80
            }
          }
        },
        "preferredIPVersion": {
          "description": "The IP version to be used. Only IPv4 is supported for now.",
          "type": "string",
          "enum": [
            "IPv4"
          ],
          "x-ms-enum": {
            "name": "PreferredIPVersion",
            "modelAsString": true
          }
        },
        "protocol": {
          "description": "The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value.",
          "type": "string",
          "enum": [
            "TCP",
            "HTTP",
            "HTTPS"
          ],
          "x-ms-enum": {
            "name": "ConnectivityCheckProtocol",
            "modelAsString": true
          }
        },
        "protocolConfiguration": {
          "description": "Protocol-specific configuration.",
          "type": "object",
          "properties": {
            "HTTPConfiguration": {
              "description": "Configuration for HTTP or HTTPS requests.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "The HTTP method to be used.",
                  "type": "string",
                  "enum": [
                    "GET",
                    "POST"
                  ],
                  "x-ms-enum": {
                    "name": "Method",
                    "modelAsString": true
                  }
                },
                "validStatusCodes": {
                  "type": "array",
                  "description": "List of HTTP status codes considered valid for the request response.",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "headers": {
                  "type": "array",
                  "description": "List of headers to be included in the request.",
                  "items": {
                    "$ref": "#/definitions/HTTPHeader"
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "HTTPHeader": {
      "description": "HTTP header and it's value.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Header name."
        },
        "value": {
          "type": "string",
          "description": "Header value."
        }
      }
    },
    "ConnectivityCheckResponse": {
      "description": "Information on the connectivity status.",
      "type": "object",
      "properties": {
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Connected",
            "Disconnected",
            "Degraded"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          },
          "description": "The connection status."
        },
        "avgLatencyInMs": {
          "description": "Average latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "minLatencyInMs": {
          "description": "Minimum latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "maxLatencyInMs": {
          "description": "Maximum latency in milliseconds.",
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "probesSent": {
          "description": "Total number of probes sent.",
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        },
        "probesFailed": {
          "description": "Number of failed probes.",
          "readOnly": true,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConnectivityHop": {
      "description": "Information about a hop between the source and the destination.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "address": {
          "description": "The IP address of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true,
          "type": "string"
        },
        "nextHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConnectivityIssue": {
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "type": "object",
      "properties": {
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Local",
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "description": "The origin of the issue."
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Error",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          },
          "description": "The severity of the issue."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "AgentStopped",
            "GuestFirewall",
            "DnsResolution",
            "SocketBind",
            "NetworkSecurityRule",
            "UserDefinedRoute",
            "PortThrottled",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": true
          },
          "description": "The type of issue."
        },
        "context": {
          "readOnly": true,
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "$ref": "#/definitions/IssueContext"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IssueContext": {
      "description": "A key-value pair that provides additional context on the issue.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "DocumentationContractProperties": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "documentation title."
        },
        "content": {
          "type": "string",
          "description": "Markdown documentation content."
        }
      },
      "description": "Markdown documentation details."
    },
    "DocumentationContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DocumentationContractProperties",
          "description": "Markdown Documentation details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Markdown documentation details."
    },
    "DocumentationUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DocumentationContractProperties",
          "description": "Markdown Documentation details."
        }
      },
      "description": "Documentation update contract details."
    },
    "WikiDocumentationContract": {
      "type": "object",
      "properties": {
        "documentationId": {
          "type": "string",
          "description": "Documentation Identifier"
        }
      },
      "description": "Wiki documentation details."
    },
    "WikiContractProperties": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Collection wiki documents included into this wiki.",
          "items": {
            "$ref": "#/definitions/WikiDocumentationContract"
          },
          "x-ms-identifiers": [
            "documentationId"
          ]
        }
      },
      "description": "Wiki contract details"
    },
    "WikiContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WikiContractProperties",
          "description": "Wiki details."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Wiki properties"
    },
    "WikiUpdateContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WikiContractProperties",
          "description": "Wiki details."
        }
      },
      "description": "Wiki update contract details."
    },
    "WorkspaceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged workspace list representation."
    },
    "WorkspaceContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspaceContractProperties",
          "description": "Workspace entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Workspace details."
    },
    "WorkspaceContractProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of the workspace."
        },
        "description": {
          "type": "string",
          "description": "Description of the workspace."
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Workspace entity properties."
    },
    "ProductApiLinkCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductApiLinkContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Product-API link list representation."
    },
    "ProductApiLinkContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductApiLinkContractProperties",
          "description": "Product-API link entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Product-API link details."
    },
    "ProductApiLinkContractProperties": {
      "type": "object",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Full resource Id of an API."
        }
      },
      "required": [
        "apiId"
      ],
      "description": "Product-API link entity properties."
    },
    "ProductGroupLinkCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGroupLinkContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Product-group link list representation."
    },
    "ProductGroupLinkContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductGroupLinkContractProperties",
          "description": "Product-group link entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Product-group link details."
    },
    "ProductGroupLinkContractProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Full resource Id of a group."
        }
      },
      "required": [
        "groupId"
      ],
      "description": "Product-group link entity properties."
    },
    "TagApiLinkCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagApiLinkContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag-API link list representation."
    },
    "TagApiLinkContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagApiLinkContractProperties",
          "description": "Tag-API link entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tag-API link details."
    },
    "TagApiLinkContractProperties": {
      "type": "object",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Full resource Id of an API."
        }
      },
      "required": [
        "apiId"
      ],
      "description": "Tag-API link entity properties."
    },
    "TagOperationLinkCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagOperationLinkContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag-operation link list representation."
    },
    "TagOperationLinkContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagOperationLinkContractProperties",
          "description": "Tag-API link entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tag-operation link details."
    },
    "TagOperationLinkContractProperties": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Full resource Id of an API operation."
        }
      },
      "required": [
        "operationId"
      ],
      "description": "Tag-operation link entity properties."
    },
    "TagProductLinkCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagProductLinkContract"
          },
          "description": "Page values."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag-product link list representation."
    },
    "TagProductLinkContract": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagProductLinkContractProperties",
          "description": "Tag-API link entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Tag-product link details."
    },
    "TagProductLinkContractProperties": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Full resource Id of a product."
        }
      },
      "required": [
        "productId"
      ],
      "description": "Tag-product link entity properties."
    },
    "GatewayListDebugCredentialsContract": {
      "type": "object",
      "properties": {
        "credentialsExpireAfter": {
          "type": "string",
          "format": "duration",
          "description": "Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used."
        },
        "purposes": {
          "type": "array",
          "description": "Purposes of debug credential.",
          "items": {
            "type": "string",
            "description": "Purpose of debug credential.",
            "enum": [
              "tracing"
            ],
            "x-ms-enum": {
              "name": "GatewayListDebugCredentialsContractPurpose",
              "modelAsString": true,
              "values": [
                {
                  "value": "tracing",
                  "description": "The tracing purpose."
                }
              ]
            }
          }
        },
        "apiId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/apis"
              },
              {
                "type": "Microsoft.ApiManagement/service/workspaces/apis"
              }
            ]
          },
          "description": "Full resource Id of an API."
        }
      },
      "required": [
        "purposes",
        "apiId"
      ],
      "description": "List debug credentials properties."
    },
    "GatewayDebugCredentialsContract": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Gateway debug token."
        }
      },
      "description": "Gateway debug credentials."
    },
    "GatewayListTraceContract": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "Trace id."
        }
      },
      "description": "List trace properties."
    },
    "GatewayTraceContract": {
      "type": "object",
      "properties": {},
      "additionalProperties": true,
      "description": "Trace collected in gateway."
    },
    "ErrorFieldContract": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      },
      "description": "Error Field contract."
    },
    "ErrorResponseBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The list of invalid fields send in request, in case of validation error."
        }
      },
      "description": "Error Body contract."
    },
    "RegionContract": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Region name.",
          "readOnly": true
        },
        "isMasterRegion": {
          "description": "whether Region is the master region.",
          "type": "boolean"
        },
        "isDeleted": {
          "description": "whether Region is deleted.",
          "type": "boolean"
        }
      },
      "description": "Region profile."
    },
    "RegionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionContract"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Lists of Regions."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Lists Regions operation response details."
    },
    "ConnectivityStatusContract": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The hostname of the resource which the service depends on. This can be the database, storage or any other azure resource on which the service depends upon.",
          "minLength": 1
        },
        "status": {
          "type": "string",
          "enum": [
            "initializing",
            "success",
            "failure"
          ],
          "x-ms-enum": {
            "name": "ConnectivityStatusType",
            "modelAsString": true
          },
          "description": "Resource Connectivity Status Type identifier."
        },
        "error": {
          "type": "string",
          "description": "Error details of the connectivity to the resource."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the resource connectivity status was last updated. This status should be updated every 15 minutes. If this status has not been updated, then it means that the service has lost network connectivity to the resource, from inside the Virtual Network.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "lastStatusChange": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the resource connectivity status last Changed from success to failure or vice-versa. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type."
        },
        "isOptional": {
          "type": "boolean",
          "description": "Whether this is optional."
        }
      },
      "required": [
        "name",
        "status",
        "lastUpdated",
        "lastStatusChange",
        "resourceType",
        "isOptional"
      ],
      "description": "Details about connectivity to a resource."
    },
    "NetworkStatusContractByLocation": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of service",
          "minLength": 1
        },
        "networkStatus": {
          "$ref": "#/definitions/NetworkStatusContract",
          "description": "Network status in Location"
        }
      },
      "description": "Network Status in the Location"
    },
    "NetworkStatusContract": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the list of DNS servers IPV4 addresses."
        },
        "connectivityStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectivityStatusContract"
          },
          "x-ms-identifiers": [
            "name",
            "resourceType"
          ],
          "description": "Gets the list of Connectivity Status to the Resources on which the service depends upon."
        }
      },
      "required": [
        "dnsServers",
        "connectivityStatus"
      ],
      "description": "Network Status details."
    },
    "GatewaySku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Standard",
            "WorkspaceGatewayStandard",
            "WorkspaceGatewayPremium"
          ],
          "x-ms-enum": {
            "name": "ApiGatewaySkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard SKU of the API gateway."
              },
              {
                "value": "WorkspaceGatewayStandard",
                "description": "Standard SKU of the API gateway to be used in Workspaces."
              },
              {
                "value": "WorkspaceGatewayPremium",
                "description": "Premium SKU of the API gateway to be used in Workspaces."
              }
            ]
          }
        }
      },
      "description": "Describes an available API Management SKU for gateways."
    },
    "GatewayConfigurationApi": {
      "type": "object",
      "properties": {
        "hostname": {
          "readOnly": true,
          "type": "string",
          "description": "Hostname to which the agent connects to propagate configuration to the cloud."
        }
      },
      "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU."
    },
    "FrontendConfiguration": {
      "type": "object",
      "properties": {
        "defaultHostname": {
          "readOnly": true,
          "type": "string",
          "description": "The default hostname of the data-plane gateway to which requests can be sent. This is only applicable for API gateway with Standard SKU."
        }
      },
      "description": "Information regarding how the gateway should be exposed."
    },
    "BackendConfiguration": {
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/BackendSubnetConfiguration",
          "description": "The default hostname of the data-plane gateway to which requests can be sent."
        }
      },
      "description": "Information regarding how the gateway should integrate with backend systems."
    },
    "BackendSubnetConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM ID of the subnet in which the backend systems are hosted."
        }
      },
      "description": "Information regarding how the subnet to which the gateway should be injected."
    },
    "ApiManagementGatewayProperties": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ],
      "description": "Properties of an API Management gateway resource description."
    },
    "ApiManagementGatewayUpdateProperties": {
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ],
      "description": "Properties of an API Management gateway resource description."
    },
    "ApiManagementGatewayBaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "frontend": {
          "$ref": "#/definitions/FrontendConfiguration",
          "description": "Information regarding how the gateway should be exposed."
        },
        "backend": {
          "$ref": "#/definitions/BackendConfiguration",
          "description": "Information regarding how the gateway should integrate with backend systems."
        },
        "configurationApi": {
          "$ref": "#/definitions/GatewayConfigurationApi",
          "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU."
        },
        "virtualNetworkType": {
          "type": "string",
          "description": "The type of VPN in which API Management gateway needs to be configured in. ",
          "enum": [
            "None",
            "External",
            "Internal"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "The API Management gateway is not part of any Virtual Network."
              },
              {
                "value": "External",
                "description": "The API Management gateway is part of Virtual Network and it is accessible from Internet."
              },
              {
                "value": "Internal",
                "description": "The API Management gateway is part of Virtual Network and it is only accessible from within the virtual network."
              }
            ]
          }
        }
      },
      "description": "Base Properties of an API Management gateway resource description."
    },
    "ApiManagementGatewayListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementGatewayResource"
          },
          "description": "Result of the List API Management gateway operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ],
      "description": "The response of the List API Management gateway operation."
    },
    "ApiManagementGatewaySkuProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Standard",
            "WorkspaceGatewayStandard",
            "WorkspaceGatewayPremium"
          ],
          "x-ms-enum": {
            "name": "ApiGatewaySkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard SKU of the API gateway."
              },
              {
                "value": "WorkspaceGatewayStandard",
                "description": "Standard SKU of the API gateway to be used in Workspaces."
              },
              {
                "value": "WorkspaceGatewayPremium",
                "description": "Premium SKU of the API gateway to be used in Workspaces."
              }
            ]
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU)"
        }
      },
      "required": [
        "name"
      ],
      "description": "API Management gateway resource SKU properties."
    },
    "ApiManagementGatewaySkuPropertiesForPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Standard",
            "WorkspaceGatewayStandard",
            "WorkspaceGatewayPremium"
          ],
          "x-ms-enum": {
            "name": "ApiGatewaySkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard SKU of the API gateway."
              },
              {
                "value": "WorkspaceGatewayStandard",
                "description": "Standard SKU of the API gateway to be used in Workspaces."
              },
              {
                "value": "WorkspaceGatewayPremium",
                "description": "Premium SKU of the API gateway to be used in Workspaces."
              }
            ]
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU)"
        }
      },
      "description": "API Management gateway resource SKU properties for PATCH operations given nothing should be required."
    },
    "ApiManagementGatewayResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementGatewayProperties",
          "description": "Properties of the API Management gateway."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuProperties",
          "description": "SKU properties of the API Management gateway."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "required": [
        "location",
        "sku",
        "properties"
      ],
      "description": "A single API Management gateway resource in List or Get response."
    },
    "ApimResource": {
      "type": "object",
      "description": "The Resource definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource is set to Microsoft.ApiManagement."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ApiManagementGatewayUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementGatewayUpdateProperties",
          "description": "Properties of the API Management gateway."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuPropertiesForPatch",
          "description": "SKU properties of the API Management gateway."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "description": "Parameter supplied to Update API Management gateway."
    },
    "GatewayResourceSkuResults": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewayResourceSkuResult"
          },
          "x-ms-identifiers": [
            "resourceType",
            "sku/name"
          ],
          "description": "The list of skus available for the gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of API Management gateway Skus."
        }
      },
      "required": [
        "value"
      ],
      "description": "The API Management gateway SKUs operation response."
    },
    "GatewayResourceSkuResult": {
      "type": "object",
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "sku": {
          "$ref": "#/definitions/GatewaySku",
          "readOnly": true,
          "description": "Specifies API Management gateway SKU."
        },
        "capacity": {
          "$ref": "#/definitions/GatewaySkuCapacity",
          "readOnly": true,
          "description": "Specifies the number of API Management gateway units."
        }
      },
      "description": "Describes an available API Management gateway SKU."
    },
    "GatewaySkuCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The maximum capacity that can be set."
        },
        "default": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The default capacity."
        },
        "scaleType": {
          "type": "string",
          "readOnly": true,
          "description": "The scale type applicable to the sku.",
          "enum": [
            "Automatic",
            "Manual",
            "None"
          ],
          "x-ms-enum": {
            "name": "GatewaySkuCapacityScaleType",
            "modelAsString": true,
            "values": [
              {
                "value": "Automatic",
                "description": "Supported scale type automatic."
              },
              {
                "value": "Manual",
                "description": "Supported scale type manual."
              },
              {
                "value": "None",
                "description": "Scaling not supported."
              }
            ]
          }
        }
      },
      "description": "Describes scaling information of a SKU."
    },
    "GatewayConfigConnectionBaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current provisioning state of the API Management gateway config connection "
        },
        "sourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/workspaces"
              }
            ]
          },
          "description": "The link to the API Management service workspace."
        },
        "defaultHostname": {
          "readOnly": true,
          "type": "string",
          "description": "The default hostname of the data-plane gateway."
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The hostnames of the data-plane gateway to which requests can be sent."
        }
      }
    },
    "ApiManagementGatewayConfigConnectionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GatewayConfigConnectionBaseProperties",
          "description": "Properties of the API Management gateway config connection."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "./../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "A single API Management gateway resource in List or Get response."
    },
    "ApiManagementGatewayConfigConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
          },
          "description": "Result of the List API Management gateway config connection operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ],
      "description": "The response of the List API Management gateway operation."
    },
    "ResourceSkuResults": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSkuResult"
          },
          "x-ms-identifiers": [
            "resourceType",
            "sku/name"
          ],
          "description": "The list of skus available for the service."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of API Management service Skus."
        }
      },
      "required": [
        "value"
      ],
      "description": "The API Management service SKUs operation response."
    },
    "ResourceSkuResult": {
      "type": "object",
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "readOnly": true,
          "description": "Specifies API Management SKU."
        },
        "capacity": {
          "$ref": "#/definitions/ResourceSkuCapacity",
          "readOnly": true,
          "description": "Specifies the number of API Management units."
        }
      },
      "description": "Describes an available API Management service SKU."
    },
    "ResourceSkuCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The maximum capacity that can be set."
        },
        "default": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The default capacity."
        },
        "scaleType": {
          "type": "string",
          "readOnly": true,
          "description": "The scale type applicable to the sku.",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuCapacityScaleType",
            "modelAsString": true,
            "values": [
              {
                "value": "automatic",
                "description": "Supported scale type automatic."
              },
              {
                "value": "manual",
                "description": "Supported scale type manual."
              },
              {
                "value": "none",
                "description": "Scaling not supported."
              }
            ]
          }
        }
      },
      "description": "Describes scaling information of a SKU."
    },
    "MigrateToStv2Contract": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode of Migration to stv2. Default is PreserveIp.",
          "externalDocs": {
            "url": "https://aka.ms/apim-migrate-stv2"
          },
          "enum": [
            "PreserveIp",
            "NewIP"
          ],
          "x-ms-enum": {
            "name": "MigrateToStv2Mode",
            "modelAsString": true,
            "values": [
              {
                "value": "PreserveIp",
                "description": "Migrate API Management service to stv2 from stv1, by reserving the IP Address of the service. This will have a downtime of upto 15 minutes, while the IP address is getting migrate to new infrastructure."
              },
              {
                "value": "NewIP",
                "description": "Migrate API Management service to stv2 from stv1. This will have no downtime as the service configuration will be migrated to new infrastructure, but the IP address will changed."
              }
            ]
          }
        }
      },
      "description": "Describes an available API Management SKU."
    },
    "ResourceSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Developer",
            "Standard",
            "Premium",
            "Basic",
            "Consumption",
            "Isolated",
            "BasicV2",
            "StandardV2"
          ],
          "x-ms-enum": {
            "name": "SkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "Developer",
                "description": "Developer SKU of Api Management."
              },
              {
                "value": "Standard",
                "description": "Standard SKU of Api Management."
              },
              {
                "value": "Premium",
                "description": "Premium SKU of Api Management."
              },
              {
                "value": "Basic",
                "description": "Basic SKU of Api Management."
              },
              {
                "value": "Consumption",
                "description": "Consumption SKU of Api Management."
              },
              {
                "value": "Isolated",
                "description": "Isolated SKU of Api Management."
              },
              {
                "value": "BasicV2",
                "description": "BasicV2 SKU of Api Management."
              },
              {
                "value": "StandardV2",
                "description": "StandardV2 SKU of Api Management."
              }
            ]
          }
        }
      },
      "description": "Describes an available API Management SKU."
    },
    "CertificateInformation": {
      "type": "object",
      "properties": {
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "subject": {
          "type": "string",
          "description": "Subject of the certificate."
        }
      },
      "required": [
        "expiry",
        "thumbprint",
        "subject"
      ],
      "description": "SSL certificate information."
    },
    "CertificateConfiguration": {
      "type": "object",
      "properties": {
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "storeName": {
          "description": "The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.",
          "type": "string",
          "enum": [
            "CertificateAuthority",
            "Root"
          ]
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information."
        }
      },
      "required": [
        "storeName"
      ],
      "description": "Certificate configuration which consist of non-trusted intermediates and root certificates."
    },
    "HostnameConfiguration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Hostname type.",
          "enum": [
            "Proxy",
            "Portal",
            "Management",
            "Scm",
            "DeveloperPortal",
            "ConfigurationApi"
          ],
          "x-ms-enum": {
            "name": "HostnameType",
            "modelAsString": true
          }
        },
        "hostName": {
          "type": "string",
          "description": "Hostname to configure on the Api Management service."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*"
        },
        "identityClientId": {
          "type": "string",
          "description": "System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate."
        },
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "defaultSslBinding": {
          "type": "boolean",
          "description": "Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to gateway Hostname Type.",
          "default": false
        },
        "negotiateClientCertificate": {
          "type": "boolean",
          "description": "Specify true to always negotiate client certificate on the hostname. Default Value is false.",
          "default": false
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information."
        },
        "certificateSource": {
          "type": "string",
          "description": "Certificate Source.",
          "enum": [
            "Managed",
            "KeyVault",
            "Custom",
            "BuiltIn"
          ],
          "x-ms-enum": {
            "name": "CertificateSource",
            "modelAsString": true
          }
        },
        "certificateStatus": {
          "type": "string",
          "description": "Certificate Status.",
          "enum": [
            "Completed",
            "Failed",
            "InProgress"
          ],
          "x-ms-enum": {
            "name": "CertificateStatus",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type",
        "hostName"
      ],
      "description": "Custom hostname configuration."
    },
    "ConfigurationApi": {
      "type": "object",
      "properties": {
        "legacyApi": {
          "type": "string",
          "default": "Enabled",
          "description": "Indication whether or not the legacy Configuration API (v1) should be exposed on the API Management service. Value is optional but must be 'Enabled' or 'Disabled'. If 'Disabled', legacy Configuration API (v1) will not be available for self-hosted gateways. Default value is 'Enabled'",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LegacyApiState",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Legacy Configuration API (v1) is enabled for the service and self-hosted gateways can connect to it."
              },
              {
                "value": "Disabled",
                "description": "Legacy Configuration API (v1) is disabled for the service and self-hosted gateways can not connect to it."
              }
            ]
          }
        }
      },
      "description": "Information regarding the Configuration API of the API Management service."
    },
    "VirtualNetworkConfiguration": {
      "type": "object",
      "properties": {
        "vnetid": {
          "readOnly": true,
          "type": "string",
          "description": "The virtual network ID. This is typically a GUID. Expect a null GUID by default."
        },
        "subnetname": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the subnet."
        },
        "subnetResourceId": {
          "type": "string",
          "pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$",
          "description": "The full resource ID of a subnet in a virtual network to deploy the API Management service in."
        }
      },
      "description": "Configuration of a virtual network to which API Management service is deployed."
    },
    "AdditionalLocation": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location name of the additional region among Azure Data center regions."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "publicIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard, Premium and Isolated SKU."
        },
        "privateIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard, Premium and Isolated SKU."
        },
        "publicIpAddressId": {
          "type": "string",
          "description": "Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the location. Supported only for Premium SKU being deployed in Virtual Network."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration for the location."
        },
        "gatewayRegionalUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service in the Region.",
          "readOnly": true
        },
        "natGatewayState": {
          "type": "string",
          "description": "Property can be used to enable NAT Gateway for this API Management service.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NatGatewayState",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Nat Gateway is enabled for the service."
              },
              {
                "value": "Disabled",
                "description": "Nat Gateway is disabled for the service."
              }
            ]
          }
        },
        "outboundPublicIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Outbound public IPV4 address prefixes associated with NAT Gateway deployed service. Available only for Premium SKU on stv2 platform."
        },
        "disableGateway": {
          "type": "boolean",
          "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.",
          "default": false
        },
        "platformVersion": {
          "type": "string",
          "description": "Compute Platform Version running the service.",
          "readOnly": true,
          "enum": [
            "undetermined",
            "stv1",
            "stv2",
            "mtv1",
            "stv2.1"
          ],
          "x-ms-enum": {
            "name": "PlatformVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "undetermined",
                "description": "Platform version cannot be determined, as compute platform is not deployed."
              },
              {
                "value": "stv1",
                "description": "Platform running the service on Single Tenant V1 platform."
              },
              {
                "value": "stv2",
                "description": "Platform running the service on Single Tenant V2 platform."
              },
              {
                "value": "mtv1",
                "description": "Platform running the service on Multi Tenant V1 platform."
              },
              {
                "value": "stv2.1",
                "description": "Platform running the service on Single Tenant V2 platform on newer Hardware."
              }
            ]
          }
        }
      },
      "required": [
        "location",
        "sku"
      ],
      "description": "Description of an additional API Management resource location."
    },
    "ApiManagementServiceBackupRestoreParameters": {
      "type": "object",
      "properties": {
        "storageAccount": {
          "type": "string",
          "description": "The name of the Azure storage account (used to place/retrieve the backup)."
        },
        "containerName": {
          "type": "string",
          "description": "The name of the blob container (used to place/retrieve the backup)."
        },
        "backupName": {
          "type": "string",
          "description": "The name of the backup file to create/retrieve."
        },
        "accessType": {
          "type": "string",
          "description": "The type of access to be used for the storage account.",
          "default": "AccessKey",
          "enum": [
            "AccessKey",
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "AccessType",
            "modelAsString": true,
            "values": [
              {
                "value": "AccessKey",
                "description": "Use access key."
              },
              {
                "value": "SystemAssignedManagedIdentity",
                "description": "Use system assigned managed identity."
              },
              {
                "value": "UserAssignedManagedIdentity",
                "description": "Use user assigned managed identity."
              }
            ]
          }
        },
        "accessKey": {
          "type": "string",
          "description": "Storage account access key. Required only if `accessType` is set to `AccessKey`."
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`."
        }
      },
      "required": [
        "storageAccount",
        "containerName",
        "backupName"
      ],
      "description": "Parameters supplied to the Backup/Restore of an API Management service operation."
    },
    "ApiManagementServiceProperties": {
      "type": "object",
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ],
      "required": [
        "publisherEmail",
        "publisherName"
      ],
      "description": "Properties of an API Management service resource description."
    },
    "ApiManagementServiceUpdateProperties": {
      "type": "object",
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ],
      "description": "Properties of an API Management service resource description."
    },
    "ApiManagementServiceBaseProperties": {
      "type": "object",
      "properties": {
        "notificationSenderEmail": {
          "type": "string",
          "description": "Email address from which the notification will be sent.",
          "maxLength": 100
        },
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management service, which is targeted by the long running operation started on the service.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "gatewayUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service.",
          "readOnly": true
        },
        "gatewayRegionalUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service in the Default Region.",
          "readOnly": true
        },
        "portalUrl": {
          "type": "string",
          "description": "Publisher portal endpoint Url of the API Management service.",
          "readOnly": true
        },
        "managementApiUrl": {
          "type": "string",
          "description": "Management API endpoint URL of the API Management service.",
          "readOnly": true
        },
        "scmUrl": {
          "type": "string",
          "description": "SCM endpoint URL of the API Management service.",
          "readOnly": true
        },
        "developerPortalUrl": {
          "type": "string",
          "description": "DEveloper Portal endpoint URL of the API Management service.",
          "readOnly": true
        },
        "hostnameConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostnameConfiguration"
          },
          "x-ms-identifiers": [
            "hostName",
            "type"
          ],
          "description": "Custom hostname configuration of the API Management service."
        },
        "publicIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU."
        },
        "privateIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU."
        },
        "publicIpAddressId": {
          "type": "string",
          "description": "Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network."
        },
        "publicNetworkAccess": {
          "description": "Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "configurationApi": {
          "$ref": "#/definitions/ConfigurationApi",
          "description": "Configuration API configuration of the API Management service."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration of the API Management service."
        },
        "additionalLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalLocation"
          },
          "x-ms-identifiers": [
            "location",
            "sku"
          ],
          "description": "Additional datacenter locations of the API Management service."
        },
        "customProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1, 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of the following ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.</br> Note: The following ciphers can't be disabled since they are required by internal platform components: TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateConfiguration"
          },
          "x-ms-identifiers": [
            "certificate/thumbprint"
          ],
          "description": "List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10."
        },
        "enableClientCertificate": {
          "type": "boolean",
          "description": "Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.",
          "default": false
        },
        "natGatewayState": {
          "type": "string",
          "description": "Property can be used to enable NAT Gateway for this API Management service.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NatGatewayState",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Nat Gateway is enabled for the service."
              },
              {
                "value": "Disabled",
                "description": "Nat Gateway is disabled for the service."
              }
            ]
          }
        },
        "outboundPublicIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Outbound public IPV4 address prefixes associated with NAT Gateway deployed service. Available only for Premium SKU on stv2 platform."
        },
        "disableGateway": {
          "type": "boolean",
          "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.",
          "default": false
        },
        "virtualNetworkType": {
          "type": "string",
          "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
          "default": "None",
          "enum": [
            "None",
            "External",
            "Internal"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "The service is not part of any Virtual Network."
              },
              {
                "value": "External",
                "description": "The service is part of Virtual Network and it is accessible from Internet."
              },
              {
                "value": "Internal",
                "description": "The service is part of Virtual Network and it is only accessible from within the virtual network."
              }
            ]
          }
        },
        "apiVersionConstraint": {
          "$ref": "#/definitions/ApiVersionConstraint",
          "description": "Control Plane Apis version constraint for the API Management service."
        },
        "restore": {
          "type": "boolean",
          "description": "Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.",
          "default": false
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "./definitions.json#/definitions/RemotePrivateEndpointConnectionWrapper"
          },
          "description": "List of Private Endpoint Connections of this service."
        },
        "platformVersion": {
          "type": "string",
          "description": "Compute Platform Version running the service in this location.",
          "readOnly": true,
          "enum": [
            "undetermined",
            "stv1",
            "stv2",
            "mtv1",
            "stv2.1"
          ],
          "x-ms-enum": {
            "name": "PlatformVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "undetermined",
                "description": "Platform version cannot be determined, as compute platform is not deployed."
              },
              {
                "value": "stv1",
                "description": "Platform running the service on Single Tenant V1 platform."
              },
              {
                "value": "stv2",
                "description": "Platform running the service on Single Tenant V2 platform."
              },
              {
                "value": "mtv1",
                "description": "Platform running the service on Multi Tenant V1 platform."
              },
              {
                "value": "stv2.1",
                "description": "Platform running the service on Single Tenant V2 platform on newer Hardware."
              }
            ]
          }
        },
        "legacyPortalStatus": {
          "description": "Status of legacy portal in the API Management service.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "type": "string",
          "x-ms-enum": {
            "name": "LegacyPortalStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Legacy Portal is enabled for the service."
              },
              {
                "value": "Disabled",
                "description": "Legacy Portal is disabled for the service."
              }
            ]
          }
        },
        "developerPortalStatus": {
          "description": "Status of developer portal in this API Management service.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "default": "Enabled",
          "x-ms-enum": {
            "name": "developerPortalStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Developer Portal is enabled for the service."
              },
              {
                "value": "Disabled",
                "description": "Developer Portal is disabled for the service."
              }
            ]
          }
        }
      },
      "description": "Base Properties of an API Management service resource description."
    },
    "ApiVersionConstraint": {
      "type": "object",
      "properties": {
        "minApiVersion": {
          "type": "string",
          "description": "Limit control plane API calls to API Management service with version equal to or newer than this value.",
          "example": "2019-01-01"
        }
      },
      "description": "Control Plane Apis version constraint for the API Management service."
    },
    "ApiManagementServiceSkuProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "Developer",
            "Standard",
            "Premium",
            "Basic",
            "Consumption",
            "Isolated",
            "BasicV2",
            "StandardV2"
          ],
          "x-ms-enum": {
            "name": "SkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "Developer",
                "description": "Developer SKU of Api Management."
              },
              {
                "value": "Standard",
                "description": "Standard SKU of Api Management."
              },
              {
                "value": "Premium",
                "description": "Premium SKU of Api Management."
              },
              {
                "value": "Basic",
                "description": "Basic SKU of Api Management."
              },
              {
                "value": "Consumption",
                "description": "Consumption SKU of Api Management."
              },
              {
                "value": "Isolated",
                "description": "Isolated SKU of Api Management."
              },
              {
                "value": "BasicV2",
                "description": "BasicV2 SKU of Api Management."
              },
              {
                "value": "StandardV2",
                "description": "StandardV2 SKU of Api Management."
              }
            ]
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0."
        }
      },
      "required": [
        "name",
        "capacity"
      ],
      "description": "API Management service resource SKU properties."
    },
    "ApiManagementServiceResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementServiceProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "required": [
        "location",
        "sku",
        "properties"
      ],
      "description": "A single API Management service resource in List or Get response."
    },
    "ApiManagementServiceUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementServiceUpdateProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "description": "Parameter supplied to Update Api Management Service."
    },
    "ApiManagementServiceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementServiceResource"
          },
          "description": "Result of the List API Management services operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ],
      "description": "The response of the List API Management services operation."
    },
    "ApiManagementServiceGetSsoTokenResult": {
      "type": "object",
      "properties": {
        "redirectUri": {
          "type": "string",
          "description": "Redirect URL to the Publisher Portal containing the SSO token."
        }
      },
      "description": "The response of the GetSsoToken operation."
    },
    "ApiManagementServiceCheckNameAvailabilityParameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to check for availability."
        }
      },
      "required": [
        "name"
      ],
      "description": "Parameters supplied to the CheckNameAvailability operation."
    },
    "ApiManagementServiceNameAvailabilityResult": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "True if the name is available and can be used to create a new API Management service; otherwise false.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "Invalid indicates the name provided does not match the resource provider\u2019s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Valid",
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": false
          }
        }
      },
      "description": "Response of the CheckNameAvailability operation."
    },
    "ApiManagementServiceGetDomainOwnershipIdentifierResult": {
      "type": "object",
      "properties": {
        "domainOwnershipIdentifier": {
          "type": "string",
          "description": "The domain ownership identifier value.",
          "readOnly": true
        }
      },
      "description": "Response of the GetDomainOwnershipIdentifier operation."
    },
    "ApiManagementServiceApplyNetworkConfigurationParameters": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the Api Management service to update for a multi-region service. For a service deployed in a single region, this parameter is not required."
        }
      },
      "description": "Parameter supplied to the Apply Network configuration operation."
    },
    "ApiManagementServiceIdentity": {
      "type": "object",
      "description": "Identity properties of the Api Management service resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ApimIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal id of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant id of the identity."
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        },
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuCapacity": {
      "properties": {
        "minimum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The maximum capacity that can be set."
        },
        "default": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The default capacity."
        },
        "scaleType": {
          "type": "string",
          "readOnly": true,
          "description": "The scale type applicable to the sku.",
          "enum": [
            "Automatic",
            "Manual",
            "None"
          ],
          "x-ms-enum": {
            "name": "ApiManagementSkuCapacityScaleType",
            "modelAsString": false
          }
        }
      },
      "description": "Describes scaling information of a SKU."
    },
    "ApiManagementSkuCosts": {
      "properties": {
        "meterID": {
          "type": "string",
          "readOnly": true,
          "description": "Used for querying price from commerce."
        },
        "quantity": {
          "type": "integer",
          "readOnly": true,
          "format": "int64",
          "description": "The multiplier is needed to extend the base metered cost."
        },
        "extendedUnit": {
          "type": "string",
          "readOnly": true,
          "description": "An invariant to show the extended unit."
        }
      },
      "description": "Describes metadata for retrieving price info."
    },
    "ApiManagementSkuCapabilities": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "An invariant to describe the feature."
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "An invariant if the feature is measured by quantity."
        }
      },
      "description": "Describes The SKU capabilities object."
    },
    "ApiManagementSkuZoneDetails": {
      "properties": {
        "name": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The set of zones that the SKU is available in with the specified capabilities."
        },
        "capabilities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCapabilities"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "A list of capabilities that are available for the SKU in the specified list of zones."
        }
      },
      "description": "Describes The zonal capabilities of a SKU."
    },
    "ApiManagementSkuRestrictions": {
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of restrictions.",
          "enum": [
            "Location",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "ApiManagementSkuRestrictionsType",
            "modelAsString": false
          }
        },
        "values": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ApiManagementSkuRestrictionInfo",
          "readOnly": true,
          "description": "The information about the restriction where the SKU cannot be used."
        },
        "reasonCode": {
          "type": "string",
          "readOnly": true,
          "description": "The reason for restriction.",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ApiManagementSkuRestrictionsReasonCode",
            "modelAsString": false
          }
        }
      },
      "description": "Describes scaling information of a SKU."
    },
    "ApiManagementSku": {
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of SKU."
        },
        "tier": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**"
        },
        "size": {
          "readOnly": true,
          "type": "string",
          "description": "The Size of the SKU."
        },
        "family": {
          "readOnly": true,
          "type": "string",
          "description": "The Family of this particular SKU."
        },
        "kind": {
          "readOnly": true,
          "type": "string",
          "description": "The Kind of resources that are supported in this SKU."
        },
        "capacity": {
          "$ref": "#/definitions/ApiManagementSkuCapacity",
          "readOnly": true,
          "description": "Specifies the number of virtual machines in the scale set."
        },
        "locations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The set of locations that the SKU is available."
        },
        "locationInfo": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiManagementSkuLocationInfo"
          },
          "x-ms-identifiers": [
            "location"
          ],
          "description": "A list of locations and availability zones in those locations where the SKU is available."
        },
        "apiVersions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The api versions that support this SKU."
        },
        "costs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCosts"
          },
          "x-ms-identifiers": [
            "meterID"
          ],
          "description": "Metadata for retrieving price info."
        },
        "capabilities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCapabilities"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "A name value pair to describe the capability."
        },
        "restrictions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApiManagementSkuRestrictions"
          },
          "x-ms-identifiers": [],
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      },
      "description": "Describes an available ApiManagement SKU."
    },
    "ApiManagementSkuLocationInfo": {
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Location of the SKU"
        },
        "zones": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of availability zones where the SKU is supported."
        },
        "zoneDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuZoneDetails"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Details of capabilities available to a SKU in specific zones."
        }
      }
    },
    "ApiManagementSkuRestrictionInfo": {
      "properties": {
        "locations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations where the SKU is restricted"
        },
        "zones": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of availability zones where the SKU is restricted."
        }
      }
    },
    "ApiManagementSkusResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiManagementSku"
          },
          "x-ms-identifiers": [
            "name",
            "resourceType"
          ],
          "description": "The list of skus available for the subscription."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus"
        }
      },
      "required": [
        "value"
      ],
      "description": "The List Resource Skus operation response."
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}