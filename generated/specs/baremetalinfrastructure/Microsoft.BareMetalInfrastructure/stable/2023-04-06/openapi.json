{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.BareMetalInfrastructure",
    "version": "2023-04-06"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.BareMetalInfrastructure/bareMetalInstances": {
      "get": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalInstances_ListBySubscription",
        "summary": "Gets a list of Azure BareMetal instances in the specified subscription.",
        "description": "Gets a list of AzureBareMetal instances in the specified subscription. The operations returns various properties of each Azure BareMetal instance.",
        "x-ms-examples": {
          "List all AzureBareMetal instances in a subscription": {
            "$ref": "./examples/AzureBareMetalInstances_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalInstancesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BareMetalInfrastructure/bareMetalInstances": {
      "get": {
        "operationId": "AzureBareMetalInstances_ListByResourceGroup",
        "summary": "Gets a list of Azure BareMetal instances in the specified subscription and resource group.",
        "description": "Gets a list of AzureBareMetal instances in the specified subscription and resource group. The operations returns various properties of each Azure BareMetal instance.",
        "x-ms-examples": {
          "List all AzureBareMetal instances in a resource group": {
            "$ref": "./examples/AzureBareMetalInstances_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalInstancesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.BareMetalInfrastructure/operations": {
      "get": {
        "tags": [
          "AzureBareMetal"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List all management operations supported by the AzureBareMetal RP": {
            "$ref": "./examples/AzureBareMetalOperations_List.json"
          }
        },
        "description": "Gets a list of AzureBareMetal management operations.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BareMetalInfrastructure/bareMetalInstances/{azureBareMetalInstanceName}": {
      "get": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalInstances_Get",
        "summary": "Gets an Azure BareMetal instance.",
        "description": "Gets an Azure BareMetal instance for the specified subscription, resource group, and instance name.",
        "x-ms-examples": {
          "Get an AzureBareMetal instance": {
            "$ref": "./examples/AzureBareMetalInstances_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalInstanceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalInstance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalInstances_Update",
        "summary": "Patches the Tags field of a Azure BareMetal instance.",
        "description": "Patches the Tags field of a Azure BareMetal instance for the specified subscription, resource group, and instance name.",
        "x-ms-examples": {
          "Update Tags field of an AzureBareMetal instance": {
            "$ref": "./examples/AzureBareMetalInstances_PatchTags.json"
          },
          "Delete Tags field of an AzureBareMetal instance": {
            "$ref": "./examples/AzureBareMetalInstances_PatchTags_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/TagsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalInstance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BareMetalInfrastructure/bareMetalStorageInstances": {
      "get": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalStorageInstances_ListBySubscription",
        "summary": "Gets a list of Azure BareMetalStorage instances in the specified subscription.",
        "description": "Gets a list of AzureBareMetalStorage instances in the specified subscription. The operations returns various properties of each Azure BareMetal instance.",
        "x-ms-examples": {
          "List all AzureBareMetalStorage instances in a subscription": {
            "$ref": "./examples/AzureBareMetalStorageInstances_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstancesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BareMetalInfrastructure/bareMetalStorageInstances": {
      "get": {
        "operationId": "AzureBareMetalStorageInstances_ListByResourceGroup",
        "summary": "Gets a list of Azure BareMetalStorage instances in the specified subscription and resource group.",
        "description": "Gets a list of AzureBareMetalStorage instances in the specified subscription and resource group. The operations returns various properties of each Azure BareMetal instance.",
        "x-ms-examples": {
          "List all AzureBareMetalStorage instances in a resource group": {
            "$ref": "./examples/AzureBareMetalStorageInstances_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstancesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BareMetalInfrastructure/bareMetalStorageInstances/{azureBareMetalStorageInstanceName}": {
      "get": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalStorageInstances_Get",
        "summary": "Gets an Azure BareMetal Storage instance.",
        "description": "Gets an Azure BareMetal Storage instance for the specified subscription, resource group, and instance name.",
        "x-ms-examples": {
          "Get an AzureBareMetalStorage instance": {
            "$ref": "./examples/AzureBareMetalStorageInstances_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalStorageInstanceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "summary": "Create an azure baremetal storage resource.",
        "operationId": "AzureBareMetalStorageInstances_Create",
        "x-ms-examples": {
          "Put a new AzureBareMetalStorageInstance": {
            "$ref": "./examples/AzureBareMetalStorageInstances_Create.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalStorageInstanceNameParameter"
          },
          {
            "in": "body",
            "name": "requestBodyParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstance"
            },
            "description": "request body for put call"
          }
        ],
        "responses": {
          "200": {
            "description": "Update ok. Successfully create a Azure BareMetalStorage resource.",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstance"
            }
          },
          "201": {
            "description": "Created. The operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstance"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "operationId": "AzureBareMetalStorageInstances_Update",
        "summary": "Patches the Tags field of a Azure BareMetalStorage instance.",
        "description": "Patches the Tags field of a Azure BareMetalStorage instance for the specified subscription, resource group, and instance name.",
        "x-ms-examples": {
          "Update Tags field of an AzureBareMetalStorage instance": {
            "$ref": "./examples/AzureBareMetalStorageInstances_PatchTags.json"
          },
          "Delete Tags field of an AzureBareMetalStorage instance": {
            "$ref": "./examples/AzureBareMetalStorageInstances_PatchTags_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalStorageInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/TagsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureBareMetalStorageInstance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BareMetalInfrastructure"
        ],
        "summary": "Delete an AzureBareMetalStorageInstance.",
        "operationId": "AzureBareMetalStorageInstances_Delete",
        "x-ms-examples": {
          "Delete an AzureBareMetalStorageInstance": {
            "$ref": "./examples/AzureBareMetalStorageInstances_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureBareMetalStorageInstanceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The workspace for Grafana resource is deleted."
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "AzureBareMetalInstanceNameParameter": {
      "name": "azureBareMetalInstanceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the Azure BareMetal on Azure instance.",
      "x-ms-parameter-location": "method"
    },
    "AzureBareMetalStorageInstanceNameParameter": {
      "name": "azureBareMetalStorageInstanceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": ".*",
      "description": "Name of the AzureBareMetalStorage on Azure instance.",
      "x-ms-parameter-location": "method"
    },
    "TagsParameter": {
      "name": "tagsParameter",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Tags"
      },
      "description": "Request body that only contains the new Tags field",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AzureBareMetalInstancesListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureBareMetalInstance"
          },
          "description": "The list of Azure BareMetal instances."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of AzureBareMetal instances."
        }
      },
      "description": "The response from the List AzureBareMetal Instances operation."
    },
    "AzureBareMetalInstance": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureBareMetalInstanceProperties",
          "description": "AzureBareMetal instance properties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "AzureBareMetal instance info on Azure (ARM properties and AzureBareMetal properties)"
    },
    "AzureBareMetalInstanceProperties": {
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile",
          "description": "Specifies the hardware settings for the AzureBareMetal instance."
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Specifies the storage settings for the AzureBareMetal instance disks."
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile",
          "description": "Specifies the operating system settings for the AzureBareMetal instance."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "Specifies the network settings for the AzureBareMetal instance."
        },
        "azureBareMetalInstanceId": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the AzureBareMetal instance unique ID."
        },
        "powerState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "starting",
            "started",
            "stopping",
            "stopped",
            "restarting",
            "unknown"
          ],
          "x-ms-enum": {
            "name": "AzureBareMetalInstancePowerStateEnum",
            "modelAsString": true
          },
          "description": "Resource power state"
        },
        "proximityPlacementGroup": {
          "readOnly": true,
          "type": "string",
          "description": "Resource proximity placement group"
        },
        "hwRevision": {
          "readOnly": true,
          "type": "string",
          "description": "Hardware revision of an AzureBareMetal instance"
        },
        "partnerNodeId": {
          "type": "string",
          "description": "ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Failed",
            "Succeeded",
            "Deleting",
            "Migrating"
          ],
          "x-ms-enum": {
            "name": "AzureBareMetalProvisioningStatesEnum",
            "modelAsString": true
          },
          "description": "State of provisioning of the AzureBareMetalInstance"
        }
      },
      "description": "Describes the properties of an AzureBareMetal instance."
    },
    "HardwareProfile": {
      "properties": {
        "hardwareType": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Cisco_UCS",
            "HPE"
          ],
          "x-ms-enum": {
            "name": "AzureBareMetalHardwareTypeNamesEnum",
            "modelAsString": true
          },
          "description": "Name of the hardware type (vendor and/or their product name)"
        },
        "azureBareMetalInstanceSize": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "S72m",
            "S144m",
            "S72",
            "S144",
            "S192",
            "S192m",
            "S192xm",
            "S96",
            "S112",
            "S224",
            "S224m",
            "S224om",
            "S224oo",
            "S224oom",
            "S224ooo",
            "S384",
            "S384m",
            "S384xm",
            "S384xxm",
            "S448",
            "S448m",
            "S448om",
            "S448oo",
            "S448oom",
            "S448ooo",
            "S576m",
            "S576xm",
            "S672",
            "S672m",
            "S672om",
            "S672oo",
            "S672oom",
            "S672ooo",
            "S768",
            "S768m",
            "S768xm",
            "S896",
            "S896m",
            "S896om",
            "S896oo",
            "S896oom",
            "S896ooo",
            "S960m"
          ],
          "x-ms-enum": {
            "name": "azureBareMetalInstanceSizeNamesEnum",
            "modelAsString": true
          },
          "description": "Specifies the AzureBareMetal instance SKU."
        }
      },
      "description": "Specifies the hardware settings for the AzureBareMetal instance."
    },
    "Disk": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The disk name."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the size of an empty data disk in gigabytes."
        },
        "lun": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."
        }
      },
      "description": "Specifies the disk information fo the AzureBareMetal instance"
    },
    "StorageProfile": {
      "properties": {
        "nfsIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "IP Address to connect to storage."
        },
        "osDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Specifies information about the operating system disk used by baremetal instance."
        }
      },
      "description": "Specifies the storage settings for the AzureBareMetal instance disks."
    },
    "OSProfile": {
      "properties": {
        "computerName": {
          "type": "string",
          "description": "Specifies the host OS name of the AzureBareMetal instance."
        },
        "osType": {
          "readOnly": true,
          "type": "string",
          "description": "This property allows you to specify the type of the OS."
        },
        "version": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies version of operating system."
        },
        "sshPublicKey": {
          "type": "string",
          "description": "Specifies the SSH public key used to access the operating system."
        }
      },
      "description": "Specifies the operating system settings for the AzureBareMetal instance."
    },
    "NetworkProfile": {
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpAddress"
          },
          "x-ms-identifiers": [
            "ipAddress"
          ],
          "description": "Specifies the network interfaces for the AzureBareMetal instance."
        },
        "circuitId": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the circuit id for connecting to express route."
        }
      },
      "description": "Specifies the network settings for the AzureBareMetal instance disks."
    },
    "IpAddress": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Specifies the IP address of the network interface."
        }
      },
      "description": "Specifies the IP address of the network interface."
    },
    "OperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of AzureBareMetal operations"
        }
      },
      "description": "List of AzureBareMetal operations"
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "Result": {
      "description": "Sample result definition",
      "properties": {
        "sampleProperty": {
          "type": "string",
          "description": "Sample property of type string"
        }
      }
    },
    "Display": {
      "type": "object",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly form of the resource provider name."
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly form of the resource type related to this action/operation."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly name for the operation as shown to the user."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "The localized friendly description for the operation as shown to the user."
        }
      },
      "description": "Detailed BareMetal operation information"
    },
    "AzureBareMetalStorageInstancesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureBareMetalStorageInstance"
          },
          "description": "The list of AzureBareMetalStorage instances.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of AzureBareMetalStorage instances."
        }
      },
      "description": "The response from the Get AzureBareMetalStorageInstances operation."
    },
    "AzureBareMetalStorageInstance": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureBareMetalStorageInstanceProperties",
          "description": "AzureBareMetalStorageInstance properties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "AzureBareMetalStorageInstance info on Azure (ARM properties and AzureBareMetalStorage properties)"
    },
    "AzureBareMetalStorageInstanceProperties": {
      "type": "object",
      "properties": {
        "azureBareMetalStorageInstanceUniqueIdentifier": {
          "type": "string",
          "description": "Specifies the AzureBareMetaStorageInstance unique ID."
        },
        "storageProperties": {
          "$ref": "#/definitions/StorageProperties",
          "description": "Specifies the storage properties for the AzureBareMetalStorage instance."
        }
      },
      "description": "Describes the properties of an AzureBareMetalStorageInstance."
    },
    "StorageProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Failed",
            "Succeeded",
            "Deleting",
            "Canceled",
            "Migrating"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "State of provisioning of the AzureBareMetalStorageInstance"
        },
        "offeringType": {
          "type": "string",
          "description": "the offering type for which the resource is getting provisioned"
        },
        "storageType": {
          "type": "string",
          "description": "the storage protocol for which the resource is getting provisioned"
        },
        "generation": {
          "type": "string",
          "description": "the kind of storage instance"
        },
        "hardwareType": {
          "type": "string",
          "description": "the hardware type of the storage instance"
        },
        "workloadType": {
          "type": "string",
          "description": "the workload for which the resource is getting provisioned"
        },
        "storageBillingProperties": {
          "$ref": "#/definitions/StorageBillingProperties",
          "description": "the billing related information for the resource"
        }
      },
      "description": "described the storage properties of the azure baremetalstorage instance"
    },
    "StorageBillingProperties": {
      "type": "object",
      "properties": {
        "billingMode": {
          "type": "string",
          "description": "the billing mode for the storage instance"
        },
        "azureBareMetalStorageInstanceSize": {
          "type": "string",
          "description": "the SKU type that is provisioned"
        }
      },
      "description": "Describes the billing related details of the AzureBareMetalStorageInstance."
    },
    "Tags": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags field of the AzureBareMetal/AzureBareMetaStorage instance."
        }
      },
      "description": "Tags field of the AzureBareMetal/AzureBareMetaStorage instance."
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    }
  }
}