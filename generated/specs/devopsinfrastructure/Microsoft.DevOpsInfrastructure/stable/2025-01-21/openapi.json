{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DevOpsInfrastructure",
    "version": "2025-01-21"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.DevOpsInfrastructure/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/checkNameAvailability": {
      "post": {
        "operationId": "Pools_CheckNameAvailability",
        "tags": [
          "Pools"
        ],
        "description": "Checks that the pool name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailability"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CheckNameAvailability": {
            "$ref": "./examples/Pools_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus": {
      "get": {
        "operationId": "Sku_ListByLocation",
        "tags": [
          "Sku"
        ],
        "description": "List ResourceSku resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceSkuListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sku_ListByLocation": {
            "$ref": "./examples/Sku_ListByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages": {
      "get": {
        "operationId": "SubscriptionUsages_Usages",
        "tags": [
          "SubscriptionUsages"
        ],
        "description": "List Quota resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedQuota"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SubscriptionUsages_Usages": {
            "$ref": "./examples/SubscriptionUsages_Usages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools": {
      "get": {
        "operationId": "Pools_ListBySubscription",
        "tags": [
          "Pools"
        ],
        "description": "List Pool resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_ListBySubscription": {
            "$ref": "./examples/ListPoolsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions": {
      "get": {
        "operationId": "ImageVersions_ListByImage",
        "tags": [
          "ImageVersions"
        ],
        "description": "List ImageVersion resources by Image",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "imageName",
            "in": "path",
            "description": "Name of the image.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ImageVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImageVersions_ListByImage": {
            "$ref": "./examples/ImageVersions_ListByImage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools": {
      "get": {
        "operationId": "Pools_ListByResourceGroup",
        "tags": [
          "Pools"
        ],
        "description": "List Pool resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_ListByResourceGroup": {
            "$ref": "./examples/ListPoolsBySubscriptionAndResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}": {
      "get": {
        "operationId": "Pools_Get",
        "tags": [
          "Pools"
        ],
        "description": "Get a Pool",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool. It needs to be globally unique.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "./examples/GetPool.json"
          }
        }
      },
      "put": {
        "operationId": "Pools_CreateOrUpdate",
        "tags": [
          "Pools"
        ],
        "description": "Create a Pool",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool. It needs to be globally unique.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Pool' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "201": {
            "description": "Resource 'Pool' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Pool"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "./examples/CreateOrUpdatePool.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pools_Update",
        "tags": [
          "Pools"
        ],
        "description": "Update a Pool",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool. It needs to be globally unique.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PoolUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "./examples/UpdatePool.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Pools_Delete",
        "tags": [
          "Pools"
        ],
        "description": "Delete a Pool",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool. It needs to be globally unique.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "./examples/DeletePool.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}/resources": {
      "get": {
        "operationId": "ResourceDetails_ListByPool",
        "tags": [
          "ResourceDetails"
        ],
        "description": "List ResourceDetailsObject resources by Pool",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "description": "Name of the pool. It needs to be globally unique.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-.]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceDetailsObjectListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceDetails_ListByPool": {
            "$ref": "./examples/ResourceDetails_ListByPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AgentProfile": {
      "type": "object",
      "description": "The agent profile of the machines in the pool.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for AgentProfile."
        },
        "resourcePredictions": {
          "$ref": "#/definitions/ResourcePredictions",
          "description": "Defines pool buffer/stand-by agents."
        },
        "resourcePredictionsProfile": {
          "$ref": "#/definitions/ResourcePredictionsProfile",
          "description": "Defines how the pool buffer/stand-by agents is provided."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AutomaticResourcePredictionsProfile": {
      "type": "object",
      "description": "The stand-by agent scheme is determined based on historical demand.",
      "properties": {
        "predictionPreference": {
          "$ref": "#/definitions/PredictionPreference",
          "description": "Determines the balance between cost and performance."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePredictionsProfile"
        }
      ],
      "x-ms-discriminator-value": "Automatic"
    },
    "AvailabilityStatus": {
      "type": "string",
      "description": "AvailabilityStatus of a name.",
      "enum": [
        "Available",
        "Unavailable"
      ],
      "x-ms-enum": {
        "name": "AvailabilityStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available",
            "description": "The name is available."
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "The name is unavailable"
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "AzureDevOpsOrganizationProfile": {
      "type": "object",
      "description": "Azure DevOps organization profile",
      "properties": {
        "organizations": {
          "type": "array",
          "description": "The list of Azure DevOps organizations the pool should be present in.",
          "items": {
            "$ref": "#/definitions/Organization"
          },
          "x-ms-identifiers": []
        },
        "permissionProfile": {
          "$ref": "#/definitions/AzureDevOpsPermissionProfile",
          "description": "The type of permission which determines which accounts are admins on the Azure DevOps pool."
        }
      },
      "required": [
        "organizations"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationProfile"
        }
      ],
      "x-ms-discriminator-value": "AzureDevOps"
    },
    "AzureDevOpsPermissionProfile": {
      "type": "object",
      "description": "Defines the type of Azure DevOps pool permission.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AzureDevOpsPermissionType",
          "description": "Determines who has admin permissions to the Azure DevOps pool."
        },
        "users": {
          "type": "array",
          "description": "User email addresses",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "description": "Group email addresses",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "kind"
      ]
    },
    "AzureDevOpsPermissionType": {
      "type": "string",
      "description": "Determines who has admin permissions to the Azure DevOps pool.",
      "enum": [
        "Inherit",
        "CreatorOnly",
        "SpecificAccounts"
      ],
      "x-ms-enum": {
        "name": "AzureDevOpsPermissionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Inherit",
            "value": "Inherit",
            "description": "Pool will inherit permissions from the project or organization."
          },
          {
            "name": "CreatorOnly",
            "value": "CreatorOnly",
            "description": "Only the pool creator will be an admin of the pool."
          },
          {
            "name": "SpecificAccounts",
            "value": "SpecificAccounts",
            "description": "Only the specified accounts will be admins of the pool."
          }
        ]
      }
    },
    "CachingType": {
      "type": "string",
      "description": "The type of caching in a data disk.",
      "enum": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "CachingType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Don't use host caching."
          },
          {
            "name": "ReadOnly",
            "value": "ReadOnly",
            "description": "For workloads that only do read operations."
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "For workloads that do a balance of read and write operations."
          }
        ]
      }
    },
    "CertificateStoreNameOption": {
      "type": "string",
      "description": "The certificate store name type",
      "enum": [
        "My",
        "Root"
      ],
      "x-ms-enum": {
        "name": "CertificateStoreNameOption",
        "modelAsString": true,
        "values": [
          {
            "name": "My",
            "value": "My",
            "description": "The X.509 certificate store for personal certificates."
          },
          {
            "name": "Root",
            "value": "Root",
            "description": "The X.509 certificate store for trusted root certificate authorities (CAs)."
          }
        ]
      }
    },
    "CheckNameAvailability": {
      "type": "object",
      "description": "The parameters used to check the availability of a resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource."
        },
        "type": {
          "$ref": "#/definitions/DevOpsInfrastructureResourceType",
          "description": "The type of resource that is used as the scope of the availability check."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameAvailabilityReason": {
      "type": "string",
      "description": "The reason code explaining why the name is unavailable. Will be null if the name is available.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "The name is invalid."
          },
          {
            "name": "AlreadyExists",
            "value": "AlreadyExists",
            "description": "The name already exists."
          }
        ]
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "The CheckNameAvailability operation response.",
      "properties": {
        "available": {
          "$ref": "#/definitions/AvailabilityStatus",
          "description": "Availability status of the name."
        },
        "message": {
          "type": "string",
          "description": "A message explaining why the name is unavailable. Will be null if the name is available."
        },
        "name": {
          "type": "string",
          "description": "The name whose availability was checked."
        },
        "reason": {
          "$ref": "#/definitions/CheckNameAvailabilityReason",
          "description": "The reason code explaining why the name is unavailable. Will be null if the name is available."
        }
      },
      "required": [
        "available",
        "message",
        "name",
        "reason"
      ]
    },
    "DataDisk": {
      "type": "object",
      "description": "The data disk of the VMSS.",
      "properties": {
        "caching": {
          "$ref": "#/definitions/CachingType",
          "description": "The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
        },
        "diskSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "The initial disk size in gigabytes."
        },
        "storageAccountType": {
          "$ref": "#/definitions/StorageAccountType",
          "description": "The storage Account type to be used for the data disk. If omitted, the default is \"standard_lrs\"."
        },
        "driveLetter": {
          "type": "string",
          "description": "The drive letter for the empty data disk. If not specified, it will be the first available letter."
        }
      }
    },
    "DevOpsAzureSku": {
      "type": "object",
      "description": "The Azure SKU of the machines in the pool.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Azure SKU name of the machines in the pool."
        }
      },
      "required": [
        "name"
      ]
    },
    "DevOpsInfrastructureResourceType": {
      "type": "string",
      "description": "The type of resource.",
      "enum": [
        "Microsoft.DevOpsInfrastructure/pools"
      ],
      "x-ms-enum": {
        "name": "DevOpsInfrastructureResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft.DevOpsInfrastructure/pools",
            "value": "Microsoft.DevOpsInfrastructure/pools",
            "description": "DevOpsInfrastructure pool resource."
          }
        ]
      }
    },
    "EphemeralType": {
      "type": "string",
      "description": "The type of Ephemeral option the pool will use on underlying VMs when loading this image.",
      "enum": [
        "Automatic",
        "CacheDisk",
        "ResourceDisk"
      ],
      "x-ms-enum": {
        "name": "EphemeralType",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Ephemeral is handled by Managed DevOps Pools service."
          },
          {
            "name": "CacheDisk",
            "value": "CacheDisk",
            "description": "CacheDisk ephemeral only, requires that the SKU has a cache that is large enough for the image."
          },
          {
            "name": "ResourceDisk",
            "value": "ResourceDisk",
            "description": "ResourceDisk ephemeral only, requires only that the SKU supports it."
          }
        ]
      }
    },
    "FabricProfile": {
      "type": "object",
      "description": "Defines the type of fabric the agent will run on.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for FabricProfile."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "GitHubOrganization": {
      "type": "object",
      "description": "Defines a GitHub organization",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The GitHub organization URL in which the pool should be created."
        },
        "repositories": {
          "type": "array",
          "description": "Optional list of repositories in which the pool should be created.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "url"
      ]
    },
    "GitHubOrganizationProfile": {
      "type": "object",
      "description": "GitHub organization profile",
      "properties": {
        "organizations": {
          "type": "array",
          "description": "The list of GitHub organizations/repositories the pool should be present in.",
          "items": {
            "$ref": "#/definitions/GitHubOrganization"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "organizations"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationProfile"
        }
      ],
      "x-ms-discriminator-value": "GitHub"
    },
    "ImageVersion": {
      "type": "object",
      "description": "An image version object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImageVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImageVersionListResult": {
      "type": "object",
      "description": "The response of a ImageVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ImageVersion items on this page",
          "items": {
            "$ref": "#/definitions/ImageVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ImageVersionProperties": {
      "type": "object",
      "description": "Details of the ImageVersionProperties.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the image."
        }
      },
      "required": [
        "version"
      ]
    },
    "LogonType": {
      "type": "string",
      "description": "Determines how the service should be run.",
      "enum": [
        "Service",
        "Interactive"
      ],
      "x-ms-enum": {
        "name": "LogonType",
        "modelAsString": true,
        "values": [
          {
            "name": "Service",
            "value": "Service",
            "description": "Run as a service."
          },
          {
            "name": "Interactive",
            "value": "Interactive",
            "description": "Run in interactive mode."
          }
        ]
      }
    },
    "ManualResourcePredictionsProfile": {
      "type": "object",
      "description": "Customer provides the stand-by agent scheme.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePredictionsProfile"
        }
      ],
      "x-ms-discriminator-value": "Manual"
    },
    "NetworkProfile": {
      "type": "object",
      "description": "The network profile of the machines in the pool.",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "The subnet id on which to put all machines created in the pool."
        }
      },
      "required": [
        "subnetId"
      ]
    },
    "Organization": {
      "type": "object",
      "description": "Defines an Azure DevOps organization.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The Azure DevOps organization URL in which the pool should be created."
        },
        "projects": {
          "type": "array",
          "description": "Optional list of projects in which the pool should be created.",
          "items": {
            "type": "string"
          }
        },
        "parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool."
        },
        "openAccess": {
          "type": "boolean",
          "description": "Determines if the pool should have open access to all projects in this organization."
        }
      },
      "required": [
        "url"
      ]
    },
    "OrganizationProfile": {
      "type": "object",
      "description": "Defines the organization in which the pool will be used.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for OrganizationProfile."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "OsDiskStorageAccountType": {
      "type": "string",
      "description": "The storage account type of the OS disk.",
      "enum": [
        "Standard",
        "Premium",
        "StandardSSD"
      ],
      "x-ms-enum": {
        "name": "OsDiskStorageAccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard OS disk type."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Premium OS disk type."
          },
          {
            "name": "StandardSSD",
            "value": "StandardSSD",
            "description": "Standard SSD OS disk type."
          }
        ]
      }
    },
    "OsProfile": {
      "type": "object",
      "description": "The OS profile of the machines in the pool.",
      "properties": {
        "secretsManagementSettings": {
          "$ref": "#/definitions/SecretsManagementSettings",
          "description": "The secret management settings of the machines in the pool."
        },
        "logonType": {
          "$ref": "#/definitions/LogonType",
          "description": "Determines how the service should be run. By default, this will be set to Service."
        }
      }
    },
    "PagedQuota": {
      "type": "object",
      "description": "Paged collection of Quota items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Quota items on this page",
          "items": {
            "$ref": "#/definitions/Quota"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Pool": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PoolProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PoolImage": {
      "type": "object",
      "description": "The VM image of the machines in the pool.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource id of the image."
        },
        "wellKnownImageName": {
          "type": "string",
          "description": "The image to use from a well-known set of images made available to customers."
        },
        "aliases": {
          "type": "array",
          "description": "List of aliases to reference the image by.",
          "items": {
            "type": "string"
          }
        },
        "buffer": {
          "type": "string",
          "description": "The percentage of the buffer to be allocated to this image.",
          "default": "*"
        },
        "ephemeralType": {
          "$ref": "#/definitions/EphemeralType",
          "description": "The ephemeral type of the image."
        }
      }
    },
    "PoolListResult": {
      "type": "object",
      "description": "The response of a Pool list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pool items on this page",
          "items": {
            "$ref": "#/definitions/Pool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PoolProperties": {
      "type": "object",
      "description": "Pool properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the current operation."
        },
        "maximumConcurrency": {
          "type": "integer",
          "format": "int32",
          "description": "Defines how many resources can there be created at any given time.",
          "minimum": 1,
          "maximum": 10000
        },
        "organizationProfile": {
          "$ref": "#/definitions/OrganizationProfile",
          "description": "Defines the organization in which the pool will be used."
        },
        "agentProfile": {
          "$ref": "#/definitions/AgentProfile",
          "description": "Defines how the machine will be handled once it executed a job."
        },
        "fabricProfile": {
          "$ref": "#/definitions/FabricProfile",
          "description": "Defines the type of fabric the agent will run on."
        },
        "devCenterProjectResourceId": {
          "type": "string",
          "description": "The resource id of the DevCenter Project the pool belongs to."
        }
      },
      "required": [
        "maximumConcurrency",
        "organizationProfile",
        "agentProfile",
        "fabricProfile",
        "devCenterProjectResourceId"
      ]
    },
    "PoolUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Pool.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PoolUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PoolUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Pool.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the current operation."
        },
        "maximumConcurrency": {
          "type": "integer",
          "format": "int32",
          "description": "Defines how many resources can there be created at any given time.",
          "minimum": 1,
          "maximum": 10000
        },
        "organizationProfile": {
          "$ref": "#/definitions/OrganizationProfile",
          "description": "Defines the organization in which the pool will be used."
        },
        "agentProfile": {
          "$ref": "#/definitions/AgentProfile",
          "description": "Defines how the machine will be handled once it executed a job."
        },
        "fabricProfile": {
          "$ref": "#/definitions/FabricProfile",
          "description": "Defines the type of fabric the agent will run on."
        },
        "devCenterProjectResourceId": {
          "type": "string",
          "description": "The resource id of the DevCenter Project the pool belongs to."
        }
      }
    },
    "PredictionPreference": {
      "type": "string",
      "description": "Determines the balance between cost and performance.",
      "enum": [
        "Balanced",
        "MostCostEffective",
        "MoreCostEffective",
        "MorePerformance",
        "BestPerformance"
      ],
      "x-ms-enum": {
        "name": "PredictionPreference",
        "modelAsString": true,
        "values": [
          {
            "name": "Balanced",
            "value": "Balanced",
            "description": "Balance between cost and performance."
          },
          {
            "name": "MostCostEffective",
            "value": "MostCostEffective",
            "description": "Optimizes for cost over performance."
          },
          {
            "name": "MoreCostEffective",
            "value": "MoreCostEffective",
            "description": "Halfway through cost and balanced."
          },
          {
            "name": "MorePerformance",
            "value": "MorePerformance",
            "description": "Halfway through balanced and performance."
          },
          {
            "name": "BestPerformance",
            "value": "BestPerformance",
            "description": "Optimizes for performance over cost."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents a succeeded operation."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents a failed operation."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Represents a canceled operation."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Represents a pending operation."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents a pending operation."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents an operation under deletion."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Represents an accepted operation."
          }
        ]
      }
    },
    "Quota": {
      "type": "object",
      "description": "Describes Resource Quota",
      "properties": {
        "name": {
          "$ref": "#/definitions/QuotaName",
          "description": "The name of the quota.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ARM resource id"
        },
        "unit": {
          "type": "string",
          "description": "The unit of usage measurement."
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "The current usage of the resource."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted usage of the resource."
        }
      },
      "required": [
        "id",
        "unit",
        "currentValue",
        "limit"
      ]
    },
    "QuotaName": {
      "type": "object",
      "description": "The Quota Names",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "type": "string",
          "description": "The localized name of the resource."
        }
      }
    },
    "ResourceDetailsObject": {
      "type": "object",
      "description": "A ResourceDetailsObject",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceDetailsObjectProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceDetailsObjectListResult": {
      "type": "object",
      "description": "The response of a ResourceDetailsObject list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceDetailsObject items on this page",
          "items": {
            "$ref": "#/definitions/ResourceDetailsObject"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceDetailsObjectProperties": {
      "type": "object",
      "description": "Details of the ResourceDetailsObject.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ResourceStatus",
          "description": "The status of the resource."
        },
        "image": {
          "type": "string",
          "description": "The image name of the resource."
        },
        "imageVersion": {
          "type": "string",
          "description": "The version of the image running on the resource."
        }
      },
      "required": [
        "status",
        "image",
        "imageVersion"
      ]
    },
    "ResourcePredictions": {
      "type": "object",
      "description": "Defines pool buffer."
    },
    "ResourcePredictionsProfile": {
      "type": "object",
      "description": "Determines how the stand-by scheme should be provided.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ResourcePredictionsProfileType",
          "description": "Determines how the stand-by scheme should be provided."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "ResourcePredictionsProfileType": {
      "type": "string",
      "description": "Determines how the stand-by scheme should be provided.",
      "enum": [
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "ResourcePredictionsProfileType",
        "modelAsString": true,
        "values": [
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Customer provides the stand-by agent scheme."
          },
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "The stand-by agent scheme is determined based on historical demand."
          }
        ]
      }
    },
    "ResourceSku": {
      "type": "object",
      "description": "A ResourceSku",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceSkuProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceSkuCapabilities": {
      "type": "object",
      "description": "Describes The SKU capabilities object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU capability."
        },
        "value": {
          "type": "string",
          "description": "The value of the SKU capability."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ResourceSkuListResult": {
      "type": "object",
      "description": "The response of a ResourceSku list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceSku items on this page",
          "items": {
            "$ref": "#/definitions/ResourceSku"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceSkuLocationInfo": {
      "type": "object",
      "description": "Describes an available Compute SKU Location Information.",
      "properties": {
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "Location of the SKU"
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is supported.",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "type": "array",
          "description": "Gets details of capabilities available to a SKU in specific zones.",
          "items": {
            "$ref": "#/definitions/ResourceSkuZoneDetails"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "location",
        "zones",
        "zoneDetails"
      ]
    },
    "ResourceSkuProperties": {
      "type": "object",
      "description": "Properties of a ResourceSku",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "tier": {
          "type": "string",
          "description": "The tier of virtual machines in a scale set"
        },
        "size": {
          "type": "string",
          "description": "The size of the SKU."
        },
        "family": {
          "type": "string",
          "description": "The family of the SKU."
        },
        "locations": {
          "type": "array",
          "description": "The set of locations that the SKU is available.",
          "items": {
            "$ref": "#/definitions/Azure.Core.azureLocation"
          }
        },
        "locationInfo": {
          "type": "array",
          "description": "A list of locations and availability zones in those locations where the SKU is available",
          "items": {
            "$ref": "#/definitions/ResourceSkuLocationInfo"
          },
          "x-ms-identifiers": []
        },
        "capabilities": {
          "type": "array",
          "description": "Name value pairs to describe the capability.",
          "items": {
            "$ref": "#/definitions/ResourceSkuCapabilities"
          },
          "x-ms-identifiers": []
        },
        "restrictions": {
          "type": "array",
          "description": "The restrictions of the SKU.",
          "items": {
            "$ref": "#/definitions/ResourceSkuRestrictions"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "resourceType",
        "tier",
        "size",
        "family",
        "locations",
        "locationInfo",
        "capabilities",
        "restrictions"
      ]
    },
    "ResourceSkuRestrictionInfo": {
      "type": "object",
      "description": "Describes an available Compute SKU Restriction Information.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Locations where the SKU is restricted",
          "items": {
            "$ref": "#/definitions/Azure.Core.azureLocation"
          }
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceSkuRestrictions": {
      "type": "object",
      "description": "The restrictions of the SKU.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ResourceSkuRestrictionsType",
          "description": "the type of restrictions."
        },
        "values": {
          "type": "array",
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ResourceSkuRestrictionInfo",
          "description": "The information about the restriction where the SKU cannot be used."
        },
        "reasonCode": {
          "$ref": "#/definitions/ResourceSkuRestrictionsReasonCode",
          "description": "the reason for restriction."
        }
      },
      "required": [
        "values",
        "restrictionInfo"
      ]
    },
    "ResourceSkuRestrictionsReasonCode": {
      "type": "string",
      "description": "Describes the reason for SKU restriction.",
      "enum": [
        "QuotaId",
        "NotAvailableForSubscription"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsReasonCode",
        "modelAsString": true,
        "values": [
          {
            "name": "QuotaId",
            "value": "QuotaId",
            "description": "The restriction is due to exceeding a quota limitation."
          },
          {
            "name": "NotAvailableForSubscription",
            "value": "NotAvailableForSubscription",
            "description": "The restriction is not available for this subscription."
          }
        ]
      }
    },
    "ResourceSkuRestrictionsType": {
      "type": "string",
      "description": "Describes the kind of SKU restrictions that can exist",
      "enum": [
        "Location",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Location",
            "value": "Location",
            "description": "SKU restricted by location."
          },
          {
            "name": "Zone",
            "value": "Zone",
            "description": "SKU restricted by availability zone."
          }
        ]
      }
    },
    "ResourceSkuZoneDetails": {
      "type": "object",
      "description": "Describes The zonal capabilities of a SKU.",
      "properties": {
        "name": {
          "type": "array",
          "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
          "items": {
            "$ref": "#/definitions/ResourceSkuCapabilities"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "capabilities"
      ]
    },
    "ResourceStatus": {
      "type": "string",
      "description": "The status of the machine resource.",
      "enum": [
        "Ready",
        "NotReady",
        "Allocated",
        "PendingReturn",
        "Returned",
        "Leased",
        "Provisioning",
        "Updating",
        "Starting",
        "PendingReimage",
        "Reimaging"
      ],
      "x-ms-enum": {
        "name": "ResourceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Represents a machine resource that is ready."
          },
          {
            "name": "NotReady",
            "value": "NotReady",
            "description": "Represents a machine resource that is not ready."
          },
          {
            "name": "Allocated",
            "value": "Allocated",
            "description": "Represents a machine resource that is allocated."
          },
          {
            "name": "PendingReturn",
            "value": "PendingReturn",
            "description": "Represents a machine resource that is pending return."
          },
          {
            "name": "Returned",
            "value": "Returned",
            "description": "Represents a machine resource that is returned."
          },
          {
            "name": "Leased",
            "value": "Leased",
            "description": "Represents a machine resource that is leased."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Represents a machine resource that is provisioning."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents a machine resource that is updating."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Represents a machine resource that is starting."
          },
          {
            "name": "PendingReimage",
            "value": "PendingReimage",
            "description": "Represents a machine resource that is pending reimage."
          },
          {
            "name": "Reimaging",
            "value": "Reimaging",
            "description": "Represents a machine resource that is reimaging."
          }
        ]
      }
    },
    "SecretsManagementSettings": {
      "type": "object",
      "description": "The secret management settings of the machines in the pool.",
      "properties": {
        "certificateStoreLocation": {
          "type": "string",
          "description": "Where to store certificates on the machine."
        },
        "certificateStoreName": {
          "$ref": "#/definitions/CertificateStoreNameOption",
          "description": "Name of the certificate store to use on the machine, currently 'My' and 'Root' are supported."
        },
        "observedCertificates": {
          "type": "array",
          "description": "The list of certificates to install on all machines in the pool.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "keyExportable": {
          "type": "boolean",
          "description": "Defines if the key of the certificates should be exportable."
        }
      },
      "required": [
        "observedCertificates",
        "keyExportable"
      ]
    },
    "Stateful": {
      "type": "object",
      "description": "Stateful profile meaning that the machines will be returned to the pool after running a job.",
      "properties": {
        "maxAgentLifetime": {
          "type": "string",
          "description": "How long should stateful machines be kept around. The maximum is one week."
        },
        "gracePeriodTimeSpan": {
          "type": "string",
          "description": "How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AgentProfile"
        }
      ],
      "x-ms-discriminator-value": "Stateful"
    },
    "StatelessAgentProfile": {
      "type": "object",
      "description": "Stateless profile meaning that the machines will be cleaned up after running a job.",
      "allOf": [
        {
          "$ref": "#/definitions/AgentProfile"
        }
      ],
      "x-ms-discriminator-value": "Stateless"
    },
    "StorageAccountType": {
      "type": "string",
      "description": "StorageAccountType enums",
      "enum": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "Premium_ZRS",
        "StandardSSD_ZRS"
      ],
      "x-ms-enum": {
        "name": "StorageAccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "StandardLRS",
            "value": "Standard_LRS",
            "description": "The data disk should use standard locally redundant storage."
          },
          {
            "name": "PremiumLRS",
            "value": "Premium_LRS",
            "description": "The data disk should use premium locally redundant storage."
          },
          {
            "name": "StandardSSDLRS",
            "value": "StandardSSD_LRS",
            "description": "The data disk should use standard SSD locally redundant storage."
          },
          {
            "name": "PremiumZRS",
            "value": "Premium_ZRS",
            "description": "The data disk should use premium SSD zonal redundant storage."
          },
          {
            "name": "StandardSSDZRS",
            "value": "StandardSSD_ZRS",
            "description": "The data disk should use standard SSD zonal redundant storage."
          }
        ]
      }
    },
    "StorageProfile": {
      "type": "object",
      "description": "The storage profile of the VMSS.",
      "properties": {
        "osDiskStorageAccountType": {
          "$ref": "#/definitions/OsDiskStorageAccountType",
          "description": "The Azure SKU name of the machines in the pool."
        },
        "dataDisks": {
          "type": "array",
          "description": "A list of empty data disks to attach.",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VmssFabricProfile": {
      "type": "object",
      "description": "The agents will run on Virtual Machine Scale Sets.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/DevOpsAzureSku",
          "description": "The Azure SKU of the machines in the pool."
        },
        "images": {
          "type": "array",
          "description": "The VM images of the machines in the pool.",
          "items": {
            "$ref": "#/definitions/PoolImage"
          },
          "x-ms-identifiers": []
        },
        "osProfile": {
          "$ref": "#/definitions/OsProfile",
          "description": "The OS profile of the machines in the pool."
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "The storage profile of the machines in the pool."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The network profile of the machines in the pool."
        }
      },
      "required": [
        "sku",
        "images"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FabricProfile"
        }
      ],
      "x-ms-discriminator-value": "Vmss"
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}