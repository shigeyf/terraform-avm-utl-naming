{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Network",
    "version": "2025-05-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}": {
      "put": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_CreateOrUpdate",
        "description": "Creates or updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "200": {
            "description": "The DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "202": {
            "description": "The operation to upsert DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS resolver": {
            "$ref": "./examples/DnsResolver_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Update",
        "description": "Updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "202": {
            "description": "The operation to update DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS resolver": {
            "$ref": "./examples/DnsResolver_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Delete",
        "description": "Deletes a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS resolver": {
            "$ref": "./examples/DnsResolver_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Get",
        "description": "Gets properties of a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver": {
            "$ref": "./examples/DnsResolver_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_ListByResourceGroup",
        "description": "Lists DNS resolvers within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolvers in the resource group.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolvers by resource group": {
            "$ref": "./examples/DnsResolver_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_List",
        "description": "Lists DNS resolvers in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolvers in the subscription.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolvers by subscription": {
            "$ref": "./examples/DnsResolver_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints/{inboundEndpointName}": {
      "put": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_CreateOrUpdate",
        "description": "Creates or updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The inbound endpoint for the DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to upsert inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Update",
        "description": "Updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpointPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to update inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Delete",
        "description": "Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The inbound endpoint for the DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Get",
        "description": "Gets properties of an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints": {
      "get": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_List",
        "description": "Lists inbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of inbound endpoints for the DNS resolver.",
            "schema": {
              "$ref": "#/definitions/InboundEndpointListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List inbound endpoints by DNS resolver": {
            "$ref": "./examples/InboundEndpoint_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints/{outboundEndpointName}": {
      "put": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_CreateOrUpdate",
        "description": "Creates or updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The outbound endpoint for the DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to upsert outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Update",
        "description": "Updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpointPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to update outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Delete",
        "description": "Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The outbound endpoint for the DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Get",
        "description": "Gets properties of an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints": {
      "get": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_List",
        "description": "Lists outbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of outbound endpoints for the DNS resolver.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpointListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List outbound endpoints by DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}": {
      "put": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_CreateOrUpdate",
        "description": "Creates or updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The DNS forwarding ruleset has been created.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "200": {
            "description": "The DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "202": {
            "description": "The operation to upsert DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Update",
        "description": "Updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "202": {
            "description": "The operation to update DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Delete",
        "description": "Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules within the ruleset will be deleted.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset has been deleted."
          },
          "202": {
            "description": "The operation to delete DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The DNS forwarding ruleset was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Get",
        "description": "Gets a DNS forwarding ruleset properties.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset was found.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_ListByResourceGroup",
        "description": "Lists DNS forwarding rulesets within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS forwarding rulesets in the resource group.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by resource group": {
            "$ref": "./examples/DnsForwardingRuleset_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_List",
        "description": "Lists DNS forwarding rulesets in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS forwarding rulesets in the subscription.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by subscription": {
            "$ref": "./examples/DnsForwardingRuleset_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}": {
      "put": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_CreateOrUpdate",
        "description": "Creates or updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The forwarding rule has been created.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "200": {
            "description": "The forwarding rule has been updated.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Update",
        "description": "Updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRulePatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule has been updated.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Delete",
        "description": "Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule has been deleted."
          },
          "204": {
            "description": "The forwarding rule was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Get",
        "description": "Gets properties of a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule was found.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules": {
      "get": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_List",
        "description": "Lists forwarding rules in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of forwarding rules in the DNS forwarding ruleset.",
            "schema": {
              "$ref": "#/definitions/ForwardingRuleListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List forwarding rules in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks/{virtualNetworkLinkName}": {
      "put": {
        "tags": [
          "VirtualNetworkLinks"
        ],
        "operationId": "VirtualNetworkLinks_CreateOrUpdate",
        "description": "Creates or updates a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkLinkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The virtual network link to the DNS forwarding ruleset has been created.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "200": {
            "description": "The virtual network link to the DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "202": {
            "description": "The operation to upsert virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworkLinks"
        ],
        "operationId": "VirtualNetworkLinks_Update",
        "description": "Updates a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkLinkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLinkPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The virtual network link to the DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "202": {
            "description": "The operation to update virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkLinks"
        ],
        "operationId": "VirtualNetworkLinks_Delete",
        "description": "Deletes a virtual network link to a DNS forwarding ruleset. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkLinkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The virtual network link to the DNS forwarding ruleset has been deleted."
          },
          "202": {
            "description": "The operation to delete virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The virtual network link to the DNS forwarding ruleset was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "VirtualNetworkLinks"
        ],
        "operationId": "VirtualNetworkLinks_Get",
        "description": "Gets properties of a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkLinkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The virtual network link to DNS forwarding ruleset was found.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks": {
      "get": {
        "tags": [
          "VirtualNetworkLinks"
        ],
        "operationId": "VirtualNetworkLinks_List",
        "description": "Lists virtual network links to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of virtual network links to a DNS forwarding ruleset.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLinkListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List virtual network links to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsResolvers": {
      "post": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_ListByVirtualNetwork",
        "description": "Lists DNS resolver resource IDs linked to a virtual network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver resource IDs linked to the virtual network.",
            "schema": {
              "$ref": "#/definitions/SubResourceListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolvers by virtual network": {
            "$ref": "./examples/DnsResolver_ListByVirtualNetwork.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsForwardingRulesets": {
      "post": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_ListByVirtualNetwork",
        "description": "Lists DNS forwarding ruleset resource IDs attached to a virtual network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS forwarding ruleset resource IDs and virtual network link resource IDs attached to the virtual network.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkDnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by virtual network": {
            "$ref": "./examples/DnsForwardingRuleset_ListByVirtualNetwork.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}": {
      "put": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_CreateOrUpdate",
        "description": "Creates or updates a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "201": {
            "description": "The DNS resolver policy has been created.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_Update",
        "description": "Updates a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "202": {
            "description": "The operation to update DNS resolver policy has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_Delete",
        "description": "Deletes a DNS resolver policy. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation to delete DNS resolver policy has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The DNS resolver policy was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_Get",
        "description": "Gets properties of a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy was found.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies": {
      "get": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_ListByResourceGroup",
        "description": "Lists DNS resolver policies within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver policies in the resource group.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver policies by resource group": {
            "$ref": "./examples/DnsResolverPolicy_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolverPolicies": {
      "get": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_List",
        "description": "Lists DNS resolver policies in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver policies in the subscription.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver policies by subscription": {
            "$ref": "./examples/DnsResolverPolicy_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/dnsSecurityRules/{dnsSecurityRuleName}": {
      "put": {
        "tags": [
          "DnsSecurityRules"
        ],
        "operationId": "DnsSecurityRules_CreateOrUpdate",
        "description": "Creates or updates a DNS security rule for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsSecurityRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS security rule has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "201": {
            "description": "The DNS security rule has been created.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS security rule": {
            "$ref": "./examples/DnsSecurityRule_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsSecurityRules"
        ],
        "operationId": "DnsSecurityRules_Update",
        "description": "Updates a DNS security rule.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsSecurityRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsSecurityRulePatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS security rule has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "202": {
            "description": "The operation to update the DNS security rule has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsSecurityRules"
        ],
        "operationId": "DnsSecurityRules_Delete",
        "description": "Deletes a DNS security rule for a DNS resolver policy. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsSecurityRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation to delete the DNS security rule has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The DNS security rule was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsSecurityRules"
        ],
        "operationId": "DnsSecurityRules_Get",
        "description": "Gets properties of a DNS security rule for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsSecurityRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS security rule was found.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/dnsSecurityRules": {
      "get": {
        "tags": [
          "DnsSecurityRules"
        ],
        "operationId": "DnsSecurityRules_List",
        "description": "Lists DNS security rules for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS security rules for the DNS resolver policy.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRuleListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS security rules by DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/virtualNetworkLinks/{dnsResolverPolicyVirtualNetworkLinkName}": {
      "put": {
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_CreateOrUpdate",
        "description": "Creates or updates a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyVirtualNetworkLinkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy virtual network link has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "201": {
            "description": "The DNS resolver policy virtual network link has been created.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Update",
        "description": "Updates a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyVirtualNetworkLinkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy virtual network link has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "202": {
            "description": "The operation to update DNS resolver policy virtual network link has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Delete",
        "description": "Deletes a DNS resolver policy virtual network link. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyVirtualNetworkLinkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation to delete the DNS resolver policy virtual network link has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The DNS resolver policy virtual network link was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Get",
        "description": "Gets properties of a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyVirtualNetworkLinkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver policy virtual network link was found.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/virtualNetworkLinks": {
      "get": {
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_List",
        "description": "Lists DNS resolver policy virtual network links.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver policy virtual network links.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver policy virtual network links by DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists/{dnsResolverDomainListName}": {
      "put": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_CreateOrUpdate",
        "description": "Creates or updates a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverDomainListNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver domain list has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "201": {
            "description": "The DNS resolver domain list has been created.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS resolver domain list with less than 1000 domains": {
            "$ref": "./examples/DnsResolverDomainList_Put.json"
          },
          "Upsert DNS resolver domain list with bulk number of domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDomains_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_Update",
        "description": "Updates a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverDomainListNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListPatch"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver domain list has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "202": {
            "description": "The operation to update DNS resolver domain list has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS resolver domain list": {
            "$ref": "./examples/DnsResolverDomainList_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_Delete",
        "description": "Deletes a DNS resolver domain list. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverDomainListNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation to delete DNS resolver domain list has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The DNS resolver domain list was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS resolver domain list": {
            "$ref": "./examples/DnsResolverDomainList_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_Get",
        "description": "Gets properties of a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverDomainListNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver domain list was found.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver domain list with less than 1000 domains": {
            "$ref": "./examples/DnsResolverDomainList_Get.json"
          },
          "Retrieve DNS resolver domain list with bulk number of domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDomains_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists": {
      "get": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_ListByResourceGroup",
        "description": "Lists DNS resolver domain lists within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver domain lists in the resource group.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver domain lists by resource group": {
            "$ref": "./examples/DnsResolverDomainList_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolverDomainLists": {
      "get": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_List",
        "description": "Lists DNS resolver domain lists in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver domain lists in the subscription.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver domain lists by subscription": {
            "$ref": "./examples/DnsResolverDomainList_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists/{dnsResolverDomainListName}/bulk": {
      "post": {
        "tags": [
          "DnsResolverDomainLists"
        ],
        "operationId": "DnsResolverDomainLists_Bulk",
        "description": "Uploads or downloads the list of domains for a DNS Resolver Domain List from a storage link.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverDomainListNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListBulk"
            },
            "description": "Parameters supplied to the bulk domain list operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver domain list bulk request was successful.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "202": {
            "description": "The operation to upload/download domains to the DNS Resolver Domain List has been accepted and will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upload DNS resolver domain list domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkUpload.json"
          },
          "Download DNS resolver domain list domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDownload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsResolverPolicies": {
      "post": {
        "tags": [
          "DnsResolverPolicies"
        ],
        "operationId": "DnsResolverPolicies_ListByVirtualNetwork",
        "description": "Lists DNS resolver policy resource IDs linked to a virtual network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DNS resolver policy resource IDs linked to the virtual network.",
            "schema": {
              "$ref": "#/definitions/SubResourceListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver policies by virtual network": {
            "$ref": "./examples/DnsResolverPolicy_ListByVirtualNetwork.json"
          }
        }
      }
    }
  },
  "parameters": {
    "DnsResolverNameParameter": {
      "name": "dnsResolverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "InboundEndpointNameParameter": {
      "name": "inboundEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the inbound endpoint for the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "VirtualNetworkNameParameter": {
      "name": "virtualNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^.+$",
      "minLength": 1,
      "description": "The name of the virtual network.",
      "x-ms-parameter-location": "method"
    },
    "OutboundEndpointNameParameter": {
      "name": "outboundEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the outbound endpoint for the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "DnsForwardingRulesetNameParameter": {
      "name": "dnsForwardingRulesetName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the DNS forwarding ruleset.",
      "x-ms-parameter-location": "method"
    },
    "ForwardingRuleNameParameter": {
      "name": "forwardingRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the forwarding rule.",
      "x-ms-parameter-location": "method"
    },
    "VirtualNetworkLinkNameParameter": {
      "name": "virtualNetworkLinkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the virtual network link.",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
      "x-ms-parameter-location": "method"
    },
    "IfMatchParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-client-name": "IfMatch",
      "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
      "x-ms-parameter-location": "method"
    },
    "IfNoneMatchParameter": {
      "name": "If-None-Match",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-client-name": "IfNoneMatch",
      "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
      "x-ms-parameter-location": "method"
    },
    "DnsResolverPolicyNameParameter": {
      "name": "dnsResolverPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 80,
      "description": "The name of the DNS resolver policy.",
      "x-ms-parameter-location": "method"
    },
    "DnsSecurityRuleNameParameter": {
      "name": "dnsSecurityRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 80,
      "description": "The name of the DNS security rule.",
      "x-ms-parameter-location": "method"
    },
    "DnsResolverPolicyVirtualNetworkLinkNameParameter": {
      "name": "dnsResolverPolicyVirtualNetworkLinkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 80,
      "description": "The name of the DNS resolver policy virtual network link for the DNS resolver policy.",
      "x-ms-parameter-location": "method"
    },
    "DnsResolverDomainListNameParameter": {
      "name": "dnsResolverDomainListName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$",
      "minLength": 1,
      "maxLength": 80,
      "description": "The name of the DNS resolver domain list.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "DnsResolverProperties": {
      "description": "Represents the properties of a DNS resolver.",
      "type": "object",
      "required": [
        "virtualNetwork"
      ],
      "properties": {
        "virtualNetwork": {
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "$ref": "#/definitions/SubResource"
        },
        "dnsResolverState": {
          "description": "The current status of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "string",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "DnsResolverState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState"
        },
        "resourceGuid": {
          "description": "The resourceGuid property of the DNS resolver resource.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceGuid"
        }
      }
    },
    "DnsResolver": {
      "description": "Describes a DNS resolver.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS resolver.",
          "$ref": "#/definitions/DnsResolverProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverPatch": {
      "description": "Describes a DNS resolver for PATCH operation.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for DNS Resolver."
        }
      }
    },
    "DnsResolverListResult": {
      "description": "The response to an enumeration operation on DNS resolvers.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolvers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolver"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InboundEndpointProperties": {
      "description": "Represents the properties of an inbound endpoint for a DNS resolver.",
      "type": "object",
      "required": [
        "ipConfigurations"
      ],
      "properties": {
        "ipConfigurations": {
          "description": "IP configurations for the inbound endpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpConfiguration"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "The current provisioning state of the inbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState"
        },
        "resourceGuid": {
          "description": "The resourceGuid property of the inbound endpoint resource.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceGuid"
        }
      }
    },
    "InboundEndpoint": {
      "description": "Describes an inbound endpoint for a DNS resolver.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the inbound endpoint.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the inbound endpoint.",
          "$ref": "#/definitions/InboundEndpointProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InboundEndpointPatch": {
      "description": "Describes an inbound endpoint for a DNS resolver for PATCH operation.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for inbound endpoint."
        }
      }
    },
    "InboundEndpointListResult": {
      "description": "The response to an enumeration operation on inbound endpoints for a DNS resolver.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the inbound endpoints for a DNS resolver.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundEndpoint"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundEndpointProperties": {
      "description": "Represents the properties of an outbound endpoint for a DNS resolver.",
      "type": "object",
      "required": [
        "subnet"
      ],
      "properties": {
        "subnet": {
          "description": "The reference to the subnet used for the outbound endpoint.",
          "$ref": "#/definitions/SubResource"
        },
        "provisioningState": {
          "description": "The current provisioning state of the outbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "resourceGuid": {
          "description": "The resourceGuid property of the outbound endpoint resource.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceGuid"
        }
      }
    },
    "OutboundEndpoint": {
      "description": "Describes an outbound endpoint for a DNS resolver.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the outbound endpoint.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the outbound endpoint.",
          "$ref": "#/definitions/OutboundEndpointProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "OutboundEndpointPatch": {
      "description": "Describes an outbound endpoint for a DNS resolver for PATCH operation.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for outbound endpoint."
        }
      }
    },
    "OutboundEndpointListResult": {
      "description": "The response to an enumeration operation on outbound endpoints for a DNS resolver.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the outbound endpoints for a DNS resolver.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundEndpoint"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsForwardingRulesetProperties": {
      "description": "Represents the properties of a DNS forwarding ruleset.",
      "type": "object",
      "required": [
        "dnsResolverOutboundEndpoints"
      ],
      "properties": {
        "dnsResolverOutboundEndpoints": {
          "description": "The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "resourceGuid": {
          "description": "The resourceGuid for the DNS forwarding ruleset.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsForwardingRuleset": {
      "description": "Describes a DNS forwarding ruleset.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the DNS forwarding ruleset.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS forwarding ruleset.",
          "$ref": "#/definitions/DnsForwardingRulesetProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsForwardingRulesetPatch": {
      "description": "Describes a DNS forwarding ruleset PATCH operation.",
      "type": "object",
      "properties": {
        "dnsResolverOutboundEndpoints": {
          "description": "The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for DNS Resolver."
        }
      }
    },
    "DnsForwardingRulesetListResult": {
      "description": "The response to an enumeration operation on DNS forwarding rulesets.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS forwarding rulesets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsForwardingRuleset"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ForwardingRuleProperties": {
      "description": "Represents the properties of a forwarding rule within a DNS forwarding ruleset.",
      "type": "object",
      "required": [
        "domainName",
        "targetDnsServers"
      ],
      "properties": {
        "domainName": {
          "description": "The domain name for the forwarding rule.",
          "type": "string"
        },
        "targetDnsServers": {
          "description": "DNS servers to forward the DNS query to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetDnsServer"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "description": "Metadata attached to the forwarding rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "forwardingRuleState": {
          "type": "string",
          "description": "The state of forwarding rule.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ForwardingRuleState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the forwarding rule. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "ForwardingRule": {
      "description": "Describes a forwarding rule within a DNS forwarding ruleset.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the forwarding rule.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the forwarding rule.",
          "$ref": "#/definitions/ForwardingRuleProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ForwardingRulePatchProperties": {
      "description": "Represents the updatable properties of a forwarding rule within a DNS forwarding ruleset.",
      "type": "object",
      "properties": {
        "targetDnsServers": {
          "description": "DNS servers to forward the DNS query to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetDnsServer"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "description": "Metadata attached to the forwarding rule.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "forwardingRuleState": {
          "type": "string",
          "description": "The state of forwarding rule.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Enabled",
          "x-ms-enum": {
            "name": "ForwardingRuleState",
            "modelAsString": true
          }
        }
      }
    },
    "ForwardingRulePatch": {
      "description": "Describes a forwarding rule for PATCH operation.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Updatable properties of the forwarding rule.",
          "$ref": "#/definitions/ForwardingRulePatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ForwardingRuleListResult": {
      "description": "The response to an enumeration operation on forwarding rules within a DNS forwarding ruleset.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the forwarding rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForwardingRule"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkLinkProperties": {
      "description": "Represents the properties of a virtual network link.",
      "type": "object",
      "required": [
        "virtualNetwork"
      ],
      "properties": {
        "virtualNetwork": {
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "$ref": "#/definitions/SubResource"
        },
        "metadata": {
          "description": "Metadata attached to the virtual network link.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkLink": {
      "description": "Describes a virtual network link.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the virtual network link.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the virtual network link.",
          "$ref": "#/definitions/VirtualNetworkLinkProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualNetworkLinkPatchProperties": {
      "description": "Represents the updatable properties of the virtual network link.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata attached to the virtual network link.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualNetworkLinkPatch": {
      "description": "Describes a virtual network link for PATCH operation.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Updatable properties of the virtual network link.",
          "$ref": "#/definitions/VirtualNetworkLinkPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualNetworkLinkListResult": {
      "description": "The response to an enumeration operation on virtual network links.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the virtual network links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkLink"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpConfiguration": {
      "description": "IP configuration.",
      "type": "object",
      "required": [
        "subnet"
      ],
      "properties": {
        "subnet": {
          "description": "The reference to the subnet bound to the IP configuration.",
          "$ref": "#/definitions/SubResource"
        },
        "privateIpAddress": {
          "description": "Private IP address of the IP configuration.",
          "type": "string"
        },
        "privateIpAllocationMethod": {
          "description": "Private IP address allocation method.",
          "type": "string",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "default": "Dynamic",
          "x-ms-enum": {
            "name": "IpAllocationMethod",
            "modelAsString": true
          }
        }
      }
    },
    "TargetDnsServer": {
      "description": "Describes a server to forward the DNS queries to.",
      "type": "object",
      "required": [
        "ipAddress"
      ],
      "properties": {
        "ipAddress": {
          "description": "DNS server IP address.",
          "type": "string"
        },
        "port": {
          "description": "DNS server port.",
          "type": "integer",
          "format": "int32",
          "default": 53
        }
      }
    },
    "ProvisioningState": {
      "description": "The current provisioning state of the resource.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceGuid": {
      "type": "string",
      "description": "The Guid property of the resource."
    },
    "SubResourceListResult": {
      "description": "The response to an enumeration operation on sub-resources.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the sub-resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubResource": {
      "description": "Reference to another ARM resource.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    },
    "VirtualNetworkDnsForwardingRulesetListResult": {
      "description": "The response to an enumeration operation on Virtual Network DNS Forwarding Ruleset.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the Virtual Network DNS Forwarding Ruleset.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkDnsForwardingRuleset"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkLinkSubResourceProperties": {
      "description": "The reference to the virtual network link that associates between the DNS forwarding ruleset and virtual network.",
      "type": "object",
      "properties": {
        "virtualNetworkLink": {
          "description": "The reference to the virtual network link.",
          "$ref": "#/definitions/SubResource"
        }
      }
    },
    "VirtualNetworkDnsForwardingRuleset": {
      "description": "Reference to DNS forwarding ruleset and associated virtual network link.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "DNS Forwarding Ruleset Resource ID."
        },
        "properties": {
          "description": "Properties of the virtual network link sub-resource reference.",
          "$ref": "#/definitions/VirtualNetworkLinkSubResourceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudError": {
      "description": "An error message",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error message body",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "description": "The body of an error message",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code",
          "type": "string"
        },
        "message": {
          "description": "A description of what caused the error",
          "type": "string"
        },
        "target": {
          "description": "The target resource of the error message",
          "type": "string"
        },
        "details": {
          "description": "Extra error information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-external": true
    },
    "DnsResolverPolicyProperties": {
      "description": "Represents the properties of a DNS resolver policy.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The current provisioning state of the DNS resolver policy. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState"
        },
        "resourceGuid": {
          "description": "The resourceGuid property of the DNS resolver policy resource.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceGuid"
        }
      }
    },
    "DnsResolverPolicy": {
      "description": "Describes a DNS resolver policy.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver policy.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS resolver policy.",
          "$ref": "#/definitions/DnsResolverPolicyProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverPolicyPatch": {
      "description": "Describes a DNS resolver policy for PATCH operation.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for DNS resolver policy."
        }
      }
    },
    "DnsResolverPolicyListResult": {
      "description": "The response to an enumeration operation on DNS resolver policies.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolver policies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolverPolicy"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsSecurityRuleProperties": {
      "description": "Represents the properties of a DNS security rule.",
      "type": "object",
      "required": [
        "priority",
        "dnsResolverDomainLists",
        "action"
      ],
      "properties": {
        "priority": {
          "description": "The priority of the DNS security rule.",
          "type": "integer",
          "format": "int32",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "action": {
          "description": "The action to take on DNS requests that match the DNS security rule.",
          "$ref": "#/definitions/DnsSecurityRuleAction"
        },
        "dnsResolverDomainLists": {
          "description": "DNS resolver policy domains lists that the DNS security rule applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "dnsSecurityRuleState": {
          "type": "string",
          "description": "The state of DNS security rule.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DnsSecurityRuleState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS security rule. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "DnsSecurityRule": {
      "description": "Describes a DNS security rule.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the DNS security rule.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS security rule.",
          "$ref": "#/definitions/DnsSecurityRuleProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsSecurityRulePatchProperties": {
      "description": "Represents the updatable properties of a DNS security rule.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action to take on DNS requests that match the DNS security rule.",
          "$ref": "#/definitions/DnsSecurityRuleAction"
        },
        "dnsResolverDomainLists": {
          "description": "DNS resolver policy domains lists that the DNS security rule applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "dnsSecurityRuleState": {
          "type": "string",
          "description": "The state of DNS security rule.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DnsSecurityRuleState",
            "modelAsString": true
          }
        },
        "priority": {
          "description": "The priority of the DNS security rule.",
          "type": "integer",
          "format": "int32",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        }
      }
    },
    "DnsSecurityRulePatch": {
      "description": "Describes a DNS security rule for PATCH operation.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Updatable properties of the DNS security rule.",
          "$ref": "#/definitions/DnsSecurityRulePatchProperties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for DNS security rule."
        }
      }
    },
    "DnsSecurityRuleListResult": {
      "description": "The response to an enumeration operation on DNS security rules within a DNS resolver policy.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS security rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsSecurityRule"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsSecurityRuleAction": {
      "description": "The action to take on DNS requests that match the DNS security rule.",
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string",
          "description": "The type of action to take.",
          "enum": [
            "Allow",
            "Alert",
            "Block"
          ],
          "x-ms-enum": {
            "name": "actionType",
            "modelAsString": true
          }
        }
      }
    },
    "DnsResolverPolicyVirtualNetworkLinkProperties": {
      "description": "Represents the properties of a DNS resolver policy virtual network link.",
      "type": "object",
      "required": [
        "virtualNetwork"
      ],
      "properties": {
        "virtualNetwork": {
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "$ref": "#/definitions/SubResource"
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS resolver policy virtual network link. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "DnsResolverPolicyVirtualNetworkLink": {
      "description": "Describes a DNS resolver policy virtual network link.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver policy virtual network link.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS resolver policy virtual network link.",
          "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverPolicyVirtualNetworkLinkPatch": {
      "description": "Describes a DNS resolver policy virtual network link for PATCH operation.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for the DNS resolver policy virtual network link."
        }
      }
    },
    "DnsResolverPolicyVirtualNetworkLinkListResult": {
      "description": "The response to an enumeration operation on DNS resolver policy virtual network links.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolver policy virtual network links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsResolverDomainListProperties": {
      "description": "Represents the properties of a DNS resolver domain list.",
      "type": "object",
      "properties": {
        "domains": {
          "description": "The domains in the domain list. Will be null if user is using large domain list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domainsUrl": {
          "description": "The URL for bulk upload or download for domain lists containing larger set of domains. This will be populated if domains is empty or null.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS resolver domain list. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState"
        },
        "resourceGuid": {
          "description": "The resourceGuid property of the DNS resolver domain list resource.",
          "readOnly": true,
          "$ref": "#/definitions/ResourceGuid"
        }
      }
    },
    "DnsResolverDomainList": {
      "description": "Describes a DNS resolver domain list.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver domain list.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the DNS resolver domain list.",
          "$ref": "#/definitions/DnsResolverDomainListProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverDomainListPatchProperties": {
      "description": "Represents the updatable properties of a DNS resolver domain list.",
      "type": "object",
      "properties": {
        "domains": {
          "description": "The domains in the domain list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DnsResolverDomainListPatch": {
      "description": "Describes a DNS resolver domain list for PATCH operation.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Updatable properties of the DNS resolver domain list.",
          "$ref": "#/definitions/DnsResolverDomainListPatchProperties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Tags for DNS resolver domain list."
        }
      }
    },
    "DnsResolverDomainListListResult": {
      "description": "The response to an enumeration operation on DNS resolver domain lists.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolver domain lists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolverDomainList"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsResolverDomainListBulkProperties": {
      "description": "Describes DNS resolver domain list properties for bulk UPLOAD or DOWNLOAD operations.",
      "type": "object",
      "required": [
        "storageUrl",
        "action"
      ],
      "properties": {
        "storageUrl": {
          "description": "The storage account blob file URL to be used in the bulk upload or download request of DNS resolver domain list.",
          "type": "string"
        },
        "action": {
          "description": "The action to take in the request, Upload or Download.",
          "$ref": "#/definitions/DnsResolverDomainListBulkActionType"
        }
      }
    },
    "DnsResolverDomainListBulk": {
      "description": "Describes a DNS resolver domain list for bulk UPLOAD or DOWNLOAD operations.",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "Properties of the DNS resolver domain list upload or download request.",
          "$ref": "#/definitions/DnsResolverDomainListBulkProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "DnsResolverDomainListBulkActionType": {
      "description": "The action type in requests for bulk upload or download of a DNS resolver domain list.",
      "type": "string",
      "enum": [
        "Upload",
        "Download"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}