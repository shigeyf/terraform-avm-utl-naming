{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DeviceRegistry",
    "version": "2024-11-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.DeviceRegistry/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Operations": {
            "$ref": "./examples/List_Operations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "operationId": "AssetEndpointProfiles_ListBySubscription",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "List AssetEndpointProfile resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_AssetEndpointProfiles_Subscription": {
            "$ref": "./examples/List_AssetEndpointProfiles_Subscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assets": {
      "get": {
        "operationId": "Assets_ListBySubscription",
        "tags": [
          "Assets"
        ],
        "description": "List Asset resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Assets_Subscription": {
            "$ref": "./examples/List_Assets_Subscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/billingContainers": {
      "get": {
        "operationId": "BillingContainers_ListBySubscription",
        "tags": [
          "BillingContainers"
        ],
        "description": "List BillingContainer resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BillingContainerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_BillingContainers_Subscription": {
            "$ref": "./examples/List_BillingContainers_Subscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/billingContainers/{billingContainerName}": {
      "get": {
        "operationId": "BillingContainers_Get",
        "tags": [
          "BillingContainers"
        ],
        "description": "Get a BillingContainer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "billingContainerName",
            "in": "path",
            "description": "Name of the billing container.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BillingContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_BillingContainer": {
            "$ref": "./examples/Get_BillingContainer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "tags": [
          "OperationStatus"
        ],
        "description": "Returns the current status of an async operation.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_OperationStatus": {
            "$ref": "./examples/Get_OperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "operationId": "AssetEndpointProfiles_ListByResourceGroup",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "List AssetEndpointProfile resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_AssetEndpointProfiles_ResourceGroup": {
            "$ref": "./examples/List_AssetEndpointProfiles_ResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/{assetEndpointProfileName}": {
      "get": {
        "operationId": "AssetEndpointProfiles_Get",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Get a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_AssetEndpointProfile": {
            "$ref": "./examples/Get_AssetEndpointProfile.json"
          },
          "Get_AssetEndpointProfile_With_SyncStatus": {
            "$ref": "./examples/Get_AssetEndpointProfile_With_SyncStatus.json"
          }
        }
      },
      "put": {
        "operationId": "AssetEndpointProfiles_CreateOrReplace",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Create a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AssetEndpointProfile' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "201": {
            "description": "Resource 'AssetEndpointProfile' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create_AssetEndpointProfile": {
            "$ref": "./examples/Create_AssetEndpointProfile.json"
          },
          "Create_AssetEndpointProfile_With_DiscoveredAepRef": {
            "$ref": "./examples/Create_AssetEndpointProfile_With_DiscoveredAepRef.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AssetEndpointProfiles_Update",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Update a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_AssetEndpointProfile": {
            "$ref": "./examples/Update_AssetEndpointProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AssetEndpointProfiles_Delete",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Delete a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_AssetEndpointProfile": {
            "$ref": "./examples/Delete_AssetEndpointProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets": {
      "get": {
        "operationId": "Assets_ListByResourceGroup",
        "tags": [
          "Assets"
        ],
        "description": "List Asset resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Assets_ResourceGroup": {
            "$ref": "./examples/List_Assets_ResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets/{assetName}": {
      "get": {
        "operationId": "Assets_Get",
        "tags": [
          "Assets"
        ],
        "description": "Get a Asset",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_Asset": {
            "$ref": "./examples/Get_Asset.json"
          },
          "Get_Asset_With_SyncStatus": {
            "$ref": "./examples/Get_Asset_With_SyncStatus.json"
          }
        }
      },
      "put": {
        "operationId": "Assets_CreateOrReplace",
        "tags": [
          "Assets"
        ],
        "description": "Create a Asset",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Asset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "201": {
            "description": "Resource 'Asset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Asset"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create_Asset_With_DiscoveredAssetRefs": {
            "$ref": "./examples/Create_Asset_With_DiscoveredAssetRef.json"
          },
          "Create_Asset_With_ExternalAssetId": {
            "$ref": "./examples/Create_Asset_With_ExternalAssetId.json"
          },
          "Create_Asset_Without_DisplayName": {
            "$ref": "./examples/Create_Asset_Without_DisplayName.json"
          },
          "Create_Asset_Without_ExternalAssetId": {
            "$ref": "./examples/Create_Asset_Without_ExternalAssetId.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Assets_Update",
        "tags": [
          "Assets"
        ],
        "description": "Update a Asset",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_Asset": {
            "$ref": "./examples/Update_Asset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Assets_Delete",
        "tags": [
          "Assets"
        ],
        "description": "Delete a Asset",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_Asset": {
            "$ref": "./examples/Delete_Asset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "description": "Asset definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetEndpointProfile": {
      "type": "object",
      "description": "Asset Endpoint Profile definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetEndpointProfileListResult": {
      "type": "object",
      "description": "The response of a AssetEndpointProfile list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AssetEndpointProfile items on this page",
          "items": {
            "$ref": "#/definitions/AssetEndpointProfile"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AssetEndpointProfileProperties": {
      "type": "object",
      "description": "Defines the Asset Endpoint Profile properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "targetAddress": {
          "type": "string",
          "format": "uri",
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration."
        },
        "endpointProfileType": {
          "type": "string",
          "description": "Defines the configuration for the connector type that is being used with the endpoint profile."
        },
        "authentication": {
          "$ref": "#/definitions/Authentication",
          "description": "Defines the client authentication mechanism to the server."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
        },
        "discoveredAssetEndpointProfileRef": {
          "type": "string",
          "description": "Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "status": {
          "$ref": "#/definitions/AssetEndpointProfileStatus",
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "targetAddress",
        "endpointProfileType"
      ]
    },
    "AssetEndpointProfileStatus": {
      "type": "object",
      "description": "Defines the asset endpoint profile status properties.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array object to transfer and persist errors that originate from the Edge.",
          "items": {
            "$ref": "#/definitions/AssetEndpointProfileStatusError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "AssetEndpointProfileStatusError": {
      "type": "object",
      "description": "Defines the asset endpoint profile status error properties.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Error code for classification of errors (ex: 400, 404, 500, etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human readable helpful error message to provide additional context for error (ex: \u201ctargetAddress 'foo' is not a valid url\u201d).",
          "readOnly": true
        }
      }
    },
    "AssetEndpointProfileUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AssetEndpointProfile.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AssetEndpointProfileUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AssetEndpointProfile.",
      "properties": {
        "targetAddress": {
          "type": "string",
          "format": "uri",
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration."
        },
        "endpointProfileType": {
          "type": "string",
          "description": "Defines the configuration for the connector type that is being used with the endpoint profile."
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationUpdate",
          "description": "Defines the client authentication mechanism to the server."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
        }
      }
    },
    "AssetListResult": {
      "type": "object",
      "description": "The response of a Asset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Asset items on this page",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AssetProperties": {
      "type": "object",
      "description": "Defines the asset properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled/Disabled status of the asset."
        },
        "externalAssetId": {
          "type": "string",
          "description": "Asset id provided by the customer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "assetEndpointProfileRef": {
          "type": "string",
          "description": "A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified.",
          "readOnly": true
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer name."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model name."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Revision number of the hardware."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Revision number of the software."
        },
        "documentationUri": {
          "type": "string",
          "description": "Reference to the documentation."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "discoveredAssetRefs": {
          "type": "array",
          "description": "Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultTopic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the default topic information for the asset."
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/AssetStatus",
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "assetEndpointProfileRef"
      ]
    },
    "AssetStatus": {
      "type": "object",
      "description": "Defines the asset status properties.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array object to transfer and persist errors that originate from the Edge.",
          "items": {
            "$ref": "#/definitions/AssetStatusError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
          "readOnly": true
        },
        "datasets": {
          "type": "array",
          "description": "Array of dataset statuses that describe the status of each dataset.",
          "items": {
            "$ref": "#/definitions/AssetStatusDataset"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of event statuses that describe the status of each event.",
          "items": {
            "$ref": "#/definitions/AssetStatusEvent"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "AssetStatusDataset": {
      "type": "object",
      "description": "Defines the asset status dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dataset. Must be unique within the status.datasets array. This name is used to correlate between the spec and status dataset information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/MessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "AssetStatusError": {
      "type": "object",
      "description": "Defines the asset status error properties.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Error code for classification of errors (ex: 400, 404, 500, etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human readable helpful error message to provide additional context for error (ex: \u201ccapability Id 'foo' does not exist\u201d).",
          "readOnly": true
        }
      }
    },
    "AssetStatusEvent": {
      "type": "object",
      "description": "Defines the asset status event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event. Must be unique within the status.events array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/MessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "AssetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Asset.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AssetUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AssetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Asset.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enabled/Disabled status of the asset."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer name."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model name."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Revision number of the hardware."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Revision number of the software."
        },
        "documentationUri": {
          "type": "string",
          "description": "Reference to the documentation."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultTopic": {
          "$ref": "#/definitions/TopicUpdate",
          "description": "Object that describes the default topic information for the asset."
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Authentication": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the server.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentials",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509Credentials",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      },
      "required": [
        "method"
      ]
    },
    "AuthenticationUpdate": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the server.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentialsUpdate",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509CredentialsUpdate",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      }
    },
    "BillingContainer": {
      "type": "object",
      "description": "billingContainer Model as Azure resource whose sole purpose is to keep track of billables resources under a subscription.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BillingContainerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Resource ETag",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BillingContainerListResult": {
      "type": "object",
      "description": "The response of a BillingContainer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BillingContainer items on this page",
          "items": {
            "$ref": "#/definitions/BillingContainer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BillingContainerProperties": {
      "type": "object",
      "description": "Defines the billingContainer properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "DataPoint": {
      "type": "object",
      "description": "Defines the data point properties.",
      "properties": {
        "observabilityMode": {
          "type": "string",
          "description": "An indication of how the data point should be mapped to OpenTelemetry.",
          "default": "None",
          "enum": [
            "None",
            "Counter",
            "Gauge",
            "Histogram",
            "Log"
          ],
          "x-ms-enum": {
            "name": "DataPointObservabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No mapping to OpenTelemetry."
              },
              {
                "name": "Counter",
                "value": "Counter",
                "description": "Map as counter to OpenTelemetry."
              },
              {
                "name": "Gauge",
                "value": "Gauge",
                "description": "Map as gauge to OpenTelemetry."
              },
              {
                "name": "Histogram",
                "value": "Histogram",
                "description": "Map as histogram to OpenTelemetry."
              },
              {
                "name": "Log",
                "value": "Log",
                "description": "Map as log to OpenTelemetry."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataPointBase"
        }
      ]
    },
    "DataPointBase": {
      "type": "object",
      "description": "Defines the data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "Dataset": {
      "type": "object",
      "description": "Defines the dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dataset."
        },
        "datasetConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific JSON string that describes configuration for the specific dataset."
        },
        "topic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the topic information for the specific dataset."
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the dataset. Each data point can have per-data point configuration.",
          "items": {
            "$ref": "#/definitions/DataPoint"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "Event": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "observabilityMode": {
          "type": "string",
          "description": "An indication of how the event should be mapped to OpenTelemetry.",
          "default": "None",
          "enum": [
            "None",
            "Log"
          ],
          "x-ms-enum": {
            "name": "EventObservabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No mapping to OpenTelemetry."
              },
              {
                "name": "Log",
                "value": "Log",
                "description": "Map as log to OpenTelemetry."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventBase"
        }
      ]
    },
    "EventBase": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "eventNotifier": {
          "type": "string",
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset."
        },
        "eventConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "topic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the topic information for the specific event."
        }
      },
      "required": [
        "name",
        "eventNotifier"
      ]
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "name": {
          "type": "string",
          "description": "The extended location name."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "MessageSchemaReference": {
      "type": "object",
      "description": "Defines the message schema reference properties.",
      "properties": {
        "schemaRegistryNamespace": {
          "type": "string",
          "description": "The message schema registry namespace.",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "The message schema name.",
          "readOnly": true
        },
        "schemaVersion": {
          "type": "string",
          "description": "The message schema version.",
          "readOnly": true
        }
      },
      "required": [
        "schemaRegistryNamespace",
        "schemaName",
        "schemaVersion"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource has been accepted by the server."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is deleting."
          }
        ]
      },
      "readOnly": true
    },
    "Topic": {
      "type": "object",
      "description": "Object that describes the topic information.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The topic path for messages published to an MQTT broker."
        },
        "retain": {
          "type": "string",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
          "default": "Never",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "TopicRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        }
      },
      "required": [
        "path"
      ]
    },
    "TopicUpdate": {
      "type": "object",
      "description": "Object that describes the topic information.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The topic path for messages published to an MQTT broker."
        },
        "retain": {
          "type": "string",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
          "default": "Never",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "TopicRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        }
      }
    },
    "UsernamePasswordCredentials": {
      "type": "object",
      "description": "The credentials for authentication mode UsernamePassword.",
      "properties": {
        "usernameSecretName": {
          "type": "string",
          "description": "The name of the secret containing the username."
        },
        "passwordSecretName": {
          "type": "string",
          "description": "The name of the secret containing the password."
        }
      },
      "required": [
        "usernameSecretName",
        "passwordSecretName"
      ]
    },
    "UsernamePasswordCredentialsUpdate": {
      "type": "object",
      "description": "The credentials for authentication mode UsernamePassword.",
      "properties": {
        "usernameSecretName": {
          "type": "string",
          "description": "The name of the secret containing the username."
        },
        "passwordSecretName": {
          "type": "string",
          "description": "The name of the secret containing the password."
        }
      }
    },
    "X509Credentials": {
      "type": "object",
      "description": "The x509 certificate for authentication mode Certificate.",
      "properties": {
        "certificateSecretName": {
          "type": "string",
          "description": "The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
        }
      },
      "required": [
        "certificateSecretName"
      ]
    },
    "X509CredentialsUpdate": {
      "type": "object",
      "description": "The x509 certificate for authentication mode Certificate.",
      "properties": {
        "certificateSecretName": {
          "type": "string",
          "description": "The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}