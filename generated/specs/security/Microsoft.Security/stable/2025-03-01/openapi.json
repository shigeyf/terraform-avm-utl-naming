{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Security",
    "version": "2025-03-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/listAvailableAzureDevOpsOrgs": {
      "post": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of all Azure DevOps organizations accessible by the user token consumed by the connector.",
        "operationId": "AzureDevOpsOrgs_ListAvailable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrgListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAvailable_AzureDevOpsOrgs": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAvailableAzureDevOpsOrgs_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of Azure DevOps organizations onboarded to the connector.",
        "operationId": "AzureDevOpsOrgs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrgListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_AzureDevOpsOrgs": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAzureDevOpsOrgs_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored Azure DevOps organization resource.",
        "operationId": "AzureDevOpsOrgs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_AzureDevOpsOrgs": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetAzureDevOpsOrgs_example.json"
          }
        }
      },
      "put": {
        "tags": [
          "DevOps"
        ],
        "summary": "Creates or updates monitored Azure DevOps organization details.",
        "operationId": "AzureDevOpsOrgs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsOrg",
            "description": "The Azure DevOps organization resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creates or updates monitored Azure DevOps organization details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "CreateOrUpdate_AzureDevOpsOrgs": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateAzureDevOpsOrgs_example.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DevOps"
        ],
        "summary": "Updates monitored Azure DevOps organization details.",
        "operationId": "AzureDevOpsOrgs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsOrg",
            "description": "The Azure DevOps organization resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update_AzureDevOpsOrgs": {
            "$ref": "./examples/SecurityConnectorsDevOps/UpdateAzureDevOpsOrgs_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of Azure DevOps projects onboarded to the connector.",
        "operationId": "AzureDevOpsProjects_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps project details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProjectListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_AzureDevOpsProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAzureDevOpsProjects_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps project details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_AzureDevOpsProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetAzureDevOpsProjects_example.json"
          }
        }
      },
      "put": {
        "tags": [
          "DevOps"
        ],
        "summary": "Creates or updates a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsProject",
            "description": "The Azure DevOps project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creates or updates a monitored Azure DevOps project resource",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "CreateOrUpdate_AzureDevOpsProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateAzureDevOpsProjects_example.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DevOps"
        ],
        "summary": "Updates a monitored Azure DevOps project resource.",
        "operationId": "AzureDevOpsProjects_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsProject",
            "description": "The Azure DevOps project resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update_AzureDevOpsProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/UpdateAzureDevOpsProjects_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}/repos": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of Azure DevOps repositories onboarded to the connector.",
        "operationId": "AzureDevOpsRepos_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of Azure DevOps repository details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepositoryListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_AzureDevOpsRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAzureDevOpsRepos_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}/repos/{repoName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides Azure DevOps repository details",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_AzureDevOpsRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetAzureDevOpsRepos_example.json"
          }
        }
      },
      "put": {
        "tags": [
          "DevOps"
        ],
        "summary": "Creates or updates a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsRepository",
            "description": "The Azure DevOps repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creates or updates a monitored Azure DevOps repository resource",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "CreateOrUpdate_AzureDevOpsRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateAzureDevOpsRepos_example.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DevOps"
        ],
        "summary": "Updates a monitored Azure DevOps repository resource.",
        "operationId": "AzureDevOpsRepos_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OrgName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsRepository",
            "description": "The Azure DevOps repository resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepository"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update_AzureDevOpsRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/UpdateAzureDevOpsRepos_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "List DevOps Configurations.",
        "operationId": "DevOpsConfigurations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfigurationListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_DevOpsConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListDevOpsConfigurations_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Gets a DevOps Configuration.",
        "operationId": "DevOpsConfigurations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_DevOpsConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetDevOpsConfigurations_example.json"
          },
          "Get_DevOpsConfigurations_WithCapabilities": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetDevOpsConfigurationsWithCapabilities_example.json"
          },
          "Get_DevOpsConfigurations_WithAgentlessConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetDevOpsConfigurationsWithAgentlessConfigurations_example.json"
          }
        }
      },
      "put": {
        "tags": [
          "DevOps"
        ],
        "summary": "Creates or updates a DevOps Configuration.",
        "operationId": "DevOpsConfigurations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "devOpsConfiguration",
            "description": "The DevOps configuration resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "200": {
            "description": "Creates or updates a DevOps Configuration",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "CreateOrUpdate_DevOpsConfigurations_OnboardCurrentAndFuture": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateDevOpsConfigurationsOnboardCurrentAndFuture_example.json"
          },
          "CreateOrUpdate_DevOpsConfigurations_OnboardCurrentOnly": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateDevOpsConfigurationsOnboardCurrentOnly_example.json"
          },
          "CreateOrUpdate_DevOpsConfigurations_OnboardSelected": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateDevOpsConfigurationsOnboardSelected_example.json"
          },
          "CreateOrUpdate_DevOpsConfigurations_WithAgentlessConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/CreateOrUpdateDevOpsConfigurationsWithAgentlessConfigurations_example.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DevOps"
        ],
        "summary": "Updates a DevOps Configuration.",
        "operationId": "DevOpsConfigurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "devOpsConfiguration",
            "description": "The DevOps configuration resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DevOpsConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update_DevOpsConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/UpdateDevOpsConfigurations_example.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DevOps"
        ],
        "summary": "Deletes a DevOps Connector.",
        "operationId": "DevOpsConfigurations_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete_DevOpsConfigurations": {
            "$ref": "./examples/SecurityConnectorsDevOps/DeleteDevOpsConfigurations_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/listAvailableGitHubOwners": {
      "post": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of all GitHub owners accessible by the user token consumed by the connector.",
        "operationId": "GitHubOwners_ListAvailable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of GitHub owner resources",
            "schema": {
              "$ref": "#/definitions/GitHubOwnerListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAvailable_GitHubOwners": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAvailableGitHubOwners_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of GitHub owners onboarded to the connector.",
        "operationId": "GitHubOwners_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of GitHub owner resources",
            "schema": {
              "$ref": "#/definitions/GitHubOwnerListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_GitHubOwners": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListGitHubOwners_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored GitHub owner.",
        "operationId": "GitHubOwners_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitHub owner details",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_GitHubOwners": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetGitHubOwners_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}/repos": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of GitHub repositories onboarded to the connector.",
        "operationId": "GitHubRepos_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides list of GitHub repository resources",
            "schema": {
              "$ref": "#/definitions/GitHubRepositoryListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_GitHubRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListGitHubRepos_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitHubOwners/{ownerName}/repos/{repoName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored GitHub repository.",
        "operationId": "GitHubRepos_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OwnerName"
          },
          {
            "$ref": "#/parameters/RepoName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitHub repository details",
            "schema": {
              "$ref": "#/definitions/GitHubRepository"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_GitHubRepos": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetGitHubRepos_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/listAvailableGitLabGroups": {
      "post": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of all GitLab groups accessible by the user token consumed by the connector.",
        "operationId": "GitLabGroups_ListAvailable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Group details",
            "schema": {
              "$ref": "#/definitions/GitLabGroupListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAvailable_GitLabGroups": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListAvailableGitLabGroups_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a list of GitLab groups onboarded to the connector.",
        "operationId": "GitLabGroups_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Group details",
            "schema": {
              "$ref": "#/definitions/GitLabGroupListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_GitLabGroups": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListGitLabGroups_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored GitLab Group resource for a given fully-qualified name.",
        "operationId": "GitLabGroups_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitLab Group details",
            "schema": {
              "$ref": "#/definitions/GitLabGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_GitLabGroups": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetGitLabGroups_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/listSubgroups": {
      "post": {
        "tags": [
          "DevOps"
        ],
        "summary": "Gets nested subgroups of given GitLab Group which are onboarded to the connector.",
        "operationId": "GitLabSubgroups_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Group details for subgroups",
            "schema": {
              "$ref": "#/definitions/GitLabGroupListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_GitLabSubgroups": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListGitLabSubgroups_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/projects": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Gets a list of GitLab projects that are directly owned by given group and onboarded to the connector.",
        "operationId": "GitLabProjects_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides a list of GitLab Project details",
            "schema": {
              "$ref": "#/definitions/GitLabProjectListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List_GitLabProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/ListGitLabProjects_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/gitLabGroups/{groupFQName}/projects/{projectName}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Returns a monitored GitLab Project resource for a given fully-qualified group name and project name.",
        "operationId": "GitLabProjects_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/GroupFQName"
          },
          {
            "$ref": "#/parameters/ProjectName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Provides GitLab Project details",
            "schema": {
              "$ref": "#/definitions/GitLabProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_GitLabProjects": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetGitLabProjects_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/operationResults/{operationResultId}": {
      "get": {
        "tags": [
          "DevOps"
        ],
        "summary": "Get devops long running operation result.",
        "operationId": "DevOpsOperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConnectorName"
          },
          {
            "$ref": "#/parameters/OperationResultId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_DevOpsOperationResults_Succeeded": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetDevOpsOperationResultsSucceeded_example.json"
          },
          "Get_DevOpsOperationResults_Failed": {
            "$ref": "./examples/SecurityConnectorsDevOps/GetDevOpsOperationResultsFailed_example.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SecurityConnectorName": {
      "in": "path",
      "name": "securityConnectorName",
      "description": "The security connector name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OrgName": {
      "in": "path",
      "name": "orgName",
      "description": "The Azure DevOps organization name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProjectName": {
      "in": "path",
      "name": "projectName",
      "description": "The project name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RepoName": {
      "in": "path",
      "name": "repoName",
      "description": "The repository name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OwnerName": {
      "in": "path",
      "name": "ownerName",
      "description": "The GitHub owner name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GroupFQName": {
      "in": "path",
      "name": "groupFQName",
      "description": "The GitLab group fully-qualified name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationResultId": {
      "in": "path",
      "name": "operationResultId",
      "description": "The operation result Id.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of an ongoing async operation.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of Azure region.",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ActionableRemediation": {
      "description": "Configuration payload for PR Annotations.",
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ActionableRemediationState"
        },
        "categoryConfigurations": {
          "description": "Gets or sets list of categories and severity levels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          },
          "x-ms-identifiers": []
        },
        "branchConfiguration": {
          "$ref": "#/definitions/TargetBranchConfiguration"
        },
        "inheritFromParentState": {
          "$ref": "#/definitions/InheritFromParentState"
        }
      }
    },
    "ActionableRemediationState": {
      "description": "ActionableRemediation Setting.\r\nNone - the setting was never set.\r\nEnabled - ActionableRemediation is enabled.\r\nDisabled - ActionableRemediation is disabled.",
      "enum": [
        "None",
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ActionableRemediationState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AgentlessConfiguration": {
      "description": "Details about Agentless configuration.",
      "type": "object",
      "properties": {
        "agentlessEnabled": {
          "$ref": "#/definitions/AgentlessEnablement"
        },
        "agentlessAutoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "scanners": {
          "description": "Gets or sets the scanners for the connector.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inventoryListType": {
          "$ref": "#/definitions/InventoryListKind"
        },
        "inventoryList": {
          "description": "Gets or sets the inventory list for inclusion or exclusion from Agentless.\r\nWill be ignored if agentless auto-discovery is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryList"
          }
        }
      }
    },
    "AgentlessEnablement": {
      "description": "Agentless Enablement states.",
      "enum": [
        "Disabled",
        "Enabled",
        "NotApplicable"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AgentlessEnablement",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AnnotateDefaultBranchState": {
      "description": "Configuration of PR Annotations on default branch.\r\n\r\nEnabled - PR Annotations are enabled on the resource's default branch.\r\nDisabled - PR Annotations are disabled on the resource's default branch.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AnnotateDefaultBranchState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "Authorization": {
      "description": "Authorization payload.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.\r\n\r\nOnly used during PUT/PATCH operations. The secret is cleared during GET.",
          "type": "string",
          "example": "00000000000000000000.",
          "x-ms-secret": true
        }
      }
    },
    "AutoDiscovery": {
      "description": "AutoDiscovery states.",
      "enum": [
        "Disabled",
        "Enabled",
        "NotApplicable"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoDiscovery",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AzureDevOpsOrg": {
      "description": "Azure DevOps Organization resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/AzureDevOpsOrgProperties"
        }
      }
    },
    "AzureDevOpsOrgListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsOrg"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsOrgProperties": {
      "description": "Azure DevOps Organization properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "AzureDevOpsOrganizationConfiguration": {
      "description": "AzureDevOps Org Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "projectConfigs": {
          "description": "AzureDevOps Project Inventory Configuration.\r\nDictionary of AzureDevOps project name to desired project configuration.\r\nIf AutoDiscovery is Enabled, this field should be empty or null.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureDevOpsProjectConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "AzureDevOpsProject": {
      "description": "Azure DevOps Project resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/AzureDevOpsProjectProperties"
        }
      }
    },
    "AzureDevOpsProjectConfiguration": {
      "description": "AzureDevOps Project Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repositoryConfigs": {
          "description": "AzureDevOps Repository Inventory Configuration.\r\nDictionary of AzureDevOps repository name to desired repository configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "AzureDevOpsProjectListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsProject"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsProjectProperties": {
      "description": "Azure DevOps Project properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "parentOrgName": {
          "description": "Gets or sets parent Azure DevOps Organization name.",
          "type": "string"
        },
        "projectId": {
          "description": "Gets or sets Azure DevOps Project id.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "AzureDevOpsRepository": {
      "description": "Azure DevOps Repository resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/AzureDevOpsRepositoryProperties"
        }
      }
    },
    "AzureDevOpsRepositoryListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsRepository"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsRepositoryProperties": {
      "description": "Azure DevOps Repository properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "parentOrgName": {
          "description": "Gets or sets parent Azure DevOps Organization name.",
          "type": "string"
        },
        "parentProjectName": {
          "description": "Gets or sets parent Azure DevOps Project name.",
          "type": "string"
        },
        "repoId": {
          "description": "Gets or sets Azure DevOps Repository id.",
          "type": "string",
          "readOnly": true
        },
        "repoUrl": {
          "description": "Gets or sets Azure DevOps Repository url.",
          "type": "string",
          "readOnly": true
        },
        "visibility": {
          "description": "Gets or sets Azure DevOps repository visibility, whether it is public or private etc.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "BaseResourceConfiguration": {
      "description": "Base Resource Inventory configuration changes.",
      "type": "object",
      "properties": {
        "desiredOnboardingState": {
          "$ref": "#/definitions/DesiredOnboardingState"
        }
      }
    },
    "CategoryConfiguration": {
      "description": "Severity level per category configuration for PR Annotations.",
      "type": "object",
      "properties": {
        "minimumSeverityLevel": {
          "description": "Gets or sets minimum severity level for a given category.",
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/RuleCategory"
        }
      }
    },
    "DesiredOnboardingState": {
      "description": "Onboarding states.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DesiredOnboardingState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "DevOpsCapability": {
      "description": "Details about DevOps capability.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets the name of the DevOps capability.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Gets the value of the DevOps capability.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DevOpsConfiguration": {
      "description": "DevOps Configuration resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/DevOpsConfigurationProperties"
        }
      }
    },
    "DevOpsConfigurationListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevOpsConfiguration"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "DevOpsConfigurationProperties": {
      "description": "DevOps Configuration properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "authorization": {
          "$ref": "#/definitions/Authorization"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "topLevelInventoryList": {
          "description": "List of top-level inventory to select when AutoDiscovery is disabled.\r\nThis field is ignored when AutoDiscovery is enabled.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "List of capabilities assigned to the DevOps configuration during the discovery process.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevOpsCapability"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "agentlessConfiguration": {
          "$ref": "#/definitions/AgentlessConfiguration"
        }
      }
    },
    "DevOpsProvisioningState": {
      "description": "The provisioning state of the resource.\r\n\r\nPending - Provisioning pending.\r\nFailed - Provisioning failed.\r\nSucceeded - Successful provisioning.\r\nCanceled - Provisioning canceled.\r\nPendingDeletion - Deletion pending.\r\nDeletionSuccess - Deletion successful.\r\nDeletionFailure - Deletion failure.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "PendingDeletion",
        "DeletionSuccess",
        "DeletionFailure"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DevOpsProvisioningState",
        "modelAsString": true,
        "modelAsExtensible": true
      },
      "readOnly": true
    },
    "GitHubOwner": {
      "description": "GitHub Owner resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/GitHubOwnerProperties"
        }
      }
    },
    "GitHubOwnerConfiguration": {
      "description": "GitHub Owner Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repositoryConfigs": {
          "description": "GitHub Repository Inventory Configuration.\r\nDictionary of GitHub repository name to desired repository configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "GitHubOwnerListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubOwner"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubOwnerProperties": {
      "description": "GitHub Owner properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "ownerUrl": {
          "description": "Gets or sets GitHub Owner url.",
          "type": "string",
          "readOnly": true
        },
        "gitHubInternalId": {
          "description": "Gets or sets internal GitHub id.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "GitHubRepository": {
      "description": "GitHub Repository resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/GitHubRepositoryProperties"
        }
      }
    },
    "GitHubRepositoryListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepository"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubRepositoryProperties": {
      "description": "GitHub Repository properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "repoId": {
          "description": "Gets or sets GitHub Repository id.\r\n\r\nThis is a numeric id defined by Github.\r\nEg: \"123456\".",
          "type": "string",
          "readOnly": true
        },
        "repoName": {
          "description": "Gets or sets GitHub Repository name.\r\nEg: \"new-repo-1\".",
          "type": "string",
          "readOnly": true
        },
        "repoFullName": {
          "description": "Gets or sets GitHub Full Name.\r\nRepository name, prefixed with Owner name.\r\nEg: \"my-org/new-repo-1\".",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        },
        "repoUrl": {
          "description": "Gets or sets GitHub Repository url.",
          "type": "string",
          "readOnly": true
        },
        "parentOwnerName": {
          "description": "Gets or sets parent GitHub Owner name.",
          "type": "string"
        }
      }
    },
    "GitLabGroup": {
      "description": "GitLab Group resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/GitLabGroupProperties"
        }
      }
    },
    "GitLabGroupConfiguration": {
      "description": "GitLab Group Inventory Configuration.",
      "type": "object",
      "properties": {
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "projectConfigs": {
          "description": "GitLab Project Inventory Configuration.\r\nDictionary of GitLab fully-qualified project name to desired project configuration.\r\nIf AutoDiscovery is Enabled, this field should be null or empty.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BaseResourceConfiguration"
          },
          "x-nullable": true
        }
      }
    },
    "GitLabGroupListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitLabGroup"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitLabGroupProperties": {
      "description": "GitLab Group properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "fullyQualifiedName": {
          "description": "Gets or sets the fully-qualified name of the Group object.\r\n\r\nThis contains the entire namespace hierarchy where namespaces are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedFriendlyName": {
          "description": "Gets or sets the human readable fully-qualified name of the Group object.\r\n\r\nThis contains the entire namespace hierarchy as seen on GitLab UI where namespaces are separated by the '/' character.",
          "type": "string",
          "readOnly": true
        },
        "url": {
          "description": "Gets or sets the url of the GitLab Group.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "GitLabProject": {
      "description": "GitLab Project resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/GitLabProjectProperties"
        }
      }
    },
    "GitLabProjectListResponse": {
      "description": "List of RP resources which supports pagination.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitLabProject"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitLabProjectProperties": {
      "description": "GitLab Project properties.",
      "type": "object",
      "properties": {
        "provisioningStatusMessage": {
          "description": "Gets the resource status message.",
          "type": "string",
          "example": "Resource onboarded successful.",
          "readOnly": true
        },
        "provisioningStatusUpdateTimeUtc": {
          "format": "date-time",
          "description": "Gets the time when resource was last checked.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DevOpsProvisioningState"
        },
        "fullyQualifiedName": {
          "description": "Gets or sets the fully-qualified name of the project object.\r\n\r\nThis contains the entire hierarchy where entities are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedFriendlyName": {
          "description": "Gets or sets the human readable fully-qualified name of the Project object.\r\n\r\nThis contains the entire namespace hierarchy as seen on GitLab UI where entities are separated by the '/' character.",
          "type": "string",
          "readOnly": true
        },
        "fullyQualifiedParentGroupName": {
          "description": "Gets or sets the fully-qualified name of the project's parent group object.\r\n\r\nThis contains the entire hierarchy where namespaces are separated by the '$' character.",
          "type": "string",
          "readOnly": true
        },
        "url": {
          "description": "Gets or sets the url of the GitLab Project.",
          "type": "string",
          "readOnly": true
        },
        "onboardingState": {
          "$ref": "#/definitions/OnboardingState"
        }
      }
    },
    "InheritFromParentState": {
      "description": "Update Settings.\r\n\r\nEnabled - Resource should inherit configurations from parent.\r\nDisabled - Resource should not inherit configurations from parent.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InheritFromParentState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "InventoryKind": {
      "description": "Types for inventory kind.",
      "enum": [
        "AzureDevOpsOrganization",
        "AzureDevOpsProject",
        "AzureDevOpsRepository",
        "GitHubOwner",
        "GitHubRepository"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InventoryKind",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "InventoryList": {
      "description": "Model for inventory to be included or excluded from Agentless.",
      "type": "object",
      "properties": {
        "inventoryKind": {
          "$ref": "#/definitions/InventoryKind"
        },
        "value": {
          "description": "Gets or sets the value for inventory type.",
          "type": "string"
        }
      }
    },
    "InventoryListKind": {
      "description": "Types for inventory list.",
      "enum": [
        "Inclusion",
        "Exclusion"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InventoryListKind",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "OnboardingState": {
      "description": "Details about resource onboarding status across all connectors.\r\n\r\nOnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.\r\nOnboarded - this resource has already been onboarded by the specified connector.\r\nNotOnboarded - this resource has not been onboarded to any connector.\r\nNotApplicable - the onboarding state is not applicable to the current endpoint.",
      "enum": [
        "NotApplicable",
        "OnboardedByOtherConnector",
        "Onboarded",
        "NotOnboarded"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OnboardingState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "RuleCategory": {
      "description": "Rule categories.\r\nCode - code scanning results.\r\nArtifact scanning results.\r\nDependencies scanning results.\r\nIaC results.\r\nSecrets scanning results.\r\nContainer scanning results.",
      "enum": [
        "Code",
        "Artifacts",
        "Dependencies",
        "Secrets",
        "IaC",
        "Containers"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "TargetBranchConfiguration": {
      "description": "Repository branch configuration for PR Annotations.",
      "type": "object",
      "properties": {
        "branchNames": {
          "description": "Gets or sets branches that should have annotations.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "annotateDefaultBranch": {
          "$ref": "#/definitions/AnnotateDefaultBranchState"
        }
      }
    },
    "Resource": {
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureEntityResource": {
      "x-ms-client-name": "AzureEntityResource",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Etag."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "managedBy": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "kind": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. "
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          },
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Identity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "description": "Plan for the resource.",
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ],
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "x-ms-identifiers": [],
          "description": "The error additional info."
        }
      }
    },
    "ErrorResponse": {
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "Operation": {
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "type": "object",
          "properties": {
            "provider": {
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "type": "string",
          "readOnly": true,
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          }
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        }
      }
    },
    "OperationListResult": {
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of operations supported by the resource provider",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "description": "The current status of an async operation.",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "id": {
          "description": "Fully qualified ID for the async operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the async operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "type": "string"
        },
        "percentComplete": {
          "description": "Percent of the operation that is complete.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "description": "The start time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The end time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "operations": {
          "description": "The operations list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "description": "If present, details of the operation error.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "locationData": {
      "description": "Metadata pertaining to the geographic location of the resource.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 256,
          "description": "A canonical name for the geographic or physical location."
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "encryptionProperties": {
      "description": "Configuration of key for data encryption",
      "type": "object",
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identity": {
          "description": "The client ID of the identity which will be used to access key vault.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "description": "The check availability request body.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource for which availability needs to be checked.",
          "type": "string"
        },
        "type": {
          "description": "The resource type.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "description": "The check availability result.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Indicates if the resource name is available.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason why the given name is not available.",
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Detailed reason why the given name is available.",
          "type": "string"
        }
      }
    }
  }
}