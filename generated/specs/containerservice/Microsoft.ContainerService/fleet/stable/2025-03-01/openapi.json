{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ContainerService.fleet",
    "version": "2025-03-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.ContainerService/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the operations for the provider.": {
            "$ref": "./examples/Operations_List.json"
          },
          "List the operations for the provider. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "List the operations for the provider. - generated by [MinimumSet] rule": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/fleets": {
      "get": {
        "operationId": "Fleets_ListBySubscription",
        "tags": [
          "Fleets"
        ],
        "description": "Lists fleets in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Fleet resources in a subscription.": {
            "$ref": "./examples/Fleets_ListBySub.json"
          },
          "Lists the Fleet resources in a subscription. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets": {
      "get": {
        "operationId": "Fleets_ListByResourceGroup",
        "tags": [
          "Fleets"
        ],
        "description": "Lists fleets in the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Fleet resources in a resource group.": {
            "$ref": "./examples/Fleets_ListByResourceGroup.json"
          },
          "Lists the Fleet resources in a resource group. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}": {
      "get": {
        "operationId": "Fleets_Get",
        "tags": [
          "Fleets"
        ],
        "description": "Gets a Fleet.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Fleet resource.": {
            "$ref": "./examples/Fleets_Get.json"
          },
          "Gets a Fleet resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Fleets_CreateOrUpdate",
        "tags": [
          "Fleets"
        ],
        "description": "Creates or updates a Fleet.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The request should only proceed if no entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Fleet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "201": {
            "description": "Resource 'Fleet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleet"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a Fleet resource with a long running operation.": {
            "$ref": "./examples/Fleets_CreateOrUpdate.json"
          },
          "Creates a Fleet resource with a long running operation. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Fleets_Update",
        "tags": [
          "Fleets"
        ],
        "description": "Update a Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a Fleet.": {
            "$ref": "./examples/Fleets_PatchTags.json"
          },
          "Update a Fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Fleets_Delete",
        "tags": [
          "Fleets"
        ],
        "description": "Delete a Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a Fleet resource asynchronously with a long running operation.": {
            "$ref": "./examples/Fleets_Delete.json"
          },
          "Deletes a Fleet resource asynchronously with a long running operation. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/autoUpgradeProfiles": {
      "get": {
        "operationId": "AutoUpgradeProfiles_ListByFleet",
        "tags": [
          "AutoUpgradeProfiles"
        ],
        "description": "List AutoUpgradeProfile resources by Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the AutoUpgradeProfile resources by fleet.": {
            "$ref": "./examples/AutoUpgradeProfiles_ListByFleet.json"
          },
          "Lists the AutoUpgradeProfile resources by fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/AutoUpgradeProfiles_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/autoUpgradeProfiles/{autoUpgradeProfileName}": {
      "get": {
        "operationId": "AutoUpgradeProfiles_Get",
        "tags": [
          "AutoUpgradeProfiles"
        ],
        "description": "Get a AutoUpgradeProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "autoUpgradeProfileName",
            "in": "path",
            "description": "The name of the AutoUpgradeProfile resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an AutoUpgradeProfile resource.": {
            "$ref": "./examples/AutoUpgradeProfiles_Get.json"
          },
          "Gets an AutoUpgradeProfile resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/AutoUpgradeProfiles_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AutoUpgradeProfiles_CreateOrUpdate",
        "tags": [
          "AutoUpgradeProfiles"
        ],
        "description": "Create a AutoUpgradeProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The request should only proceed if no entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "autoUpgradeProfileName",
            "in": "path",
            "description": "The name of the AutoUpgradeProfile resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AutoUpgradeProfile' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProfile"
            }
          },
          "201": {
            "description": "Resource 'AutoUpgradeProfile' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutoUpgradeProfile"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an AutoUpgradeProfile.": {
            "$ref": "./examples/AutoUpgradeProfiles_CreateOrUpdate.json"
          },
          "Create an AutoUpgradeProfile. - generated by [MaximumSet] rule": {
            "$ref": "./examples/AutoUpgradeProfiles_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AutoUpgradeProfiles_Delete",
        "tags": [
          "AutoUpgradeProfiles"
        ],
        "description": "Delete a AutoUpgradeProfile",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "autoUpgradeProfileName",
            "in": "path",
            "description": "The name of the AutoUpgradeProfile resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an AutoUpgradeProfile resource.": {
            "$ref": "./examples/AutoUpgradeProfiles_Delete.json"
          },
          "Delete an AutoUpgradeProfile resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/AutoUpgradeProfiles_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/autoUpgradeProfiles/{autoUpgradeProfileName}/generateUpdateRun": {
      "post": {
        "operationId": "AutoUpgradeProfileOperations_GenerateUpdateRun",
        "tags": [
          "AutoUpgradeProfileOperations"
        ],
        "description": "Generates an update run for a given auto upgrade profile.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "autoUpgradeProfileName",
            "in": "path",
            "description": "The name of the AutoUpgradeProfile resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "If-Match": {
                "type": "string",
                "description": "The request should only proceed if an entity matches this string."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutoUpgradeProfileOperations_GenerateUpdateRun_MaximumSet": {
            "$ref": "./examples/AutoUpgradeProfileOperations_GenerateUpdateRun_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/listCredentials": {
      "post": {
        "operationId": "Fleets_ListCredentials",
        "tags": [
          "Fleets"
        ],
        "description": "Lists the user credentials of a Fleet.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetCredentialResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the user credentials of a Fleet.": {
            "$ref": "./examples/Fleets_ListCredentialsResult.json"
          },
          "Lists the user credentials of a Fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_ListCredentials_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members": {
      "get": {
        "operationId": "FleetMembers_ListByFleet",
        "tags": [
          "FleetMembers"
        ],
        "description": "List FleetMember resources by Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMemberListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the members of a Fleet.": {
            "$ref": "./examples/FleetMembers_ListByFleet.json"
          },
          "Lists the members of a Fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetMembers_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/members/{fleetMemberName}": {
      "get": {
        "operationId": "FleetMembers_Get",
        "tags": [
          "FleetMembers"
        ],
        "description": "Get a FleetMember",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "description": "The name of the Fleet member resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a FleetMember resource.": {
            "$ref": "./examples/FleetMembers_Get.json"
          },
          "Gets a FleetMember resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetMembers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "FleetMembers_Create",
        "tags": [
          "FleetMembers"
        ],
        "description": "Create a FleetMember",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The request should only proceed if no entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "description": "The name of the Fleet member resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetMember' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "201": {
            "description": "Resource 'FleetMember' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a FleetMember resource with a long running operation.": {
            "$ref": "./examples/FleetMembers_Create.json"
          },
          "Creates a FleetMember resource with a long running operation. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetMembers_Create_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FleetMembers_Update",
        "tags": [
          "FleetMembers"
        ],
        "description": "Update a FleetMember",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "description": "The name of the Fleet member resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetMemberUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetMember"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Updates a FleetMember resource synchronously.": {
            "$ref": "./examples/FleetMembers_Update.json"
          },
          "Updates a FleetMember resource synchronously. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetMembers_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FleetMembers_Delete",
        "tags": [
          "FleetMembers"
        ],
        "description": "Delete a FleetMember",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "fleetMemberName",
            "in": "path",
            "description": "The name of the Fleet member resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a FleetMember resource asynchronously with a long running operation.": {
            "$ref": "./examples/FleetMembers_Delete.json"
          },
          "Deletes a FleetMember resource asynchronously with a long running operation. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetMembers_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns": {
      "get": {
        "operationId": "UpdateRuns_ListByFleet",
        "tags": [
          "UpdateRuns"
        ],
        "description": "List UpdateRun resources by Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateRunListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the UpdateRun resources by fleet.": {
            "$ref": "./examples/UpdateRuns_ListByFleet.json"
          },
          "Lists the UpdateRun resources by fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}": {
      "get": {
        "operationId": "UpdateRuns_Get",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Get a UpdateRun",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets an UpdateRun resource.": {
            "$ref": "./examples/UpdateRuns_Get.json"
          },
          "Gets an UpdateRun resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "UpdateRuns_CreateOrUpdate",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Create a UpdateRun",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The request should only proceed if no entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'UpdateRun' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "201": {
            "description": "Resource 'UpdateRun' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an UpdateRun.": {
            "$ref": "./examples/UpdateRuns_CreateOrUpdate.json"
          },
          "Create an UpdateRun. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "UpdateRuns_Delete",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Delete a UpdateRun",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an updateRun resource.": {
            "$ref": "./examples/UpdateRuns_Delete.json"
          },
          "Delete an updateRun resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/skip": {
      "post": {
        "operationId": "UpdateRuns_Skip",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Skips one or a combination of member/group/stage/afterStageWait(s) of an update run.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkipProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Skips one or more member/group/stage/afterStageWait(s) of an UpdateRun.": {
            "$ref": "./examples/UpdateRuns_Skip.json"
          },
          "Skips one or more member/group/stage/afterStageWait(s) of an UpdateRun. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_Skip_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/start": {
      "post": {
        "operationId": "UpdateRuns_Start",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Starts an UpdateRun.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Starts an UpdateRun.": {
            "$ref": "./examples/UpdateRuns_Start.json"
          },
          "Starts an UpdateRun. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_Start_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}/stop": {
      "post": {
        "operationId": "UpdateRuns_Stop",
        "tags": [
          "UpdateRuns"
        ],
        "description": "Stops an UpdateRun.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "description": "The name of the UpdateRun resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stops an UpdateRun.": {
            "$ref": "./examples/UpdateRuns_Stop.json"
          },
          "Stops an UpdateRun. - generated by [MaximumSet] rule": {
            "$ref": "./examples/UpdateRuns_Stop_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateStrategies": {
      "get": {
        "operationId": "FleetUpdateStrategies_ListByFleet",
        "tags": [
          "FleetUpdateStrategies"
        ],
        "description": "List FleetUpdateStrategy resources by Fleet",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetUpdateStrategyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the FleetUpdateStrategy resources by fleet.": {
            "$ref": "./examples/UpdateStrategies_ListByFleet.json"
          },
          "List the FleetUpdateStrategy resources by fleet. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetUpdateStrategies_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateStrategies/{updateStrategyName}": {
      "get": {
        "operationId": "FleetUpdateStrategies_Get",
        "tags": [
          "FleetUpdateStrategies"
        ],
        "description": "Get a FleetUpdateStrategy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateStrategyName",
            "in": "path",
            "description": "The name of the UpdateStrategy resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetUpdateStrategy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a FleetUpdateStrategy resource.": {
            "$ref": "./examples/UpdateStrategies_Get.json"
          },
          "Get a FleetUpdateStrategy resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetUpdateStrategies_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "FleetUpdateStrategies_CreateOrUpdate",
        "tags": [
          "FleetUpdateStrategies"
        ],
        "description": "Create a FleetUpdateStrategy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "The request should only proceed if no entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateStrategyName",
            "in": "path",
            "description": "The name of the UpdateStrategy resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetUpdateStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetUpdateStrategy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetUpdateStrategy"
            }
          },
          "201": {
            "description": "Resource 'FleetUpdateStrategy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetUpdateStrategy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a FleetUpdateStrategy.": {
            "$ref": "./examples/UpdateStrategies_CreateOrUpdate.json"
          },
          "Create a FleetUpdateStrategy. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetUpdateStrategies_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FleetUpdateStrategies_Delete",
        "tags": [
          "FleetUpdateStrategies"
        ],
        "description": "Delete a FleetUpdateStrategy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The request should only proceed if an entity matches this string.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "The name of the Fleet resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          },
          {
            "name": "updateStrategyName",
            "in": "path",
            "description": "The name of the UpdateStrategy resource.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a FleetUpdateStrategy resource.": {
            "$ref": "./examples/UpdateStrategies_Delete.json"
          },
          "Delete a FleetUpdateStrategy resource. - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetUpdateStrategies_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "APIServerAccessProfile": {
      "type": "object",
      "description": "Access profile for the Fleet hub API server.",
      "properties": {
        "enablePrivateCluster": {
          "type": "boolean",
          "description": "Whether to create the Fleet hub as a private cluster or not.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "enableVnetIntegration": {
          "type": "boolean",
          "description": "Whether to enable apiserver vnet integration for the Fleet hub or not.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "subnetId": {
          "$ref": "#/definitions/SubnetResourceId",
          "description": "The subnet to be used when apiserver vnet integration is enabled. It is required when creating a new Fleet with BYO vnet.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AgentProfile": {
      "type": "object",
      "description": "Agent profile for the Fleet hub.",
      "properties": {
        "subnetId": {
          "$ref": "#/definitions/SubnetResourceId",
          "description": "The ID of the subnet which the Fleet hub node will join on startup. If this is not specified, a vnet and subnet will be generated and used.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vmSize": {
          "type": "string",
          "description": "The virtual machine size of the Fleet hub.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AutoUpgradeLastTriggerStatus": {
      "type": "string",
      "description": "AutoUpgradeLastTriggerStatus is the status of the last AutoUpgrade trigger (attempt to automatically create and start UpdateRun when there are new released versions) of an auto upgrade profile.",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AutoUpgradeLastTriggerStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The last AutoUpgrade trigger was succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The last AutoUpgrade trigger failed."
          }
        ]
      },
      "readOnly": true
    },
    "AutoUpgradeNodeImageSelection": {
      "type": "object",
      "description": "The node image upgrade to be applied to the target clusters in auto upgrade.",
      "properties": {
        "type": {
          "$ref": "#/definitions/AutoUpgradeNodeImageSelectionType",
          "description": "The node image upgrade type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "AutoUpgradeNodeImageSelectionType": {
      "type": "string",
      "description": "The node image upgrade type.",
      "enum": [
        "Latest",
        "Consistent"
      ],
      "x-ms-enum": {
        "name": "AutoUpgradeNodeImageSelectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Latest",
            "value": "Latest",
            "description": "Use the latest image version when upgrading nodes. Clusters may use different image versions (e.g., 'AKSUbuntu-1804gen2containerd-2021.10.12' and 'AKSUbuntu-1804gen2containerd-2021.10.19') because, for example, the latest available version is different in different regions."
          },
          {
            "name": "Consistent",
            "value": "Consistent",
            "description": "The image versions to upgrade nodes to are selected as described below: for each node pool in managed clusters affected by the update run, the system selects the latest image version such that it is available across all other node pools (in all other clusters) of the same image type. As a result, all node pools of the same image type will be upgraded to the same image version. For example, if the latest image version for image type 'AKSUbuntu-1804gen2containerd' is 'AKSUbuntu-1804gen2containerd-2021.10.12' for a node pool in cluster A in region X, and is 'AKSUbuntu-1804gen2containerd-2021.10.17' for a node pool in cluster B in region Y, the system will upgrade both node pools to image version 'AKSUbuntu-1804gen2containerd-2021.10.12'."
          }
        ]
      }
    },
    "AutoUpgradeProfile": {
      "type": "object",
      "description": "The AutoUpgradeProfile resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutoUpgradeProfileProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutoUpgradeProfileId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ContainerService/fleets/updateRuns"
          }
        ]
      }
    },
    "AutoUpgradeProfileListResult": {
      "type": "object",
      "description": "The response of a AutoUpgradeProfile list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutoUpgradeProfile items on this page",
          "items": {
            "$ref": "#/definitions/AutoUpgradeProfile"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutoUpgradeProfileProperties": {
      "type": "object",
      "description": "The properties of the AutoUpgradeProfile.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/AutoUpgradeProfileProvisioningState",
          "description": "The provisioning state of the AutoUpgradeProfile resource.",
          "readOnly": true
        },
        "updateStrategyId": {
          "$ref": "#/definitions/FleetUpdateStrategyResourceId",
          "description": "The resource id of the UpdateStrategy resource to reference. If not specified, the auto upgrade will run on all clusters which are members of the fleet.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "channel": {
          "$ref": "#/definitions/UpgradeChannel",
          "description": "Configures how auto-upgrade will be run."
        },
        "nodeImageSelection": {
          "$ref": "#/definitions/AutoUpgradeNodeImageSelection",
          "description": "The node image upgrade to be applied to the target clusters in auto upgrade."
        },
        "disabled": {
          "type": "boolean",
          "description": "If set to False: the auto upgrade has effect - target managed clusters will be upgraded on schedule.\nIf set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.\nThis is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.\nBy default, this is set to False."
        },
        "autoUpgradeProfileStatus": {
          "$ref": "#/definitions/AutoUpgradeProfileStatus",
          "description": "The status of the auto upgrade profile."
        }
      },
      "required": [
        "channel"
      ]
    },
    "AutoUpgradeProfileProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the AutoUpgradeProfile resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "AutoUpgradeProfileProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "AutoUpgradeProfileStatus": {
      "type": "object",
      "description": "AutoUpgradeProfileStatus is the status of an auto upgrade profile.",
      "properties": {
        "lastTriggeredAt": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of new versions.",
          "readOnly": true
        },
        "lastTriggerStatus": {
          "$ref": "#/definitions/AutoUpgradeLastTriggerStatus",
          "description": "The status of the last AutoUpgrade trigger.",
          "readOnly": true
        },
        "lastTriggerError": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error details of the last trigger.",
          "readOnly": true
        },
        "lastTriggerUpgradeVersions": {
          "type": "array",
          "description": "The target Kubernetes version or node image versions of the last trigger.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ClusterResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ContainerService/managedClusters"
          }
        ]
      }
    },
    "Fleet": {
      "type": "object",
      "description": "The Fleet resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "Managed identity."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FleetCredentialResult": {
      "type": "object",
      "description": "One credential result item.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the credential.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Base64-encoded Kubernetes configuration file.",
          "readOnly": true
        }
      }
    },
    "FleetCredentialResults": {
      "type": "object",
      "description": "The Credential results response.",
      "properties": {
        "kubeconfigs": {
          "type": "array",
          "description": "Array of base64-encoded Kubernetes configuration files.",
          "items": {
            "$ref": "#/definitions/FleetCredentialResult"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "FleetHubProfile": {
      "type": "object",
      "description": "The FleetHubProfile configures the fleet hub.",
      "properties": {
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix used to create the FQDN for the Fleet hub.",
          "minLength": 1,
          "maxLength": 54,
          "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "apiServerAccessProfile": {
          "$ref": "#/definitions/APIServerAccessProfile",
          "description": "The access profile for the Fleet hub API server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "agentProfile": {
          "$ref": "#/definitions/AgentProfile",
          "description": "The agent profile for the Fleet hub.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "fqdn": {
          "type": "string",
          "description": "The FQDN of the Fleet hub.",
          "readOnly": true
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version of the Fleet hub.",
          "readOnly": true
        },
        "portalFqdn": {
          "type": "string",
          "description": "The Azure Portal FQDN of the Fleet hub.",
          "readOnly": true
        }
      }
    },
    "FleetListResult": {
      "type": "object",
      "description": "The response of a Fleet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Fleet items on this page",
          "items": {
            "$ref": "#/definitions/Fleet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetMember": {
      "type": "object",
      "description": "A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetMemberProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetMemberListResult": {
      "type": "object",
      "description": "The response of a FleetMember list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetMember items on this page",
          "items": {
            "$ref": "#/definitions/FleetMember"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetMemberProperties": {
      "type": "object",
      "description": "A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.",
      "properties": {
        "clusterResourceId": {
          "$ref": "#/definitions/ClusterResourceId",
          "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "group": {
          "type": "string",
          "description": "The group this member belongs to for multi-cluster update management.",
          "minLength": 1,
          "maxLength": 50,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "provisioningState": {
          "$ref": "#/definitions/FleetMemberProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/FleetMemberStatus",
          "description": "Status information of the last operation for fleet member.",
          "readOnly": true
        }
      },
      "required": [
        "clusterResourceId"
      ]
    },
    "FleetMemberProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Joining",
        "Leaving",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "FleetMemberProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Joining",
            "value": "Joining",
            "description": "The provisioning state of a member joining a fleet."
          },
          {
            "name": "Leaving",
            "value": "Leaving",
            "description": "The provisioning state of a member leaving a fleet."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The provisioning state of a member being updated."
          }
        ]
      },
      "readOnly": true
    },
    "FleetMemberStatus": {
      "type": "object",
      "description": "Status information for the fleet member",
      "properties": {
        "lastOperationId": {
          "type": "string",
          "description": "The last operation ID for the fleet member",
          "readOnly": true
        },
        "lastOperationError": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The last operation error of the fleet member",
          "readOnly": true
        }
      }
    },
    "FleetMemberUpdate": {
      "type": "object",
      "description": "The type used for update operations of the FleetMember.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetMemberUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FleetMemberUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the FleetMember.",
      "properties": {
        "group": {
          "type": "string",
          "description": "The group this member belongs to for multi-cluster update management.",
          "minLength": 1,
          "maxLength": 50,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        }
      }
    },
    "FleetPatch": {
      "type": "object",
      "description": "Properties of a Fleet that can be patched.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "../../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "Managed identity."
        }
      }
    },
    "FleetProperties": {
      "type": "object",
      "description": "Fleet properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/FleetProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "hubProfile": {
          "$ref": "#/definitions/FleetHubProfile",
          "description": "The FleetHubProfile configures the Fleet's hub."
        },
        "status": {
          "$ref": "#/definitions/FleetStatus",
          "description": "Status information for the fleet.",
          "readOnly": true
        }
      }
    },
    "FleetProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "FleetProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The provisioning state of a fleet being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The provisioning state of a fleet being updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The provisioning state of a fleet being deleted."
          }
        ]
      },
      "readOnly": true
    },
    "FleetStatus": {
      "type": "object",
      "description": "Status information for the fleet.",
      "properties": {
        "lastOperationId": {
          "type": "string",
          "description": "The last operation ID for the fleet.",
          "readOnly": true
        },
        "lastOperationError": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The last operation error for the fleet.",
          "readOnly": true
        }
      }
    },
    "FleetUpdateStrategy": {
      "type": "object",
      "description": "Defines a multi-stage process to perform update operations across members of a Fleet.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetUpdateStrategyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetUpdateStrategyListResult": {
      "type": "object",
      "description": "The response of a FleetUpdateStrategy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetUpdateStrategy items on this page",
          "items": {
            "$ref": "#/definitions/FleetUpdateStrategy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetUpdateStrategyProperties": {
      "type": "object",
      "description": "The properties of the UpdateStrategy.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/FleetUpdateStrategyProvisioningState",
          "description": "The provisioning state of the UpdateStrategy resource.",
          "readOnly": true
        },
        "strategy": {
          "$ref": "#/definitions/UpdateRunStrategy",
          "description": "Defines the update sequence of the clusters.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "required": [
        "strategy"
      ]
    },
    "FleetUpdateStrategyProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the UpdateStrategy resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "FleetUpdateStrategyProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "FleetUpdateStrategyResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ContainerService/fleets/updateStrategies"
          }
        ]
      }
    },
    "GenerateResponse": {
      "type": "object",
      "description": "GenerateResponse is the response of a generate request.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM resource id of the generated UpdateRun. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/fleets/{fleetName}/updateRuns/{updateRunName}'.",
          "readOnly": true
        }
      },
      "required": [
        "id"
      ]
    },
    "KubernetesVersion": {
      "type": "string"
    },
    "ManagedClusterUpdate": {
      "type": "object",
      "description": "The update to be applied to the ManagedClusters.",
      "properties": {
        "upgrade": {
          "$ref": "#/definitions/ManagedClusterUpgradeSpec",
          "description": "The upgrade to apply to the ManagedClusters."
        },
        "nodeImageSelection": {
          "$ref": "#/definitions/NodeImageSelection",
          "description": "The node image upgrade to be applied to the target nodes in update run.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "upgrade"
      ]
    },
    "ManagedClusterUpgradeSpec": {
      "type": "object",
      "description": "The upgrade to apply to a ManagedCluster.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ManagedClusterUpgradeType",
          "description": "ManagedClusterUpgradeType is the type of upgrade to be applied."
        },
        "kubernetesVersion": {
          "$ref": "#/definitions/KubernetesVersion",
          "description": "The Kubernetes version to upgrade the member clusters to."
        }
      },
      "required": [
        "type"
      ]
    },
    "ManagedClusterUpgradeType": {
      "type": "string",
      "description": "The type of upgrade to perform when targeting ManagedClusters.",
      "enum": [
        "Full",
        "NodeImageOnly",
        "ControlPlaneOnly"
      ],
      "x-ms-enum": {
        "name": "ManagedClusterUpgradeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Full",
            "value": "Full",
            "description": "Full upgrades the control plane and all agent pools of the target ManagedClusters. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to be set."
          },
          {
            "name": "NodeImageOnly",
            "value": "NodeImageOnly",
            "description": "NodeImageOnly upgrades only the node images of the target ManagedClusters. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to NOT be set."
          },
          {
            "name": "ControlPlaneOnly",
            "value": "ControlPlaneOnly",
            "description": "ControlPlaneOnly upgrades only targets the KubernetesVersion of the ManagedClusters and will not be applied to the AgentPool. Requires the ManagedClusterUpgradeSpec.KubernetesVersion property to be set."
          }
        ]
      }
    },
    "MemberUpdateStatus": {
      "type": "object",
      "description": "The status of a member update operation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The status of the MemberUpdate operation.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the FleetMember.",
          "readOnly": true
        },
        "clusterResourceId": {
          "type": "string",
          "description": "The Azure resource id of the target Kubernetes cluster.",
          "readOnly": true
        },
        "operationId": {
          "type": "string",
          "description": "The operation resource id of the latest attempt to perform the operation.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The status message after processing the member update operation.",
          "readOnly": true
        }
      }
    },
    "NodeImageSelection": {
      "type": "object",
      "description": "The node image upgrade to be applied to the target nodes in update run.",
      "properties": {
        "type": {
          "$ref": "#/definitions/NodeImageSelectionType",
          "description": "The node image upgrade type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "customNodeImageVersions": {
          "type": "array",
          "description": "Custom node image versions to upgrade the nodes to. This field is required if node image selection type is Custom. Otherwise, it must be empty. For each node image family (e.g., 'AKSUbuntu-1804gen2containerd'), this field can contain at most one version (e.g., only one of 'AKSUbuntu-1804gen2containerd-2023.01.12' or 'AKSUbuntu-1804gen2containerd-2023.02.12', not both). If the nodes belong to a family without a matching image version in this field, they are not upgraded.",
          "items": {
            "$ref": "#/definitions/NodeImageVersion"
          },
          "x-ms-identifiers": [
            "version"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "NodeImageSelectionStatus": {
      "type": "object",
      "description": "The node image upgrade specs for the update run.",
      "properties": {
        "selectedNodeImageVersions": {
          "type": "array",
          "description": "The image versions to upgrade the nodes to.",
          "items": {
            "$ref": "#/definitions/NodeImageVersion"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "version"
          ]
        }
      }
    },
    "NodeImageSelectionType": {
      "type": "string",
      "description": "The node image upgrade type.",
      "enum": [
        "Latest",
        "Consistent",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "NodeImageSelectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Latest",
            "value": "Latest",
            "description": "Use the latest image version when upgrading nodes. Clusters may use different image versions (e.g., 'AKSUbuntu-1804gen2containerd-2021.10.12' and 'AKSUbuntu-1804gen2containerd-2021.10.19') because, for example, the latest available version is different in different regions."
          },
          {
            "name": "Consistent",
            "value": "Consistent",
            "description": "The image versions to upgrade nodes to are selected as described below: for each node pool in managed clusters affected by the update run, the system selects the latest image version such that it is available across all other node pools (in all other clusters) of the same image type. As a result, all node pools of the same image type will be upgraded to the same image version. For example, if the latest image version for image type 'AKSUbuntu-1804gen2containerd' is 'AKSUbuntu-1804gen2containerd-2021.10.12' for a node pool in cluster A in region X, and is 'AKSUbuntu-1804gen2containerd-2021.10.17' for a node pool in cluster B in region Y, the system will upgrade both node pools to image version 'AKSUbuntu-1804gen2containerd-2021.10.12'."
          },
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Upgrade the nodes to the custom image versions. When set, update run will use node image versions provided in customNodeImageVersions to upgrade the nodes. If set, customNodeImageVersions must not be empty."
          }
        ]
      }
    },
    "NodeImageVersion": {
      "type": "object",
      "description": "The node upgrade image version.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The image version to upgrade the nodes to (e.g., 'AKSUbuntu-1804gen2containerd-2022.12.13').",
          "readOnly": true
        }
      }
    },
    "SkipProperties": {
      "type": "object",
      "description": "The properties of a skip operation containing multiple skip requests.",
      "properties": {
        "targets": {
          "type": "array",
          "description": "The targets to skip.",
          "items": {
            "$ref": "#/definitions/SkipTarget"
          },
          "x-ms-identifiers": [
            "type",
            "name"
          ]
        }
      },
      "required": [
        "targets"
      ]
    },
    "SkipTarget": {
      "type": "object",
      "description": "The definition of a single skip request.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TargetType",
          "description": "The skip target type."
        },
        "name": {
          "type": "string",
          "description": "The skip target's name. \nTo skip a member/group/stage, use the member/group/stage's name;\nTp skip an after stage wait, use the parent stage's name."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "SubnetResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "TargetType": {
      "type": "string",
      "description": "The target type of a skip request.",
      "enum": [
        "Member",
        "Group",
        "Stage",
        "AfterStageWait"
      ],
      "x-ms-enum": {
        "name": "TargetType",
        "modelAsString": true,
        "values": [
          {
            "name": "Member",
            "value": "Member",
            "description": "Skip the update of a member."
          },
          {
            "name": "Group",
            "value": "Group",
            "description": "Skip the update of a group."
          },
          {
            "name": "Stage",
            "value": "Stage",
            "description": "Skip the update of an entire stage including the after stage wait."
          },
          {
            "name": "AfterStageWait",
            "value": "AfterStageWait",
            "description": "Skip the update of the after stage wait of a certain stage."
          }
        ]
      }
    },
    "UpdateGroup": {
      "type": "object",
      "description": "A group to be updated.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the group.\nIt must match a group name of an existing fleet member. ",
          "minLength": 1,
          "maxLength": 50,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        }
      },
      "required": [
        "name"
      ]
    },
    "UpdateGroupStatus": {
      "type": "object",
      "description": "The status of a UpdateGroup.",
      "properties": {
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The status of the UpdateGroup.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the UpdateGroup.",
          "readOnly": true
        },
        "members": {
          "type": "array",
          "description": "The list of member this UpdateGroup updates.",
          "items": {
            "$ref": "#/definitions/MemberUpdateStatus"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "UpdateRun": {
      "type": "object",
      "description": "A multi-stage process to perform update operations across members of a Fleet.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateRunProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UpdateRunListResult": {
      "type": "object",
      "description": "The response of a UpdateRun list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UpdateRun items on this page",
          "items": {
            "$ref": "#/definitions/UpdateRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateRunProperties": {
      "type": "object",
      "description": "The properties of the UpdateRun.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/UpdateRunProvisioningState",
          "description": "The provisioning state of the UpdateRun resource.",
          "readOnly": true
        },
        "updateStrategyId": {
          "$ref": "#/definitions/FleetUpdateStrategyResourceId",
          "description": "The resource id of the FleetUpdateStrategy resource to reference.\n\nWhen creating a new run, there are three ways to define a strategy for the run:\n1. Define a new strategy in place: Set the \"strategy\" field.\n2. Use an existing strategy: Set the \"updateStrategyId\" field. (since 2023-08-15-preview)\n3. Use the default strategy to update all the members one by one: Leave both \"updateStrategyId\" and \"strategy\" unset. (since 2023-08-15-preview)\n\nSetting both \"updateStrategyId\" and \"strategy\" is invalid.\n\nUpdateRuns created by \"updateStrategyId\" snapshot the referenced UpdateStrategy at the time of creation and store it in the \"strategy\" field. \nSubsequent changes to the referenced FleetUpdateStrategy resource do not propagate.\nUpdateRunStrategy changes can be made directly on the \"strategy\" field before launching the UpdateRun."
        },
        "strategy": {
          "$ref": "#/definitions/UpdateRunStrategy",
          "description": "The strategy defines the order in which the clusters will be updated.\nIf not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.\nThe strategy of the UpdateRun can be modified until the run is started."
        },
        "managedClusterUpdate": {
          "$ref": "#/definitions/ManagedClusterUpdate",
          "description": "The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started."
        },
        "status": {
          "$ref": "#/definitions/UpdateRunStatus",
          "description": "The status of the UpdateRun.",
          "readOnly": true
        },
        "autoUpgradeProfileId": {
          "$ref": "#/definitions/AutoUpgradeProfileId",
          "description": "AutoUpgradeProfileId is the id of an auto upgrade profile resource.",
          "readOnly": true
        }
      },
      "required": [
        "managedClusterUpdate"
      ]
    },
    "UpdateRunProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the UpdateRun resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "UpdateRunProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "UpdateRunStatus": {
      "type": "object",
      "description": "The status of a UpdateRun.",
      "properties": {
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The status of the UpdateRun.",
          "readOnly": true
        },
        "stages": {
          "type": "array",
          "description": "The stages composing an update run. Stages are run sequentially withing an UpdateRun.",
          "items": {
            "$ref": "#/definitions/UpdateStageStatus"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nodeImageSelection": {
          "$ref": "#/definitions/NodeImageSelectionStatus",
          "description": "The node image upgrade specs for the update run. It is only set in update run when `NodeImageSelection.type` is `Consistent`.",
          "readOnly": true
        }
      }
    },
    "UpdateRunStrategy": {
      "type": "object",
      "description": "Defines the update sequence of the clusters via stages and groups.\n\nStages within a run are executed sequentially one after another.\nGroups within a stage are executed in parallel.\nMember clusters within a group are updated sequentially one after another.\n\nA valid strategy contains no duplicate groups within or across stages.",
      "properties": {
        "stages": {
          "type": "array",
          "description": "The list of stages that compose this update run. Min size: 1.",
          "items": {
            "$ref": "#/definitions/UpdateStage"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "stages"
      ]
    },
    "UpdateStage": {
      "type": "object",
      "description": "Defines a stage which contains the groups to update and the steps to take (e.g., wait for a time period) before starting the next stage.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the stage. Must be unique within the UpdateRun.",
          "minLength": 1,
          "maxLength": 50,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "groups": {
          "type": "array",
          "description": "Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1.",
          "items": {
            "$ref": "#/definitions/UpdateGroup"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "afterStageWaitInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified."
        }
      },
      "required": [
        "name"
      ]
    },
    "UpdateStageStatus": {
      "type": "object",
      "description": "The status of a UpdateStage.",
      "properties": {
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The status of the UpdateStage.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the UpdateStage.",
          "readOnly": true
        },
        "groups": {
          "type": "array",
          "description": "The list of groups to be updated as part of this UpdateStage.",
          "items": {
            "$ref": "#/definitions/UpdateGroupStatus"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "afterStageWaitStatus": {
          "$ref": "#/definitions/WaitStatus",
          "description": "The status of the wait period configured on the UpdateStage.",
          "readOnly": true
        }
      }
    },
    "UpdateState": {
      "type": "string",
      "description": "The state of the UpdateRun, UpdateStage, UpdateGroup, or MemberUpdate.",
      "enum": [
        "NotStarted",
        "Running",
        "Stopping",
        "Stopped",
        "Skipped",
        "Failed",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "UpdateState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has not been started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that is running."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that is being stopped."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has stopped."
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has been skipped."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has failed."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "The state of an UpdateRun/UpdateStage/UpdateGroup/MemberUpdate that has completed."
          }
        ]
      }
    },
    "UpdateStatus": {
      "type": "object",
      "description": "The status for an operation or group of operations.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation or group was started.",
          "readOnly": true
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the operation or group was completed.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/UpdateState",
          "description": "The State of the operation or group.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail",
          "description": "The error details when a failure is encountered.",
          "readOnly": true
        }
      }
    },
    "UpgradeChannel": {
      "type": "string",
      "description": "Configuration of how auto upgrade will be run.",
      "enum": [
        "Stable",
        "Rapid",
        "NodeImage"
      ],
      "x-ms-enum": {
        "name": "UpgradeChannel",
        "modelAsString": true,
        "values": [
          {
            "name": "Stable",
            "value": "Stable",
            "description": " Upgrades the clusters kubernetes version to the latest supported patch release on minor version N-1, where N is the latest supported minor version.\n For example, if a cluster runs version 1.17.7 and versions 1.17.9, 1.18.4, 1.18.6, and 1.19.1 are available, the cluster upgrades to 1.18.6."
          },
          {
            "name": "Rapid",
            "value": "Rapid",
            "description": "Upgrades the clusters kubernetes version to the latest supported patch release on the latest supported minor version."
          },
          {
            "name": "NodeImage",
            "value": "NodeImage",
            "description": "Upgrade node image version of the clusters."
          }
        ]
      }
    },
    "WaitStatus": {
      "type": "object",
      "description": "The status of the wait duration.",
      "properties": {
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "The status of the wait duration.",
          "readOnly": true
        },
        "waitDurationInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The wait duration configured in seconds.",
          "readOnly": true
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}