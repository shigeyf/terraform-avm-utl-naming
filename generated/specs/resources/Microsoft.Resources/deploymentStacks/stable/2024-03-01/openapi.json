{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Resources.deploymentStacks",
    "version": "2024-03-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ListAtResourceGroup",
        "description": "Lists all the Deployment stacks within the specified Resource Group.",
        "x-ms-examples": {
          "DeploymentStacksResourceGroupList": {
            "$ref": "./examples/DeploymentStackResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ListAtSubscription",
        "description": "Lists all the Deployment stacks within the specified Subscription.",
        "x-ms-examples": {
          "DeploymentStacksSubscriptionList": {
            "$ref": "./examples/DeploymentStackSubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks": {
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ListAtManagementGroup",
        "description": "Lists all the Deployment stacks within the specified Management Group.",
        "x-ms-examples": {
          "DeploymentStacksManagementGroupList": {
            "$ref": "./examples/DeploymentStackManagementGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of Deployment stacks.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "put": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_CreateOrUpdateAtResourceGroup",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "description": "Creates or updates a Deployment stack at Resource Group scope.",
        "x-ms-examples": {
          "DeploymentStacksResourceGroupCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackResourceGroupCreate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack supplied to the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_GetAtResourceGroup",
        "description": "Gets a Deployment stack with a given name at Resource Group scope.",
        "x-ms-examples": {
          "DeploymentStacksResourceGroupGet": {
            "$ref": "./examples/DeploymentStackResourceGroupGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_DeleteAtResourceGroup",
        "description": "Deletes a Deployment stack by name at Resource Group scope. When operation completes, status code 200 returned without content.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupDelete": {
            "$ref": "./examples/DeploymentStackResourceGroupDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "put": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_CreateOrUpdateAtSubscription",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "description": "Creates or updates a Deployment stack at Subscription scope.",
        "x-ms-examples": {
          "DeploymentStacksSubscriptionCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackSubscriptionCreate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack supplied to the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_GetAtSubscription",
        "description": "Gets a Deployment stack with a given name at Subscription scope.",
        "x-ms-examples": {
          "DeploymentStacksSubscriptionGet": {
            "$ref": "./examples/DeploymentStackSubscriptionGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_DeleteAtSubscription",
        "description": "Deletes a Deployment stack by name at Subscription scope. When operation completes, status code 200 returned without content.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionDelete": {
            "$ref": "./examples/DeploymentStackSubscriptionDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}": {
      "put": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_CreateOrUpdateAtManagementGroup",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "description": "Creates or updates a Deployment stack at Management Group scope.",
        "x-ms-examples": {
          "DeploymentStacksManagementGroupCreateOrUpdate": {
            "$ref": "./examples/DeploymentStackManagementGroupCreate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack supplied to the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The Deployment stack update request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "201": {
            "description": "Deployment stack created.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_GetAtManagementGroup",
        "description": "Gets a Deployment stack with a given name at Management Group scope.",
        "x-ms-examples": {
          "DeploymentStacksManagementGroupGet": {
            "$ref": "./examples/DeploymentStackManagementGroupGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns information about the Deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_DeleteAtManagementGroup",
        "description": "Deletes a Deployment stack by name at Management Group scope. When operation completes, status code 200 returned without content.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupDelete": {
            "$ref": "./examples/DeploymentStackManagementGroupDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceParameter"
          },
          {
            "$ref": "#/parameters/DeleteResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/DeleteManagementGroupParameter"
          },
          {
            "$ref": "#/parameters/BypassStackOutOfSyncErrorParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Deployment stack deleted."
          },
          "202": {
            "description": "Accepted - Check location header for deletion status.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Deployment stack does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ExportTemplateAtResourceGroup",
        "description": "Exports the template used to create the Deployment stack at Resource Group scope.",
        "x-ms-examples": {
          "DeploymentStacksResourceGroupExportTemplate": {
            "$ref": "./examples/DeploymentStackExportTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ExportTemplateAtSubscription",
        "description": "Exports the template used to create the Deployment stack at Subscription scope.",
        "x-ms-examples": {
          "DeploymentStacksSubscriptionExportTemplate": {
            "$ref": "./examples/DeploymentStackSubscriptionExportTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/exportTemplate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ExportTemplateAtManagementGroup",
        "description": "Exports the template used to create the Deployment stack at Management Group scope.",
        "x-ms-examples": {
          "DeploymentStacksManagementGroupExportTemplate": {
            "$ref": "./examples/DeploymentStackManagementGroupExportTemplate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the Template or TemplateLink payload of the deployment stack.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackTemplateDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ValidateStackAtResourceGroup",
        "description": "Runs preflight validation on the Resource Group scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksResourceGroupValidate": {
            "$ref": "./examples/DeploymentStackResourceGroupValidate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack to validate."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "x-ms-error-response": false,
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ValidateStackAtSubscription",
        "description": "Runs preflight validation on the Subscription scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksSubscriptionValidate": {
            "$ref": "./examples/DeploymentStackSubscriptionValidate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack to validate."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "x-ms-error-response": false,
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Resources/deploymentStacks/{deploymentStackName}/validate": {
      "post": {
        "tags": [
          "DeploymentStacks"
        ],
        "operationId": "DeploymentStacks_ValidateStackAtManagementGroup",
        "description": "Runs preflight validation on the Management Group scoped Deployment stack template to verify its acceptance to Azure Resource Manager.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DeploymentStacksManagementGroupValidate": {
            "$ref": "./examples/DeploymentStackManagementGroupValidate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/DeploymentStackNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "deploymentStack",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentStack"
            },
            "description": "Deployment stack to validate."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The validation operation result.",
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "202": {
            "description": "Accepted - The validation request has been accepted for processing and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "string",
                "description": "Number of seconds to wait before polling for status."
              }
            }
          },
          "400": {
            "description": "Failed - The validation operation result.",
            "x-ms-error-response": false,
            "schema": {
              "$ref": "#/definitions/DeploymentStackValidateResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/DeploymentStacksError"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "ManagementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "description": "Management Group id.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "DeploymentStackNameParameter": {
      "name": "deploymentStackName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "description": "Name of the deployment stack.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "DeleteResourceParameter": {
      "name": "unmanageAction.Resources",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionResourceMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method",
      "description": "Flag to indicate delete rather than detach for unmanaged resources."
    },
    "DeleteResourceGroupParameter": {
      "name": "unmanageAction.ResourceGroups",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionResourceGroupMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method",
      "description": "Flag to indicate delete rather than detach for unmanaged resource groups."
    },
    "DeleteManagementGroupParameter": {
      "name": "unmanageAction.ManagementGroups",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "x-ms-enum": {
        "name": "UnmanageActionManagementGroupMode",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method",
      "description": "Flag to indicate delete rather than detach for unmanaged management groups."
    },
    "BypassStackOutOfSyncErrorParameter": {
      "name": "bypassStackOutOfSyncError",
      "in": "query",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method",
      "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "DeploymentStack": {
      "type": "object",
      "description": "Deployment stack object.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceBase"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations."
        },
        "tags": {
          "type": "object",
          "description": "Deployment stack resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Deployment stack properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeploymentStackProperties"
        }
      }
    },
    "DeploymentStackProperties": {
      "type": "object",
      "required": [
        "actionOnUnmanage",
        "denySettings"
      ],
      "description": "Deployment stack properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ],
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "templateLink": {
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentParameter"
          },
          "description": "Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both."
        },
        "parametersLink": {
          "$ref": "#/definitions/DeploymentStacksParametersLink",
          "description": "The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
        },
        "actionOnUnmanage": {
          "$ref": "#/definitions/ActionOnUnmanage",
          "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted."
        },
        "debugSetting": {
          "$ref": "#/definitions/DeploymentStacksDebugSetting",
          "description": "The debug setting of the deployment."
        },
        "bypassStackOutOfSyncError": {
          "type": "boolean",
          "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "deploymentScope": {
          "type": "string",
          "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}')."
        },
        "description": {
          "type": "string",
          "maxLength": 4096,
          "description": "Deployment stack description. Max length of 4096 characters."
        },
        "denySettings": {
          "description": "Defines how resources deployed by the stack are locked.",
          "$ref": "#/definitions/DenySettings"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "State of the deployment stack.",
          "enum": [
            "creating",
            "validating",
            "waiting",
            "deploying",
            "canceling",
            "updatingDenyAssignments",
            "deletingResources",
            "succeeded",
            "failed",
            "canceled",
            "deleting"
          ],
          "x-ms-enum": {
            "name": "DeploymentStackProvisioningState",
            "modelAsString": true
          }
        },
        "correlationId": {
          "type": "string",
          "readOnly": true,
          "description": "The correlation id of the last Deployment stack upsert or delete operation. It is in GUID format and is used for tracing.",
          "example": "01234567-89ab-cdef-0000-000000000000"
        },
        "detachedResources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "description": "An array of resources that were detached during the most recent Deployment stack update. Detached means that the resource was removed from the template, but no relevant deletion operations were specified. So, the resource still exists while no longer being associated with the stack."
        },
        "deletedResources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "description": "An array of resources that were deleted during the most recent Deployment stack update. Deleted means that the resource was removed from the template and relevant deletion operations were specified."
        },
        "failedResources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceReferenceExtended"
          },
          "description": "An array of resources that failed to reach goal state during the most recent update. Each resourceId is accompanied by an error message."
        },
        "resources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ManagedResourceReference"
          },
          "description": "An array of resources currently managed by the deployment stack."
        },
        "deploymentId": {
          "type": "string",
          "readOnly": true,
          "description": "The resourceId of the deployment resource created by the deployment stack."
        },
        "outputs": {
          "type": "object",
          "readOnly": true,
          "description": "The outputs of the deployment resource created by the deployment stack."
        },
        "duration": {
          "type": "string",
          "readOnly": true,
          "description": "The duration of the last successful Deployment stack update."
        }
      }
    },
    "DeploymentStackListResult": {
      "description": "List of Deployment stacks.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentStack"
          },
          "description": "An array of Deployment stacks."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "description": "The resourceId model.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resourceId of a resource managed by the deployment stack."
        }
      }
    },
    "ManagedResourceReference": {
      "type": "object",
      "description": "The managed resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ],
      "properties": {
        "status": {
          "type": "string",
          "description": "Current management state of the resource in the deployment stack.",
          "enum": [
            "managed",
            "removeDenyFailed",
            "deleteFailed"
          ],
          "x-ms-enum": {
            "name": "ResourceStatusMode",
            "modelAsString": true,
            "values": [
              {
                "value": "managed",
                "description": "This resource is managed by the deployment stack."
              },
              {
                "value": "removeDenyFailed",
                "description": "Unable to remove the deny assignment on resource."
              },
              {
                "value": "deleteFailed",
                "description": "Unable to delete the resource from Azure. The delete will be retried on the next stack deployment, or can be deleted manually."
              }
            ]
          }
        },
        "denyStatus": {
          "type": "string",
          "default": "none",
          "description": "denyAssignment settings applied to the resource.",
          "enum": [
            "denyDelete",
            "notSupported",
            "inapplicable",
            "denyWriteAndDelete",
            "removedBySystem",
            "none"
          ],
          "x-ms-enum": {
            "name": "DenyStatusMode",
            "modelAsString": true,
            "values": [
              {
                "value": "denyDelete",
                "description": "Authorized users are able to read and modify the resources, but cannot delete."
              },
              {
                "value": "notSupported",
                "description": "Resource type does not support denyAssignments."
              },
              {
                "value": "inapplicable",
                "description": "denyAssignments are not supported on resources outside the scope of the deployment stack."
              },
              {
                "value": "denyWriteAndDelete",
                "description": "Authorized users can only read from a resource, but cannot modify or delete it."
              },
              {
                "value": "removedBySystem",
                "description": "Deny assignment has been removed by Azure due to a resource management change (management group move, etc.)"
              },
              {
                "value": "none",
                "description": "No denyAssignments have been applied."
              }
            ]
          }
        }
      }
    },
    "ResourceReferenceExtended": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        },
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ],
      "description": "The resourceId extended model. This is used to document failed resources with a resourceId and a corresponding error."
    },
    "ActionOnUnmanage": {
      "type": "object",
      "description": "Defines the behavior of resources that are no longer managed after the stack is updated or deleted.",
      "required": [
        "resources"
      ],
      "properties": {
        "resources": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        },
        "resourceGroups": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        },
        "managementGroups": {
          "$ref": "#/definitions/DeploymentStacksDeleteDetachEnum"
        }
      }
    },
    "DeploymentStacksError": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
        }
      },
      "description": "Deployment Stacks error response."
    },
    "DenySettings": {
      "description": "Defines how resources deployed by the Deployment stack are locked.",
      "type": "object",
      "required": [
        "mode"
      ],
      "properties": {
        "mode": {
          "type": "string",
          "description": "denySettings Mode that defines denied actions.",
          "enum": [
            "denyDelete",
            "denyWriteAndDelete",
            "none"
          ],
          "x-ms-enum": {
            "name": "DenySettingsMode",
            "modelAsString": true,
            "values": [
              {
                "value": "denyDelete",
                "description": "Authorized users are able to read and modify the resources, but cannot delete."
              },
              {
                "value": "denyWriteAndDelete",
                "description": "Authorized users can read from a resource, but cannot modify or delete it."
              },
              {
                "value": "none",
                "description": "No denyAssignments have been applied."
              }
            ]
          }
        },
        "excludedPrincipals": {
          "type": "array",
          "description": "List of AAD principal IDs excluded from the lock. Up to 5 principals are permitted.",
          "items": {
            "type": "string"
          }
        },
        "excludedActions": {
          "type": "array",
          "description": "List of role-based management operations that are excluded from the denySettings. Up to 200 actions are permitted. If the denySetting mode is set to 'denyWriteAndDelete', then the following actions are automatically appended to 'excludedActions': '*\\/read' and 'Microsoft.Authorization/locks/delete'. If the denySetting mode is set to 'denyDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will be removed.",
          "items": {
            "type": "string"
          }
        },
        "applyToChildScopes": {
          "type": "boolean",
          "description": "DenySettings will be applied to child resource scopes of every managed resource with a deny assignment."
        }
      }
    },
    "AzureResourceBase": {
      "x-ms-azure-resource": true,
      "type": "object",
      "description": "Common properties for all Azure resources.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "String Id used to locate any resource on Azure."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of this resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of this resource."
        },
        "systemData": {
          "readOnly": true,
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/systemData"
        }
      }
    },
    "DeploymentStackTemplateDefinition": {
      "type": "object",
      "description": "Export Template specific properties of the Deployment stack.",
      "properties": {
        "template": {
          "type": "object",
          "description": "The template content. Use this element to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "type": "object",
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
        }
      }
    },
    "DeploymentStacksTemplateLink": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        },
        "id": {
          "type": "string",
          "description": "The resourceId of a Template Spec. Use either the id or uri property, but not both."
        },
        "relativePath": {
          "type": "string",
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs."
        },
        "queryString": {
          "type": "string",
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "description": "Entity representing the reference to the template."
    },
    "DeploymentParameter": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Input value to the parameter."
        },
        "type": {
          "type": "string",
          "description": "Type of the value."
        },
        "reference": {
          "$ref": "#/definitions/KeyVaultParameterReference",
          "description": "Azure Key Vault parameter reference."
        }
      },
      "description": "Deployment parameter for the template."
    },
    "KeyVaultParameterReference": {
      "type": "object",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/KeyVaultReference",
          "description": "Azure Key Vault reference."
        },
        "secretName": {
          "type": "string",
          "description": "Azure Key Vault secret name."
        },
        "secretVersion": {
          "type": "string",
          "description": "Azure Key Vault secret version."
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "description": "Azure Key Vault parameter reference."
    },
    "KeyVaultReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure Key Vault resourceId."
        }
      },
      "required": [
        "id"
      ],
      "description": "Azure Key Vault reference."
    },
    "DeploymentStacksParametersLink": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        },
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment parameters."
    },
    "DeploymentStacksDebugSetting": {
      "type": "object",
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information that is being passed in during deployment. By logging information about the request or response, sensitive data that is retrieved through the deployment operations could potentially be exposed."
        }
      },
      "description": "The debug setting."
    },
    "DeploymentStacksDeleteDetachEnum": {
      "type": "string",
      "enum": [
        "delete",
        "detach"
      ],
      "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.",
      "x-ms-enum": {
        "name": "DeploymentStacksDeleteDetachEnum",
        "modelAsString": true
      }
    },
    "DeploymentStackValidateResult": {
      "type": "object",
      "description": "The Deployment stack validation result.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourceBase"
        },
        {
          "$ref": "#/definitions/DeploymentStacksError"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentStackValidateProperties",
          "description": "The validation result details."
        }
      }
    },
    "DeploymentStackValidateProperties": {
      "type": "object",
      "description": "The Deployment stack validation result details.",
      "properties": {
        "actionOnUnmanage": {
          "$ref": "#/definitions/ActionOnUnmanage",
          "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted."
        },
        "correlationId": {
          "type": "string",
          "description": "The correlation id of the Deployment stack validate operation. It is in GUID format and is used for tracing.",
          "example": "01234567-89ab-cdef-0000-000000000000"
        },
        "denySettings": {
          "$ref": "#/definitions/DenySettings",
          "description": "The Deployment stack deny settings."
        },
        "deploymentScope": {
          "type": "string",
          "description": "The Deployment stack deployment scope."
        },
        "description": {
          "type": "string",
          "description": "The Deployment stack validation description."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DeploymentParameter"
          },
          "description": "Deployment parameters."
        },
        "templateLink": {
          "$ref": "#/definitions/DeploymentStacksTemplateLink",
          "description": "The URI of the template."
        },
        "validatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "description": "The array of resources that were validated."
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}