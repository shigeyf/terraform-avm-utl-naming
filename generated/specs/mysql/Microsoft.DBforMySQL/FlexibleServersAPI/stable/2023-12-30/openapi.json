{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DBforMySQL.FlexibleServersAPI",
    "version": "2023-12-30"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Create",
        "x-ms-examples": {
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a server as a point in time restore": {
            "$ref": "./examples/ServerCreateWithPointInTimeRestore.json"
          },
          "Create a replica server": {
            "$ref": "./examples/ServerCreateReplica.json"
          },
          "Create a server with byok": {
            "$ref": "./examples/ServerCreateWithBYOK.json"
          }
        },
        "description": "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "x-ms-examples": {
          "Update a server": {
            "$ref": "./examples/ServerUpdate.json"
          },
          "Update server customer maintenance window": {
            "$ref": "./examples/ServerUpdateWithCustomerMaintenanceWindow.json"
          },
          "Update server with byok": {
            "$ref": "./examples/ServerUpdateWithBYOK.json"
          }
        },
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForUpdate"
            },
            "description": "The required parameters for updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "Delete a server": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "description": "Deletes a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "Get a server": {
            "$ref": "./examples/ServerGet.json"
          },
          "Get a server with vnet": {
            "$ref": "./examples/ServerGetWithVnet.json"
          }
        },
        "description": "Gets information about a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "List servers in a resource group": {
            "$ref": "./examples/ServersListByResourceGroup.json"
          }
        },
        "description": "List all the servers in a given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMySQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "x-ms-examples": {
          "List servers in a subscription": {
            "$ref": "./examples/ServersList.json"
          }
        },
        "description": "List all the servers in a given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/failover": {
      "post": {
        "tags": [
          "ServerFailover"
        ],
        "operationId": "Servers_Failover",
        "x-ms-examples": {
          "Restart a server": {
            "$ref": "./examples/ServerFailover.json"
          }
        },
        "description": "Manual failover a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/validateEstimateHighAvailability": {
      "post": {
        "tags": [
          "ServerValidateEstimateHighAvailability"
        ],
        "operationId": "Servers_ValidateEstimateHighAvailability",
        "x-ms-examples": {
          "Validate a validation and estimation of high availability.": {
            "$ref": "./examples/ServerValidateEstimateHighAvailability.json"
          }
        },
        "description": "Validate a deployment of high availability.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HighAvailabilityValidationEstimation"
            },
            "description": "The required parameters for validation of high availability deployment."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HighAvailabilityValidationEstimation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/restart": {
      "post": {
        "tags": [
          "ServerRestart"
        ],
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "Restart a server": {
            "$ref": "./examples/ServerRestart.json"
          }
        },
        "description": "Restarts a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerRestartParameter"
            },
            "description": "The required parameters for restarting a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/start": {
      "post": {
        "tags": [
          "ServerStart"
        ],
        "operationId": "Servers_Start",
        "x-ms-examples": {
          "Start a server": {
            "$ref": "./examples/ServerStart.json"
          }
        },
        "description": "Starts a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/stop": {
      "post": {
        "tags": [
          "ServerStop"
        ],
        "operationId": "Servers_Stop",
        "x-ms-examples": {
          "Stop a server": {
            "$ref": "./examples/ServerStop.json"
          }
        },
        "description": "Stops a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/resetGtid": {
      "post": {
        "tags": [
          "ServerResetGtid"
        ],
        "operationId": "Servers_ResetGtid",
        "x-ms-examples": {
          "Reset GTID on a server": {
            "$ref": "./examples/ServerResetGtid.json"
          }
        },
        "description": "Resets GTID on a server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerGtidSetParameter"
            },
            "description": "The required parameters for resetting GTID on a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "List replicas for a server": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "description": "List all the replicas for a given server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/cutoverMigration": {
      "post": {
        "tags": [
          "ServerMigration"
        ],
        "operationId": "ServersMigration_CutoverMigration",
        "x-ms-examples": {
          "Cutover migration for MySQL import": {
            "$ref": "./examples/CutoverMigration.json"
          }
        },
        "description": "Cutover migration for MySQL import, it will switch source elastic server DNS to flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{advancedThreatProtectionName}": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Get a server's Advanced Threat Protection state",
        "operationId": "AdvancedThreatProtectionSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server's Advanced Threat Protection state.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a server's Advanced Threat Protection settings.": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Updates a server's Advanced Threat Protection state.",
        "operationId": "AdvancedThreatProtectionSettings_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server's Advanced Threat Protection body to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionForUpdate"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the server's Advanced Threat Protection state.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtection"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Enable a server's Advanced Threat Protection settings": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsPatchEnabled.json"
          },
          "Disable a server's Advanced Threat Protection settings with all parameters": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsPatchDisabled.json"
          }
        }
      },
      "put": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Updates a server's Advanced Threat Protection state.",
        "operationId": "AdvancedThreatProtectionSettings_UpdatePut",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server's Advanced Threat Protection body to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtection"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the server's Advanced Threat Protection state.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtection"
            }
          },
          "201": {
            "description": "Successfully created the server's Advanced Threat Protection settings.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtection"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Enable a server's Advanced Threat Protection settings using PUT": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsPutEnabled.json"
          },
          "Disable a server's Advanced Threat Protection settings with all parameters using PUT": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsPutDisabled.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMySQL/flexibleServers/{serverName}/advancedThreatProtectionSettings": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Gets a list of server's Advanced Threat Protection states.",
        "operationId": "AdvancedThreatProtectionSettings_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server's Advanced Threat Protection states.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get list of server's Advanced Threat Protection settings": {
            "$ref": "./examples/AdvancedThreatProtectionSettingsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "AdvancedThreatProtectionNameParameter": {
      "name": "advancedThreatProtectionName",
      "in": "path",
      "description": "The name of the Advanced Threat Protection state.",
      "required": true,
      "enum": [
        "Default"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AdvancedThreatProtectionName",
        "modelAsString": true
      },
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The operation Id.",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "pattern": "^[a-z0-9][-a-z0-9]*(?<!-)$",
      "x-ms-parameter-location": "method"
    },
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the location.",
      "minLength": 1,
      "pattern": "^[ \\w]+$",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ServerVersion": {
      "type": "string",
      "description": "The version of a server.",
      "enum": [
        "5.7",
        "8.0.21"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "EnableStatusEnum": {
      "type": "string",
      "description": "Enum to indicate whether value is 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnableStatusEnum",
        "modelAsString": true
      }
    },
    "ReplicationRole": {
      "type": "string",
      "enum": [
        "None",
        "Source",
        "Replica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true
      },
      "description": "The replication role."
    },
    "DataEncryption": {
      "type": "object",
      "description": "The date encryption for cmk.",
      "properties": {
        "primaryUserAssignedIdentityId": {
          "type": "string",
          "description": "Primary user identity resource id"
        },
        "primaryKeyURI": {
          "type": "string",
          "description": "Primary key uri"
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string",
          "description": "Geo backup user identity resource id as identity can't cross region, need identity in same region as geo backup"
        },
        "geoBackupKeyURI": {
          "type": "string",
          "description": "Geo backup key uri as key vault can't cross region, need cmk in same region as geo backup"
        },
        "type": {
          "type": "string",
          "description": "The key type, AzureKeyVault for enable cmk, SystemManaged for disable cmk.",
          "enum": [
            "AzureKeyVault",
            "SystemManaged"
          ],
          "x-ms-enum": {
            "name": "DataEncryptionType",
            "modelAsString": false
          }
        }
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "description": "indicates whether custom window is enabled or disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "description": "start hour for maintenance window"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "description": "start minute for maintenance window"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "description": "day of week for maintenance window"
        }
      }
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention days for the server."
        },
        "backupIntervalHours": {
          "type": "integer",
          "format": "int32",
          "description": "Backup interval hours for the server."
        },
        "geoRedundantBackup": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not geo redundant backup is enabled.",
          "default": "Disabled"
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Earliest restore point creation time (ISO8601 format)"
        }
      },
      "description": "Storage Profile properties of a server"
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage size allowed for a server."
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Storage IOPS for a server."
        },
        "autoGrow": {
          "description": "Enable Storage Auto Grow or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Disabled"
        },
        "logOnDisk": {
          "description": "Enable Log On Disk or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Disabled"
        },
        "storageSku": {
          "type": "string",
          "readOnly": true,
          "description": "The sku name of the server storage."
        },
        "autoIoScaling": {
          "description": "Enable IO Auto Scaling or not.",
          "$ref": "#/definitions/EnableStatusEnum",
          "default": "Enabled"
        }
      },
      "description": "Storage Profile properties of a server"
    },
    "MySQLServerSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, e.g. Standard_D32s_v3."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the particular SKU, e.g. GeneralPurpose.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "ServerSkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "tier"
      ],
      "description": "Billing information related properties of a server."
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not public network access is allowed for this server. Value is 'Disabled' when server has VNet integration."
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "description": "Delegated subnet resource id used to setup vnet for a server."
        },
        "privateDnsZoneResourceId": {
          "type": "string",
          "description": "Private DNS zone resource id."
        }
      },
      "description": "Network related properties of a server"
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          },
          "description": "High availability mode for a server."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of server high availability.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "Healthy",
            "FailingOver",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true
          }
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "description": "Availability zone of the standby server."
        }
      },
      "description": "High availability properties of a server"
    },
    "HighAvailabilityValidationEstimation": {
      "type": "object",
      "properties": {
        "estimatedDowntime": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Estimated seconds of downtime for the deployment."
        },
        "scheduledStandbyAvailabilityZone": {
          "type": "string",
          "readOnly": true,
          "description": "Scheduled Availability zone of the standby server."
        },
        "expectedStandbyAvailabilityZone": {
          "type": "string",
          "description": "Expected Availability zone of the standby server."
        }
      },
      "description": "High availability validation properties of a server"
    },
    "ImportSourceProperties": {
      "type": "object",
      "properties": {
        "storageType": {
          "type": "string",
          "enum": [
            "AzureBlob"
          ],
          "x-ms-enum": {
            "name": "ImportSourceStorageType",
            "modelAsString": true
          },
          "description": "Storage type of import source.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storageUrl": {
          "type": "string",
          "description": "Uri of the import source storage.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sasToken": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Sas token for accessing source storage. Read and list permissions are required for sas token.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "dataDirPath": {
          "type": "string",
          "description": "Relative path of data directory in storage.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "description": "Import source related properties."
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "The password of the administrator login (required for server creation).",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "availabilityZone": {
          "type": "string",
          "description": "availability Zone information of the server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "The mode to create a new MySQL server.",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "Replica",
            "GeoRestore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceServerResourceId": {
          "type": "string",
          "description": "The source MySQL server id.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "The replication role."
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "readOnly": true,
          "description": "The maximum number of replicas that a primary server can have."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "description": "The Data Encryption for CMK."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of a server.",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "description": "Storage related properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "description": "Backup related properties of a server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "description": "High availability related properties of a server."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "description": "Network related properties of a server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "../../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "description": "PrivateEndpointConnections related properties of a server.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "importSourceProperties": {
          "$ref": "#/definitions/ImportSourceProperties",
          "description": "Source properties for import from storage."
        }
      },
      "description": "The properties of a server."
    },
    "Server": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/MySQLServerIdentity",
          "description": "The cmk identity for the server."
        },
        "sku": {
          "$ref": "#/definitions/MySQLServerSku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server."
    },
    "ServerPropertiesForUpdate": {
      "type": "object",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "The password of the administrator login."
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "description": "Storage related properties of a server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "description": "Backup related properties of a server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "description": "High availability related properties of a server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a server."
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "The replication role of the server."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "description": "The Data Encryption for CMK."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "description": "Network related properties of a server"
        }
      },
      "description": "The properties that can be updated for a server."
    },
    "ServerForUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/MySQLServerIdentity",
          "description": "The cmk identity for the server."
        },
        "sku": {
          "$ref": "#/definitions/MySQLServerSku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForUpdate",
          "x-ms-client-flatten": true,
          "description": "The properties that can be updated for a server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Parameters allowed to update for a server."
    },
    "ServerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of servers"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of servers."
    },
    "ServerRestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "$ref": "#/definitions/EnableStatusEnum",
          "description": "Whether or not failover to standby server when restarting a server with high availability enabled."
        },
        "maxFailoverSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed failover time in seconds."
        }
      },
      "description": "Server restart parameters."
    },
    "ServerGtidSetParameter": {
      "type": "object",
      "properties": {
        "gtidSet": {
          "type": "string",
          "description": "The Gtid set of server."
        }
      },
      "description": "Server Gtid set parameters."
    },
    "MySQLServerIdentity": {
      "x-ms-client-flatten": true,
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of managed service identity.",
          "enum": [
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "",
            "items": {
              "$ref": "#/definitions/UserAssignedIdentity"
            }
          },
          "description": "Metadata of user assigned identity."
        }
      },
      "description": "Properties to configure Identity for Bring your Own Keys"
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "PrincipalId",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "ClientId",
          "readOnly": true
        }
      },
      "description": "Metadata of user assigned identity."
    },
    "AdvancedThreatProtectionState": {
      "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled on the server.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AdvancedThreatProtectionState",
        "modelAsString": true
      }
    },
    "AdvancedThreatProtectionProperties": {
      "description": "Properties of an Advanced Threat Protection setting.",
      "type": "object",
      "properties": {
        "creationTime": {
          "description": "Specifies the UTC creation time of the policy.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "state": {
          "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
          "$ref": "#/definitions/AdvancedThreatProtectionState"
        },
        "provisioningState": {
          "$ref": "#/definitions/AdvancedThreatProtectionProvisioningState",
          "description": "Provisioning state of the Threat Protection."
        }
      }
    },
    "AdvancedThreatProtection": {
      "description": "A server's Advanced Threat Protection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdvancedThreatProtectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AdvancedThreatProtectionUpdateProperties": {
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the Advanced Threat Protection, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.",
          "$ref": "#/definitions/AdvancedThreatProtectionState"
        }
      },
      "required": [
        "state"
      ],
      "description": "Properties of Advanced Threat Protection that can be updated."
    },
    "AdvancedThreatProtectionForUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdvancedThreatProtectionUpdateProperties",
          "description": "Resource update properties.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Parameters allowed to update advanced threat protection for a server."
    },
    "AdvancedThreatProtectionListResult": {
      "description": "A list of the server's Advanced Threat Protection configurations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedThreatProtection"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdvancedThreatProtectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Updating",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AdvancedThreatProtectionProvisioningState",
        "modelAsString": true
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "BackupName": {
      "type": "string",
      "description": "The name of the backup.",
      "pattern": "(^[a-z0-9]$)|(^[a-z0-9][a-z0-9-]*[a-z0-9]$)"
    },
    "OperationStatusExtendedResult": {
      "description": "Represents Operation Results API Response",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/extendedData",
          "description": "The extended properties of Operation Results"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
        }
      ]
    },
    "extendedData": {
      "type": "object",
      "additionalProperties": true,
      "description": "A name-value pair that represents extended info."
    }
  }
}