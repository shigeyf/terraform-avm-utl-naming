{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DBforPostgreSQL",
    "version": "2024-08-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups/{backupName}": {
      "put": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_Create",
        "x-ms-examples": {
          "Create an on demand backup of a flexible server.": {
            "$ref": "./examples/BackupCreate.json"
          }
        },
        "description": "Creates an on demand backup of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/BackupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerBackup"
            }
          },
          "201": {
            "description": "Successfully created backup",
            "schema": {
              "$ref": "#/definitions/ServerBackup"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_Delete",
        "x-ms-examples": {
          "Delete an on demand backup, given its name.": {
            "$ref": "./examples/BackupDelete.json"
          }
        },
        "description": "Deletes a specific backup, given its name.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/BackupNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_Get",
        "x-ms-examples": {
          "Get an on demand backup, given its name.": {
            "$ref": "./examples/BackupGet.json"
          }
        },
        "description": "Gets information of an on demand backup, given its name.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/BackupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerBackup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_ListByServer",
        "x-ms-examples": {
          "List all available backups of a flexible server.": {
            "$ref": "./examples/BackupListByServer.json"
          }
        },
        "description": "Lists all available backups of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerBackupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private endpoint connection.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approves or rejects a private endpoint connection.",
        "operationId": "PrivateEndpointConnection_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            },
            "description": "Parameters required to update a private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Approve or reject a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnection_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete a private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists all private endpoint connections on a flexible server.",
        "operationId": "PrivateEndpointConnections_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List all private endpoint connections on a flexible server.": {
            "$ref": "./examples/PrivateEndpointConnectionList.json"
          }
        }
      }
    },
    "/providers/Microsoft.DBforPostgreSQL/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List all available REST API operations.": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "description": "Lists all available REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart": {
      "post": {
        "tags": [
          "ServerRestart"
        ],
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "Restart PostgreSQL database engine in a flexible server.": {
            "$ref": "./examples/ServerRestart.json"
          },
          "Restart PostgreSQL database engine in a flexible server with a forced failover to standby server.": {
            "$ref": "./examples/ServerRestartWithFailover.json"
          }
        },
        "description": "Restarts PostgreSQL database engine in a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RestartParameter"
            },
            "description": "Parameters to restart a flexible server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start": {
      "post": {
        "tags": [
          "ServerStart"
        ],
        "operationId": "Servers_Start",
        "x-ms-examples": {
          "Start a stopped flexible server.": {
            "$ref": "./examples/ServerStart.json"
          }
        },
        "description": "Starts a stopped flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop": {
      "post": {
        "tags": [
          "ServerStop"
        ],
        "operationId": "Servers_Stop",
        "x-ms-examples": {
          "Stop a flexible server.": {
            "$ref": "./examples/ServerStop.json"
          }
        },
        "description": "Stops a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities": {
      "get": {
        "tags": [
          "LocationBasedCapabilities"
        ],
        "operationId": "LocationBasedCapabilities_Execute",
        "x-ms-examples": {
          "List the capabilities available in a given location for a specific subscription.": {
            "$ref": "./examples/CapabilitiesByLocation.json"
          }
        },
        "description": "Lists the capabilities available in a given location for a specific subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilitiesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/capabilities": {
      "get": {
        "tags": [
          "FlexibleServerCapabilities"
        ],
        "operationId": "ServerCapabilities_List",
        "x-ms-examples": {
          "List the capabilities available for a given flexible server.": {
            "$ref": "./examples/ServerCapabilities.json"
          }
        },
        "description": "Lists the capabilities available for a given flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilitiesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "x-ms-examples": {
          "Create a new firewall rule or update an existing firewall rule.": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "Parameters required for creating or updating a firewall rule."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "Delete an existing firewall rule.": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "description": "Deletes an existing firewall rule.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "Get information about a firewall rule in a flexible server.": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        },
        "description": "Gets information about a firewall rule in a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByServer",
        "x-ms-examples": {
          "List information about all firewall rules in a flexible server.": {
            "$ref": "./examples/FirewallRuleListByServer.json"
          }
        },
        "description": "Lists information about all firewall rules in a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "operationId": "CheckNameAvailability_Execute",
        "x-ms-examples": {
          "Check the validity and availability of the given name, to assign it to a new flexible server.": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        },
        "description": "Checks the validity and availability of the given name, to assign it to a new flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityRequest"
            },
            "description": "Parameters required to check if a server name is valid and available to assign it to a new flexible server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "operationId": "CheckNameAvailabilityWithLocation_Execute",
        "x-ms-examples": {
          "Check the validity and availability of the given server name in the given location, to assign it to a new flexible server": {
            "$ref": "./examples/CheckNameAvailabilityLocationBased.json"
          }
        },
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityRequest"
            },
            "description": "Parameters required to check if server name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/logFiles": {
      "get": {
        "tags": [
          "LogFiles"
        ],
        "operationId": "LogFiles_ListByServer",
        "x-ms-examples": {
          "List all captured logs for download in a flexible server.": {
            "$ref": "./examples/LogFilesListByServer.json"
          }
        },
        "description": "Lists all captured logs for download in a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogFileListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Create",
        "x-ms-examples": {
          "Create a new flexible server.": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a new flexible server with Microsoft Entra authentication enabled.": {
            "$ref": "./examples/ServerCreateWithMicrosoftEntraEnabled.json"
          },
          "Create a new flexible server with data encryption based on customer managed key.": {
            "$ref": "./examples/ServerCreateWithDataEncryptionEnabled.json"
          },
          "Create a new flexible server using a point in time restore of a backup of an existing flexible server.": {
            "$ref": "./examples/ServerCreatePointInTimeRestore.json"
          },
          "Create a new flexible server using a restore of a geographically redundant backup of an existing flexible server, with data encryption based on customer managed key.": {
            "$ref": "./examples/ServerCreateGeoRestoreWithDataEncryptionEnabled.json"
          },
          "Create a read replica of an existing flexible server.": {
            "$ref": "./examples/ServerCreateReplica.json"
          },
          "Create a new flexible server using a backup of a flexible server that was deleted or dropped recently.": {
            "$ref": "./examples/ServerCreateReviveDropped.json"
          }
        },
        "description": "Creates a new server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "description": "Parameters required to create a new flexible server or to update an existing flexible server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "x-ms-examples": {
          "Update an existing flexible server.": {
            "$ref": "./examples/ServerUpdate.json"
          },
          "Update an existing flexible server with Microsoft Entra authentication enabled.": {
            "$ref": "./examples/ServerUpdateWithMicrosoftEntraEnabled.json"
          },
          "Update an existing flexible server with data encryption based on customer managed key.": {
            "$ref": "./examples/ServerUpdateWithDataEncryptionEnabled.json"
          },
          "Update an existing flexible server with custom maintenance window.": {
            "$ref": "./examples/ServerUpdateWithCustomMaintenanceWindow.json"
          },
          "Update an existing flexible server to upgrade the major version of PostgreSQL database engine.": {
            "$ref": "./examples/ServerUpdateWithMajorVersionUpgrade.json"
          },
          "Promote a read replica to a standalone server with planned data synchronization. Meaning that it waits for data in the read replica to be fully synchronized with its source server before it initiates the promotion to a standalone server.": {
            "$ref": "./examples/PromoteReplicaAsPlannedStandaloneServer.json"
          },
          "Promote a read replica to a standalone server with forced data synchronization. Meaning that it doesn't wait for data in the read replica to be synchronized with its source server before it initiates the promotion to a standalone server.": {
            "$ref": "./examples/PromoteReplicaAsForcedStandaloneServer.json"
          },
          "Switch over a read replica to primary server with planned data synchronization. Meaning that it waits for data in the read replica to be fully synchronized with its source server before it initiates the switching of roles between the read replica and the primary server.": {
            "$ref": "./examples/PromoteReplicaAsPlannedSwitchover.json"
          },
          "Switch over a read replica to primary server with forced data synchronization. Meaning that it doesn't wait for data in the read replica to be synchronized with its source server before it initiates the switching of roles between the read replica and the primary server.": {
            "$ref": "./examples/PromoteReplicaAsForcedSwitchover.json"
          }
        },
        "description": "Updates an existing server. The request body can contain one or multiple of the properties present in the normal server definition.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForUpdate"
            },
            "description": "Parameters required to update a flexible server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "Delete or drop an existing flexible server.": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "description": "Deletes or drops an existing flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "Get information about an existing flexible server.": {
            "$ref": "./examples/ServerGet.json"
          },
          "Get information about an existing flexible server that is integrated into a virtual network provided by customer.": {
            "$ref": "./examples/ServerGetWithVnet.json"
          },
          "Get information about an existing flexible server that isn't integrated into a virtual network provided by customer and has private endpoint connections.": {
            "$ref": "./examples/ServerGetWithPrivateEndpoints.json"
          }
        },
        "description": "Gets information about an existing flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "List all flexible servers in a resource group.": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "description": "Lists all flexible servers in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "x-ms-examples": {
          "List all flexible servers in a subscription.": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "description": "Lists all flexible servers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators/{objectId}": {
      "put": {
        "tags": [
          "Administrators"
        ],
        "operationId": "Administrators_Create",
        "x-ms-examples": {
          "Add a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorAdd.json"
          }
        },
        "description": "Creates a new server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ObjectIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActiveDirectoryAdministratorAdd"
            },
            "description": "Required parameters for adding a server administrator associated to a Microsoft Entra principal."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActiveDirectoryAdministrator"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ActiveDirectoryAdministrator"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Administrators"
        ],
        "operationId": "Administrators_Delete",
        "x-ms-examples": {
          "Delete a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorDelete.json"
          }
        },
        "description": "Deletes an existing server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ObjectIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Administrators"
        ],
        "operationId": "Administrators_Get",
        "x-ms-examples": {
          "Get information about a server administrator associated to a Microsoft Entra principal.": {
            "$ref": "./examples/AdministratorGet.json"
          }
        },
        "description": "Gets information about a server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ObjectIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActiveDirectoryAdministrator"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators": {
      "get": {
        "tags": [
          "Administrators"
        ],
        "operationId": "Administrators_ListByServer",
        "x-ms-examples": {
          "List information about all server administrators associated to Microsoft Entra principals.": {
            "$ref": "./examples/AdministratorsListByServer.json"
          }
        },
        "description": "List all server administrators associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdministratorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "List all read replicas of a flexible server.": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "description": "Lists all read replicas of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./FlexibleServers.json#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/migrations/{migrationName}": {
      "put": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Create",
        "x-ms-examples": {
          "Create a migration.": {
            "$ref": "./examples/Migrations_Create.json"
          },
          "Create a migration specifying user names.": {
            "$ref": "./examples/Migrations_Create_With_Other_Users.json"
          },
          "Create a migration with roles.": {
            "$ref": "./examples/Migrations_Create_With_Roles.json"
          },
          "Create a migration with private endpoint.": {
            "$ref": "./examples/Migrations_Create_With_PrivateEndpoint_Servers.json"
          },
          "Create a migration with other source type for validating and migrating.": {
            "$ref": "./examples/Migrations_Create_Other_SourceTypes_Validate_Migrate.json"
          },
          "Create a migration for validating only.": {
            "$ref": "./examples/Migrations_Create_Validate_Only.json"
          }
        },
        "description": "Creates a new migration.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationResource"
            },
            "description": "Parameters required for creating a migration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set or update the Migration for a server.",
            "schema": {
              "$ref": "#/definitions/MigrationResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MigrationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Get",
        "x-ms-examples": {
          "Get information about a migration.": {
            "$ref": "./examples/Migrations_Get.json"
          },
          "Get information about a migration with validation failures.": {
            "$ref": "./examples/Migrations_GetMigrationWithValidationFailures.json"
          },
          "Get information about a migration with successful validation only.": {
            "$ref": "./examples/Migrations_GetMigrationWithSuccessfulValidationOnly.json"
          },
          "Get information about a migration with successful validation but failed migration.": {
            "$ref": "./examples/Migrations_GetMigrationWithSuccessfulValidationButMigrationFailure.json"
          },
          "Get information about a migration with successful validation and successful migration.": {
            "$ref": "./examples/Migrations_GetMigrationWithSuccessfulValidationAndMigration.json"
          }
        },
        "description": "Gets information about a migration.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MigrationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Update",
        "x-ms-examples": {
          "Update an existing migration.": {
            "$ref": "./examples/Migrations_Update.json"
          },
          "Cancel an existing migration.": {
            "$ref": "./examples/Migrations_Cancel.json"
          }
        },
        "description": "Updates an existing migration. The request body can contain one to many of the mutable properties present in the migration definition. Certain property updates initiate migration state transitions.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationResourceForPatch"
            },
            "description": "Parameters required to update an existing migration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MigrationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Delete",
        "x-ms-examples": {
          "Delete an existing migration.": {
            "$ref": "./examples/Migrations_Delete.json"
          }
        },
        "description": "Deletes an existing migration.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/migrations": {
      "get": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_ListByTargetServer",
        "x-ms-examples": {
          "List all migrations of a target flexible server.": {
            "$ref": "./examples/Migrations_ListByTargetServer.json"
          }
        },
        "description": "Lists all migrations of a target flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationListFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MigrationResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{targetDbServerName}/checkMigrationNameAvailability": {
      "post": {
        "summary": "Check the validity and availability of the given name, to assign it to a new migration.",
        "description": "Checks if a proposed migration name is valid and available.",
        "tags": [
          "Custom operation",
          "POST"
        ],
        "operationId": "CheckMigrationNameAvailability",
        "x-ms-examples": {
          "Check the validity and availability of the given name, to assign it to a new migration.": {
            "$ref": "./examples/CheckMigrationNameAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerSubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TargetDbServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationNameAvailabilityResource"
            },
            "description": "Parameters required to check if a migration name is valid and available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MigrationNameAvailabilityResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Lists state of advanced threat protection settings for a flexible server.",
        "operationId": "ServerThreatProtectionSettings_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server threat detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerThreatProtectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation of advanced threat protection on the flexible server failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List state of advanced threat protection settings for a flexible server.": {
            "$ref": "./examples/ServerThreatProtectionSettingsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{threatProtectionName}": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Gets state of advanced threat protection settings for a flexible server.",
        "operationId": "ServerThreatProtectionSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ThreatProtectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server advanced threat protection settings.",
            "schema": {
              "$ref": "#/definitions/ServerThreatProtectionSettingsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation of threat protection on the flexible server failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get state of advanced threat protection settings for a flexible server.": {
            "$ref": "./examples/ServerThreatProtectionSettingsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Creates or updates a server's Advanced Threat Protection settings.",
        "operationId": "ServerThreatProtectionSettings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ThreatProtectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Advanced Threat Protection state for the flexible server.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerThreatProtectionSettingsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully set or update the server Threat Protection settings.",
            "schema": {
              "$ref": "#/definitions/ServerThreatProtectionSettingsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation of setting Threat Protection failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "Successfully created the server Threat Protection settings.",
            "schema": {
              "$ref": "#/definitions/ServerThreatProtectionSettingsModel"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Update a server's Threat Protection settings": {
            "$ref": "./examples/ServerThreatProtectionSettingsCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources for PostgreSQL server.",
        "operationId": "PrivateLinkResources_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets private link resources for PostgreSQL.": {
            "$ref": "./examples/PrivateLinkResourcesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource for PostgreSQL server.",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a private link resource for PostgreSQL.": {
            "$ref": "./examples/PrivateLinkResourcesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Create",
        "x-ms-examples": {
          "Create a database.": {
            "$ref": "./examples/DatabaseCreate.json"
          }
        },
        "description": "Creates a new database.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "Parameters required to create a new database."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "Delete an existing database": {
            "$ref": "./examples/DatabaseDelete.json"
          }
        },
        "description": "Deletes an existing database.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "Get information about an existing database.": {
            "$ref": "./examples/DatabaseGet.json"
          }
        },
        "description": "Gets information about an existing database.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListByServer",
        "x-ms-examples": {
          "List all databases in a flexible server.": {
            "$ref": "./examples/DatabasesListByServer.json"
          }
        },
        "description": "Lists all databases in a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints/{virtualEndpointName}": {
      "put": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Create",
        "x-ms-examples": {
          "Create a pair of virtual endpoints for a flexible server.": {
            "$ref": "./examples/VirtualEndpointCreate.json"
          }
        },
        "description": "Creates a pair of virtual endpoints for a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResource"
            },
            "description": "Parameters required to create or update a pair of virtual endpoints."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Update",
        "x-ms-examples": {
          "Update a pair of virtual endpoints for a flexible server.": {
            "$ref": "./examples/VirtualEndpointUpdate.json"
          }
        },
        "description": "Updates a pair of virtual endpoints for a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResourceForPatch"
            },
            "description": "Parameters required to update a pair of virtual endpoints."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Delete",
        "x-ms-examples": {
          "Delete a pair of virtual endpoints.": {
            "$ref": "./examples/VirtualEndpointDelete.json"
          }
        },
        "description": "Deletes a pair of virtual endpoints.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualEndpointNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Get",
        "x-ms-examples": {
          "Get information about a pair of virtual endpoints.": {
            "$ref": "./examples/VirtualEndpointsGet.json"
          }
        },
        "description": "Gets information about a pair of virtual endpoints.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints": {
      "get": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_ListByServer",
        "x-ms-examples": {
          "List pair of virtual endpoints associated to a flexible server.": {
            "$ref": "./examples/VirtualEndpointsListByServer.json"
          }
        },
        "description": "Lists pair of virtual endpoints associated to a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualEndpointsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage": {
      "post": {
        "tags": [
          "VirtualNetworkSubnetUsage"
        ],
        "operationId": "VirtualNetworkSubnetUsage_Execute",
        "x-ms-examples": {
          "VirtualNetworkSubnetUsageList": {
            "$ref": "./examples/VirtualNetworkSubnetUsage.json"
          }
        },
        "description": "Get virtual network subnet usage for a given vNet resource id.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageParameter"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkSubnetUsageResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBforPostgreSQL/getPrivateDnsZoneSuffix": {
      "post": {
        "tags": [
          "GetPrivateDnsZoneSuffix"
        ],
        "operationId": "GetPrivateDnsZoneSuffix_Execute",
        "x-ms-examples": {
          "Get the private DNS suffix.": {
            "$ref": "./examples/GetPrivateDnsZoneSuffix.json"
          }
        },
        "description": "Gets the private DNS zone suffix.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateDnsZoneSuffix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "List all server parameters (also known as configurations) of a flexible server.": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "description": "Lists all server parameters (also known as configurations) of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Get",
        "x-ms-examples": {
          "Get information about a specific server parameter of a flexible server.": {
            "$ref": "./examples/ConfigurationGet.json"
          }
        },
        "description": "Gets information about a specific server parameter of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Update",
        "x-ms-examples": {
          "Update, using Patch verb, the value assigned to a specific modifiable server parameter of a flexible server.": {
            "$ref": "./examples/ConfigurationUpdateUsingPatch.json"
          }
        },
        "description": "Updates, using Patch verb, the value assigned to a specific modifiable server parameter of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationForUpdate"
            },
            "description": "Parameters required to update the value of a specific modifiable server parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "put": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Put",
        "x-ms-examples": {
          "Update, using Put verb, the value assigned to a specific modifiable server parameter of a flexible server.": {
            "$ref": "./examples/ConfigurationUpdateUsingPut.json"
          }
        },
        "description": "Updates, using Put verb, the value assigned to a specific modifiable server parameter of a flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            },
            "description": "Parameters required to update the value of a specific modifiable server parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrPreBackup": {
      "post": {
        "description": "Performs all checks required so that a subsequent long term retention backup operation succeeds.",
        "tags": [
          "LongTermRetentionBackup"
        ],
        "operationId": "FlexibleServer_TriggerLtrPreBackup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LtrPreBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok. API finished synchronously with Success.",
            "schema": {
              "$ref": "#/definitions/LtrPreBackupResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Scenario 4xx/5xx",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "ErrorCode string in the event of a failure.",
                "type": "string"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Sample_Prebackup": {
            "$ref": "./examples/LongTermRetentionPreBackup.json"
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/startLtrBackup": {
      "post": {
        "description": "Start the Long Term Retention Backup operation",
        "tags": [
          "LongTermRetentionBackup"
        ],
        "operationId": "FlexibleServer_StartLtrBackup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LtrBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok. API finished synchronously with Success.",
            "schema": {
              "$ref": "#/definitions/LtrBackupResponse"
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before checking the status of the asynchronous operation.",
                "type": "integer",
                "format": "int32"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              },
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error Scenario 4xx/5xx",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "ErrorCode string in the event of a failure.",
                "type": "string"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Sample_ExecuteBackup": {
            "$ref": "./examples/LongTermRetentionBackup.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations/{backupName}": {
      "get": {
        "tags": [
          "LongTermRetentionBackup"
        ],
        "operationId": "ltrBackupOperations_Get",
        "x-ms-examples": {
          "Sample": {
            "$ref": "./examples/LongTermRetentionOperationGet.json"
          }
        },
        "description": "Gets the result of the give long term retention backup operation for the flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/BackupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LtrServerBackupOperation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations": {
      "get": {
        "tags": [
          "LongTermRetentionBackup"
        ],
        "operationId": "ltrBackupOperations_ListByServer",
        "x-ms-examples": {
          "Sample List of Long Tern Retention Operations by Flexible Server": {
            "$ref": "./examples/LongTermRetentionOperationListByServer.json"
          }
        },
        "description": "Gets the result of the give long term retention backup operations for the flexible server.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LtrServerBackupOperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "BackupNameParameter": {
      "name": "backupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the backup.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the firewall rule.",
      "minLength": 1,
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "ObjectIdParameter": {
      "name": "objectId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Object identifier of the Microsoft Entra principal.",
      "x-ms-parameter-location": "method"
    },
    "TargetDbServerSubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of subscription of target database server.",
      "pattern": "([a-z0-9]){8,8}[-]([a-z0-9]){4,4}[-]([a-z0-9]){4,4}[-]([a-z0-9]){4,4}[-]([a-z0-9]){12,12}",
      "x-ms-parameter-location": "method"
    },
    "TargetDbServerResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of resource group of target database server.",
      "pattern": "^[-a-z0-9A-Z._()]+[^.]$",
      "x-ms-parameter-location": "method"
    },
    "TargetDbServerNameParameter": {
      "name": "targetDbServerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of target database server.",
      "pattern": "([-a-z0-9]){3,63}",
      "x-ms-parameter-location": "method"
    },
    "MigrationNameParameter": {
      "name": "migrationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of migration.",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "MigrationListFilter": {
      "name": "migrationListFilter",
      "in": "query",
      "required": false,
      "enum": [
        "Active",
        "All"
      ],
      "type": "string",
      "description": "Migration list filter. Retrieves either active migrations or all migrations.",
      "x-ms-enum": {
        "name": "MigrationListFilter",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "ThreatProtectionNameParameter": {
      "name": "threatProtectionName",
      "in": "path",
      "description": "Name of the advanced threat protection settings.",
      "required": true,
      "type": "string",
      "enum": [
        "Default"
      ],
      "x-ms-enum": {
        "name": "ThreatProtectionName",
        "modelAsString": true
      },
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the database.",
      "minLength": 1,
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "VirtualEndpointNameParameter": {
      "name": "virtualEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Base name of the virtual endpoints.",
      "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the server parameter.",
      "minLength": 1,
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the location.",
      "minLength": 1,
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "description": "The name of the private endpoint connection.",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ServerBackupProperties": {
      "type": "object",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "Type of backup.",
          "enum": [
            "Full",
            "Customer On-Demand"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          }
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time(ISO8601 format) at which the backup was completed."
        },
        "source": {
          "type": "string",
          "description": "Source of the backup."
        }
      },
      "description": "Properties of a backup."
    },
    "ServerBackup": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerBackupProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a backup."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Properties of a backup."
    },
    "ServerBackupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerBackup"
          },
          "description": "List of available backups."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      },
      "description": "List of backups."
    },
    "PrivateEndpointConnectionListResult": {
      "description": "List of private endpoint connections.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the resource provider."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Type of resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the operation."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the operation."
        }
      },
      "description": "Display metadata associated with the operation."
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "RestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "type": "boolean",
          "description": "Indicates if restart the PostgreSQL database engine should failover or switch over from primary to standby. This only works if flexible server has high availability enabled."
        },
        "failoverMode": {
          "type": "string",
          "description": "Failover mode.",
          "enum": [
            "PlannedFailover",
            "ForcedFailover",
            "PlannedSwitchover",
            "ForcedSwitchover"
          ],
          "x-ms-enum": {
            "name": "FailoverMode",
            "modelAsString": true
          }
        }
      },
      "description": "PostgreSQL database engine restart parameters."
    },
    "StorageTierCapability": {
      "type": "object",
      "description": "Capability of a storage tier.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the storage tier.",
          "readOnly": true
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Supported IOPS for the storage tier.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ]
    },
    "StorageMbCapability": {
      "type": "object",
      "properties": {
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum IOPS supported by the storage size.",
          "readOnly": true
        },
        "supportedMaximumIops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported by the storage size.",
          "readOnly": true
        },
        "storageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum supported size (in MB) of storage.",
          "readOnly": true
        },
        "maximumStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum supported size (in MB) of storage.",
          "readOnly": true
        },
        "supportedThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum supported throughput (in MB/s) of storage.",
          "readOnly": true
        },
        "supportedMaximumThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum supported throughput (in MB/s) of storage.",
          "readOnly": true
        },
        "defaultIopsTier": {
          "type": "string",
          "description": "Default IOPS for this tier and storage size.",
          "readOnly": true
        },
        "supportedIopsTiers": {
          "type": "array",
          "description": "List of all supported storage tiers for this tier and storage size.",
          "items": {
            "$ref": "#/definitions/StorageTierCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "description": "Storage size (in MB) capability."
    },
    "ServerSkuCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the compute (SKU).",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int32",
          "description": "Number of virtual cores available for this compute.",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported by this compute.",
          "readOnly": true
        },
        "supportedMemoryPerVcoreMb": {
          "type": "integer",
          "format": "int64",
          "description": "Supported memory (in MB) per virtual core assigned to this compute.",
          "readOnly": true
        },
        "supportedZones": {
          "type": "array",
          "description": "List of supported availability zones. E.g. \"1\", \"2\", \"3\"",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedHaMode": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Modes of high availability supported for this compute.",
            "enum": [
              "SameZone",
              "ZoneRedundant"
            ],
            "x-ms-enum": {
              "name": "HaMode",
              "modelAsString": true
            }
          },
          "description": "Modes of high availability supported for this compute.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "description": "Capabilities in terms of compute."
    },
    "ServerVersion": {
      "type": "string",
      "description": "Major version of PostgreSQL database engine.",
      "enum": [
        "16",
        "15",
        "14",
        "13",
        "12",
        "11"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "ServerVersionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine.",
          "readOnly": true
        },
        "supportedVersionsToUpgrade": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "description": "Capabilities in terms of major versions of PostgreSQL database engine."
    },
    "StorageEditionCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of storage tier.",
          "readOnly": true
        },
        "defaultStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Default storage size (in MB) for this storage tier.",
          "readOnly": true
        },
        "supportedStorageMb": {
          "type": "array",
          "description": "Configurations of storage supported for this storage tier.",
          "items": {
            "$ref": "#/definitions/StorageMbCapability"
          },
          "x-ms-identifiers": [
            "storageSizeMb"
          ],
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "description": "Capabilities in terms of storage tier."
    },
    "FastProvisioningEditionCapability": {
      "type": "object",
      "description": "Capability of a fast provisioning compute tier.",
      "properties": {
        "supportedTier": {
          "type": "string",
          "description": "Compute tier supporting fast provisioning.",
          "readOnly": true
        },
        "supportedSku": {
          "type": "string",
          "description": "Compute name (SKU) supporting fast provisioning.",
          "readOnly": true
        },
        "supportedStorageGb": {
          "type": "integer",
          "format": "int32",
          "description": "Storage size (in GB) supporting fast provisioning.",
          "readOnly": true
        },
        "supportedServerVersions": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
          "readOnly": true
        },
        "serverCount": {
          "type": "integer",
          "description": "Count of servers in cache matching this specification.",
          "format": "int32",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ]
    },
    "FlexibleServerEditionCapability": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of compute tier.",
          "readOnly": true
        },
        "defaultSkuName": {
          "type": "string",
          "description": "Default compute name (SKU) for this computer tier.",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageEditionCapability"
          },
          "description": "List of storage editions supported by this compute tier and compute name.",
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "supportedServerSkus": {
          "type": "array",
          "description": "List of supported compute names (SKUs).",
          "items": {
            "$ref": "#/definitions/ServerSkuCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      },
      "description": "Capabilities in terms of compute tier."
    },
    "FlexibleServerCapability": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../types/common-types.json#/definitions/CapabilityBase"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of flexible servers capabilities."
        },
        "supportedServerEditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlexibleServerEditionCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true,
          "description": "List of supported compute tiers."
        },
        "supportedServerVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVersionCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of supported major versions of PostgreSQL database engine.",
          "readOnly": true
        },
        "fastProvisioningSupported": {
          "type": "string",
          "description": "Indicates if fast provisioning is supported. \"Enabled\" means fast provisioning is supported. \"Disabled\" stands for fast provisioning is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "fastProvisioningSupportedEnum",
            "modelAsString": true
          }
        },
        "supportedFastProvisioningEditions": {
          "type": "array",
          "description": "List of compute tiers supporting fast provisioning.",
          "items": {
            "$ref": "#/definitions/FastProvisioningEditionCapability"
          },
          "x-ms-identifiers": [
            "supportedSku"
          ],
          "readOnly": true
        },
        "geoBackupSupported": {
          "type": "string",
          "description": "Indicates if geographically redundant backups are supported in this location. \"Enabled\" means geographically redundant backups are supported. \"Disabled\" stands for geographically redundant backup is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "geoBackupSupportedEnum",
            "modelAsString": true
          }
        },
        "zoneRedundantHaSupported": {
          "type": "string",
          "description": "Indicates if high availability with zone redundancy is supported in this location. \"Enabled\" means high availability with zone redundancy is supported. \"Disabled\" stands for high availability with zone redundancy is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "zoneRedundantHaSupportedEnum",
            "modelAsString": true
          }
        },
        "zoneRedundantHaAndGeoBackupSupported": {
          "type": "string",
          "description": "Indicates if high availability with zone redundancy is supported in conjunction with geographically redundant backups in this location. \"Enabled\" means high availability with zone redundancy is supported in conjunction with geographically redundant backups is supported. \"Disabled\" stands for high availability with zone redundancy is supported in conjunction with geographically redundant backups is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "zoneRedundantHaAndGeoBackupSupportedEnum",
            "modelAsString": true
          }
        },
        "storageAutoGrowthSupported": {
          "type": "string",
          "description": "Indicates if storage autogrow is supported in this location. \"Enabled\" means storage autogrow is supported. \"Disabled\" stands for storage autogrow is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "storageAutoGrowthSupportedEnum",
            "modelAsString": true
          }
        },
        "onlineResizeSupported": {
          "type": "string",
          "description": "Indicates if resizing the storage without interrupting the operation of the database engine is supported in this location for the given subscription. \"Enabled\" means resizing the storage without interrupting the operation of the database engine is supported. \"Disabled\" means resizing the storage without interrupting the operation of the database engine is not supported.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "onlineResizeSupportedEnum",
            "modelAsString": true
          }
        },
        "restricted": {
          "type": "string",
          "description": "Indicates if this location is restricted. \"Enabled\" means location is restricted. \"Disabled\" stands for location is not restricted.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "restrictedEnum",
            "modelAsString": true
          }
        }
      },
      "description": "Capability for the Azure Database for PostgreSQL flexible server."
    },
    "CapabilitiesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "description": "List of supported capabilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlexibleServerCapability"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Capability for the Azure Database for PostgreSQL flexible server."
    },
    "FirewallRuleProperties": {
      "type": "object",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "description": "Properties of a firewall rule."
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a firewall rule."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Firewall rule."
    },
    "FirewallRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "List of firewall rules in a flexible server."
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string"
        }
      },
      "description": "List of firewall rules."
    },
    "NameAvailability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the PostgreSQL flexible server.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the server.",
          "readOnly": true
        }
      },
      "description": "Availability of a server name.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityResponse"
        }
      ]
    },
    "LogFileProperties": {
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the log file."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modified timestamp of the log file."
        },
        "sizeInKb": {
          "type": "integer",
          "format": "int64",
          "description": "Size (in KB) of the log file."
        },
        "type": {
          "type": "string",
          "description": "Type of log file. Can be 'ServerLogs' or 'UpgradeLogs'."
        },
        "url": {
          "type": "string",
          "description": "URL to download the log file from."
        }
      },
      "description": "Properties of a log file."
    },
    "LogFile": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogFileProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a log file."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Log file."
    },
    "LogFileListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogFile"
          },
          "description": "List of log files in a flexible server."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      },
      "description": "List of log files."
    },
    "Replica": {
      "type": "object",
      "description": "Replica properties of a flexible server.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "Role of the server in a replication set."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of read replicas allowed for a flexible server.",
          "readOnly": true
        },
        "replicationState": {
          "type": "string",
          "enum": [
            "Active",
            "Catchup",
            "Provisioning",
            "Updating",
            "Broken",
            "Reconfiguring"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true
          },
          "description": "Indicates the replication state of a read replica. This property is returned only when the target flexible server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
          "readOnly": true
        },
        "promoteMode": {
          "type": "string",
          "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
          "enum": [
            "standalone",
            "switchover"
          ],
          "x-ms-enum": {
            "name": "ReadReplicaPromoteMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "promoteOption": {
          "type": "string",
          "description": "Data synchronization option to use when processing the operation specified in the promoteMode property This property is write only. Planned means that the operation will wait for data in the read replica to be fully synchronized with its source server before it initiates the operation. Forced means that the operation will not wait for data in the read replica to be synchronized with its source server before it initiates the operation.",
          "enum": [
            "planned",
            "forced"
          ],
          "x-ms-enum": {
            "name": "ReplicationPromoteOption",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Major version of PostgreSQL database engine."
        },
        "minorVersion": {
          "type": "string",
          "description": "Minor version of PostgreSQL database engine.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Possible states of a flexible server.",
          "readOnly": true,
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name of a flexible server.",
          "readOnly": true
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "default": null,
          "description": "Storage properties of a flexible server."
        },
        "authConfig": {
          "$ref": "#/definitions/AuthConfig",
          "default": null,
          "description": "Authentication configuration properties of a flexible server."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "default": null,
          "description": "Data encryption properties of a flexible server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "default": null,
          "description": "Backup properties of a flexible server."
        },
        "network": {
          "$ref": "#/definitions/Network",
          "default": null,
          "description": "Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "default": null,
          "description": "High availability properties of a flexible server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "default": null,
          "description": "Maintenance window properties of a flexible server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "sourceServerResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DBforPostgreSQL/flexibleServers"
              }
            ]
          },
          "description": "Identifier of the flexible server to be used as the source of the new flexible server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target flexible server is a read replica.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new flexible server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "availabilityZone": {
          "type": "string",
          "default": "",
          "description": "Availability zone of a flexible server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "Role of the server in a replication set."
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of read replicas allowed for a flexible server.",
          "readOnly": true
        },
        "replica": {
          "$ref": "#/definitions/Replica",
          "description": "Read replica properties of a flexible server. Required only in case that you want to promote a server.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "createMode": {
          "type": "string",
          "description": "Creation mode of a new flexible server.",
          "enum": [
            "Default",
            "Create",
            "Update",
            "PointInTimeRestore",
            "GeoRestore",
            "Replica",
            "ReviveDropped"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "description": "List of private endpoint connections associated with the specified flexible server.",
          "readOnly": true
        }
      },
      "description": "Properties of a flexible server."
    },
    "Server": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Compute tier and size of a flexible server."
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentity",
          "description": "User assigned managed identities assigned to the flexible server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a flexible server."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Flexible server."
    },
    "ServerPropertiesForUpdate": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "update"
          ]
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Major version of PostgreSQL database engine."
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "default": null,
          "description": "Storage properties of a flexible server."
        },
        "backup": {
          "$ref": "#/definitions/Backup",
          "default": null,
          "description": "Backup properties of a flexible server."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailability",
          "default": null,
          "description": "High availability properties of a flexible server."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "default": null,
          "description": "Maintenance window properties of a flexible server.",
          "x-ms-mutability": [
            "update",
            "read"
          ]
        },
        "authConfig": {
          "$ref": "#/definitions/AuthConfig",
          "default": null,
          "description": "Authentication configuration properties of a flexible server."
        },
        "dataEncryption": {
          "$ref": "#/definitions/DataEncryption",
          "default": null,
          "description": "Data encryption properties of a flexible server."
        },
        "createMode": {
          "type": "string",
          "description": "Update mode of an existing flexible server.",
          "enum": [
            "Default",
            "Update"
          ],
          "x-ms-enum": {
            "name": "CreateModeForUpdate",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "replicationRole": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "Role of the server in a replication set."
        },
        "replica": {
          "$ref": "#/definitions/Replica",
          "description": "Read replica properties of a flexible server. Required only in case that you want to promote a server.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "network": {
          "$ref": "#/definitions/Network",
          "default": null,
          "description": "Network properties of a flexible server. Only required if you want your server to be integrated into a virtual network provided by customer."
        }
      }
    },
    "ServerForUpdate": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Compute tier and size of a flexible server."
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentity",
          "description": "Describes the identity of the application."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForUpdate",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Represents a server to be updated."
    },
    "ServerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of flexible servers"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of servers."
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of storage assigned to a flexible server."
        },
        "autoGrow": {
          "type": "string",
          "description": "Flag to enable or disable the automatic growth of storage size of a flexible server when available space is nearing zero and conditions allow for automatically growing storage size.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutoGrow",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Storage tier of a flexible server.",
          "enum": [
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P10",
            "P15",
            "P20",
            "P30",
            "P40",
            "P50",
            "P60",
            "P70",
            "P80"
          ],
          "x-ms-enum": {
            "name": "AzureManagedDiskPerformanceTiers",
            "modelAsString": true
          }
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS."
        },
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS."
        },
        "type": {
          "type": "string",
          "enum": [
            "Premium_LRS",
            "PremiumV2_LRS"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          },
          "description": "Type of storage assigned to a flexible server. Allowed values are Premium_LRS or PremiumV2_LRS. If not specified, it defaults to Premium_LRS."
        }
      },
      "description": "Storage properties of a flexible server."
    },
    "AuthConfig": {
      "type": "object",
      "properties": {
        "activeDirectoryAuth": {
          "type": "string",
          "description": "Indicates if the server supports Microsoft Entra authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "activeDirectoryAuthEnum",
            "modelAsString": true
          }
        },
        "passwordAuth": {
          "type": "string",
          "default": "Enabled",
          "description": "Indicates if the server supports password based authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "passwordAuthEnum",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "default": "",
          "description": "Identifier of the tenant of the delegated resource."
        }
      },
      "description": "Authentication configuration properties of a flexible server."
    },
    "DataEncryption": {
      "type": "object",
      "properties": {
        "primaryKeyURI": {
          "type": "string",
          "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a flexible server."
        },
        "primaryUserAssignedIdentityId": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a flexible server."
        },
        "geoBackupKeyURI": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a flexible server that is configured to support geographically redundant backups."
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a flexible server that is configured to support geographically redundant backups."
        },
        "type": {
          "type": "string",
          "description": "Data encryption type used by a flexible server.",
          "enum": [
            "SystemManaged",
            "AzureKeyVault"
          ],
          "x-ms-enum": {
            "name": "ArmServerKeyType",
            "modelAsString": true
          }
        },
        "primaryEncryptionKeyStatus": {
          "type": "string",
          "description": "Status of key used by a flexible server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
          "x-ms-mutability": [
            "read"
          ],
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "keyStatusEnum",
            "modelAsString": true
          }
        },
        "geoBackupEncryptionKeyStatus": {
          "type": "string",
          "description": "Status of key used by a flexible server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
          "x-ms-mutability": [
            "read"
          ],
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "keyStatusEnum",
            "modelAsString": true
          }
        }
      },
      "description": "Data encryption properties of a flexible server."
    },
    "UserIdentity": {
      "description": "User assigned managed identity associated with a flexible server.",
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
        },
        "clientId": {
          "type": "string",
          "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
        }
      }
    },
    "UserAssignedIdentityMap": {
      "type": "object",
      "description": "Map of user assigned managed identities.",
      "additionalProperties": {
        "$ref": "#/definitions/UserIdentity"
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentityMap",
          "description": "Map of user assigned managed identities."
        },
        "principalId": {
          "type": "string",
          "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
        },
        "type": {
          "type": "string",
          "description": "Types of identities associated with a flexible server.",
          "enum": [
            "None",
            "UserAssigned",
            "SystemAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant of a flexible server.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Identities associated with a flexible server."
    },
    "ReplicationRole": {
      "type": "string",
      "description": "Role of the flexible server in a replication set.",
      "enum": [
        "None",
        "Primary",
        "AsyncReplica",
        "GeoAsyncReplica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true
      }
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "default": 7,
          "description": "Backup retention days for the flexible server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "default": "Disabled",
          "description": "Indicates if the server is configured to create geographically redundant backups.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeoRedundantBackupEnum",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore point time (ISO8601 format) for a flexible server.",
          "readOnly": true
        }
      },
      "description": "Backup properties of a flexible server."
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Indicates if public network access is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerPublicNetworkAccessState",
            "modelAsString": true
          }
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
        },
        "privateDnsZoneArmResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateDnsZones"
              }
            ]
          },
          "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
        }
      },
      "description": "Network properties of a flexible server."
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "Disabled",
          "description": "High availability mode for a flexible server.",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "ServerHAState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": "",
          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
        }
      },
      "description": "High availability properties of a flexible server."
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window properties of a flexible server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "default": "Disabled",
          "description": "Indicates whether custom window is enabled or disabled."
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Start hour to be used for maintenance window."
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Start minute to be used for maintenance window."
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Day of the week to be used for maintenance window."
        }
      }
    },
    "ActiveDirectoryAdministratorAdd": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdministratorPropertiesForAdd",
          "x-ms-client-flatten": true,
          "description": "Properties of the server administrator associated to a Microsoft Entra principal."
        }
      },
      "description": "Server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorPropertiesForAdd": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "description": "The type of Microsoft Entra principal to which the server administrator is associated.",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "principalName": {
          "type": "string",
          "description": "Name of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "description": "Properties of a server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorProperties": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "principalName": {
          "type": "string",
          "description": "Name of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "objectId": {
          "type": "string",
          "description": "Object identifier of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        }
      },
      "description": "Properties of a server administrator associated to a Microsoft Entra principal."
    },
    "ActiveDirectoryAdministrator": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdministratorProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a server administrator associated to a Microsoft Entra principal."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveDirectoryAdministrator"
          },
          "description": "List of server administrators associated to Microsoft Entra principals."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      },
      "description": "List of server administrators associated to Microsoft Entra principals."
    },
    "MigrationResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationResourceProperties",
          "description": "Migration properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Migration."
    },
    "MigrationResourceProperties": {
      "type": "object",
      "properties": {
        "migrationId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of a migration."
        },
        "currentStatus": {
          "$ref": "#/definitions/MigrationStatus",
          "readOnly": true,
          "description": "Current status of a migration."
        },
        "migrationInstanceResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier of the private endpoint migration instance."
        },
        "migrationMode": {
          "$ref": "#/definitions/MigrationMode",
          "description": "Mode used to perform the migration: Online or Offline."
        },
        "migrationOption": {
          "$ref": "#/definitions/MigrationOption",
          "description": "Supported option for a migration."
        },
        "sourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL"
        },
        "sslMode": {
          "$ref": "#/definitions/SslMode",
          "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'."
        },
        "sourceDbServerMetadata": {
          "$ref": "#/definitions/DbServerMetadata",
          "readOnly": true,
          "description": "Metadata of source database server."
        },
        "targetDbServerMetadata": {
          "$ref": "#/definitions/DbServerMetadata",
          "readOnly": true,
          "description": "Metadata of target database server."
        },
        "sourceDbServerResourceId": {
          "type": "string",
          "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
        },
        "targetDbServerResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the target database server resource."
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
        },
        "secretParameters": {
          "$ref": "#/definitions/MigrationSecretParameters",
          "description": "Migration secret parameters."
        },
        "dbsToMigrate": {
          "maxItems": 50,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of databases to migrate.",
          "x-ms-identifiers": []
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceDbEnum",
            "modelAsString": true
          },
          "description": "Indicates whether to setup LogicalReplicationOnSourceDb, if needed."
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDbsInTargetEnum",
            "modelAsString": true
          },
          "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
        },
        "migrationWindowStartTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "Start time (UTC) for migration window."
        },
        "migrationWindowEndTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "End time (UTC) for migration window."
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesEnum",
            "modelAsString": true
          },
          "description": "Indicates if roles and permissions must be migrated."
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigrationEnum",
            "modelAsString": true
          },
          "description": "Indicates if data migration must start right away."
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutoverEnum",
            "modelAsString": true
          },
          "description": "Indicates if cutover must be triggered for the entire migration."
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "CancelEnum",
            "modelAsString": true
          },
          "description": "Indicates if cancel must be triggered for the entire migration."
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        }
      },
      "description": "Migration."
    },
    "MigrationResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationResource"
          },
          "readOnly": true,
          "description": "List of migrations.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "List of migrations."
    },
    "MigrationResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationResourcePropertiesForPatch",
          "description": "Migration properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Migration."
    },
    "MigrationResourcePropertiesForPatch": {
      "type": "object",
      "properties": {
        "sourceDbServerResourceId": {
          "type": "string",
          "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
        },
        "secretParameters": {
          "$ref": "#/definitions/MigrationSecretParameters",
          "description": "Migration secret parameters."
        },
        "dbsToMigrate": {
          "maxItems": 50,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of databases to migrate.",
          "x-ms-identifiers": []
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceDbEnum",
            "modelAsString": true
          },
          "description": "Indicates whether to setup LogicalReplicationOnSourceDb, if needed."
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDbsInTargetEnum",
            "modelAsString": true
          },
          "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
        },
        "migrationWindowStartTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "Start time (UTC) for migration window."
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesEnum",
            "modelAsString": true
          },
          "description": "Indicates if roles and permissions must be migrated."
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigrationEnum",
            "modelAsString": true
          },
          "description": "Indicates if data migration must start right away."
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutoverEnum",
            "modelAsString": true
          },
          "description": "Indicates if cutover must be triggered for the entire migration."
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "CancelEnum",
            "modelAsString": true
          },
          "description": "Indicates if cancel must be triggered for the entire migration."
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "migrationMode": {
          "$ref": "#/definitions/MigrationMode",
          "description": "Mode used to perform the migration: Online or Offline."
        }
      },
      "description": "Migration properties."
    },
    "MigrationSecretParameters": {
      "required": [
        "adminCredentials"
      ],
      "type": "object",
      "properties": {
        "adminCredentials": {
          "x-ms-secret": true,
          "x-ms-external": true,
          "$ref": "#/definitions/AdminCredentials",
          "description": "Credentials of administrator users for source and target servers."
        },
        "sourceServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
        },
        "targetServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
        }
      },
      "description": "Migration secret parameters."
    },
    "AdminCredentials": {
      "type": "object",
      "required": [
        "sourceServerPassword",
        "targetServerPassword"
      ],
      "properties": {
        "sourceServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Password for the user of the source server."
        },
        "targetServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Password for the user of the target server."
        }
      },
      "description": "Credentials of administrator users for source and target servers."
    },
    "DbServerMetadata": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of database server.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine."
        },
        "storageMb": {
          "format": "int32",
          "type": "integer",
          "description": "Storage size (in MB) for database server."
        },
        "sku": {
          "$ref": "#/definitions/ServerSku",
          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
        }
      },
      "description": "Database server metadata."
    },
    "MigrationDetailsLevel": {
      "enum": [
        "Default",
        "Summary",
        "Full"
      ],
      "type": "string",
      "description": "Level of details of a migration.",
      "x-ms-enum": {
        "name": "MigrationDetailsLevel",
        "modelAsString": true
      }
    },
    "MigrationMode": {
      "enum": [
        "Offline",
        "Online"
      ],
      "type": "string",
      "description": "Mode used to perform the migration: Online or Offline.",
      "x-ms-enum": {
        "name": "MigrationMode",
        "modelAsString": true
      }
    },
    "MigrationOption": {
      "enum": [
        "Validate",
        "Migrate",
        "ValidateAndMigrate"
      ],
      "type": "string",
      "description": "Supported option for a migration",
      "x-ms-enum": {
        "name": "MigrationOption",
        "modelAsString": true
      }
    },
    "MigrationState": {
      "enum": [
        "InProgress",
        "WaitingForUserAction",
        "Canceled",
        "Failed",
        "Succeeded",
        "ValidationFailed",
        "CleaningUp"
      ],
      "type": "string",
      "description": "State of migration.",
      "x-ms-enum": {
        "name": "MigrationState",
        "modelAsString": true
      }
    },
    "MigrationStatus": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/MigrationState",
          "readOnly": true,
          "description": "State of migration."
        },
        "error": {
          "type": "string",
          "readOnly": true,
          "description": "Error message, if any, for the migration state."
        },
        "currentSubStateDetails": {
          "$ref": "#/definitions/MigrationSubStateDetails",
          "readOnly": true,
          "description": "Current migration sub state details."
        }
      },
      "description": "State of migration."
    },
    "MigrationSubState": {
      "enum": [
        "PerformingPreRequisiteSteps",
        "WaitingForLogicalReplicationSetupRequestOnSourceDB",
        "WaitingForDBsToMigrateSpecification",
        "WaitingForTargetDBOverwriteConfirmation",
        "WaitingForDataMigrationScheduling",
        "WaitingForDataMigrationWindow",
        "MigratingData",
        "WaitingForCutoverTrigger",
        "CompletingMigration",
        "Completed",
        "CancelingRequestedDBMigrations",
        "ValidationInProgress"
      ],
      "type": "string",
      "description": "Substate of migration.",
      "x-ms-enum": {
        "name": "MigrationSubState",
        "modelAsString": true
      }
    },
    "MigrationSubStateDetails": {
      "type": "object",
      "properties": {
        "currentSubState": {
          "$ref": "#/definitions/MigrationSubState",
          "readOnly": true
        },
        "dbDetails": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DbMigrationStatus"
          }
        },
        "validationDetails": {
          "$ref": "#/definitions/ValidationDetails"
        }
      },
      "description": "Details of migration substate."
    },
    "DbMigrationStatus": {
      "type": "object",
      "description": "Migration status of a database.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Name of database."
        },
        "migrationState": {
          "type": "string",
          "description": "Migration state of a database.",
          "enum": [
            "InProgress",
            "WaitingForCutoverTrigger",
            "Failed",
            "Canceled",
            "Succeeded",
            "Canceling"
          ],
          "x-ms-enum": {
            "name": "MigrationDbState",
            "modelAsString": true
          }
        },
        "migrationOperation": {
          "type": "string",
          "description": "Migration operation of a database."
        },
        "startedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a migration state."
        },
        "endedOn": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a migration state."
        },
        "fullLoadQueuedTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables queued for the migration of a database."
        },
        "fullLoadErroredTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables encountering errors during the migration of a database."
        },
        "fullLoadLoadingTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables loading during the migration of a database."
        },
        "fullLoadCompletedTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables loaded during the migration of a database."
        },
        "cdcUpdateCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture update counter."
        },
        "cdcDeleteCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture delete counter."
        },
        "cdcInsertCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture insert counter."
        },
        "appliedChanges": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture applied changes counter."
        },
        "incomingChanges": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture incoming changes counter."
        },
        "latency": {
          "format": "int32",
          "type": "integer",
          "description": "Lag in seconds between source and target during online phase."
        },
        "message": {
          "type": "string",
          "description": "Error message, if any, for the migration state."
        }
      }
    },
    "ValidationDetails": {
      "type": "object",
      "description": "Details for the validation for migration.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ValidationState"
        },
        "validationStartTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Start time (UTC) for validation."
        },
        "validationEndTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "End time (UTC) for validation."
        },
        "serverLevelValidationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationSummaryItem"
          },
          "description": "Details of server level validations.",
          "x-ms-identifiers": []
        },
        "dbLevelValidationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbLevelValidationStatus"
          },
          "description": "Details of server level validations.",
          "x-ms-identifiers": [
            "databaseName"
          ]
        }
      }
    },
    "DbLevelValidationStatus": {
      "type": "object",
      "description": "Validation status summary for a database.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Name of database."
        },
        "startedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a database level validation."
        },
        "endedOn": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a database level validation."
        },
        "summary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationSummaryItem"
          },
          "description": "Summary of database level validations.",
          "x-ms-identifiers": []
        }
      }
    },
    "ValidationSummaryItem": {
      "type": "object",
      "description": "Validation summary object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Validation type."
        },
        "state": {
          "$ref": "#/definitions/ValidationState"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationMessage"
          },
          "description": "Validation messages.",
          "x-ms-identifiers": []
        }
      }
    },
    "ValidationMessage": {
      "type": "object",
      "description": "Validation message object.",
      "properties": {
        "state": {
          "$ref": "#/definitions/ValidationState",
          "description": "Severity of validation message."
        },
        "message": {
          "type": "string",
          "description": "Validation message string."
        }
      }
    },
    "ValidationState": {
      "type": "string",
      "description": "Validation status for migration.",
      "enum": [
        "Failed",
        "Succeeded",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ValidationState",
        "modelAsString": true
      }
    },
    "SourceType": {
      "enum": [
        "OnPremises",
        "AWS",
        "GCP",
        "AzureVM",
        "PostgreSQLSingleServer",
        "AWS_RDS",
        "AWS_AURORA",
        "AWS_EC2",
        "GCP_CloudSQL",
        "GCP_AlloyDB",
        "GCP_Compute",
        "EDB"
      ],
      "type": "string",
      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true
      }
    },
    "SslMode": {
      "enum": [
        "Prefer",
        "Require",
        "VerifyCA",
        "VerifyFull"
      ],
      "type": "string",
      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
      "x-ms-enum": {
        "name": "SslMode",
        "modelAsString": true
      }
    },
    "ServerSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
        },
        "tier": {
          "type": "string",
          "description": "Tier of the compute assigned to a flexible server.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "Compute information of a flexible server."
    },
    "MigrationNameAvailabilityReason": {
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "type": "string",
      "description": "Migration name availability reason.",
      "x-ms-enum": {
        "name": "MigrationNameAvailabilityReason",
        "modelAsString": true
      }
    },
    "MigrationNameAvailabilityResource": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the migration to check for validity and availability."
        },
        "type": {
          "type": "string",
          "description": "Type of resource."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the migration name is available.",
          "readOnly": true
        },
        "reason": {
          "$ref": "#/definitions/MigrationNameAvailabilityReason",
          "description": "Migration name availability reason.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Migration name availability message.",
          "readOnly": true
        }
      },
      "description": "Availability of a migration name."
    },
    "ServerThreatProtectionProperties": {
      "description": "Properties of advanced threat protection state for a flexible server.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the flexible server.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ThreatProtectionState",
            "modelAsString": false
          }
        },
        "creationTime": {
          "format": "date-time",
          "description": "Specifies the creation time (UTC) of the policy.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerThreatProtectionSettingsModel": {
      "description": "Advanced threat protection settings of the flexible server.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerThreatProtectionProperties",
          "description": "Advanced threat protection properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServerThreatProtectionListResult": {
      "description": "List of advanced threat protection settings for a flexible server.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerThreatProtectionSettingsModel"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseProperties": {
      "type": "object",
      "properties": {
        "charset": {
          "type": "string",
          "description": "Character set of the database.",
          "pattern": "^[a-zA-Z]+\\w*$"
        },
        "collation": {
          "type": "string",
          "description": "Collation of the database.",
          "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
        }
      },
      "description": "Properties of a database."
    },
    "Database": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a database."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Database."
    },
    "DatabaseListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "List of all databases in a flexible server."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of all databases in a flexible server."
    },
    "VirtualEndpointResourceProperties": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of endpoint for the virtual endpoints.",
          "enum": [
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "VirtualEndpointType",
            "modelAsString": true
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Flexible server that one of the virtual endpoints can refer to."
          },
          "description": "List of flexible servers that one of the virtual endpoints can refer to."
        },
        "virtualEndpoints": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Virtual endpoints for a flexible server."
          },
          "description": "List of virtual endpoints for a flexible server.",
          "readOnly": true
        }
      },
      "description": "Properties of a pair of virtual endpoints."
    },
    "VirtualEndpointResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VirtualEndpointResourceForPatch"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "description": "Pair of virtual endpoints for a flexible server."
    },
    "VirtualEndpointResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualEndpointResourceProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the pair of virtual endpoints."
        }
      },
      "description": "Pair of virtual endpoints for a flexible server."
    },
    "VirtualEndpointsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualEndpointResource"
          },
          "description": "List of virtual endpoints."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      },
      "description": "List of virtual endpoints."
    },
    "VirtualNetworkSubnetUsageParameter": {
      "type": "object",
      "properties": {
        "virtualNetworkArmResourceId": {
          "type": "string",
          "description": "Virtual network resource id."
        }
      },
      "description": "Virtual network subnet usage parameter"
    },
    "VirtualNetworkSubnetUsageResult": {
      "type": "object",
      "properties": {
        "delegatedSubnetsUsage": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedSubnetUsage"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "subnetName"
          ]
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "location of the delegated subnet usage"
        },
        "subscriptionId": {
          "type": "string",
          "readOnly": true,
          "description": "subscriptionId of the delegated subnet usage"
        }
      },
      "description": "Virtual network subnet usage data."
    },
    "DelegatedSubnetUsage": {
      "type": "object",
      "properties": {
        "subnetName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the delegated subnet for which IP addresses are in use"
        },
        "usage": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Number of IP addresses used by the delegated subnet"
        }
      },
      "description": "Delegated subnet usage data."
    },
    "PrivateDnsZoneSuffix": {
      "type": "string",
      "description": "Private DNS suffix."
    },
    "ConfigurationProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the server parameter (also known as configuration). Required to update the value assigned to a specific modifiable server parameter."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the server parameter."
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true,
          "description": "Value assigned by default to the server parameter."
        },
        "dataType": {
          "type": "string",
          "readOnly": true,
          "description": "Data type of the server parameter.",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true
          }
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true,
          "description": "Allowed values of the server parameter."
        },
        "source": {
          "type": "string",
          "description": "Source of the value assigned to the server parameter. Required to update the value assigned to a specific modifiable server parameter."
        },
        "isDynamicConfig": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if it's a dynamic (true) or static (false) server parameter. Static server parameters require a server restart after changing the value assigned to it, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to it, for the change to take effect."
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if it's a read-only (true) or modifiable (false) server parameter."
        },
        "isConfigPendingRestart": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if the value assigned to the server parameter is pending a server restart for the value to take effect."
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Units in which the server parameter value is expressed."
        },
        "documentationLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link pointing to the documentation of the server parameter."
        }
      },
      "description": "Properties of a server parameter."
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a server parameter."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Server parameter."
    },
    "ConfigurationForUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of a server parameter."
        }
      },
      "description": "Server parameter."
    },
    "ConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Configuration"
          },
          "description": "List of server parameters."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      },
      "description": "List of server parameters."
    },
    "BackupRequestBase": {
      "description": "BackupRequestBase is the base for all backup request.",
      "required": [
        "backupSettings"
      ],
      "type": "object",
      "properties": {
        "backupSettings": {
          "$ref": "#/definitions/BackupSettings",
          "description": "Backup Settings"
        }
      }
    },
    "LtrBackupRequest": {
      "description": "The request that is made for a long term retention backup.",
      "type": "object",
      "properties": {
        "targetDetails": {
          "$ref": "#/definitions/BackupStoreDetails",
          "description": "Backup store detail for target server"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ],
      "required": [
        "targetDetails"
      ]
    },
    "LtrPreBackupRequest": {
      "description": "A request that is made for pre-backup.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequestBase"
        }
      ]
    },
    "BackupSettings": {
      "description": "The settings for the long term backup.",
      "type": "object",
      "required": [
        "backupName"
      ],
      "properties": {
        "backupName": {
          "type": "string",
          "description": "Backup Name for the current backup"
        }
      }
    },
    "BackupStoreDetails": {
      "description": "Details about the target where the backup content will be stored.",
      "required": [
        "sasUriList"
      ],
      "type": "object",
      "properties": {
        "sasUriList": {
          "description": "List of SAS uri of storage containers where backup data is to be streamed/copied.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "SAS URI of Azure Storage Account Container.",
            "x-ms-secret": true
          }
        }
      }
    },
    "LtrPreBackupResponseProperties": {
      "description": "Response for the pre-backup request.",
      "type": "object",
      "required": [
        "numberOfContainers"
      ],
      "properties": {
        "numberOfContainers": {
          "format": "int32",
          "description": "Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.",
          "type": "integer"
        }
      }
    },
    "LtrBackupOperationResponseProperties": {
      "description": "Response for the backup request.",
      "type": "object",
      "required": [
        "status",
        "startTime"
      ],
      "properties": {
        "datasourceSizeInBytes": {
          "format": "int64",
          "description": "Size of datasource in bytes",
          "type": "integer"
        },
        "dataTransferredInBytes": {
          "format": "int64",
          "description": "Data transferred in bytes",
          "type": "integer"
        },
        "backupName": {
          "description": "Name of Backup operation",
          "type": "string"
        },
        "backupMetadata": {
          "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
          "type": "string"
        },
        "status": {
          "description": "Service-set extensible enum indicating the status of operation",
          "enum": [
            "Running",
            "Cancelled",
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExecutionStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "description": "Start time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "description": "End time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "percentComplete": {
          "description": "PercentageCompleted",
          "format": "double",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "errorCode": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "LtrBackupResponse": {
      "description": "Response for the LTR backup API call",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Long Term Retention Backup Operation Resource Properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LtrBackupOperationResponseProperties"
        }
      }
    },
    "LtrServerBackupOperation": {
      "description": "Response for the LTR backup Operation API call",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "properties": {
          "description": "Long Term Retention Backup Operation Resource Properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LtrBackupOperationResponseProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LtrServerBackupOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LtrServerBackupOperation"
          },
          "description": "The list of long term retention server backup operations"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      },
      "description": "A list of long term retention backup operations for server."
    },
    "LtrPreBackupResponse": {
      "description": "Response for the LTR pre-backup API call",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "Additional Properties for the pre backup response",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LtrPreBackupResponseProperties"
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "CapabilityBase": {
      "type": "object",
      "description": "Base object for representing capability",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointProperty",
          "description": "Private endpoint which the connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStateProperty",
          "description": "Connection state of the private endpoint connection."
        },
        "provisioningState": {
          "description": "The provisioning state of the private endpoint connection. Can be Succeeded, Updating, Deleting, Deleted or Failed.",
          "type": "string",
          "readOnly": true
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to."
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the private endpoint.",
          "type": "string",
          "format": "arm-id"
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "required": [
        "status",
        "description"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "The private link service connection status. Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "type": "string"
        },
        "description": {
          "description": "The private link service connection description. The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "The actions required for private link service connection. A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A collection of information about the state of the private endpoint connection."
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "The private link resource required zone names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "The private link resource group id.",
          "readOnly": true
        }
      }
    }
  }
}