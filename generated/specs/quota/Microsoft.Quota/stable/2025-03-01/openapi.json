{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Quota",
    "version": "2025-03-01"
  },
  "components": {},
  "paths": {
    "/{scope}/providers/Microsoft.Quota/usages/{resourceName}": {
      "get": {
        "tags": [
          "UsagesInformation"
        ],
        "description": "Get the current usage of a resource.",
        "operationId": "Usages_Get",
        "x-ms-examples": {
          "Quotas_UsagesRequest_ForNetwork": {
            "$ref": "./examples/getNetworkOneSkuUsages.json"
          },
          "Quotas_UsagesRequest_ForCompute": {
            "$ref": "./examples/getComputeOneSkuUsages.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceNameInParameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The usage information will be returned in the response.",
            "schema": {
              "$ref": "#/definitions/CurrentUsagesBase"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Quota/usages": {
      "get": {
        "tags": [
          "UsagesInformation"
        ],
        "description": "Get a list of current usage for all resources for the scope specified.",
        "operationId": "Usages_List",
        "x-ms-examples": {
          "Quotas_listUsagesForNetwork": {
            "$ref": "./examples/getNetworkUsages.json"
          },
          "Quotas_listUsagesForCompute": {
            "$ref": "./examples/getComputeUsages.json"
          },
          "Quotas_listUsagesMachineLearningServices": {
            "$ref": "./examples/getMachineLearningServicesUsages.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Usage information will be returned in the response with pagination.",
            "schema": {
              "$ref": "#/definitions/UsagesLimits"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. It should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Quota/quotas/{resourceName}": {
      "get": {
        "tags": [
          "QuotaInformation"
        ],
        "description": "Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request.",
        "operationId": "Quota_Get",
        "x-ms-examples": {
          "Quotas_UsagesRequest_ForNetwork": {
            "$ref": "./examples/getNetworkOneSkuQuotaLimit.json"
          },
          "Quotas_Get_Request_ForCompute": {
            "$ref": "./examples/getComputeOneSkuQuotaLimit.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceNameInParameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The quota information will be returned in the response with pagination.",
            "schema": {
              "$ref": "#/definitions/CurrentQuotaLimitBase"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuotaInformation"
        ],
        "description": "Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps:\n1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in [this example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).\n2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request.",
        "operationId": "Quota_CreateOrUpdate",
        "x-ms-examples": {
          "Quotas_PutRequest_ForNetwork": {
            "$ref": "./examples/putNetworkOneSkuQuotaRequest.json"
          },
          "Quotas_Put_Request_ForCompute": {
            "$ref": "./examples/putComputeOneSkuQuotaRequest.json"
          },
          "Quotas_Request_ForMachineLearningServices_LowPriorityResource": {
            "$ref": "./examples/putMachineLearningServicesQuotaRequestLowPriority.json"
          },
          "Quotas_PutRequest_ForNetwork_StandardSkuPublicIpAddressesResource": {
            "$ref": "./examples/putNetworkOneSkuQuotaRequestStandardSkuPublicIpAddresses.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceNameInParameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          },
          {
            "name": "createQuotaRequest",
            "in": "body",
            "description": "Quota request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrentQuotaLimitBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the quota request details.",
            "schema": {
              "$ref": "#/definitions/CurrentQuotaLimitBase"
            }
          },
          "202": {
            "description": "The request is accepted and is being processed. To check the status for this request, use the value for the quota request ID **id** obtained in the response of a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "QuotaInformation"
        ],
        "description": "Update the quota limit for a specific resource to the specified value:\n1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in [this example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).\n2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request.",
        "operationId": "Quota_Update",
        "x-ms-examples": {
          "Quotas_Request_PatchForNetwork": {
            "$ref": "./examples/patchNetworkOneSkuQuotaRequest.json"
          },
          "Quotas_Request_PatchForCompute": {
            "$ref": "./examples/patchComputeQuotaRequest.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceNameInParameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          },
          {
            "name": "createQuotaRequest",
            "in": "body",
            "description": "Quota requests payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrentQuotaLimitBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the quota request details.",
            "schema": {
              "$ref": "#/definitions/CurrentQuotaLimitBase"
            }
          },
          "202": {
            "description": "The request is accepted and is being processed. To check the status for this request, use the value for the quota request ID **id** in a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Quota/quotas": {
      "get": {
        "tags": [
          "QuotaInformation"
        ],
        "description": "Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota.",
        "operationId": "Quota_List",
        "x-ms-examples": {
          "Quotas_listQuotaLimitsForNetwork": {
            "$ref": "./examples/getNetworkQuotaLimits.json"
          },
          "Quotas_listQuotaLimitsForCompute": {
            "$ref": "./examples/getComputeQuotaLimits.json"
          },
          "Quotas_listQuotaLimitsMachineLearningServices": {
            "$ref": "./examples/getMachineLearningServicesQuotaLimits.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Quota information will be returned in the response with pagination.",
            "schema": {
              "$ref": "#/definitions/QuotaLimits"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Quota/quotaRequests/{id}": {
      "get": {
        "tags": [
          "QuotaRequests"
        ],
        "x-ms-examples": {
          "QuotaRequestStatus": {
            "$ref": "./examples/getQuotaRequestStatusById.json"
          },
          "QuotaRequestInProgress": {
            "$ref": "./examples/getQuotaRequestStatusInProgress.json"
          },
          "QuotaRequestFailed": {
            "$ref": "./examples/getQuotaRequestStatusFailed.json"
          }
        },
        "description": "Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID **id** is returned in the response of the PUT operation.",
        "operationId": "QuotaRequestStatus_Get",
        "parameters": [
          {
            "$ref": "#/parameters/RequestIdInParameters"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returning the status for the quota request.",
            "schema": {
              "$ref": "#/definitions/QuotaRequestDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Quota/quotaRequests": {
      "get": {
        "tags": [
          "QuotaRequests"
        ],
        "x-ms-examples": {
          "QuotaRequestHistory": {
            "$ref": "./examples/getQuotaRequestsHistory.json"
          }
        },
        "description": "For the specified scope, get the current quota requests for a one year period ending at the time is made. Use the **oData** filter to select quota requests.",
        "operationId": "QuotaRequestStatus_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ScopeInPath"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field                    | Supported operators  \n|---------------------|------------------------\n\r\n|requestSubmitTime | ge, le, eq, gt, lt\n |provisioningState eq {QuotaRequestState}\n |resourceName eq {resourceName}\n"
          },
          {
            "$ref": "#/parameters/TopQueryParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Sending quota request status and details.",
            "schema": {
              "$ref": "#/definitions/QuotaRequestDetailsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Quota/operations": {
      "get": {
        "summary": "GET quota operations.",
        "description": "List all the operations supported by the Microsoft.Quota resource provider.",
        "operationId": "QuotaOperation_List",
        "x-ms-examples": {
          "GetOperations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "tags": [
          "Operations"
        ],
        "responses": {
          "200": {
            "description": "List all the operations.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ExceptionResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}": {
      "put": {
        "tags": [
          "GroupQuotas"
        ],
        "summary": "Creates a new GroupQuota for the name passed.",
        "description": "Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked.",
        "operationId": "GroupQuotas_CreateOrUpdate",
        "x-ms-examples": {
          "GroupQuotas_Put_Request_ForCompute": {
            "$ref": "./examples/GroupQuotas/PutGroupQuotas.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "GroupQuotaPutRequestBody",
            "in": "body",
            "description": "The GroupQuota body details for creation or update of a GroupQuota entity.",
            "schema": {
              "$ref": "#/definitions/GroupQuotasEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Create or Update",
            "schema": {
              "$ref": "#/definitions/GroupQuotasEntity"
            }
          },
          "201": {
            "description": "Request Accepted, Create or Update",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/LROResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GroupQuotas"
        ],
        "summary": "Updates a new GroupQuotas for the name passed.",
        "description": "Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. \n Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged.",
        "operationId": "GroupQuotas_Update",
        "x-ms-examples": {
          "GroupQuotas_Patch_Request_ForCompute": {
            "$ref": "./examples/GroupQuotas/PatchGroupQuotas.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": " GroupQuotasPatchRequestBody",
            "in": "body",
            "description": "The  GroupQuotas Patch Request.",
            "schema": {
              "$ref": "#/definitions/GroupQuotasEntityPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotasEntity"
            }
          },
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Bad Request",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GroupQuotas"
        ],
        "summary": "Gets GroupQuotas for the name passed.",
        "description": "Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs.",
        "operationId": "GroupQuotas_Get",
        "x-ms-examples": {
          "GroupQuotas_Get_Request_ForCompute": {
            "$ref": "./examples/GroupQuotas/GetGroupQuotas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotasEntity"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GroupQuotas"
        ],
        "summary": "Deletes GroupQuotas for the name passed.",
        "description": "Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost.",
        "operationId": "GroupQuotas_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "GroupQuotas_Delete_Request_ForCompute": {
            "$ref": "./examples/GroupQuotas/DeleteGroupQuotas.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas": {
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "GroupQuotas"
        ],
        "summary": "Lists GroupQuotas for the scope passed.",
        "description": "Lists GroupQuotas for the scope passed. It will return the GroupQuotas QuotaEntity properties only.The details on group quota can be access from the group quota APIs.",
        "operationId": "GroupQuotas_List",
        "x-ms-examples": {
          "GroupQuotas_List_Request_ForCompute": {
            "$ref": "./examples/GroupQuotas/GetGroupQuotasList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptions/{subscriptionId}": {
      "put": {
        "tags": [
          "GroupQuotasSubscriptions"
        ],
        "summary": "Adds subscription to the GroupQuotas.",
        "description": "Adds a subscription to GroupQuotas. The subscriptions will be validated based on the additionalAttributes defined in the GroupQuota. The additionalAttributes works as filter for the subscriptions, which can be included in the GroupQuotas. The request's TenantId is validated against the subscription's TenantId.",
        "operationId": "GroupQuotaSubscriptions_CreateOrUpdate",
        "x-ms-examples": {
          "GroupQuotaSubscriptions_Put_Subscriptions": {
            "$ref": "./examples/GroupQuotasSubscriptions/PutGroupQuotasSubscription.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, Create or Update",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionId"
            }
          },
          "201": {
            "description": "Request Accepted, Create or Update",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/LROResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GroupQuotasSubscriptions"
        ],
        "summary": "Updates the GroupQuotas with the subscription to add to the subscriptions list.",
        "description": "Updates the GroupQuotas with the subscription to add to the subscriptions list. The subscriptions will be validated if additionalAttributes are defined in the GroupQuota. The request's TenantId is validated against the subscription's TenantId.",
        "operationId": "GroupQuotaSubscriptions_Update",
        "x-ms-examples": {
          "GroupQuotaSubscriptions_Patch_Subscriptions": {
            "$ref": "./examples/GroupQuotasSubscriptions/PatchGroupQuotasSubscription.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionId"
            }
          },
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GroupQuotasSubscriptions"
        ],
        "summary": "Removes the subscription from GroupQuotas.",
        "description": "Removes the subscription from GroupQuotas. The request's TenantId is validated against the subscription's TenantId.",
        "operationId": "GroupQuotaSubscriptions_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "GroupQuotaSubscriptions_Delete_Subscriptions": {
            "$ref": "./examples/GroupQuotasSubscriptions/DeleteGroupQuotaSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GroupQuotasSubscriptions"
        ],
        "summary": "Returns the subscriptionId along with its provisioning state for being associated with the GroupQuotas.",
        "description": "Returns the subscriptionIds along with its provisioning state for being associated with the GroupQuota. If the subscription is not a member of GroupQuota, it will return 404, else 200.",
        "operationId": "GroupQuotaSubscriptions_Get",
        "x-ms-examples": {
          "GroupQuotaSubscriptions_Get_Subscriptions": {
            "$ref": "./examples/GroupQuotasSubscriptions/GetGroupQuotaSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionId"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptions": {
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "GroupQuotasSubscriptions"
        ],
        "summary": "Returns a list of the subscriptionIds for the GroupQuotas.",
        "description": "Returns a list of the subscriptionIds associated with the GroupQuotas.",
        "operationId": "GroupQuotaSubscriptions_List",
        "x-ms-examples": {
          "GroupQuotaSubscriptions_List_Subscriptions": {
            "$ref": "./examples/GroupQuotasSubscriptions/ListGroupQuotaSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionIdList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptionRequests": {
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "GroupQuotaSubscriptionRequests"
        ],
        "summary": "List the status of all requests to add subscriptionIds to the GroupQuotasEntity.",
        "description": "List API to check the status of a subscriptionId requests by requestId. Request history is maintained for 1 year.",
        "operationId": "GroupQuotaSubscriptionRequests_List",
        "x-ms-examples": {
          "GroupQuotaSubscriptionRequests_List": {
            "$ref": "./examples/SubscriptionRequests/SubscriptionRequests_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, with the details of the subscriptionId request.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionRequestStatusList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptionRequests/{requestId}": {
      "get": {
        "tags": [
          "GroupQuotaSubscriptionRequests"
        ],
        "summary": "Get the status of a single subscriptionId request by requestId. The Async pattern will be used, if we determine the request is taking longer, else it can return 200 response as response to the subscription add API call.",
        "description": "Get API to check the status of a subscriptionIds request by requestId.  Use the polling API - OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in seconds to check the intermediate status. This API provides the finals status with the request details and status.",
        "operationId": "GroupQuotaSubscriptionRequests_Get",
        "x-ms-examples": {
          "GroupQuotaSubscriptionRequests_Get": {
            "$ref": "./examples/SubscriptionRequests/SubscriptionRequests_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/RequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, with the details of the subscriptionId request.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaSubscriptionRequestStatus"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaLimits/{location}": {
      "patch": {
        "tags": [
          "GroupQuotaLimits"
        ],
        "summary": "Create the GroupQuota requests for a specific ResourceProvider/Location/Resource.",
        "description": "Create the GroupQuota requests for a specific ResourceProvider/Location/Resource. The resourceName properties are specified in the request body. Only 1 resource quota can be requested. Please note that patch request creates a new groupQuota request.\nUse the polling API - OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in seconds to check the intermediate status. This API provides the finals status with the request details and status.",
        "operationId": "GroupQuotaLimitsRequest_Update",
        "x-ms-examples": {
          "GroupQuotaLimitsRequests_Update": {
            "$ref": "./examples/GroupQuotaLimitsRequests/PatchGroupQuotaLimitsRequests-Compute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "groupQuotaRequest",
            "in": "body",
            "description": "The GroupQuotaRequest body details for specific resourceProvider/location/resources.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaLimitList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success, with the details of the group quota request.",
            "schema": {
              "$ref": "#/definitions/GroupQuotaLimitList"
            }
          },
          "202": {
            "description": "Request Accepted, Create or Update",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GroupQuotaLimits"
        ],
        "summary": "Gets the GroupQuotaLimits for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}.",
        "description": "Gets the GroupQuotaLimits for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}.",
        "operationId": "GroupQuotaLimits_List",
        "x-ms-examples": {
          "GroupQuotaLimits_Get_Request_ForCompute": {
            "$ref": "./examples/GroupQuotaLimits/ListGroupQuotaLimits-Compute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupQuotaLimitList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/groupQuotaRequests/{requestId}": {
      "get": {
        "tags": [
          "GroupQuotaLimitRequest"
        ],
        "summary": "Get the status of a single GroupQuota request by requestId.",
        "description": "Get API to check the status of a GroupQuota request by requestId.",
        "operationId": "GroupQuotaLimitsRequest_Get",
        "x-ms-examples": {
          "GroupQuotaLimitsRequests_Get": {
            "$ref": "./examples/GroupQuotaLimitsRequests/GroupQuotaLimitsRequests_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/RequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, with the details of the group quota request.",
            "schema": {
              "$ref": "#/definitions/SubmittedResourceRequestStatus"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaRequests": {
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "GroupQuotaLimitRequest"
        ],
        "summary": "Get the status of a single GroupQuota request by requestId.",
        "description": "Get API to check the status of a GroupQuota request by requestId.",
        "operationId": "GroupQuotaLimitsRequest_List",
        "x-ms-examples": {
          "GroupQuotaLimitsRequest_List": {
            "$ref": "./examples/GroupQuotaLimitsRequests/GroupQuotaLimitsRequests_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterResourceAndLocationInQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, with the details of the group quota request.",
            "schema": {
              "$ref": "#/definitions/SubmittedResourceRequestStatusList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocations/{location}": {
      "patch": {
        "tags": [
          "SubscriptionQuotaAllocation"
        ],
        "summary": "Request to assign quota from group quota to a specific Subscription. This request will use Asynchronous pattern with 202 response and status polling API.",
        "description": "Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >= usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota. User can collect unused quotas from multiple subscriptions within the groupQuota and assign the groupQuota to the subscription, where it's needed.",
        "operationId": "GroupQuotaSubscriptionAllocationRequest_Update",
        "x-ms-examples": {
          "SubscriptionQuotaAllocation_Patch_Request_ForCompute": {
            "$ref": "./examples/SubscriptionQuotaAllocationRequests/PatchSubscriptionQuotaAllocationRequest-Compute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "allocateQuotaRequest",
            "in": "body",
            "description": "Quota requests payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotaAllocationsList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotaAllocationsList"
            }
          },
          "202": {
            "description": "Request Accepted",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "type": "integer",
                "format": "int64"
              },
              "Location": {
                "description": "URL for determining when an operation has completed. Send a GET request to the URL in Location header.\nThe URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.\nTo get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.\n\nFor more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "SubscriptionQuotaAllocation"
        ],
        "summary": "Gets all the quota allocated to a subscription for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}.",
        "description": "Gets all the quota allocated to a subscription for the specified resource provider and location for resource names passed in $filter=resourceName eq {SKU}. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.",
        "operationId": "GroupQuotaSubscriptionAllocation_List",
        "x-ms-examples": {
          "SubscriptionQuotaAllocation_List_ForCompute": {
            "$ref": "./examples/SubscriptionQuotaAllocation/SubscriptionQuotaAllocation_List-Compute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionQuotaAllocationsList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests/{allocationId}": {
      "get": {
        "tags": [
          "SubscriptionQuotaAllocationRequest"
        ],
        "operationId": "GroupQuotaSubscriptionAllocationRequest_Get",
        "summary": "Get the status of the quota allocation request for the subscriptionId.",
        "description": "Get the quota allocation request status for the subscriptionId by allocationId.",
        "x-ms-examples": {
          "SubscriptionQuotaAllocationRequests_Get_Request_ForCompute": {
            "$ref": "./examples/SubscriptionQuotaAllocationRequests/SubscriptionQuotaAllocationRequests_Get-Compute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/AllocationId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QuotaAllocationRequestStatus"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests": {
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "SubscriptionQuotaAllocationRequest"
        ],
        "summary": "Get all the quotaAllocationRequests for a resourceProvider/location.",
        "description": "Get all the quotaAllocationRequests for a resourceProvider/location. The filter paramter for location is required.",
        "operationId": "GroupQuotaSubscriptionAllocationRequest_List",
        "x-ms-examples": {
          "SubscriptionQuotaAllocation_List_Request_ForCompute": {
            "$ref": "./examples/SubscriptionQuotaAllocationRequests/SubscriptionQuotaAllocationRequests_List-Compute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ManagementGroupId"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GroupQuotaName"
          },
          {
            "$ref": "#/parameters/ResourceProviderName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterLocationInQuery"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/QuotaAllocationRequestStatusList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdInParameters": {
      "name": "subscriptionId",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Azure subscription ID."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ResourceNameInParameters": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource name for a given resource provider. For example:\r\n- SKU name for Microsoft.Compute\r\n- SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices\r\n For Microsoft.Network PublicIPAddresses.",
      "x-ms-parameter-location": "method"
    },
    "ResourceDimensionTypeInParameter": {
      "name": "resourceDimension",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource dimension type for a resource provider. For example:\r\n- locations and SKUs for Microsoft.Compute\r\n- resource groups, batch accounts, and SKUs for Microsoft.Batch",
      "x-ms-parameter-location": "method"
    },
    "RequestIdInParameters": {
      "name": "id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Quota request ID.",
      "x-ms-parameter-location": "method"
    },
    "TopQueryParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Number of records to return.",
      "minimum": 1,
      "x-ms-parameter-location": "method"
    },
    "SkipTokenParameter": {
      "name": "$skiptoken",
      "in": "query",
      "type": "string",
      "required": false,
      "description": "The **Skiptoken** parameter is used only if a previous operation returned a partial result. If a previous response contains a **nextLink** element, its value includes a **skiptoken** parameter that specifies a starting point to use for subsequent calls.",
      "x-ms-parameter-location": "method"
    },
    "ScopeInPath": {
      "name": "scope",
      "description": "The target Azure resource URI. For example, `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`. This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "RequestId": {
      "name": "requestId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Request Id.",
      "x-ms-parameter-location": "method"
    },
    "ResourceName": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "description": "Resource name.",
      "x-ms-parameter-location": "method"
    },
    "AllocationId": {
      "name": "allocationId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Request Id.",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupId": {
      "name": "managementGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "description": "Management Group Id.",
      "x-ms-parameter-location": "method"
    },
    "GroupQuotaName": {
      "name": "groupQuotaName",
      "in": "path",
      "required": true,
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "type": "string",
      "description": "The GroupQuota name. The name should be unique for the provided context tenantId/MgId.",
      "x-ms-parameter-location": "method"
    },
    "ResourceProviderName": {
      "name": "resourceProviderName",
      "in": "path",
      "pattern": "^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63}$",
      "required": true,
      "type": "string",
      "description": "The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API.",
      "x-ms-parameter-location": "method"
    },
    "FilterLocationInQuery": {
      "name": "$filter",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "| Field | Supported operators  \r\n|---------------------|------------------------\n\r\n location eq {location}\n Example: $filter=location eq eastus",
      "minLength": 12
    },
    "FilterResourceAndLocationInQuery": {
      "name": "$filter",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "| Field | Supported operators  \r\n|---------------------|------------------------\n\r\n location eq {location} and resource eq {resourceName}\n Example: $filter=location eq eastus and resourceName eq cores",
      "minLength": 12
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "OperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationResponse"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next page of items."
        }
      }
    },
    "OperationResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "origin": {
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Provider name."
        },
        "resource": {
          "type": "string",
          "description": "Resource name."
        },
        "operation": {
          "type": "string",
          "description": "Operation name."
        },
        "description": {
          "type": "string",
          "description": "Operation description."
        }
      }
    },
    "CommonResourceProperties": {
      "type": "object",
      "description": "Resource properties.",
      "properties": {
        "id": {
          "description": "Resource ID",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type. Example: \"Microsoft.Quota/quotas\""
        }
      }
    },
    "CurrentUsagesBase": {
      "type": "object",
      "description": "Resource usage.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource type.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Usage properties for the specified resource.",
          "$ref": "#/definitions/UsagesProperties"
        }
      }
    },
    "UsagesProperties": {
      "description": "Usage properties for the specified resource.",
      "type": "object",
      "properties": {
        "usages": {
          "description": "The quota limit properties for this resource.",
          "$ref": "#/definitions/UsagesObject"
        },
        "unit": {
          "description": " The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name provided by the resource provider. Use this property name when requesting quota.",
          "$ref": "#/definitions/ResourceName"
        },
        "resourceType": {
          "description": "The name of the resource type. Optional field.",
          "$ref": "#/definitions/ResourceTypesName"
        },
        "quotaPeriod": {
          "description": "The time period for the summary of the quota usage values. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because it is not relevant for all resources such as compute.",
          "type": "string",
          "readOnly": true
        },
        "isQuotaApplicable": {
          "description": "States if quota can be requested for this resource.",
          "type": "boolean",
          "readOnly": true
        },
        "properties": {
          "description": "Additional properties for the specific resource provider.",
          "type": "object"
        }
      }
    },
    "UsagesLimits": {
      "type": "object",
      "description": "Quota limits.",
      "properties": {
        "value": {
          "description": "List of quota limits.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentUsagesBase"
          }
        },
        "nextLink": {
          "description": "The URI used to fetch the next page of quota limits. When there are no more pages, this is null.",
          "type": "string"
        }
      }
    },
    "CurrentQuotaLimitBase": {
      "type": "object",
      "description": "Quota limit.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource type.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Quota properties for the specified resource, based on the API called, Quotas or Usages.",
          "$ref": "#/definitions/QuotaProperties"
        }
      }
    },
    "QuotaProperties": {
      "description": "Quota properties for the specified resource.",
      "type": "object",
      "properties": {
        "limit": {
          "description": "Resource quota limit properties.",
          "$ref": "#/definitions/LimitJsonObject"
        },
        "unit": {
          "description": " The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name provided by the resource provider. Use this property name when requesting quota.",
          "$ref": "#/definitions/ResourceName"
        },
        "resourceType": {
          "description": "The name of the resource type. Optional field.",
          "$ref": "#/definitions/ResourceTypesName"
        },
        "quotaPeriod": {
          "description": "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant.",
          "type": "string",
          "readOnly": true
        },
        "isQuotaApplicable": {
          "description": "States if quota can be requested for this resource.",
          "type": "boolean",
          "readOnly": true
        },
        "properties": {
          "description": "Additional properties for the specific resource provider.",
          "type": "object"
        }
      }
    },
    "ResourceName": {
      "type": "object",
      "description": "Name of the resource provided by the resource Provider. When requesting quota, use this property name.",
      "properties": {
        "value": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": false
        },
        "localizedValue": {
          "description": "Resource display name.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "QuotaLimits": {
      "type": "object",
      "description": "Quota limits.",
      "properties": {
        "value": {
          "description": "List of quota limits.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentQuotaLimitBase"
          }
        },
        "nextLink": {
          "description": "The URI used to fetch the next page of quota limits. When there are no more pages, this string is null.",
          "type": "string"
        }
      }
    },
    "QuotaLimitsResponse": {
      "type": "object",
      "description": "Quota limits request response.",
      "properties": {
        "value": {
          "description": "List of quota limits with the quota request status.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentQuotaLimitBase"
          }
        },
        "nextLink": {
          "description": "The URI used to fetch the next page of quota limits. When there are no more pages, this is null.",
          "type": "string"
        }
      }
    },
    "CreateGenericQuotaRequestParameters": {
      "type": "object",
      "description": "Quota change requests information.",
      "properties": {
        "value": {
          "description": "Quota change requests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentQuotaLimitBase"
          }
        }
      }
    },
    "SubRequest": {
      "type": "object",
      "description": "Request property.",
      "properties": {
        "name": {
          "description": "Resource name.",
          "$ref": "#/definitions/ResourceName"
        },
        "resourceType": {
          "description": "Resource type for which the quota properties were requested.",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "description": " Quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The quota request status.",
          "$ref": "#/definitions/QuotaRequestState"
        },
        "message": {
          "description": "User-friendly status message.",
          "type": "string",
          "readOnly": true
        },
        "subRequestId": {
          "description": "Quota request ID.",
          "type": "string",
          "readOnly": true
        },
        "limit": {
          "description": "Resource quota limit properties.",
          "$ref": "#/definitions/LimitJsonObject"
        }
      }
    },
    "LimitObjectTypes": {
      "description": "The limit object type.",
      "enum": [
        "LimitValue"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "limitType",
        "modelAsString": true
      }
    },
    "LimitTypes": {
      "description": "The quota or usages limit types.",
      "enum": [
        "Independent",
        "Shared"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "quotaLimitTypes",
        "modelAsString": true
      }
    },
    "LimitJsonObject": {
      "description": "LimitJson abstract class.",
      "required": [
        "limitObjectType"
      ],
      "type": "object",
      "properties": {
        "limitObjectType": {
          "$ref": "#/definitions/LimitObjectTypes"
        }
      },
      "discriminator": "limitObjectType"
    },
    "UsagesTypes": {
      "description": "The quota or usages limit types.",
      "enum": [
        "Individual",
        "Combined"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "usagesTypes",
        "modelAsString": true
      }
    },
    "UsagesObject": {
      "description": "The resource usages value.",
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "The usages value."
        },
        "usagesType": {
          "$ref": "#/definitions/UsagesTypes"
        }
      },
      "required": [
        "value"
      ]
    },
    "LimitObject": {
      "description": "The resource quota limit value.",
      "type": "object",
      "x-ms-discriminator-value": "LimitValue",
      "allOf": [
        {
          "$ref": "#/definitions/LimitJsonObject"
        }
      ],
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "The quota/limit value"
        },
        "limitType": {
          "$ref": "#/definitions/LimitTypes"
        }
      },
      "required": [
        "value"
      ]
    },
    "QuotaRequestOneResourceSubmitResponse": {
      "description": "Quota request response.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Quota request ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the quota request.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type. \"Microsoft.Quota/ServiceLimitRequests\""
        },
        "properties": {
          "description": "Quota request details.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/quotaRequestOneResourceProperties"
        }
      }
    },
    "QuotaRequestSubmitResponse": {
      "description": "Quota request response.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Quota request ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Quota request name.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Quota request details.",
          "type": "object",
          "$ref": "#/definitions/QuotaRequestProperties"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type. \"Microsoft.Quota/quotas\"."
        }
      }
    },
    "QuotaRequestSubmitResponse202": {
      "description": "The quota request response with the quota request ID.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The quota request ID. To check the request status, use the **id** value in a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Operation ID.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Quota request status.",
          "$ref": "#/definitions/QuotaRequestStatusDetails",
          "x-ms-client-flatten": true
        }
      }
    },
    "QuotaRequestStatusDetails": {
      "description": "Quota request status details.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Quota request status.",
          "$ref": "#/definitions/QuotaRequestState",
          "readOnly": true
        },
        "message": {
          "description": "User-friendly message.",
          "type": "string",
          "readOnly": true
        },
        "limit": {
          "description": "Resource quota limit properties.",
          "$ref": "#/definitions/LimitObject"
        },
        "unit": {
          "description": " The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string",
          "readOnly": false
        },
        "name": {
          "description": "Resource name provided by the resource provider. Use this property name when requesting quota.",
          "$ref": "#/definitions/ResourceName"
        },
        "resourceType": {
          "description": "The name of the resource type. Optional field.",
          "$ref": "#/definitions/ResourceTypesName"
        },
        "quotaPeriod": {
          "description": "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Additional properties for the specific resource provider.",
          "type": "object"
        }
      }
    },
    "QuotaRequestDetails": {
      "type": "object",
      "description": "List of quota requests with details.",
      "properties": {
        "id": {
          "description": "Quota request ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Quota request name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type. \"Microsoft.Quota/quotas\"."
        },
        "properties": {
          "description": "Quota request details.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QuotaRequestProperties"
        }
      }
    },
    "QuotaRequestDetailsList": {
      "description": "Quota request information.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Quota request details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaRequestDetails"
          }
        },
        "nextLink": {
          "description": "The URI for fetching the next page of quota limits. When there are no more pages, this string is null.",
          "type": "string"
        }
      }
    },
    "QuotaRequestProperties": {
      "type": "object",
      "description": "Quota request properties.",
      "properties": {
        "provisioningState": {
          "description": "The quota request status.",
          "$ref": "#/definitions/QuotaRequestState"
        },
        "message": {
          "description": "User-friendly status message.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "description": "Error details of the quota request.",
          "$ref": "#/definitions/ServiceErrorDetail"
        },
        "requestSubmitTime": {
          "description": "The quota request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "value": {
          "description": "Quota request details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubRequest"
          },
          "x-ms-identifiers": [
            "subRequestId"
          ]
        }
      }
    },
    "quotaRequestOneResourceProperties": {
      "type": "object",
      "description": "Quota request.",
      "properties": {
        "provisioningState": {
          "description": "Quota request status.",
          "readOnly": true,
          "$ref": "#/definitions/QuotaRequestState"
        },
        "message": {
          "description": "User-friendly status message.",
          "type": "string",
          "readOnly": true
        },
        "requestSubmitTime": {
          "description": "Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "limit": {
          "description": "Resource quota limit properties.",
          "$ref": "#/definitions/LimitObject"
        },
        "currentValue": {
          "description": "Usage information for the current resource.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "unit": {
          "description": " The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string",
          "readOnly": false
        },
        "name": {
          "description": "Resource name provided by the resource provider. Use this property name when requesting quota.",
          "$ref": "#/definitions/ResourceName"
        },
        "resourceType": {
          "description": "The name of the resource type. Optional field.",
          "$ref": "#/definitions/ResourceTypesName"
        },
        "quotaPeriod": {
          "description": "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant.",
          "type": "string",
          "readOnly": true
        },
        "isQuotaApplicable": {
          "description": "States if quota can be requested for this resource.",
          "type": "boolean",
          "readOnly": true
        },
        "error": {
          "description": "Error details of the quota request.",
          "$ref": "#/definitions/ServiceErrorDetail"
        },
        "properties": {
          "description": "Additional properties for the specific resource provider.",
          "type": "object"
        }
      }
    },
    "QuotaRequestState": {
      "description": "Quota request status.",
      "enum": [
        "Accepted",
        "Invalid",
        "Succeeded",
        "Failed",
        "InProgress"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "QuotaRequestState",
        "modelAsString": true
      }
    },
    "ResourceTypesName": {
      "description": "Resource types. For extensibility, it is a string. Optional field.",
      "readOnly": false,
      "type": "string"
    },
    "ExceptionResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ServiceError",
          "description": "API error details."
        }
      },
      "description": "Error."
    },
    "ServiceError": {
      "description": "API error details.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceErrorDetail"
          },
          "x-ms-identifiers": [
            "code"
          ],
          "description": "List of error details.",
          "readOnly": true
        }
      }
    },
    "ServiceErrorDetail": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Error message."
        }
      }
    },
    "RequestState": {
      "description": "Request status.",
      "enum": [
        "Accepted",
        "Created",
        "Invalid",
        "Succeeded",
        "Failed",
        "InProgress",
        "Canceled"
      ],
      "readOnly": true,
      "type": "string",
      "x-ms-enum": {
        "name": "RequestState",
        "modelAsString": true
      }
    },
    "QuotaAllocationRequestStatus": {
      "type": "object",
      "description": "The subscription quota allocation status.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "requestedResource": {
              "$ref": "#/definitions/QuotaAllocationRequestBase"
            },
            "requestSubmitTime": {
              "description": "The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ",
              "type": "string",
              "readOnly": true,
              "format": "date-time"
            },
            "provisioningState": {
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            },
            "faultCode": {
              "type": "string",
              "description": "Details of the failure.",
              "readOnly": true
            }
          }
        }
      }
    },
    "QuotaAllocationRequestStatusList": {
      "type": "object",
      "description": "List of QuotaAllocation Request Status",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of QuotaAllocation Request Status",
          "items": {
            "$ref": "#/definitions/QuotaAllocationRequestStatus"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LROResponse": {
      "type": "object",
      "description": "The provisioning state for the operation.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            }
          }
        }
      }
    },
    "GroupQuotaRequestBase": {
      "type": "object",
      "description": "The new GroupQuota limit requested.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "The new quota limit for the subscription. The incremental quota will be allocated from pre-approved group quota."
            },
            "name": {
              "type": "object",
              "x-ms-client-flatten": true,
              "readOnly": true,
              "description": "Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.",
              "properties": {
                "value": {
                  "description": "Resource name.",
                  "type": "string",
                  "readOnly": true
                },
                "localizedValue": {
                  "description": "Resource display name.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "region": {
              "$ref": "#/definitions/RegionScope"
            },
            "comments": {
              "description": "GroupQuota Request comments and details for request. This is optional paramter to provide more details related to the requested resource.",
              "type": "string"
            }
          }
        }
      }
    },
    "QuotaAllocationRequestBase": {
      "type": "object",
      "description": "The new quota request allocated to subscription.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "The new quota limit for the subscription. The incremental quota will be allocated from pre-approved group quota."
            },
            "name": {
              "type": "object",
              "x-ms-client-flatten": true,
              "description": "Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.",
              "readOnly": true,
              "properties": {
                "value": {
                  "description": "Resource name.",
                  "type": "string",
                  "readOnly": true
                },
                "localizedValue": {
                  "description": "Resource display name.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "region": {
              "type": "string",
              "description": "The location for which the subscription is allocated"
            }
          }
        }
      }
    },
    "AllocatedToSubscription": {
      "type": "object",
      "description": "SubscriptionIds and quota allocated to subscriptions from the GroupQuota.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "An Azure subscriptionId."
        },
        "quotaAllocated": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of quota allocated to this subscriptionId from the GroupQuotasEntity."
        }
      }
    },
    "AllocatedQuotaToSubscriptionList": {
      "type": "object",
      "description": "Quota allocated to subscriptions",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Group Quota Limit allocated to subscriptions.",
          "items": {
            "$ref": "#/definitions/AllocatedToSubscription"
          }
        }
      }
    },
    "GroupQuotaLimit": {
      "type": "object",
      "description": "Group Quota limit.",
      "properties": {
        "properties": {
          "description": "Group Quota properties for the specified resource.",
          "allOf": [
            {
              "$ref": "#/definitions/GroupQuotaDetails"
            }
          ]
        }
      }
    },
    "RegionScope": {
      "description": "Location/Azure region for the quota requested for resource.",
      "type": "string"
    },
    "GroupQuotaDetails": {
      "type": "object",
      "description": "Group Quota details.",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The resource name, such as SKU name."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The current Group Quota Limit at the parentId level."
        },
        "comment": {
          "description": "Any comment related to quota request.",
          "type": "string"
        },
        "unit": {
          "description": " The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "object",
          "x-ms-client-flatten": true,
          "readOnly": true,
          "description": "Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.",
          "properties": {
            "value": {
              "description": "Resource name.",
              "type": "string",
              "readOnly": true
            },
            "localizedValue": {
              "description": "Resource display name.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "availableLimit": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s)."
        },
        "allocatedToSubscriptions": {
          "readOnly": true,
          "$ref": "#/definitions/AllocatedQuotaToSubscriptionList"
        }
      }
    },
    "GroupQuotaLimitList": {
      "type": "object",
      "description": "List of Group Quota Limit details.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            },
            "value": {
              "type": "array",
              "description": "List of Group Quota Limit details.",
              "items": {
                "$ref": "#/definitions/GroupQuotaLimit"
              }
            },
            "nextLink": {
              "description": "The URL to use for getting the next set of results.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "GroupQuotaSubscriptionRequestStatus": {
      "type": "object",
      "description": "The new quota limit request status.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "subscriptionId": {
              "type": "string",
              "description": "The subscription Id"
            },
            "requestSubmitTime": {
              "description": "The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ",
              "type": "string",
              "format": "date-time"
            },
            "provisioningState": {
              "description": "Status of this subscriptionId being associated with the GroupQuotasEntity.",
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            }
          }
        }
      }
    },
    "GroupQuotaSubscriptionRequestStatusList": {
      "type": "object",
      "description": "List of GroupQuotaSubscriptionRequests Status",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of GroupQuotaSubscriptionRequests Status",
          "items": {
            "$ref": "#/definitions/GroupQuotaSubscriptionRequestStatus"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GroupQuotaSubscriptionId": {
      "type": "object",
      "description": "This represents a Azure subscriptionId that is associated with a GroupQuotasEntity.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "subscriptionId": {
              "description": "An Azure subscriptionId.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Status of this subscriptionId being associated with the GroupQuotasEntity.",
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            }
          }
        }
      }
    },
    "GroupQuotaSubscriptionIdList": {
      "type": "object",
      "description": "List of GroupQuotaSubscriptionIds",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of GroupQuotaSubscriptionIds",
          "items": {
            "$ref": "#/definitions/GroupQuotaSubscriptionId"
          }
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionQuotaAllocationRequestList": {
      "type": "object",
      "description": "List of Allocated Group Quota to the subscriptions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Allocated Group Quota to subscriptions.",
          "items": {
            "$ref": "#/definitions/QuotaAllocationRequestStatus"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionGroupQuotaAssignment": {
      "type": "object",
      "description": "MGId the source of group quota.",
      "properties": {
        "groupQuotaId": {
          "type": "string",
          "description": "The group quota id of the quota source."
        },
        "quotaAllocated": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of quota allocated to this subscriptionId from the quota source."
        }
      }
    },
    "SubscriptionQuotaAllocations": {
      "type": "object",
      "description": "Quota allocated to a subscription for the specific Resource Provider, Location, ResourceName. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.",
      "properties": {
        "properties": {
          "description": "Quota properties for the specified resource.",
          "allOf": [
            {
              "$ref": "#/definitions/SubscriptionQuotaDetails"
            }
          ]
        }
      }
    },
    "SubscriptionQuotaDetails": {
      "type": "object",
      "description": "Subscription Quota details.",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The resource name, such as SKU name."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The total quota limit for the subscription.",
          "readOnly": false
        },
        "shareableQuota": {
          "type": "integer",
          "format": "int64",
          "description": "The shareable quota for the subscription.",
          "readOnly": true
        },
        "name": {
          "type": "object",
          "x-ms-client-flatten": true,
          "readOnly": true,
          "description": "Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.",
          "properties": {
            "value": {
              "description": "Resource name.",
              "type": "string",
              "readOnly": true
            },
            "localizedValue": {
              "description": "Resource display name.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "SubmittedResourceRequestStatus": {
      "type": "object",
      "description": "Status of a single GroupQuota request.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "requestedResource": {
              "description": "Requested Resource.",
              "$ref": "#/definitions/GroupQuotaRequestBase"
            },
            "requestSubmitTime": {
              "description": "The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ",
              "type": "string",
              "readOnly": true,
              "format": "date-time"
            },
            "provisioningState": {
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            },
            "faultCode": {
              "type": "string",
              "description": "Details of the failure.",
              "readOnly": true
            }
          }
        }
      }
    },
    "SubmittedResourceRequestStatusList": {
      "type": "object",
      "description": "Share Quota Entity list.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Subscription groupQuotaRequests list.",
          "items": {
            "$ref": "#/definitions/SubmittedResourceRequestStatus"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionQuotaAllocationsStatusList": {
      "type": "object",
      "description": "Subscription quota allocation requests status list.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Subscription quota allocation status list.",
          "items": {
            "$ref": "#/definitions/SubmittedResourceRequestStatus"
          }
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionQuotaAllocationsList": {
      "type": "object",
      "description": "Subscription quota list.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "$ref": "#/definitions/RequestState"
            },
            "value": {
              "type": "array",
              "description": "Subscription quota list.",
              "items": {
                "$ref": "#/definitions/SubscriptionQuotaAllocations"
              }
            },
            "nextLink": {
              "description": "The URL to use for getting the next set of results.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ResourceBaseRequest": {
      "type": "object",
      "description": "Resource definition with the requested quota.",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The resource name, such as SKU name.",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "description": "Quota requested for the resource.",
          "format": "int64"
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values."
        }
      }
    },
    "ResourceUsageList": {
      "type": "object",
      "description": "List of resource usages and quotas for GroupQuota.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resource usages at Group Quotas.",
          "items": {
            "$ref": "#/definitions/ResourceUsages"
          }
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceUsages": {
      "type": "object",
      "description": "Resource details with usages and GroupQuota.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupQuotaUsagesBase"
        }
      }
    },
    "GroupQuotaUsagesBase": {
      "type": "object",
      "description": "Resource details with usages and GroupQuota.",
      "properties": {
        "name": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.",
          "properties": {
            "value": {
              "description": "Resource name.",
              "type": "string"
            },
            "localizedValue": {
              "description": "Resource display name.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "limit": {
          "type": "integer",
          "description": "Quota/limits for the resource.",
          "format": "int64"
        },
        "usages": {
          "type": "integer",
          "description": "Usages for the resource.",
          "format": "int64"
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values."
        }
      }
    },
    "GroupQuotasEntityBase": {
      "type": "object",
      "description": "Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.",
      "properties": {
        "displayName": {
          "description": "Display name of the GroupQuota entity.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the operation.",
          "readOnly": true,
          "$ref": "#/definitions/RequestState"
        }
      }
    },
    "GroupQuotasEntityBasePatch": {
      "type": "object",
      "description": "Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.",
      "properties": {
        "displayName": {
          "description": "Display name of the GroupQuota entity.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the operation.",
          "readOnly": true,
          "$ref": "#/definitions/RequestState"
        }
      }
    },
    "GroupQuotasEntityPatch": {
      "type": "object",
      "description": "Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "title": "Properties",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/GroupQuotasEntityBasePatch"
            }
          ]
        }
      }
    },
    "GroupQuotasEntity": {
      "type": "object",
      "description": "Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "title": "Properties",
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/GroupQuotasEntityBase"
                }
              ]
            }
          }
        }
      ]
    },
    "GroupQuotaList": {
      "type": "object",
      "description": "List of Group Quotas at MG level.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Group Quotas at MG level.",
          "items": {
            "$ref": "#/definitions/GroupQuotasEntity"
          }
        },
        "nextLink": {
          "description": "The URL to use for getting the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}