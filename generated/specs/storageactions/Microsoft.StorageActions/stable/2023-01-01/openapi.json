{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.StorageActions",
    "version": "2023-01-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.StorageActions/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Storage Actions Rest API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/misc/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/locations/{location}/previewActions": {
      "post": {
        "operationId": "StorageTasks_PreviewActions",
        "description": "Runs the input conditions against input object metadata properties and designates matched objects in response.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Represents an Azure geography region where supported resource providers live.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to preview action condition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTaskPreviewAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTaskPreviewAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PerformStorageTaskActionsPreview": {
            "$ref": "./examples/misc/PerformStorageTaskActionsPreview.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/storageTasks": {
      "get": {
        "operationId": "StorageTasks_ListBySubscription",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists all the storage tasks available under the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksBySubscription": {
            "$ref": "./examples/storageTasksList/ListStorageTasksBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks": {
      "get": {
        "operationId": "StorageTasks_ListByResourceGroup",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists all the storage tasks available under the given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTasksByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}": {
      "get": {
        "operationId": "StorageTasks_Get",
        "tags": [
          "StorageTasks"
        ],
        "description": "Get the storage task properties",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetStorageTask": {
            "$ref": "./examples/storageTasksCrud/GetStorageTask.json"
          }
        }
      },
      "put": {
        "operationId": "StorageTasks_Create",
        "tags": [
          "StorageTasks"
        ],
        "description": "Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already created and a subsequent create request is issued with different properties, the storage task properties will be updated. If a storage task is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to create a Storage Task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageTask' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "201": {
            "description": "Resource 'StorageTask' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PutStorageTask": {
            "$ref": "./examples/storageTasksCrud/PutStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StorageTasks_Update",
        "tags": [
          "StorageTasks"
        ],
        "description": "Update storage task properties",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to update the storage task resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTaskUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageTask' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PatchStorageTask": {
            "$ref": "./examples/storageTasksCrud/PatchStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StorageTasks_Delete",
        "tags": [
          "StorageTasks"
        ],
        "description": "Delete the storage task resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteStorageTask": {
            "$ref": "./examples/storageTasksCrud/DeleteStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/reports": {
      "get": {
        "operationId": "StorageTasksReport_List",
        "tags": [
          "StorageTasks"
        ],
        "description": "Fetch the storage tasks run report summary for each assignment.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional. When specified, it can be used to query using reporting properties.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTaskReportSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTasksRunReportSummary.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/storageTaskAssignments": {
      "get": {
        "operationId": "StorageTaskAssignment_List",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists Resource IDs of the Storage Task Assignments associated with this Storage Task.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTaskAssignmentsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTaskAssignmentsByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTaskAssignmentIds.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ElseCondition": {
      "type": "object",
      "description": "The else block of storage task operation",
      "properties": {
        "operations": {
          "type": "array",
          "description": "List of operations to execute in the else block",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "operations"
      ]
    },
    "IfCondition": {
      "type": "object",
      "description": "The if block of storage task operation",
      "properties": {
        "condition": {
          "type": "string",
          "description": "Condition predicate to evaluate each object. See https://aka.ms/storagetaskconditions for valid properties and operators."
        },
        "operations": {
          "type": "array",
          "description": "List of operations to execute when the condition predicate satisfies.",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "condition",
        "operations"
      ]
    },
    "MatchedBlockName": {
      "type": "string",
      "description": "Represents the condition block name that matched blob properties.",
      "enum": [
        "If",
        "Else",
        "None"
      ],
      "x-ms-enum": {
        "name": "MatchedBlockName",
        "modelAsString": true,
        "values": [
          {
            "name": "If",
            "value": "If"
          },
          {
            "name": "Else",
            "value": "Else"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "OnFailure": {
      "type": "string",
      "description": "Action to be taken when the operation fails for a object.",
      "enum": [
        "break"
      ],
      "x-ms-enum": {
        "name": "OnFailure",
        "modelAsString": true,
        "values": [
          {
            "name": "break",
            "value": "break"
          }
        ]
      }
    },
    "OnSuccess": {
      "type": "string",
      "description": "Action to be taken when the operation is successful for a object.",
      "enum": [
        "continue"
      ],
      "x-ms-enum": {
        "name": "OnSuccess",
        "modelAsString": true,
        "values": [
          {
            "name": "continue",
            "value": "continue"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Represents the provisioning state of the storage task.",
      "enum": [
        "ValidateSubscriptionQuotaBegin",
        "ValidateSubscriptionQuotaEnd",
        "Accepted",
        "Creating",
        "Succeeded",
        "Deleting",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "ValidateSubscriptionQuotaBegin",
            "value": "ValidateSubscriptionQuotaBegin"
          },
          {
            "name": "ValidateSubscriptionQuotaEnd",
            "value": "ValidateSubscriptionQuotaEnd"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "RunResult": {
      "type": "string",
      "description": "Represents the overall result of the execution for the run instance",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "RunResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "RunStatusEnum": {
      "type": "string",
      "description": "Represents the status of the execution.",
      "enum": [
        "InProgress",
        "Finished"
      ],
      "x-ms-enum": {
        "name": "RunStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Finished",
            "value": "Finished"
          }
        ]
      }
    },
    "StorageTask": {
      "type": "object",
      "description": "Represents Storage Task.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/StorageTaskProperties",
          "description": "Properties of the storage task.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "identity",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StorageTaskAction": {
      "type": "object",
      "description": "The storage task action represents conditional statements and operations to be performed on target objects.",
      "properties": {
        "if": {
          "$ref": "#/definitions/IfCondition",
          "description": "The if block of storage task operation"
        },
        "else": {
          "$ref": "#/definitions/ElseCondition",
          "description": "The else block of storage task operation"
        }
      },
      "required": [
        "if"
      ]
    },
    "StorageTaskAssignment": {
      "type": "object",
      "description": "Storage Task Assignment associated with this Storage Task.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task Assignment.",
          "readOnly": true
        }
      }
    },
    "StorageTaskAssignmentsListResult": {
      "type": "object",
      "description": "The response from the List Storage Tasks operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Storage Task Assignment Resource IDs associated with this Storage Task.",
          "items": {
            "$ref": "#/definitions/StorageTaskAssignment"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageTaskOperation": {
      "type": "object",
      "description": "Represents an operation to be performed on the object",
      "properties": {
        "name": {
          "$ref": "#/definitions/StorageTaskOperationName",
          "description": "The operation to be performed on the object."
        },
        "parameters": {
          "type": "object",
          "description": "Key-value parameters for the operation.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "onSuccess": {
          "$ref": "#/definitions/OnSuccess",
          "description": "Action to be taken when the operation is successful for a object."
        },
        "onFailure": {
          "$ref": "#/definitions/OnFailure",
          "description": "Action to be taken when the operation fails for a object."
        }
      },
      "required": [
        "name"
      ]
    },
    "StorageTaskOperationName": {
      "type": "string",
      "description": "The operation to be performed on the object.",
      "enum": [
        "SetBlobTier",
        "SetBlobTags",
        "SetBlobImmutabilityPolicy",
        "SetBlobLegalHold",
        "SetBlobExpiry",
        "DeleteBlob",
        "UndeleteBlob"
      ],
      "x-ms-enum": {
        "name": "StorageTaskOperationName",
        "modelAsString": true,
        "values": [
          {
            "name": "SetBlobTier",
            "value": "SetBlobTier"
          },
          {
            "name": "SetBlobTags",
            "value": "SetBlobTags"
          },
          {
            "name": "SetBlobImmutabilityPolicy",
            "value": "SetBlobImmutabilityPolicy"
          },
          {
            "name": "SetBlobLegalHold",
            "value": "SetBlobLegalHold"
          },
          {
            "name": "SetBlobExpiry",
            "value": "SetBlobExpiry"
          },
          {
            "name": "DeleteBlob",
            "value": "DeleteBlob"
          },
          {
            "name": "UndeleteBlob",
            "value": "UndeleteBlob"
          }
        ]
      }
    },
    "StorageTaskPreviewAction": {
      "type": "object",
      "description": "Storage Task Preview Action.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageTaskPreviewActionProperties",
          "description": "Properties of the storage task preview.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "StorageTaskPreviewActionCondition": {
      "type": "object",
      "description": "Represents the storage task conditions to be tested for a match with container and blob properties.",
      "properties": {
        "if": {
          "$ref": "#/definitions/StorageTaskPreviewActionIfCondition",
          "description": "The condition to be tested for a match with container and blob properties."
        },
        "elseBlockExists": {
          "type": "boolean",
          "description": "Specify whether the else block is present in the condition."
        }
      },
      "required": [
        "if",
        "elseBlockExists"
      ]
    },
    "StorageTaskPreviewActionIfCondition": {
      "type": "object",
      "description": "Represents storage task preview action condition.",
      "properties": {
        "condition": {
          "type": "string",
          "description": "Storage task condition to bes tested for a match."
        }
      }
    },
    "StorageTaskPreviewActionProperties": {
      "type": "object",
      "description": "Storage task preview action properties.",
      "properties": {
        "container": {
          "$ref": "#/definitions/StorageTaskPreviewContainerProperties",
          "description": "Properties of a sample container to test for a match with the preview action."
        },
        "blobs": {
          "type": "array",
          "description": "Properties of some sample blobs in the container to test for matches with the preview action.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewBlobProperties"
          },
          "x-ms-identifiers": []
        },
        "action": {
          "$ref": "#/definitions/StorageTaskPreviewActionCondition",
          "description": "Preview action to test"
        }
      },
      "required": [
        "container",
        "blobs",
        "action"
      ]
    },
    "StorageTaskPreviewBlobProperties": {
      "type": "object",
      "description": "Storage task preview container properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of test blob"
        },
        "properties": {
          "type": "array",
          "description": "properties key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "metadata key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "tags": {
          "type": "array",
          "description": "tags key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "matchedBlock": {
          "$ref": "#/definitions/MatchedBlockName",
          "description": "Represents the condition block name that matched blob properties.",
          "readOnly": true
        }
      }
    },
    "StorageTaskPreviewContainerProperties": {
      "type": "object",
      "description": "Storage task preview container properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of test container"
        },
        "metadata": {
          "type": "array",
          "description": "metadata key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "StorageTaskPreviewKeyValueProperties": {
      "type": "object",
      "description": "Storage task preview object key value pair properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Represents the key property of the pair."
        },
        "value": {
          "type": "string",
          "description": "Represents the value property of the pair."
        }
      }
    },
    "StorageTaskProperties": {
      "type": "object",
      "description": "Properties of the storage task.",
      "properties": {
        "taskVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Storage task version.",
          "minimum": 1,
          "maximum": 1,
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Storage Task is enabled when set to true and disabled when set to false"
        },
        "description": {
          "type": "string",
          "description": "Text that describes the purpose of the storage task"
        },
        "action": {
          "$ref": "#/definitions/StorageTaskAction",
          "description": "The storage task action that is executed"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Represents the provisioning state of the storage task.",
          "readOnly": true
        },
        "creationTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage task in UTC.",
          "readOnly": true
        }
      },
      "required": [
        "enabled",
        "description",
        "action"
      ]
    },
    "StorageTaskReportInstance": {
      "type": "object",
      "description": "Storage Tasks run report instance",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageTaskReportProperties",
          "description": "Storage task execution report for a run instance."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageTaskReportProperties": {
      "type": "object",
      "description": "Storage task execution report for a run instance.",
      "properties": {
        "taskAssignmentId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task Assignment associated with this reported run.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts/storageTaskAssignments"
              }
            ]
          }
        },
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Account where this reported run executed.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "description": "Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "finishTime": {
          "type": "string",
          "description": "End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsTargetedCount": {
          "type": "string",
          "description": "Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsOperatedOnCount": {
          "type": "string",
          "description": "Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectFailedCount": {
          "type": "string",
          "description": "Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsSucceededCount": {
          "type": "string",
          "description": "Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "runStatusError": {
          "type": "string",
          "description": "Well known Azure Storage error code that represents the error encountered during execution of the run instance.",
          "readOnly": true
        },
        "runStatusEnum": {
          "$ref": "#/definitions/RunStatusEnum",
          "description": "Represents the status of the execution.",
          "readOnly": true
        },
        "summaryReportPath": {
          "type": "string",
          "description": "Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account.",
          "readOnly": true
        },
        "taskId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task applied during this run.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.StorageActions/storageTasks"
              }
            ]
          }
        },
        "taskVersion": {
          "type": "string",
          "description": "Storage Task Version",
          "readOnly": true
        },
        "runResult": {
          "$ref": "#/definitions/RunResult",
          "description": "Represents the overall result of the execution for the run instance",
          "readOnly": true
        }
      }
    },
    "StorageTaskReportSummary": {
      "type": "object",
      "description": "Fetch Storage Tasks Run Summary.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Gets storage tasks run result summary.",
          "items": {
            "$ref": "#/definitions/StorageTaskReportInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageTaskUpdateParameters": {
      "type": "object",
      "description": "Parameters of the storage task update request",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/StorageTaskUpdateProperties",
          "description": "Properties of the storage task.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageTaskUpdateProperties": {
      "type": "object",
      "description": "Properties of the storage task.",
      "properties": {
        "taskVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Storage task version.",
          "minimum": 1,
          "maximum": 1,
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Storage Task is enabled when set to true and disabled when set to false"
        },
        "description": {
          "type": "string",
          "description": "Text that describes the purpose of the storage task"
        },
        "action": {
          "$ref": "#/definitions/StorageTaskAction",
          "description": "The storage task action that is executed"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Represents the provisioning state of the storage task.",
          "readOnly": true
        },
        "creationTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage task in UTC.",
          "readOnly": true
        }
      }
    },
    "StorageTasksListResult": {
      "type": "object",
      "description": "The response from the List Storage Task operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Gets the list of storage tasks and their properties.",
          "items": {
            "$ref": "#/definitions/StorageTask"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}