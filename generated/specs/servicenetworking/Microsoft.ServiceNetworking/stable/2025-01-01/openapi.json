{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ServiceNetworking",
    "version": "2025-01-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.ServiceNetworking/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Operations List": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceNetworking/trafficControllers": {
      "get": {
        "operationId": "TrafficControllerInterface_ListBySubscription",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "List TrafficController resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Traffic Controllers List": {
            "$ref": "./examples/TrafficControllersGetList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers": {
      "get": {
        "operationId": "TrafficControllerInterface_ListByResourceGroup",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "List TrafficController resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficControllerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Traffic Controllers": {
            "$ref": "./examples/TrafficControllersGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}": {
      "get": {
        "operationId": "TrafficControllerInterface_Get",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "Get a TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Traffic Controller": {
            "$ref": "./examples/TrafficControllerGet.json"
          }
        }
      },
      "put": {
        "operationId": "TrafficControllerInterface_CreateOrUpdate",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "Create a TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TrafficController' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "201": {
            "description": "Resource 'TrafficController' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put Traffic Controller": {
            "$ref": "./examples/TrafficControllerPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TrafficControllerInterface_Update",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "Update a TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrafficControllerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TrafficController"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Traffic Controller": {
            "$ref": "./examples/TrafficControllerPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "TrafficControllerInterface_Delete",
        "tags": [
          "TrafficControllerInterface"
        ],
        "description": "Delete a TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Traffic Controller": {
            "$ref": "./examples/TrafficControllerDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations": {
      "get": {
        "operationId": "AssociationsInterface_ListByTrafficController",
        "tags": [
          "AssociationsInterface"
        ],
        "description": "List Association resources by TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssociationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Associations": {
            "$ref": "./examples/AssociationsGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations/{associationName}": {
      "get": {
        "operationId": "AssociationsInterface_Get",
        "tags": [
          "AssociationsInterface"
        ],
        "description": "Get a Association",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of Association",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Association": {
            "$ref": "./examples/AssociationGet.json"
          }
        }
      },
      "put": {
        "operationId": "AssociationsInterface_CreateOrUpdate",
        "tags": [
          "AssociationsInterface"
        ],
        "description": "Create a Association",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of Association",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Association"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Association' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "201": {
            "description": "Resource 'Association' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Association"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put Association": {
            "$ref": "./examples/AssociationPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AssociationsInterface_Update",
        "tags": [
          "AssociationsInterface"
        ],
        "description": "Update a Association",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of Association",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Association"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Association": {
            "$ref": "./examples/AssociationPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "AssociationsInterface_Delete",
        "tags": [
          "AssociationsInterface"
        ],
        "description": "Delete a Association",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "associationName",
            "in": "path",
            "description": "Name of Association",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Association": {
            "$ref": "./examples/AssociationDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends": {
      "get": {
        "operationId": "FrontendsInterface_ListByTrafficController",
        "tags": [
          "FrontendsInterface"
        ],
        "description": "List Frontend resources by TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontendListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Frontends": {
            "$ref": "./examples/FrontendsGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends/{frontendName}": {
      "get": {
        "operationId": "FrontendsInterface_Get",
        "tags": [
          "FrontendsInterface"
        ],
        "description": "Get a Frontend",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "frontendName",
            "in": "path",
            "description": "Frontends",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Frontend": {
            "$ref": "./examples/FrontendGet.json"
          }
        }
      },
      "put": {
        "operationId": "FrontendsInterface_CreateOrUpdate",
        "tags": [
          "FrontendsInterface"
        ],
        "description": "Create a Frontend",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "frontendName",
            "in": "path",
            "description": "Frontends",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Frontend' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "201": {
            "description": "Resource 'Frontend' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Frontend"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put Frontend": {
            "$ref": "./examples/FrontendPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontendsInterface_Update",
        "tags": [
          "FrontendsInterface"
        ],
        "description": "Update a Frontend",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "frontendName",
            "in": "path",
            "description": "Frontends",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontendUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Frontend"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Frontend": {
            "$ref": "./examples/FrontendPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "FrontendsInterface_Delete",
        "tags": [
          "FrontendsInterface"
        ],
        "description": "Delete a Frontend",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "frontendName",
            "in": "path",
            "description": "Frontends",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Frontend": {
            "$ref": "./examples/FrontendDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/securityPolicies": {
      "get": {
        "operationId": "SecurityPoliciesInterface_ListByTrafficController",
        "tags": [
          "SecurityPoliciesInterface"
        ],
        "description": "List SecurityPolicy resources by TrafficController",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecurityPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SecurityPolicies": {
            "$ref": "./examples/SecurityPoliciesGetList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/securityPolicies/{securityPolicyName}": {
      "get": {
        "operationId": "SecurityPoliciesInterface_Get",
        "tags": [
          "SecurityPoliciesInterface"
        ],
        "description": "Get a SecurityPolicy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "SecurityPolicy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecurityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SecurityPolicy": {
            "$ref": "./examples/SecurityPolicyGet.json"
          }
        }
      },
      "put": {
        "operationId": "SecurityPoliciesInterface_CreateOrUpdate",
        "tags": [
          "SecurityPoliciesInterface"
        ],
        "description": "Create a SecurityPolicy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "SecurityPolicy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SecurityPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecurityPolicy"
            }
          },
          "201": {
            "description": "Resource 'SecurityPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecurityPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put SecurityPolicy": {
            "$ref": "./examples/SecurityPolicyPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SecurityPoliciesInterface_Update",
        "tags": [
          "SecurityPoliciesInterface"
        ],
        "description": "Update a SecurityPolicy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "SecurityPolicy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecurityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update SecurityPolicy": {
            "$ref": "./examples/SecurityPolicyPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "SecurityPoliciesInterface_Delete",
        "tags": [
          "SecurityPoliciesInterface"
        ],
        "description": "Delete a SecurityPolicy",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "trafficControllerName",
            "in": "path",
            "description": "traffic controller name for path",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "SecurityPolicy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete SecurityPolicy": {
            "$ref": "./examples/SecurityPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "Association": {
      "type": "object",
      "description": "Association Subresource of Traffic Controller",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssociationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssociationListResult": {
      "type": "object",
      "description": "The response of a Association list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Association items on this page",
          "items": {
            "$ref": "#/definitions/Association"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AssociationProperties": {
      "type": "object",
      "description": "Association Properties.",
      "properties": {
        "associationType": {
          "$ref": "#/definitions/AssociationType",
          "description": "Association Type"
        },
        "subnet": {
          "$ref": "#/definitions/AssociationSubnet",
          "description": "Association Subnet"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State of Traffic Controller Association Resource",
          "readOnly": true
        }
      },
      "required": [
        "associationType"
      ]
    },
    "AssociationSubnet": {
      "type": "object",
      "description": "Association Subnet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Association ID."
        }
      },
      "required": [
        "id"
      ]
    },
    "AssociationSubnetUpdate": {
      "type": "object",
      "description": "Association Subnet.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Association ID."
        }
      }
    },
    "AssociationType": {
      "type": "string",
      "description": "Association Type Enum",
      "enum": [
        "subnets"
      ],
      "x-ms-enum": {
        "name": "AssociationType",
        "modelAsString": true,
        "values": [
          {
            "name": "subnets",
            "value": "subnets",
            "description": "Association of Type Subnet"
          }
        ]
      }
    },
    "AssociationUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Association.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AssociationUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AssociationUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Association.",
      "properties": {
        "associationType": {
          "$ref": "#/definitions/AssociationType",
          "description": "Association Type"
        },
        "subnet": {
          "$ref": "#/definitions/AssociationSubnetUpdate",
          "description": "Association Subnet"
        }
      }
    },
    "Frontend": {
      "type": "object",
      "description": "Frontend Sub Resource of Traffic Controller.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FrontendProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FrontendListResult": {
      "type": "object",
      "description": "The response of a Frontend list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Frontend items on this page",
          "items": {
            "$ref": "#/definitions/Frontend"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontendProperties": {
      "type": "object",
      "description": "Frontend Properties.",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "The Fully Qualified Domain Name of the DNS record associated to a Traffic Controller frontend.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State of Traffic Controller Frontend Resource",
          "readOnly": true
        }
      }
    },
    "FrontendUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Frontend.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PolicyType": {
      "type": "string",
      "description": "Policy Type of the Security Policy",
      "enum": [
        "waf"
      ],
      "x-ms-enum": {
        "name": "PolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "WAF",
            "value": "waf",
            "description": "Policy of Type WAF"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Resource Provisioning State Enum",
      "enum": [
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource in Provisioning State"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Resource in Updating State"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource in Deleting State"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource in Accepted State"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource in Succeeded State"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource in Failed State"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource in Canceled State"
          }
        ]
      },
      "readOnly": true
    },
    "ResourceId": {
      "type": "object",
      "description": "Resource ID definition used by parent to reference child resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of child resource."
        }
      },
      "required": [
        "id"
      ]
    },
    "SecurityPolicy": {
      "type": "object",
      "description": "SecurityPolicy Subresource of Traffic Controller.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SecurityPolicyConfigurations": {
      "type": "object",
      "description": "SecurityPolicyConfigurations Subresource of Traffic Controller.",
      "properties": {
        "wafSecurityPolicy": {
          "$ref": "#/definitions/WafSecurityPolicy",
          "description": "Contains reference to a WAF-type security policy."
        }
      }
    },
    "SecurityPolicyConfigurationsUpdate": {
      "type": "object",
      "description": "SecurityPolicyConfigurations Subresource of Traffic Controller.",
      "properties": {
        "wafSecurityPolicy": {
          "$ref": "#/definitions/WafSecurityPolicyUpdate",
          "description": "Contains reference to a WAF-type security policy."
        }
      }
    },
    "SecurityPolicyListResult": {
      "type": "object",
      "description": "The response of a SecurityPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SecurityPolicy items on this page",
          "items": {
            "$ref": "#/definitions/SecurityPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SecurityPolicyProperties": {
      "type": "object",
      "description": "SecurityPolicy Properties.",
      "properties": {
        "policyType": {
          "$ref": "#/definitions/PolicyType",
          "description": "Type of the Traffic Controller Security Policy",
          "readOnly": true
        },
        "wafPolicy": {
          "$ref": "#/definitions/WafPolicy",
          "description": "Web Application Firewall Policy of the Traffic Controller Security Policy. Single Security Policy can have only one policy type set."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning State of Traffic Controller SecurityPolicy Resource",
          "readOnly": true
        }
      }
    },
    "SecurityPolicyUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SecurityPolicy.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SecurityPolicyUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecurityPolicyUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SecurityPolicy.",
      "properties": {
        "wafPolicy": {
          "$ref": "#/definitions/WafPolicyUpdate",
          "description": "Web Application Firewall Policy of the Traffic Controller Security Policy. Single Security Policy can have only one policy type set."
        }
      }
    },
    "TrafficController": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TrafficControllerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TrafficControllerListResult": {
      "type": "object",
      "description": "The response of a TrafficController list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TrafficController items on this page",
          "items": {
            "$ref": "#/definitions/TrafficController"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TrafficControllerProperties": {
      "type": "object",
      "description": "Traffic Controller Properties.",
      "properties": {
        "configurationEndpoints": {
          "type": "array",
          "description": "Configuration Endpoints.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "frontends": {
          "type": "array",
          "description": "Frontends References List",
          "items": {
            "$ref": "#/definitions/ResourceId"
          },
          "readOnly": true
        },
        "associations": {
          "type": "array",
          "description": "Associations References List",
          "items": {
            "$ref": "#/definitions/ResourceId"
          },
          "readOnly": true
        },
        "securityPolicies": {
          "type": "array",
          "description": "Security Policies References List",
          "items": {
            "$ref": "#/definitions/ResourceId"
          },
          "readOnly": true
        },
        "securityPolicyConfigurations": {
          "$ref": "#/definitions/SecurityPolicyConfigurations",
          "description": "Security Policy Configuration"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "TrafficControllerUpdate": {
      "type": "object",
      "description": "The type used for update operations of the TrafficController.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/TrafficControllerUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TrafficControllerUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the TrafficController.",
      "properties": {
        "securityPolicyConfigurations": {
          "$ref": "#/definitions/SecurityPolicyConfigurationsUpdate",
          "description": "Security Policy Configuration"
        }
      }
    },
    "WafPolicy": {
      "type": "object",
      "description": "Web Application Firewall Policy",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the WAF"
        }
      },
      "required": [
        "id"
      ]
    },
    "WafPolicyUpdate": {
      "type": "object",
      "description": "Web Application Firewall Policy",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the WAF"
        }
      }
    },
    "WafSecurityPolicy": {
      "type": "object",
      "description": "Web Application Firewall Security Policy",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the Waf Security Policy"
        }
      },
      "required": [
        "id"
      ]
    },
    "WafSecurityPolicyUpdate": {
      "type": "object",
      "description": "Web Application Firewall Security Policy",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the Waf Security Policy"
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}