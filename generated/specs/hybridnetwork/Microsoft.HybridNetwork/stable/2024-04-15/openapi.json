{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.HybridNetwork",
    "version": "2024-04-15"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/sites/{siteName}": {
      "delete": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_Delete",
        "description": "Deletes the specified network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete network site": {
            "$ref": "./examples/SiteDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_Get",
        "description": "Gets information about the specified network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get network site": {
            "$ref": "./examples/SiteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_CreateOrUpdate",
        "description": "Creates or updates a network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Parameters supplied to the create or update network site operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create network site": {
            "$ref": "./examples/SiteCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_UpdateTags",
        "description": "Updates a site update tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network site tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network site tags": {
            "$ref": "./examples/SiteUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_ListBySubscription",
        "description": "Lists all sites in the network service in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of hybrid network site resources.",
            "schema": {
              "$ref": "#/definitions/SiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all hybrid network sites in a subscription.": {
            "$ref": "./examples/SiteListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_ListByResourceGroup",
        "description": "Lists all sites in the network service.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network site resources.",
            "schema": {
              "$ref": "#/definitions/SiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all network sites": {
            "$ref": "./examples/SiteListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/siteNetworkServices/{siteNetworkServiceName}": {
      "delete": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_Delete",
        "description": "Deletes the specified site network service.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNetworkServiceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete network site": {
            "$ref": "./examples/SiteNetworkServiceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_Get",
        "description": "Gets information about the specified site network service.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNetworkServiceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get network site": {
            "$ref": "./examples/SiteNetworkServiceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_CreateOrUpdate",
        "description": "Creates or updates a network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNetworkServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteNetworkService"
            },
            "description": "Parameters supplied to the create or update site network service operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting site network service resource.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkService"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting site network service resource.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create site network service": {
            "$ref": "./examples/SiteNetworkServiceCreate.json"
          },
          "Create first party site network service": {
            "$ref": "./examples/SiteNetworkServiceFirstPartyCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_UpdateTags",
        "description": "Updates a site update tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SiteNetworkServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network site tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting site network service resource.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network site tags": {
            "$ref": "./examples/SiteNetworkServiceUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/siteNetworkServices": {
      "get": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_ListBySubscription",
        "description": "Lists all sites in the network service in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network site resources.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkServiceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all hybrid network sites in a subscription.": {
            "$ref": "./examples/SiteNetworkServiceListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/siteNetworkServices": {
      "get": {
        "tags": [
          "SiteNetworkServices"
        ],
        "operationId": "SiteNetworkServices_ListByResourceGroup",
        "description": "Lists all site network services.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network site resources.",
            "schema": {
              "$ref": "#/definitions/SiteNetworkServiceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all network sites": {
            "$ref": "./examples/SiteNetworkServiceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/publishers": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_ListBySubscription",
        "description": "Lists all the publishers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of publisher resources.",
            "schema": {
              "$ref": "#/definitions/PublisherListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all publisher resources in a subscription": {
            "$ref": "./examples/PublisherListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_ListByResourceGroup",
        "description": "Lists all the publishers in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of publisher resources.",
            "schema": {
              "$ref": "#/definitions/PublisherListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all publisher resources in a resource group": {
            "$ref": "./examples/PublisherListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}": {
      "delete": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_Delete",
        "description": "Deletes the specified publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a publisher resource": {
            "$ref": "./examples/PublisherDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_Get",
        "description": "Gets information about the specified publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting publisher resource.",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a publisher resource": {
            "$ref": "./examples/PublisherGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_CreateOrUpdate",
        "description": "Creates or updates a publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Publisher"
            },
            "description": "Parameters supplied to the create publisher operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting publisher resource.",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a publisher resource": {
            "$ref": "./examples/PublisherCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Publishers"
        ],
        "operationId": "Publishers_Update",
        "description": "Update a publisher resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create publisher operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Request is successful.",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a publisher tags": {
            "$ref": "./examples/PublisherUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores": {
      "get": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_ListByPublisher",
        "description": "Gets information of the ArtifactStores under publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting ArtifactStoreVersion resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactStoreListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get application groups under a publisher resource": {
            "$ref": "./examples/ArtifactStoresListByPublisherName.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}": {
      "delete": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_Delete",
        "description": "Deletes the specified artifact store.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a artifact store of publisher resource": {
            "$ref": "./examples/ArtifactStoreDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_CreateOrUpdate",
        "description": "Creates or updates a artifact store.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactStore"
            },
            "description": "Parameters supplied to the create or update application group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting ArtifactStore sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactStore"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting ArtifactStore sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an artifact store of publisher resource": {
            "$ref": "./examples/ArtifactStoreCreate.json"
          },
          "Create or update an artifact store of publisher resource with container registry": {
            "$ref": "./examples/ArtifactStoreCreateContainer.json"
          },
          "Create or update an artifact store of publisher resource with storage": {
            "$ref": "./examples/ArtifactStoreCreateStorage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_Get",
        "description": "Gets information about the specified artifact store.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting ArtifactStore resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a artifact store resource": {
            "$ref": "./examples/ArtifactStoreGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_Update",
        "description": "Update artifact store resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update application group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting ArtifactStore sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update artifact store resource tags": {
            "$ref": "./examples/ArtifactStoreUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/addNetworkFabricControllerEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_AddNetworkFabricControllerEndPoints",
        "description": "Add network fabric controllers to artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactStoreNetworkFabricControllerEndPoints"
            },
            "description": "Parameters supplied to the create or update application group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add Network Fabric Endpoint": {
            "$ref": "./examples/ArtifactStoreAddNFCEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/deleteNetworkFabricControllerEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_DeleteNetworkFabricControllerEndPoints",
        "description": "Delete network fabric controllers on artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactStoreNetworkFabricControllerEndPoints"
            },
            "description": "Parameters supplied to the create or update application group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Fabric Endpoints": {
            "$ref": "./examples/ArtifactStoreDeleteNFCEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/listNetworkFabricControllerPrivateEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_ListNetworkFabricControllerPrivateEndPoints",
        "description": "List network fabric controllers to artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operations returns the list of network fabric controllers attached to artifact store.",
            "schema": {
              "$ref": "#/definitions/ArtifactStoreNetworkFabricControllerEndPointsList"
            }
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Network Fabric Endpoints": {
            "$ref": "./examples/ArtifactStoreListNFCEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/approvePrivateEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_ApprovePrivateEndPoints",
        "description": "Approve manual private endpoints on artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactStorePrivateEndPointsFormat"
            },
            "description": "Parameters supplied to approve private endpoints."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approve manual private endpoints": {
            "$ref": "./examples/ArtifactStoreApprovePrivateEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/removePrivateEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_RemovePrivateEndPoints",
        "description": "Remove manual private endpoints on artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactStorePrivateEndPointsFormat"
            },
            "description": "Parameters supplied to the create or update application group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Remove Manual Endpoint": {
            "$ref": "./examples/ArtifactStoreRemovePrivateEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/listPrivateEndPoints": {
      "post": {
        "tags": [
          "ArtifactStores"
        ],
        "operationId": "ArtifactStores_ListPrivateEndPoints",
        "description": "List manual private endpoints on artifact stores",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful.",
            "schema": {
              "$ref": "#/definitions/ArtifactStorePrivateEndPointsListResult"
            }
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Manual Private Endpoints": {
            "$ref": "./examples/ArtifactStoreListPrivateEndPoints.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests": {
      "get": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_ListByArtifactStore",
        "description": "Gets information about the artifact manifest.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting ArtifactManifest resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifestListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get artifact manifest list resource": {
            "$ref": "./examples/ArtifactManifestListByArtifactStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}": {
      "delete": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_Delete",
        "description": "Deletes the specified artifact manifest.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a artifact manifest resource": {
            "$ref": "./examples/ArtifactManifestDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_CreateOrUpdate",
        "description": "Creates or updates a artifact manifest.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactManifest"
            },
            "description": "Parameters supplied to the create or update artifact manifest operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting ArtifactManifest sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifest"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting ArtifactManifest sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the artifact manifest resource": {
            "$ref": "./examples/ArtifactManifestCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_Get",
        "description": "Gets information about a artifact manifest resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting ArtifactManifest resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a artifact manifest resource": {
            "$ref": "./examples/ArtifactManifestGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_Update",
        "description": "Updates a artifact manifest resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update artifact manifest operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting ArtifactManifest sub resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a artifact manifest resource tags": {
            "$ref": "./examples/ArtifactManifestUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}/listCredential": {
      "post": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_ListCredential",
        "description": "List credential for publishing artifacts defined in artifact manifest.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operations returns the credential for publishing artifacts.",
            "schema": {
              "$ref": "./common.json#/definitions/ArtifactAccessCredential"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List a credential for artifact manifest": {
            "$ref": "./examples/ArtifactManifestListCredential.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactManifests/{artifactManifestName}/updateState": {
      "post": {
        "tags": [
          "ArtifactManifests"
        ],
        "operationId": "ArtifactManifests_UpdateState",
        "description": "Update state for artifact manifest.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactManifestParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactManifestUpdateState"
            },
            "description": "Parameters supplied to update the state of artifact manifest."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operations returns the credential for publishing artifacts.",
            "schema": {
              "$ref": "#/definitions/ArtifactManifestUpdateState"
            }
          },
          "202": {
            "description": "Request of updating artifact manifest state is accepted.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update artifact manifest state": {
            "$ref": "./examples/ArtifactManifestUpdateState.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups": {
      "get": {
        "tags": [
          "NetworkFunctionDefinitionGroups"
        ],
        "operationId": "NetworkFunctionDefinitionGroups_ListByPublisher",
        "description": "Gets information of the network function definition groups under a publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting networkFunctionDefinition group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get networkFunctionDefinition groups under publisher resource": {
            "$ref": "./examples/NetworkFunctionDefinitionGroupsListByPublisherName.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}": {
      "delete": {
        "tags": [
          "NetworkFunctionDefinitionGroups"
        ],
        "operationId": "NetworkFunctionDefinitionGroups_Delete",
        "description": "Deletes a specified network function definition group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a network function group resource": {
            "$ref": "./examples/NetworkFunctionDefinitionGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "NetworkFunctionDefinitionGroups"
        ],
        "operationId": "NetworkFunctionDefinitionGroups_CreateOrUpdate",
        "description": "Creates or updates a network function definition group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
            },
            "description": "Parameters supplied to the create or update publisher network function definition group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting NetworkFunctionDefinitionGroup sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting NetworkFunctionDefinitionGroup sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the network function definition group": {
            "$ref": "./examples/NetworkFunctionDefinitionGroupCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFunctionDefinitionGroups"
        ],
        "operationId": "NetworkFunctionDefinitionGroups_Get",
        "description": "Gets information about the specified networkFunctionDefinition group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting publisher network function definition group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a networkFunctionDefinition group resource": {
            "$ref": "./examples/NetworkFunctionDefinitionGroupGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFunctionDefinitionGroups"
        ],
        "operationId": "NetworkFunctionDefinitionGroups_Update",
        "description": "Updates a network function definition group resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update publisher network function definition group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting network function definition group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the network function definition group resource": {
            "$ref": "./examples/NetworkFunctionDefinitionGroupUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}": {
      "delete": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_Delete",
        "description": "Deletes the specified network function definition version.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a network function definition version": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionDelete.json"
          },
          "Delete a network function definition version for AzureOperatorNexus VNF": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionDefinitionVersionDelete.json"
          },
          "Delete a network function definition version for AzureCore VNF": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionDefinitionVersionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_CreateOrUpdate",
        "description": "Creates or updates a network function definition version.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionVersionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
            },
            "description": "Parameters supplied to the create or update network function definition version operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network function definition sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network function definition sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a network function definition version resource": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionCreate.json"
          },
          "Create or update a network function definition version resource for AzureOperatorNexus VNF": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionDefinitionVersionCreate.json"
          },
          "Create or update a network function definition version resource for AzureCore VNF": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionDefinitionVersionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_Get",
        "description": "Gets information about a network function definition version.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting NetworkFunctionDefinitionVersion resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a network function definition version resource": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionGet.json"
          },
          "Get network function definition version resource for AzureOperatorNexus VNF": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionDefinitionVersionGet.json"
          },
          "Get network function definition version resource for AzureCore VNF": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionDefinitionVersionGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_Update",
        "description": "Updates a network function definition version resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionVersionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update network function definition version operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting network function definition sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update the network function definition version tags": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions": {
      "get": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_ListByNetworkFunctionDefinitionGroup",
        "description": "Gets information about a list of network function definition versions under a network function definition group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting NetworkFunctionDefinitionVersion resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Publisher resource": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionListByNetworkFunctionDefinitionGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkFunctionDefinitionGroups/{networkFunctionDefinitionGroupName}/networkFunctionDefinitionVersions/{networkFunctionDefinitionVersionName}/updateState": {
      "post": {
        "tags": [
          "NetworkFunctionDefinitionVersions"
        ],
        "operationId": "NetworkFunctionDefinitionVersions_updateState",
        "description": "Update network function definition version state.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionDefinitionVersionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersionUpdateState"
            },
            "description": "Parameters supplied to update the state of network function definition version."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated network function definition version state.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionDefinitionVersionUpdateState"
            }
          },
          "202": {
            "description": "The request of updating network function definition version state is accepted.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network function definition version state": {
            "$ref": "./examples/NetworkFunctionDefinitionVersionUpdateState.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/configurationGroupValues/{configurationGroupValueName}": {
      "delete": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_Delete",
        "description": "Deletes the specified hybrid configuration group value.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupValueNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete hybrid configuration group resource": {
            "$ref": "./examples/ConfigurationGroupValueDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_Get",
        "description": "Gets information about the specified hybrid configuration group values.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupValueNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting hybrid configuration group resource.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValue"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get hybrid configuration group": {
            "$ref": "./examples/ConfigurationGroupValueGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_CreateOrUpdate",
        "description": "Creates or updates a hybrid configuration group value.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupValueNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/configurationGroupValue"
            },
            "description": "Parameters supplied to the create or update configuration group value resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValue"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValue"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update configuration group value": {
            "$ref": "./examples/ConfigurationGroupValueCreate.json"
          },
          "Create or update configuration group value with secrets": {
            "$ref": "./examples/ConfigurationGroupValueCreateSecret.json"
          },
          "Create or update first party configuration group value": {
            "$ref": "./examples/ConfigurationGroupValueFirstPartyCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_UpdateTags",
        "description": "Updates a hybrid configuration group tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupValueNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update configuration group values tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update is successful. The operation returns the resulting hybrid configuration group resource.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValue"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update hybrid configuration group tags": {
            "$ref": "./examples/ConfigurationGroupValueUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/configurationGroupValues": {
      "get": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_ListBySubscription",
        "description": "Lists all sites in the configuration group value in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of hybrid network site resources.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValueListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all hybrid network sites in a subscription.": {
            "$ref": "./examples/ConfigurationGroupValueListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/configurationGroupValues": {
      "get": {
        "tags": [
          "ConfigurationGroupValues"
        ],
        "operationId": "ConfigurationGroupValues_ListByResourceGroup",
        "description": "Lists all the hybrid network configurationGroupValues in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of hybrid configuration group value resources.",
            "schema": {
              "$ref": "#/definitions/configurationGroupValueListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all hybrid network configurationGroupValues in a subscription.": {
            "$ref": "./examples/ConfigurationGroupValueListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}": {
      "delete": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_Delete",
        "description": "Deletes the specified network function resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is completed successfully."
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource with the specified name does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete network function resource": {
            "$ref": "./examples/NetworkFunctionDelete.json"
          },
          "Delete virtual network function resource on AzureOperatorNexus": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionDelete.json"
          },
          "Delete virtual network function resource on AzureCore": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_Get",
        "description": "Gets information about the specified network function resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network function resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful. The operation returns the resulting network function resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get network function resource": {
            "$ref": "./examples/NetworkFunctionGet.json"
          },
          "Get virtual network function resource on AzureOperatorNexus": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionGet.json"
          },
          "Get virtual network function resource on AzureCore": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_CreateOrUpdate",
        "description": "Creates or updates a network function resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource name for the network function resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkFunction"
            },
            "description": "Parameters supplied in the body to the create or update network function operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkFunction"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The header contains 'Azure-AsyncOperation' header pointing to an operation resource. The operation URI can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/NetworkFunction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create network function resource": {
            "$ref": "./examples/NetworkFunctionCreate.json"
          },
          "Create network function resource with secrets": {
            "$ref": "./examples/NetworkFunctionCreateSecret.json"
          },
          "Create first party network function resource": {
            "$ref": "./examples/NetworkFunctionFirstPartyCreate.json"
          },
          "Create virtual network function resource on AzureOperatorNexus": {
            "$ref": "./examples/AzureOperatorNexus/VirtualNetworkFunctionCreate.json"
          },
          "Create virtual network function resource on AzureCore": {
            "$ref": "./examples/AzureCore/VirtualNetworkFunctionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_UpdateTags",
        "description": "Updates the tags for the network function resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "networkFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource name for the network function resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the update network function tags operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update is completed successfully. The operation returns the resulting network function resource.",
            "schema": {
              "$ref": "#/definitions/NetworkFunction"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update tags for network function resource": {
            "$ref": "./examples/NetworkFunctionUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctions": {
      "get": {
        "description": "Lists all the network functions in a subscription.",
        "operationId": "NetworkFunctions_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of network function resources.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "NetworkFunctions"
        ],
        "x-ms-examples": {
          "List all network function resources in subscription.": {
            "$ref": "./examples/NetworkFunctionListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions": {
      "get": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_ListByResourceGroup",
        "description": "Lists all the network function resources in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of network function resources.",
            "schema": {
              "$ref": "#/definitions/NetworkFunctionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List network function in resource group": {
            "$ref": "./examples/NetworkFunctionListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/executeRequest": {
      "post": {
        "tags": [
          "NetworkFunctions"
        ],
        "operationId": "NetworkFunctions_ExecuteRequest",
        "description": "Execute a request to services on a containerized network function.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteRequestParameters"
            },
            "description": "Payload for execute request post call."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Send request to  network function services": {
            "$ref": "./examples/NetworkFunctionsExecuteRequest.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/components/{componentName}": {
      "get": {
        "tags": [
          "Components"
        ],
        "operationId": "Components_Get",
        "description": "Gets information about the specified application instance resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionComponentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation is successful. The operation returns the resulting component resource.",
            "schema": {
              "$ref": "#/definitions/Component"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get component resource": {
            "$ref": "./examples/ComponentGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/components": {
      "get": {
        "tags": [
          "Components"
        ],
        "operationId": "Components_ListByNetworkFunction",
        "description": "Lists all the component resources in a network function.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/NetworkFunctionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of component resources.",
            "schema": {
              "$ref": "#/definitions/ComponentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List components in network function": {
            "$ref": "./examples/ComponentListByNetworkFunction.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifacts": {
      "get": {
        "tags": [
          "ProxyArtifact"
        ],
        "operationId": "ProxyArtifact_List",
        "description": "Lists all the available artifacts in the parent Artifact Store.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of available artifacts.",
            "schema": {
              "$ref": "#/definitions/ProxyArtifactOverviewListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List artifacts under an artifact store": {
            "$ref": "./examples/PureProxyArtifact/ArtifactList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactVersions": {
      "get": {
        "tags": [
          "ProxyArtifact"
        ],
        "operationId": "ProxyArtifact_Get",
        "description": "Get a Artifact overview information.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a proxy artifact overview.",
            "schema": {
              "$ref": "#/definitions/ProxyArtifactVersionsOverviewListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an artifact overview": {
            "$ref": "./examples/PureProxyArtifact/ArtifactGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/artifactStores/{artifactStoreName}/artifactVersions/{artifactVersionName}": {
      "patch": {
        "tags": [
          "ProxyArtifact"
        ],
        "operationId": "ProxyArtifact_UpdateState",
        "description": "Change artifact state defined in artifact store.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactStoreParameter"
          },
          {
            "$ref": "#/parameters/ArtifactNameParameter"
          },
          {
            "$ref": "#/parameters/ArtifactVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactChangeState"
            },
            "description": "Parameters supplied to update the state of artifact manifest."
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. Artifact State updated successfully",
            "schema": {
              "$ref": "#/definitions/ProxyArtifactVersionsListOverview"
            }
          },
          "202": {
            "description": "Request of updating artifact state is accepted.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an artifact state": {
            "$ref": "./examples/PureProxyArtifact/ArtifactChangeState.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups": {
      "get": {
        "tags": [
          "NetworkServiceDesignGroups"
        ],
        "operationId": "NetworkServiceDesignGroups_ListByPublisher",
        "description": "Gets information of the network service design groups under a publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting network service design group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get networkServiceDesign groups under publisher resource": {
            "$ref": "./examples/NetworkServiceDesignGroupsListByPublisherName.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}": {
      "delete": {
        "tags": [
          "NetworkServiceDesignGroups"
        ],
        "operationId": "NetworkServiceDesignGroups_Delete",
        "description": "Deletes a specified network service design group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a network function group resource": {
            "$ref": "./examples/NetworkServiceDesignGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "NetworkServiceDesignGroups"
        ],
        "operationId": "NetworkServiceDesignGroups_CreateOrUpdate",
        "description": "Creates or updates a network service design group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroup"
            },
            "description": "Parameters supplied to the create or update publisher network service design group operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting NetworkServiceDesignGroup sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroup"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting NetworkServiceDesignGroup sub resource.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the network service design group": {
            "$ref": "./examples/NetworkServiceDesignGroupCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkServiceDesignGroups"
        ],
        "operationId": "NetworkServiceDesignGroups_Get",
        "description": "Gets information about the specified networkServiceDesign group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting publisher network service design group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a networkServiceDesign group resource": {
            "$ref": "./examples/NetworkServiceDesignGroupGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkServiceDesignGroups"
        ],
        "operationId": "NetworkServiceDesignGroups_Update",
        "description": "Updates a network service design groups resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update publisher network service design group operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting network service design group resource.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the network service design group resource": {
            "$ref": "./examples/NetworkServiceDesignGroupUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}": {
      "delete": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_Delete",
        "description": "Deletes the specified network service design version.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a network service design version": {
            "$ref": "./examples/NetworkServiceDesignVersionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_CreateOrUpdate",
        "description": "Creates or updates a network service design version.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersion"
            },
            "description": "Parameters supplied to the create or update network service design version operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network service design sub resource.",
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersion"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting network service design sub resource.",
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a network service design version resource": {
            "$ref": "./examples/NetworkServiceDesignVersionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_Get",
        "description": "Gets information about a network service design version.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting networkServiceDesignVersion resource.",
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a network service design version resource": {
            "$ref": "./examples/NetworkServiceDesignVersionGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_Update",
        "description": "Updates a network service design version resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update network service design version operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting network service design sub resource.",
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update the network service design version tags": {
            "$ref": "./examples/NetworkServiceDesignVersionUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions": {
      "get": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_ListByNetworkServiceDesignGroup",
        "description": "Gets information about a list of network service design versions under a network service design group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting networkServiceDesignVersion resource.",
            "schema": {
              "$ref": "#/definitions/networkServiceDesignVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Publisher resource": {
            "$ref": "./examples/NetworkServiceDesignVersionListByNetworkServiceDesignGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}/updateState": {
      "post": {
        "tags": [
          "NetworkServiceDesignVersions"
        ],
        "operationId": "NetworkServiceDesignVersions_updateState",
        "description": "Update network service design version state.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkServiceDesignVersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignVersionUpdateState"
            },
            "description": "Parameters supplied to update the state of network service design version."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated network service design version state.",
            "schema": {
              "$ref": "#/definitions/NetworkServiceDesignVersionUpdateState"
            }
          },
          "202": {
            "description": "The request of updating network service design version state is accepted.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network service design version state": {
            "$ref": "./examples/NetworkServiceDesignVersionUpdateState.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.HybridNetwork/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of the operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a list of operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registration Operations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas": {
      "get": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_ListByPublisher",
        "description": "Gets information of the configuration group schemas under a publisher.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting configuration group schema resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchemaListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get networkFunctionDefinition groups under publisher resource": {
            "$ref": "./examples/ConfigurationGroupSchemaListByPublisherName.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas/{configurationGroupSchemaName}": {
      "delete": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_Delete",
        "description": "Deletes a specified configuration group schema.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupSchemaNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request is successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a network function group resource": {
            "$ref": "./examples/ConfigurationGroupSchemaDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_CreateOrUpdate",
        "description": "Creates or updates a configuration group schema.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupSchemaNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchema"
            },
            "description": "Parameters supplied to the create or update configuration group schema resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting configuration group schema resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchema"
            }
          },
          "201": {
            "description": "Create or update operation has been completed successfully. The operation returns the resulting configuration group schema sub resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchema"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the network function definition group": {
            "$ref": "./examples/ConfigurationGroupSchemaCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_Get",
        "description": "Gets information about the specified configuration group schema.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupSchemaNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting publisher network function definition group resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchema"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a networkFunctionDefinition group resource": {
            "$ref": "./examples/ConfigurationGroupSchemaGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_Update",
        "description": "Updates a configuration group schema resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupSchemaNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the create or update network service design version operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful. The operation returns the resulting configuration group schema resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchema"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the configuration group schema resource": {
            "$ref": "./examples/ConfigurationGroupSchemaUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/configurationGroupSchemas/{configurationGroupSchemaName}/updateState": {
      "post": {
        "tags": [
          "ConfigurationGroupSchemas"
        ],
        "operationId": "ConfigurationGroupSchemas_updateState",
        "description": "Update configuration group schema state.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationGroupSchemaNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchemaVersionUpdateState"
            },
            "description": "Parameters supplied to update the state of configuration group schema."
          }
        ],
        "responses": {
          "200": {
            "description": "The updated configuration group schema state.",
            "schema": {
              "$ref": "#/definitions/ConfigurationGroupSchemaVersionUpdateState"
            }
          },
          "202": {
            "description": "The request of updating configuration group schema state is accepted.",
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network service design version state": {
            "$ref": "./examples/ConfigurationGroupSchemaVersionUpdateState.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "parameters": {
    "PublisherNameParameter": {
      "name": "publisherName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the publisher.",
      "x-ms-parameter-location": "method"
    },
    "SiteNameParameter": {
      "name": "siteName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the network service site.",
      "x-ms-parameter-location": "method"
    },
    "NetworkServiceDesignGroupNameParameter": {
      "name": "networkServiceDesignGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the network service design group.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationGroupValueNameParameter": {
      "name": "configurationGroupValueName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the configuration group value.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationGroupSchemaNameParameter": {
      "name": "configurationGroupSchemaName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the configuration group schema.",
      "x-ms-parameter-location": "method"
    },
    "NetworkServiceDesignVersionNameParameter": {
      "name": "networkServiceDesignVersionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "maxLength": 64,
      "description": "The name of the network service design version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html.",
      "x-ms-parameter-location": "method"
    },
    "SiteNetworkServiceNameParameter": {
      "name": "siteNetworkServiceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the site network service.",
      "x-ms-parameter-location": "method"
    },
    "NetworkFunctionDefinitionGroupNameParameter": {
      "name": "networkFunctionDefinitionGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the network function definition group.",
      "x-ms-parameter-location": "method"
    },
    "NetworkFunctionDefinitionVersionNameParameter": {
      "name": "networkFunctionDefinitionVersionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "maxLength": 64,
      "description": "The name of the network function definition version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html.",
      "x-ms-parameter-location": "method"
    },
    "ArtifactStoreParameter": {
      "name": "artifactStoreName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the artifact store.",
      "x-ms-parameter-location": "method"
    },
    "ArtifactManifestParameter": {
      "name": "artifactManifestName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[^\\s]*[^\\s]+[^\\s]*$",
      "maxLength": 64,
      "description": "The name of the artifact manifest.",
      "x-ms-parameter-location": "method"
    },
    "PublisherScopeNameParameter": {
      "name": "publisherScopeName",
      "in": "query",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the publisher scope.",
      "x-ms-parameter-location": "method"
    },
    "PublisherLocationNameParameter": {
      "name": "publisherLocationName",
      "in": "query",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the publisher location.",
      "x-ms-parameter-location": "method"
    },
    "ProxyPublisherNameParameter": {
      "name": "proxyPublisherName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the proxy publisher.",
      "x-ms-parameter-location": "method"
    },
    "ArtifactNameParameter": {
      "name": "artifactName",
      "in": "query",
      "required": true,
      "type": "string",
      "pattern": "^[^\\s]*[^\\s]+[^\\s]*$",
      "maxLength": 64,
      "description": "The name of the artifact.",
      "x-ms-parameter-location": "method"
    },
    "ArtifactVersionNameParameter": {
      "name": "artifactVersionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[^\\s]*[^\\s]+[^\\s]*$",
      "maxLength": 64,
      "description": "The name of the artifact version.",
      "x-ms-parameter-location": "method"
    },
    "NetworkFunctionNameParameter": {
      "name": "networkFunctionName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[^\\s]*[^\\s]+[^\\s]*$",
      "maxLength": 64,
      "description": "The name of the network function.",
      "x-ms-parameter-location": "method"
    },
    "NetworkFunctionComponentNameParameter": {
      "name": "componentName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[^\\s]*[^\\s]+[^\\s]*$",
      "maxLength": 64,
      "description": "The name of the component.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "Site": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/SitePropertiesFormat",
          "description": "Site properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Site resource."
    },
    "SitePropertiesFormat": {
      "type": "object",
      "description": "Site properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the site resource. **TODO**: Confirm if this is needed."
        },
        "nfvis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NFVIs"
          },
          "description": "List of NFVIs",
          "x-ms-identifiers": [
            "name"
          ]
        },
        "siteNetworkServiceReferences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "The list of site network services on the site.",
          "x-ms-identifiers": [
            "id"
          ]
        }
      }
    },
    "SiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          },
          "description": "A list of sites in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for sites API service call."
    },
    "NFVIs": {
      "required": [
        "nfviType"
      ],
      "discriminator": "nfviType",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the nfvi."
        },
        "nfviType": {
          "$ref": "./common.json#/definitions/NFVIType",
          "description": "The NFVI type."
        }
      },
      "description": "The NFVI object."
    },
    "AzureCoreNFVIDetails": {
      "description": "The Azure Core NFVI detail.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NFVIs"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the Azure core."
        }
      },
      "x-ms-discriminator-value": "AzureCore"
    },
    "AzureArcK8sClusterNFVIDetails": {
      "description": "The AzureArcK8sCluster NFVI detail.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NFVIs"
        }
      ],
      "properties": {
        "customLocationReference": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "The reference to the custom location."
        }
      },
      "x-ms-discriminator-value": "AzureArcKubernetes"
    },
    "AzureOperatorNexusClusterNFVIDetails": {
      "description": "The AzureOperatorNexusCluster NFVI detail.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NFVIs"
        }
      ],
      "properties": {
        "customLocationReference": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "The reference to the custom location."
        }
      },
      "x-ms-discriminator-value": "AzureOperatorNexus"
    },
    "ReferencedResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "description": "Reference to another resource.",
      "x-ms-azure-resource": true
    },
    "CustomLocationResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[eE][xX][tT][eE][nN][dD][eE][dD][lL][oO][cC][aA][tT][iI][oO][nN]/[cC][uU][sS][tT][oO][mM][lL][oO][cC][aA][tT][iI][oO][nN][sS]/[^/?#]+$",
          "description": "Azure ARC custom location resource ID."
        }
      },
      "description": "Reference to an Azure ARC custom location resource.",
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Accepted",
        "Deleting",
        "Failed",
        "Canceled",
        "Deleted",
        "Converging"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "NetworkFunctionType": {
      "type": "string",
      "description": "The network function type.",
      "enum": [
        "Unknown",
        "VirtualNetworkFunction",
        "ContainerizedNetworkFunction"
      ],
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "x-ms-enum": {
        "name": "NetworkFunctionType",
        "modelAsString": true
      }
    },
    "NFVIType": {
      "type": "string",
      "description": "The NFVI type.",
      "enum": [
        "Unknown",
        "AzureArcKubernetes",
        "AzureCore",
        "AzureOperatorNexus"
      ],
      "x-ms-enum": {
        "name": "NFVIType",
        "modelAsString": true
      }
    },
    "backingResourcePublicNetworkAccess": {
      "type": "string",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "description": "The backing resource network access type.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "backingResourcePublicNetworkAccess",
        "modelAsString": true
      }
    },
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "NetworkFunctionApplication": {
      "description": "Network function application definition.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the network function application."
        },
        "dependsOnProfile": {
          "description": "Depends on profile definition.",
          "$ref": "#/definitions/DependsOnProfile"
        }
      }
    },
    "DependsOnProfile": {
      "description": "Depends on profile definition.",
      "type": "object",
      "properties": {
        "installDependsOn": {
          "type": "array",
          "description": "Application installation operation dependency.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "uninstallDependsOn": {
          "type": "array",
          "description": "Application deletion operation dependency.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "updateDependsOn": {
          "type": "array",
          "description": "Application update operation dependency.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ArtifactProfile": {
      "description": "Artifact profile properties.",
      "type": "object",
      "properties": {
        "artifactStore": {
          "$ref": "#/definitions/ReferencedResource",
          "description": "The reference to artifact store."
        }
      }
    },
    "MappingRuleProfile": {
      "description": "Mapping rule profile properties.",
      "type": "object",
      "properties": {
        "applicationEnablement": {
          "type": "string",
          "description": "The application enablement.",
          "enum": [
            "Unknown",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationEnablement",
            "modelAsString": true
          }
        }
      }
    },
    "GenericParameters": {
      "type": "object",
      "description": "The parameters for the generic object."
    },
    "ConfigurationGroup": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "description": "The configuration group in form of {key, value}."
    },
    "ConfigurationGroups": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ConfigurationGroup"
      },
      "description": "The configuration object for the specified cluster."
    },
    "ManagedResourceGroupConfiguration": {
      "description": "Managed resource group configuration.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Managed resource group name."
        },
        "location": {
          "type": "string",
          "description": "Managed resource group location."
        }
      }
    },
    "PublisherScope": {
      "type": "string",
      "description": "Publisher Scope.",
      "enum": [
        "Unknown",
        "Private"
      ],
      "x-ms-enum": {
        "name": "PublisherScope",
        "modelAsString": true
      }
    },
    "ArtifactAccessCredential": {
      "description": "The artifact manifest credential definition.",
      "type": "object",
      "discriminator": "credentialType",
      "required": [
        "credentialType"
      ],
      "properties": {
        "credentialType": {
          "type": "string",
          "description": "The credential type.",
          "enum": [
            "Unknown",
            "AzureContainerRegistryScopedToken",
            "AzureStorageAccountToken"
          ],
          "x-ms-enum": {
            "name": "CredentialType",
            "modelAsString": true
          }
        }
      }
    },
    "AzureContainerRegistryScopedTokenCredential": {
      "description": "The azure container registry scoped token credential definition.",
      "type": "object",
      "x-ms-discriminator-value": "AzureContainerRegistryScopedToken",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactAccessCredential"
        }
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the credential."
        },
        "acrToken": {
          "type": "string",
          "description": "The credential value."
        },
        "acrServerUrl": {
          "type": "string",
          "description": "The Acr server url"
        },
        "repositories": {
          "type": "array",
          "description": "The repositories that could be accessed using the current credential.",
          "items": {
            "type": "string",
            "description": "The repository that could be accessed using the current credential."
          },
          "x-ms-identifiers": []
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when credential will expire."
        }
      }
    },
    "AzureStorageAccountCredential": {
      "description": "The azure storage account credential definition.",
      "type": "object",
      "x-ms-discriminator-value": "AzureStorageAccountToken",
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactAccessCredential"
        }
      ],
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "The storage account Id"
        },
        "containerCredentials": {
          "type": "array",
          "description": "The containers that could be accessed using the current credential.",
          "items": {
            "$ref": "#/definitions/AzureStorageAccountContainerCredential",
            "description": "The container that could be accessed using the current credential."
          },
          "x-ms-identifiers": []
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when credential will expire."
        }
      }
    },
    "AzureStorageAccountContainerCredential": {
      "description": "The azure storage account container credential definition.",
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "The storage account container name"
        },
        "containerSasUri": {
          "type": "string",
          "description": "The storage account container sas uri"
        }
      }
    },
    "DeploymentResourceIdReference": {
      "description": "The azure resource reference which is used for deployment.",
      "type": "object",
      "discriminator": "idType",
      "required": [
        "idType"
      ],
      "properties": {
        "idType": {
          "description": "The resource reference arm id type.",
          "$ref": "#/definitions/IdType"
        }
      }
    },
    "SecretDeploymentResourceReference": {
      "description": "Secret deployment resource id reference.",
      "x-ms-discriminator-value": "Secret",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentResourceIdReference"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-secret": true,
          "description": "Resource ID.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      }
    },
    "OpenDeploymentResourceReference": {
      "description": "Non secret deployment resource id reference.",
      "x-ms-discriminator-value": "Open",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentResourceIdReference"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    },
    "IdType": {
      "type": "string",
      "description": "The resource reference arm id type.",
      "default": "Open",
      "enum": [
        "Unknown",
        "Open",
        "Secret"
      ],
      "x-ms-enum": {
        "name": "idType",
        "modelAsString": true
      }
    },
    "SiteNetworkService": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/SiteNetworkServicePropertiesFormat",
          "description": "Site network service properties."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed identity of the Site network service, if configured."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku of the site network service."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Site network service resource."
    },
    "SiteNetworkServicePropertiesFormat": {
      "type": "object",
      "description": "Site network service properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the site network service resource."
        },
        "managedResourceGroupConfiguration": {
          "$ref": "./common.json#/definitions/ManagedResourceGroupConfiguration"
        },
        "siteReference": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "The site details"
        },
        "publisherName": {
          "readOnly": true,
          "type": "string",
          "description": "The publisher name for the site network service."
        },
        "publisherScope": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/PublisherScope",
          "description": "The scope of the publisher."
        },
        "networkServiceDesignGroupName": {
          "readOnly": true,
          "type": "string",
          "description": "The network service design group name for the site network service."
        },
        "networkServiceDesignVersionName": {
          "readOnly": true,
          "type": "string",
          "description": "The network service design version for the site network service."
        },
        "networkServiceDesignVersionOfferingLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the network service design offering."
        },
        "networkServiceDesignVersionResourceReference": {
          "$ref": "./common.json#/definitions/DeploymentResourceIdReference",
          "description": "The network service design version resource reference."
        },
        "desiredStateConfigurationGroupValueReferences": {
          "type": "object",
          "additionalProperties": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "The goal state of the site network service resource. This has references to the configuration group value objects that describe the desired state of the site network service."
        },
        "lastStateNetworkServiceDesignVersionName": {
          "readOnly": true,
          "type": "string",
          "description": "The network service design version for the site network service."
        },
        "lastStateConfigurationGroupValueReferences": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "The last state of the site network service resource."
        }
      }
    },
    "SiteNetworkServiceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteNetworkService"
          },
          "description": "A list of site network services in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for site network services API service call."
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Publisher": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/PublisherPropertiesFormat",
          "description": "Publisher properties."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed identity of the publisher, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "publisher resource."
    },
    "PublisherPropertiesFormat": {
      "description": "publisher properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the publisher resource."
        },
        "scope": {
          "description": "The publisher scope.",
          "$ref": "./common.json#/definitions/PublisherScope",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "PublisherListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Publisher"
          },
          "description": "A list of publishers."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of publishers."
    },
    "ArtifactStore": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/ArtifactStorePropertiesFormat",
          "description": "ArtifactStores properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Artifact store properties."
    },
    "ArtifactStorePropertiesFormat": {
      "description": "Artifact store properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application groups resource."
        },
        "storeType": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The artifact store type.",
          "enum": [
            "Unknown",
            "AzureContainerRegistry",
            "AzureStorageAccount"
          ],
          "x-ms-enum": {
            "name": "ArtifactStoreType",
            "modelAsString": true
          }
        },
        "backingResourcePublicNetworkAccess": {
          "$ref": "./common.json#/definitions/backingResourcePublicNetworkAccess",
          "description": "The artifact store backing resource network access type"
        },
        "replicationStrategy": {
          "type": "string",
          "description": "The replication strategy.",
          "enum": [
            "Unknown",
            "SingleReplication"
          ],
          "x-ms-enum": {
            "name": "ArtifactReplicationStrategy",
            "modelAsString": true
          }
        },
        "managedResourceGroupConfiguration": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "The managed resource group name."
            },
            "location": {
              "type": "string",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "The managed resource group location."
            }
          }
        },
        "storageResourceId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "description": "The created storage resource id"
        }
      }
    },
    "ArtifactStoreListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStore"
          },
          "description": "A list of artifact stores."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of artifact stores."
    },
    "ArtifactStoreNetworkFabricControllerEndPoints": {
      "type": "object",
      "properties": {
        "networkFabricControllerIds": {
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "list of network fabric controllers.",
          "x-ms-identifiers": [
            "id"
          ]
        }
      },
      "description": "List of network fabric controller ids."
    },
    "ArtifactStoreNetworkFabricControllerEndPointsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStoreNetworkFabricControllerEndPoints"
          },
          "description": "A list of network fabric controllers."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to get the next set of results.",
          "format": "uri"
        }
      },
      "description": "List of manual private endpoints."
    },
    "ArtifactStorePrivateEndPointsFormat": {
      "type": "object",
      "properties": {
        "manualPrivateEndPointConnections": {
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "list of private endpoints.",
          "x-ms-identifiers": [
            "id"
          ]
        }
      },
      "description": "List of manual private endpoints."
    },
    "ArtifactStorePrivateEndPointsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStorePrivateEndPointsFormat"
          },
          "description": "A list of private endpoints."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to get the next set of results."
        }
      },
      "description": "List of manual private endpoints."
    },
    "ArtifactManifestListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactManifest"
          },
          "description": "A list of artifact manifests."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to get the next set of results."
        }
      },
      "description": "A list of artifact manifests."
    },
    "ArtifactManifest": {
      "description": "Artifact manifest properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/ArtifactManifestPropertiesFormat",
          "description": "Artifact manifest properties."
        }
      }
    },
    "ArtifactManifestPropertiesFormat": {
      "description": "Artifact manifest properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the ArtifactManifest resource."
        },
        "artifactManifestState": {
          "readOnly": true,
          "description": "The artifact manifest state.",
          "$ref": "#/definitions/ArtifactManifestState"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestArtifactFormat"
          },
          "x-ms-identifiers": [
            "artifactName",
            "artifactType",
            "artifactVersion"
          ],
          "description": "The artifacts list."
        }
      }
    },
    "ManifestArtifactFormat": {
      "description": "Manifest artifact properties.",
      "type": "object",
      "properties": {
        "artifactName": {
          "type": "string",
          "description": "The artifact name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "artifactType": {
          "$ref": "#/definitions/ArtifactType",
          "description": "The artifact type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "artifactVersion": {
          "type": "string",
          "description": "The artifact version.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ArtifactManifestUpdateState": {
      "description": "The artifact manifest updating request payload. Only the 'Uploaded' state is allowed for updates. Other states are used for internal state transitioning.",
      "type": "object",
      "properties": {
        "artifactManifestState": {
          "description": "The artifact manifest state.",
          "$ref": "#/definitions/ArtifactManifestState",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ArtifactManifestState": {
      "type": "string",
      "description": "The artifact manifest state.",
      "enum": [
        "Unknown",
        "Uploading",
        "Uploaded",
        "Validating",
        "ValidationFailed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ArtifactManifestState",
        "modelAsString": true
      }
    },
    "ArtifactType": {
      "type": "string",
      "description": "The artifact type.",
      "enum": [
        "Unknown",
        "OCIArtifact",
        "VhdImageFile",
        "ArmTemplate",
        "ImageFile"
      ],
      "x-ms-enum": {
        "name": "ArtifactType",
        "modelAsString": true
      }
    },
    "NetworkFunctionDefinitionGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/NetworkFunctionDefinitionGroupPropertiesFormat",
          "description": "Network function definition group properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Network function definition group resource."
    },
    "NetworkFunctionDefinitionGroupPropertiesFormat": {
      "description": "Network function definition group properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network function definition groups resource."
        },
        "description": {
          "type": "string",
          "description": "The network function definition group description."
        }
      }
    },
    "NetworkFunctionDefinitionGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkFunctionDefinitionGroup"
          },
          "description": "A list of network function definition group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of network function definition group resources."
    },
    "NetworkFunctionDefinitionVersionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkFunctionDefinitionVersion"
          },
          "description": "A list of network function definition versions."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to get the next set of results."
        }
      },
      "description": "A list of network function definition versions."
    },
    "NetworkFunctionDefinitionVersion": {
      "description": "Network function definition version.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/NetworkFunctionDefinitionVersionPropertiesFormat",
          "description": "Network function definition version properties."
        }
      }
    },
    "NetworkFunctionDefinitionVersionPropertiesFormat": {
      "description": "Network function definition version properties.",
      "discriminator": "networkFunctionType",
      "required": [
        "networkFunctionType"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network function definition version resource."
        },
        "versionState": {
          "readOnly": true,
          "description": "The network function definition version state.",
          "$ref": "#/definitions/VersionState"
        },
        "description": {
          "type": "string",
          "description": "The network function definition version description."
        },
        "deployParameters": {
          "type": "string",
          "description": "The deployment parameters of the network function definition version."
        },
        "networkFunctionType": {
          "description": "The network function type.",
          "$ref": "./common.json#/definitions/NetworkFunctionType"
        }
      }
    },
    "ContainerizedNetworkFunctionDefinitionVersion": {
      "description": "Containerized network function network function definition version properties.",
      "x-ms-discriminator-value": "ContainerizedNetworkFunction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkFunctionDefinitionVersionPropertiesFormat"
        }
      ],
      "properties": {
        "networkFunctionTemplate": {
          "description": "Containerized network function template.",
          "$ref": "#/definitions/ContainerizedNetworkFunctionTemplate"
        }
      }
    },
    "VirtualNetworkFunctionNetworkFunctionDefinitionVersion": {
      "description": "Virtual network function network function definition version properties.",
      "x-ms-discriminator-value": "VirtualNetworkFunction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkFunctionDefinitionVersionPropertiesFormat"
        }
      ],
      "properties": {
        "networkFunctionTemplate": {
          "description": "Virtual network function template.",
          "$ref": "#/definitions/VirtualNetworkFunctionTemplate"
        }
      }
    },
    "ContainerizedNetworkFunctionTemplate": {
      "description": "Containerized network function template.",
      "discriminator": "nfviType",
      "required": [
        "nfviType"
      ],
      "type": "object",
      "properties": {
        "nfviType": {
          "type": "string",
          "description": "The network function type.",
          "enum": [
            "Unknown",
            "AzureArcKubernetes"
          ],
          "x-ms-enum": {
            "name": "ContainerizedNetworkFunctionNFVIType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "VirtualNetworkFunctionTemplate": {
      "description": "Virtual network function template.",
      "discriminator": "nfviType",
      "required": [
        "nfviType"
      ],
      "type": "object",
      "properties": {
        "nfviType": {
          "type": "string",
          "description": "The network function type.",
          "enum": [
            "Unknown",
            "AzureCore",
            "AzureOperatorNexus"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkFunctionNFVIType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AzureArcKubernetesNetworkFunctionTemplate": {
      "description": "Azure Arc kubernetes network function template.",
      "x-ms-discriminator-value": "AzureArcKubernetes",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerizedNetworkFunctionTemplate"
        }
      ],
      "properties": {
        "networkFunctionApplications": {
          "type": "array",
          "description": "Network function applications.",
          "items": {
            "$ref": "#/definitions/AzureArcKubernetesNetworkFunctionApplication"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AzureArcKubernetesNetworkFunctionApplication": {
      "description": "Azure arc kubernetes network function application definition.",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/NetworkFunctionApplication"
        }
      ],
      "type": "object",
      "discriminator": "artifactType",
      "required": [
        "artifactType"
      ],
      "properties": {
        "artifactType": {
          "type": "string",
          "description": "The artifact type.",
          "enum": [
            "Unknown",
            "HelmPackage"
          ],
          "x-ms-enum": {
            "name": "AzureArcKubernetesArtifactType",
            "modelAsString": true
          }
        }
      }
    },
    "AzureArcKubernetesHelmApplication": {
      "description": "Azure arc kubernetes helm application configurations.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureArcKubernetesNetworkFunctionApplication"
        }
      ],
      "x-ms-discriminator-value": "HelmPackage",
      "type": "object",
      "properties": {
        "artifactProfile": {
          "description": "Azure arc kubernetes artifact profile.",
          "$ref": "#/definitions/AzureArcKubernetesArtifactProfile"
        },
        "deployParametersMappingRuleProfile": {
          "description": "Deploy mapping rule profile.",
          "$ref": "#/definitions/AzureArcKubernetesDeployMappingRuleProfile"
        }
      }
    },
    "AzureArcKubernetesArtifactProfile": {
      "description": "Azure arc kubernetes artifact profile properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/ArtifactProfile"
        }
      ],
      "properties": {
        "helmArtifactProfile": {
          "description": "Helm artifact profile.",
          "$ref": "#/definitions/HelmArtifactProfile"
        }
      }
    },
    "HelmArtifactProfile": {
      "description": "Helm artifact profile.",
      "type": "object",
      "properties": {
        "helmPackageName": {
          "type": "string",
          "description": "Helm package name."
        },
        "helmPackageVersionRange": {
          "type": "string",
          "description": "Helm package version range."
        },
        "registryValuesPaths": {
          "type": "array",
          "description": "The registry values path list.",
          "items": {
            "description": "The registry values path.",
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "imagePullSecretsValuesPaths": {
          "type": "array",
          "description": "The image pull secrets values path list.",
          "items": {
            "description": "The image pull secrets values path.",
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureArcKubernetesDeployMappingRuleProfile": {
      "description": "Azure arc kubernetes deploy mapping rule profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/MappingRuleProfile"
        }
      ],
      "properties": {
        "helmMappingRuleProfile": {
          "description": "The helm mapping rule profile.",
          "$ref": "#/definitions/HelmMappingRuleProfile"
        }
      }
    },
    "HelmMappingRuleProfile": {
      "description": "Helm mapping rule profile",
      "type": "object",
      "properties": {
        "releaseNamespace": {
          "description": "Helm release namespace.",
          "type": "string"
        },
        "releaseName": {
          "description": "Helm release name.",
          "type": "string"
        },
        "helmPackageVersion": {
          "description": "Helm package version.",
          "type": "string"
        },
        "values": {
          "description": "Helm release values.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "options": {
          "type": "object",
          "description": "The helm deployment options",
          "properties": {
            "installOptions": {
              "$ref": "#/definitions/HelmInstallOptions",
              "description": "The helm deployment install options"
            },
            "upgradeOptions": {
              "$ref": "#/definitions/HelmUpgradeOptions",
              "description": "The helm deployment upgrade options"
            }
          }
        }
      }
    },
    "HelmInstallOptions": {
      "type": "object",
      "description": "The helm deployment install options",
      "properties": {
        "atomic": {
          "type": "string",
          "description": "The helm deployment atomic options"
        },
        "wait": {
          "type": "string",
          "description": "The helm deployment wait options"
        },
        "timeout": {
          "type": "string",
          "description": "The helm deployment timeout options"
        }
      }
    },
    "HelmUpgradeOptions": {
      "type": "object",
      "description": "The helm deployment install options",
      "properties": {
        "atomic": {
          "type": "string",
          "description": "The helm deployment atomic options"
        },
        "wait": {
          "type": "string",
          "description": "The helm deployment wait options"
        },
        "timeout": {
          "type": "string",
          "description": "The helm deployment timeout options"
        }
      }
    },
    "AzureCoreNetworkFunctionTemplate": {
      "description": "Azure virtual network function template.",
      "x-ms-discriminator-value": "AzureCore",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VirtualNetworkFunctionTemplate"
        }
      ],
      "properties": {
        "networkFunctionApplications": {
          "type": "array",
          "description": "Network function applications.",
          "items": {
            "$ref": "#/definitions/AzureCoreNetworkFunctionApplication"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AzureOperatorNexusNetworkFunctionTemplate": {
      "description": "Azure Operator Distributed Services network function template.",
      "x-ms-discriminator-value": "AzureOperatorNexus",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VirtualNetworkFunctionTemplate"
        }
      ],
      "properties": {
        "networkFunctionApplications": {
          "type": "array",
          "description": "Network function applications.",
          "items": {
            "$ref": "#/definitions/AzureOperatorNexusNetworkFunctionApplication"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AzureCoreNetworkFunctionApplication": {
      "description": "Azure virtual network function application definition.",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/NetworkFunctionApplication"
        }
      ],
      "type": "object",
      "discriminator": "artifactType",
      "required": [
        "artifactType"
      ],
      "properties": {
        "artifactType": {
          "type": "string",
          "description": "The artifact type.",
          "enum": [
            "Unknown",
            "VhdImageFile",
            "ArmTemplate"
          ],
          "x-ms-enum": {
            "name": "AzureCoreArtifactType",
            "modelAsString": true
          }
        }
      }
    },
    "AzureOperatorNexusNetworkFunctionApplication": {
      "description": "Azure Operator Distributed Services network function application definition.",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/NetworkFunctionApplication"
        }
      ],
      "type": "object",
      "discriminator": "artifactType",
      "required": [
        "artifactType"
      ],
      "properties": {
        "artifactType": {
          "type": "string",
          "description": "The artifact type.",
          "enum": [
            "Unknown",
            "ImageFile",
            "ArmTemplate"
          ],
          "x-ms-enum": {
            "name": "AzureOperatorNexusArtifactType",
            "modelAsString": true
          }
        }
      }
    },
    "AzureCoreNetworkFunctionVhdApplication": {
      "description": "Azure core network function vhd application definition.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCoreNetworkFunctionApplication"
        }
      ],
      "x-ms-discriminator-value": "VhdImageFile",
      "type": "object",
      "properties": {
        "artifactProfile": {
          "description": "Azure vhd image artifact profile.",
          "$ref": "#/definitions/AzureCoreVhdImageArtifactProfile"
        },
        "deployParametersMappingRuleProfile": {
          "description": "Deploy mapping rule profile.",
          "$ref": "#/definitions/AzureCoreVhdImageDeployMappingRuleProfile"
        }
      }
    },
    "AzureCoreNetworkFunctionArmTemplateApplication": {
      "description": "Azure core network function Template application definition.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCoreNetworkFunctionApplication"
        }
      ],
      "x-ms-discriminator-value": "ArmTemplate",
      "type": "object",
      "properties": {
        "artifactProfile": {
          "description": "Azure template artifact profile.",
          "$ref": "#/definitions/AzureCoreArmTemplateArtifactProfile"
        },
        "deployParametersMappingRuleProfile": {
          "description": "Deploy mapping rule profile.",
          "$ref": "#/definitions/AzureCoreArmTemplateDeployMappingRuleProfile"
        }
      }
    },
    "AzureOperatorNexusNetworkFunctionImageApplication": {
      "description": "Azure Operator Distributed Services network function image application definition.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureOperatorNexusNetworkFunctionApplication"
        }
      ],
      "x-ms-discriminator-value": "ImageFile",
      "type": "object",
      "properties": {
        "artifactProfile": {
          "description": "Azure Operator Distributed Services image artifact profile.",
          "$ref": "#/definitions/AzureOperatorNexusImageArtifactProfile"
        },
        "deployParametersMappingRuleProfile": {
          "description": "Deploy mapping rule profile.",
          "$ref": "#/definitions/AzureOperatorNexusImageDeployMappingRuleProfile"
        }
      }
    },
    "AzureOperatorNexusNetworkFunctionArmTemplateApplication": {
      "description": "Azure Operator Distributed Services network function Template application definition.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureOperatorNexusNetworkFunctionApplication"
        }
      ],
      "x-ms-discriminator-value": "ArmTemplate",
      "type": "object",
      "properties": {
        "artifactProfile": {
          "description": "Azure Operator Distributed Services Template artifact profile.",
          "$ref": "#/definitions/AzureOperatorNexusArmTemplateArtifactProfile"
        },
        "deployParametersMappingRuleProfile": {
          "description": "Deploy mapping rule profile.",
          "$ref": "#/definitions/AzureOperatorNexusArmTemplateDeployMappingRuleProfile"
        }
      }
    },
    "AzureCoreVhdImageArtifactProfile": {
      "description": "Azure vhd artifact profile properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/ArtifactProfile"
        }
      ],
      "properties": {
        "vhdArtifactProfile": {
          "description": "Vhd artifact profile.",
          "$ref": "#/definitions/VhdImageArtifactProfile"
        }
      }
    },
    "AzureCoreArmTemplateArtifactProfile": {
      "description": "Azure template artifact profile properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/ArtifactProfile"
        }
      ],
      "properties": {
        "templateArtifactProfile": {
          "description": "Template artifact profile.",
          "$ref": "#/definitions/ArmTemplateArtifactProfile"
        }
      }
    },
    "AzureOperatorNexusImageArtifactProfile": {
      "description": "Azure Operator Distributed Services image artifact profile properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/ArtifactProfile"
        }
      ],
      "properties": {
        "imageArtifactProfile": {
          "description": "Image artifact profile.",
          "$ref": "#/definitions/ImageArtifactProfile"
        }
      }
    },
    "AzureOperatorNexusArmTemplateArtifactProfile": {
      "description": "Azure Operator Distributed Services vhd artifact profile properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/ArtifactProfile"
        }
      ],
      "properties": {
        "templateArtifactProfile": {
          "description": "Template artifact profile.",
          "$ref": "#/definitions/ArmTemplateArtifactProfile"
        }
      }
    },
    "AzureCoreVhdImageDeployMappingRuleProfile": {
      "description": "Azure vhd deploy mapping rule profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/MappingRuleProfile"
        }
      ],
      "properties": {
        "vhdImageMappingRuleProfile": {
          "description": "The vhd mapping rule profile.",
          "$ref": "#/definitions/VhdImageMappingRuleProfile"
        }
      }
    },
    "AzureCoreArmTemplateDeployMappingRuleProfile": {
      "description": "Azure template deploy mapping rule profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/MappingRuleProfile"
        }
      ],
      "properties": {
        "templateMappingRuleProfile": {
          "description": "The template mapping rule profile.",
          "$ref": "#/definitions/ArmTemplateMappingRuleProfile"
        }
      }
    },
    "AzureOperatorNexusImageDeployMappingRuleProfile": {
      "description": "Azure Operator Distributed Services image deploy mapping rule profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/MappingRuleProfile"
        }
      ],
      "properties": {
        "imageMappingRuleProfile": {
          "description": "The vhd mapping rule profile.",
          "$ref": "#/definitions/ImageMappingRuleProfile"
        }
      }
    },
    "AzureOperatorNexusArmTemplateDeployMappingRuleProfile": {
      "description": "Azure Operator Distributed Services template deploy mapping rule profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/MappingRuleProfile"
        }
      ],
      "properties": {
        "templateMappingRuleProfile": {
          "description": "The template mapping rule profile.",
          "$ref": "#/definitions/ArmTemplateMappingRuleProfile"
        }
      }
    },
    "VhdImageArtifactProfile": {
      "description": "Vhd artifact profile.",
      "type": "object",
      "properties": {
        "vhdName": {
          "type": "string",
          "description": "Vhd name."
        },
        "vhdVersion": {
          "type": "string",
          "description": "Vhd version."
        }
      }
    },
    "VhdImageMappingRuleProfile": {
      "description": "Vhd mapping rule profile",
      "type": "object",
      "properties": {
        "userConfiguration": {
          "description": "List of values.",
          "type": "string"
        }
      }
    },
    "ArmTemplateArtifactProfile": {
      "description": "Template artifact profile.",
      "type": "object",
      "properties": {
        "templateName": {
          "type": "string",
          "description": "Template name."
        },
        "templateVersion": {
          "type": "string",
          "description": "Template version."
        }
      }
    },
    "ArmTemplateMappingRuleProfile": {
      "description": "Template mapping rule profile",
      "type": "object",
      "properties": {
        "templateParameters": {
          "description": "List of template parameters.",
          "type": "string"
        }
      }
    },
    "ImageArtifactProfile": {
      "description": "Image artifact profile.",
      "type": "object",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "Image name."
        },
        "imageVersion": {
          "type": "string",
          "description": "Image version."
        }
      }
    },
    "ImageMappingRuleProfile": {
      "description": "Image mapping rule profile",
      "type": "object",
      "properties": {
        "userConfiguration": {
          "description": "List of values.",
          "type": "string"
        }
      }
    },
    "VersionState": {
      "type": "string",
      "description": "The network function definition version state.",
      "enum": [
        "Unknown",
        "Preview",
        "Validating",
        "ValidationFailed",
        "Active",
        "Deprecated"
      ],
      "x-ms-enum": {
        "name": "versionState",
        "modelAsString": true
      }
    },
    "NetworkFunctionDefinitionVersionUpdateState": {
      "type": "object",
      "description": "Publisher network function definition version update request definition.",
      "properties": {
        "versionState": {
          "description": "The network function definition version state. Only the 'Active' and 'Deprecated' states are allowed for updates. Other states are used for internal state transitioning.",
          "$ref": "#/definitions/VersionState",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "configurationGroupValue": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/configurationGroupValuePropertiesFormat",
          "description": "Hybrid configuration group value properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Hybrid configuration group value resource."
    },
    "configurationGroupValuePropertiesFormat": {
      "type": "object",
      "description": "Hybrid configuration group value properties.",
      "required": [
        "configurationType"
      ],
      "discriminator": "configurationType",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the site resource."
        },
        "publisherName": {
          "readOnly": true,
          "type": "string",
          "description": "The publisher name for the configuration group schema."
        },
        "publisherScope": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/PublisherScope",
          "description": "The scope of the publisher."
        },
        "configurationGroupSchemaName": {
          "readOnly": true,
          "type": "string",
          "description": "The configuration group schema name."
        },
        "configurationGroupSchemaOfferingLocation": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the configuration group schema offering."
        },
        "configurationGroupSchemaResourceReference": {
          "$ref": "./common.json#/definitions/DeploymentResourceIdReference",
          "description": "The configuration group schema resource reference."
        },
        "configurationType": {
          "$ref": "#/definitions/configurationGroupValueConfigurationType",
          "description": "The value which indicates if configuration values are secrets"
        }
      }
    },
    "ConfigurationValueWithSecrets": {
      "description": "The ConfigurationValue with secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/configurationGroupValuePropertiesFormat"
        }
      ],
      "properties": {
        "secretConfigurationValue": {
          "type": "string",
          "description": "Name and value pairs that define the configuration value secrets. It can be a well formed escaped JSON string.",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "Secret"
    },
    "ConfigurationValueWithoutSecrets": {
      "description": "The ConfigurationValue with no secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/configurationGroupValuePropertiesFormat"
        }
      ],
      "properties": {
        "configurationValue": {
          "type": "string",
          "description": "Name and value pairs that define the configuration value. It can be a well formed escaped JSON string."
        }
      },
      "x-ms-discriminator-value": "Open"
    },
    "configurationGroupValueListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationGroupValue"
          },
          "description": "A list of hybrid configurationGroups."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for hybrid configurationGroups API service call."
    },
    "configurationGroupValueConfigurationType": {
      "type": "string",
      "description": "The secret type which indicates if secret or not.",
      "enum": [
        "Unknown",
        "Secret",
        "Open"
      ],
      "x-ms-enum": {
        "name": "ConfigurationGroupValueConfigurationType",
        "modelAsString": true
      }
    },
    "NetworkFunction": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/NetworkFunctionPropertiesFormat",
          "description": "Network function properties."
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed identity of the network function."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Network function resource response."
    },
    "NetworkFunctionPropertiesFormat": {
      "type": "object",
      "description": "Network function properties.",
      "required": [
        "configurationType"
      ],
      "discriminator": "configurationType",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network function resource."
        },
        "publisherName": {
          "type": "string",
          "description": "The publisher name for the network function."
        },
        "publisherScope": {
          "$ref": "./common.json#/definitions/PublisherScope",
          "description": "The scope of the publisher."
        },
        "networkFunctionDefinitionGroupName": {
          "type": "string",
          "description": "The network function definition group name for the network function."
        },
        "networkFunctionDefinitionVersion": {
          "type": "string",
          "description": "The network function definition version for the network function."
        },
        "networkFunctionDefinitionOfferingLocation": {
          "type": "string",
          "description": "The location of the network function definition offering."
        },
        "networkFunctionDefinitionVersionResourceReference": {
          "$ref": "./common.json#/definitions/DeploymentResourceIdReference",
          "description": "The network function definition version resource reference."
        },
        "nfviType": {
          "$ref": "./common.json#/definitions/NFVIType",
          "description": "The nfvi type for the network function."
        },
        "nfviId": {
          "type": "string",
          "description": "The nfviId for the network function."
        },
        "allowSoftwareUpdate": {
          "type": "boolean",
          "description": "Indicates if software updates are allowed during deployment."
        },
        "configurationType": {
          "$ref": "#/definitions/NetworkFunctionConfigurationType",
          "description": "The value which indicates if NF  values are secrets"
        },
        "roleOverrideValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleOverrideValues"
          },
          "description": "The role configuration override values from the user."
        }
      }
    },
    "NetworkFunctionValueWithSecrets": {
      "description": "NetworkFunction with secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkFunctionPropertiesFormat"
        }
      ],
      "properties": {
        "secretDeploymentValues": {
          "type": "string",
          "description": "The JSON-serialized secret deployment values from the user. This contains secrets like passwords,keys etc",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "Secret"
    },
    "NetworkFunctionValueWithoutSecrets": {
      "description": "NetworkFunction with no secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkFunctionPropertiesFormat"
        }
      ],
      "properties": {
        "deploymentValues": {
          "type": "string",
          "description": "The JSON-serialized deployment values from the user."
        }
      },
      "x-ms-discriminator-value": "Open"
    },
    "NetworkFunctionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkFunction"
          },
          "description": "A list of network function resources in a subscription or resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for network function API service call."
    },
    "NetworkFunctionConfigurationType": {
      "type": "string",
      "description": "The secret type which indicates if secret or not.",
      "enum": [
        "Unknown",
        "Secret",
        "Open"
      ],
      "x-ms-enum": {
        "name": "NetworkFunctionConfigurationType",
        "modelAsString": true
      }
    },
    "RoleOverrideValues": {
      "type": "string",
      "description": "The JSON-serialized role configuration override values."
    },
    "Component": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/ComponentProperties",
          "description": "The component properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The component sub resource."
    },
    "ComponentProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the component resource."
        },
        "deploymentProfile": {
          "readOnly": true,
          "type": "string",
          "description": "The JSON-serialized deployment profile of the component resource."
        },
        "deploymentStatus": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "#/definitions/DeploymentStatusProperties",
          "description": "The deployment status of the component resource."
        }
      },
      "description": "The component properties of the network function."
    },
    "DeploymentStatusProperties": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the component resource."
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resource related to the component resource."
        },
        "nextExpectedUpdateAt": {
          "type": "string",
          "format": "date-time",
          "description": "The next expected update of deployment status."
        }
      },
      "description": "The deployment status properties of the network function component."
    },
    "Status": {
      "type": "string",
      "description": "The component resource deployment status.",
      "enum": [
        "Unknown",
        "Deployed",
        "Uninstalled",
        "Superseded",
        "Failed",
        "Uninstalling",
        "Pending-Install",
        "Pending-Upgrade",
        "Pending-Rollback",
        "Downloading",
        "Installing",
        "Reinstalling",
        "Rollingback",
        "Upgrading"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "Resources": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          },
          "description": "Deployments that are related to component resource.",
          "x-ms-identifiers": []
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pod"
          },
          "description": "Pods related to component resource.",
          "x-ms-identifiers": []
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicaSet"
          },
          "description": "Replica sets related to component resource.",
          "x-ms-identifiers": []
        },
        "statefulSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatefulSet"
          },
          "description": "Stateful sets related to component resource.",
          "x-ms-identifiers": []
        },
        "daemonSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DaemonSet"
          },
          "description": "Daemonsets related to component resource.",
          "x-ms-identifiers": []
        }
      },
      "description": "The resources of the network function component."
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the deployment."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the deployment."
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of pods"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ready pods."
        },
        "upToDate": {
          "type": "integer",
          "format": "int32",
          "description": "Number of upto date pods."
        },
        "available": {
          "type": "integer",
          "format": "int32",
          "description": "Number of available pods."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Time of deployment."
        }
      },
      "description": "Helm Deployment status properties."
    },
    "Pod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Pod."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the Pod."
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of containers"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ready containers."
        },
        "status": {
          "$ref": "#/definitions/PodStatus",
          "description": "The status of a pod."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Time of Pod."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodEvent"
          },
          "description": "Last 5 Pod events.",
          "x-ms-identifiers": []
        }
      },
      "description": "Helm Pod status properties."
    },
    "PodStatus": {
      "type": "string",
      "description": "The status of a Pod.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Failed",
        "Running",
        "Pending",
        "Terminating",
        "NotReady"
      ],
      "x-ms-enum": {
        "name": "PodStatus",
        "modelAsString": true
      }
    },
    "PodEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/PodEventType",
          "description": "The type of pod event."
        },
        "reason": {
          "type": "string",
          "description": "Event reason."
        },
        "message": {
          "type": "string",
          "description": "Event message."
        },
        "lastSeenTime": {
          "type": "string",
          "format": "date-time",
          "description": "Event Last seen."
        }
      },
      "description": "Pod Event  properties."
    },
    "PodEventType": {
      "type": "string",
      "description": "The type of pod event.",
      "enum": [
        "Normal",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "PodEventType",
        "modelAsString": true
      }
    },
    "ReplicaSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the replicaSet."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the replicaSet."
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of pods"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ready pods."
        },
        "current": {
          "type": "integer",
          "format": "int32",
          "description": "Number of current pods."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Time of replicaSet."
        }
      },
      "description": "Helm ReplicaSet status properties."
    },
    "StatefulSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the statefulset."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the statefulset."
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of pods"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ready pods."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Time of statefulset."
        }
      },
      "description": "Helm StatefulSet status properties."
    },
    "DaemonSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the daemonSet."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the daemonSet."
        },
        "desired": {
          "type": "integer",
          "format": "int32",
          "description": "Desired number of pods"
        },
        "current": {
          "type": "integer",
          "format": "int32",
          "description": "Current number of pods"
        },
        "ready": {
          "type": "integer",
          "format": "int32",
          "description": "Number of Ready pods"
        },
        "upToDate": {
          "type": "integer",
          "format": "int32",
          "description": "Number of  upto date pods"
        },
        "available": {
          "type": "integer",
          "format": "int32",
          "description": "Number of available pods."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Time of daemonSet."
        }
      },
      "description": "Helm DaemonSet status properties."
    },
    "ComponentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "description": "A list of component resources in a networkFunction."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list component API service call."
    },
    "ExecuteRequestParameters": {
      "type": "object",
      "properties": {
        "serviceEndpoint": {
          "type": "string",
          "description": "The endpoint of service to call."
        },
        "requestMetadata": {
          "$ref": "#/definitions/RequestMetadata",
          "description": "The request metadata."
        }
      },
      "required": [
        "serviceEndpoint",
        "requestMetadata"
      ],
      "description": "Payload for execute request post call."
    },
    "RequestMetadata": {
      "type": "object",
      "properties": {
        "relativePath": {
          "type": "string",
          "description": "The relative path of the request."
        },
        "httpMethod": {
          "type": "string",
          "description": "The http method of the request.",
          "enum": [
            "Unknown",
            "Post",
            "Put",
            "Get",
            "Patch",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "HttpMethod",
            "modelAsString": true
          }
        },
        "serializedBody": {
          "type": "string",
          "description": "The serialized body of the request."
        },
        "apiVersion": {
          "type": "string",
          "description": "The api version of the request."
        }
      },
      "required": [
        "relativePath",
        "httpMethod",
        "serializedBody"
      ],
      "description": "Request metadata of execute request post call payload."
    },
    "ProxyArtifactOverviewListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxyArtifactListOverview"
          },
          "description": "A list of available proxy artifacts."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The proxy artifact list result."
    },
    "ProxyArtifactVersionsOverviewListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxyArtifactVersionsListOverview"
          },
          "description": "A list of available proxy artifacts."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The proxy artifact list result."
    },
    "ProxyArtifactVersionsListOverview": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "readOnly": true,
          "$ref": "#/definitions/ProxyArtifactOverviewPropertiesValue",
          "description": "Proxy Artifact overview properties."
        }
      },
      "readOnly": true,
      "description": "The proxy artifact overview."
    },
    "ProxyArtifactListOverview": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "readOnly": true,
      "description": "The proxy artifact overview."
    },
    "ProxyArtifactOverview": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "readOnly": true,
          "$ref": "#/definitions/ProxyArtifactOverviewPropertiesFormat",
          "description": "Proxy Artifact properties overview."
        }
      },
      "readOnly": true,
      "description": "The proxy artifact overview."
    },
    "ProxyArtifactOverviewPropertiesFormat": {
      "description": "Proxy Artifact overview properties.",
      "type": "object",
      "properties": {
        "artifactVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProxyArtifactOverviewPropertiesValue"
          },
          "description": "The proxy artifact overview properties.",
          "x-ms-identifiers": []
        }
      }
    },
    "ProxyArtifactOverviewPropertiesValue": {
      "type": "object",
      "properties": {
        "artifactType": {
          "$ref": "./publisher.json#/definitions/ArtifactType",
          "description": "The artifact type."
        },
        "artifactVersion": {
          "type": "string",
          "description": "The artifact version."
        },
        "artifactState": {
          "$ref": "#/definitions/ArtifactState",
          "description": "The artifact state"
        }
      }
    },
    "ArtifactChangeState": {
      "description": "The artifact updating request payload.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactChangeStateProperties",
          "description": "Artifact update state properties."
        }
      }
    },
    "ArtifactChangeStateProperties": {
      "description": "The artifact update state properties.",
      "type": "object",
      "properties": {
        "artifactState": {
          "$ref": "#/definitions/ArtifactState",
          "description": "The artifact state"
        }
      }
    },
    "ArtifactState": {
      "type": "string",
      "description": "The artifact state.",
      "enum": [
        "Unknown",
        "Preview",
        "Active",
        "Deprecated"
      ],
      "x-ms-enum": {
        "name": "ArtifactState",
        "modelAsString": true
      }
    },
    "NetworkServiceDesignGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/NetworkServiceDesignGroupPropertiesFormat",
          "description": "network service design group properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "network service design group resource."
    },
    "NetworkServiceDesignGroupPropertiesFormat": {
      "description": "network service design group properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network service design groups resource."
        },
        "description": {
          "type": "string",
          "description": "The network service design group description."
        }
      }
    },
    "NetworkServiceDesignGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkServiceDesignGroup"
          },
          "description": "A list of network service design group."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of network service design group resources."
    },
    "networkServiceDesignVersionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/networkServiceDesignVersion"
          },
          "description": "A list of network service design versions."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to get the next set of results."
        }
      },
      "description": "A list of network service design versions."
    },
    "networkServiceDesignVersion": {
      "description": "network service design version.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/networkServiceDesignVersionPropertiesFormat",
          "description": "network service design version properties."
        }
      }
    },
    "networkServiceDesignVersionPropertiesFormat": {
      "description": "network service design version properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network service design version resource."
        },
        "versionState": {
          "readOnly": true,
          "description": "The network service design version state.",
          "$ref": "#/definitions/NSDVersionState"
        },
        "description": {
          "type": "string",
          "description": "The network service design version description."
        },
        "configurationGroupSchemaReferences": {
          "type": "object",
          "additionalProperties": {
            "$ref": "./common.json#/definitions/ReferencedResource"
          },
          "description": "The configuration schemas to used to define the values."
        },
        "nfvisFromSite": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NfviDetails"
          },
          "description": "The nfvis from the site."
        },
        "resourceElementTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceElementTemplate"
          },
          "description": "List of resource element template",
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "NfviDetails": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The nfvi name.",
          "type": "string"
        },
        "type": {
          "description": "The nfvi type.",
          "type": "string"
        }
      },
      "description": "The nfvi details."
    },
    "ResourceElementTemplate": {
      "required": [
        "type"
      ],
      "discriminator": "type",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource element template."
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The resource element template type.",
          "x-ms-client-name": "ResourceElementType"
        },
        "dependsOnProfile": {
          "$ref": "./common.json#/definitions/DependsOnProfile",
          "description": "The depends on profile."
        }
      },
      "description": "The resource element template object."
    },
    "Type": {
      "type": "string",
      "description": "The resource element template type.",
      "enum": [
        "Unknown",
        "ArmResourceDefinition",
        "NetworkFunctionDefinition"
      ],
      "x-ms-enum": {
        "name": "type",
        "modelAsString": true
      }
    },
    "ArmResourceDefinitionResourceElementTemplateDetails": {
      "description": "The arm resource definition resource element template details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceElementTemplate"
        }
      ],
      "properties": {
        "configuration": {
          "$ref": "#/definitions/ArmResourceDefinitionResourceElementTemplate",
          "description": "The resource element template type."
        }
      },
      "x-ms-discriminator-value": "ArmResourceDefinition"
    },
    "ArmResourceDefinitionResourceElementTemplate": {
      "type": "object",
      "properties": {
        "templateType": {
          "description": "The template type.",
          "$ref": "#/definitions/TemplateType"
        },
        "parameterValues": {
          "type": "string",
          "description": "Name and value pairs that define the parameter values. It can be  a well formed escaped JSON string."
        },
        "artifactProfile": {
          "$ref": "#/definitions/NSDArtifactProfile",
          "description": "Artifact profile properties."
        }
      },
      "description": "The arm template RE."
    },
    "NetworkFunctionDefinitionResourceElementTemplateDetails": {
      "description": "The network function definition resource element template details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceElementTemplate"
        }
      ],
      "properties": {
        "configuration": {
          "$ref": "#/definitions/ArmResourceDefinitionResourceElementTemplate",
          "description": "The resource element template type."
        }
      },
      "x-ms-discriminator-value": "NetworkFunctionDefinition"
    },
    "NSDArtifactProfile": {
      "description": "Artifact profile properties.",
      "type": "object",
      "properties": {
        "artifactStoreReference": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "The artifact store resource id"
        },
        "artifactName": {
          "type": "string",
          "description": "Artifact name."
        },
        "artifactVersion": {
          "type": "string",
          "description": "Artifact version."
        }
      }
    },
    "TemplateType": {
      "type": "string",
      "description": "The template type.",
      "enum": [
        "Unknown",
        "ArmTemplate"
      ],
      "x-ms-enum": {
        "name": "templateType",
        "modelAsString": true
      }
    },
    "ConfigurationGenerationType": {
      "type": "string",
      "description": "The configuration generation type.",
      "enum": [
        "Unknown",
        "HandlebarTemplate"
      ],
      "x-ms-enum": {
        "name": "configurationGenerationType",
        "modelAsString": true
      }
    },
    "NSDVersionState": {
      "type": "string",
      "description": "The network service design version state.",
      "enum": [
        "Unknown",
        "Preview",
        "Active",
        "Deprecated"
      ],
      "x-ms-enum": {
        "name": "versionState",
        "modelAsString": true
      }
    },
    "NetworkServiceDesignVersionUpdateState": {
      "type": "object",
      "description": "Publisher network service design version update request definition.",
      "properties": {
        "versionState": {
          "description": "The network service design version state.",
          "$ref": "#/definitions/NSDVersionState",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ConfigurationGroupSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/ConfigurationGroupSchemaPropertiesFormat",
          "description": "Configuration group schema properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Configuration group schema resource."
    },
    "ConfigurationGroupSchemaPropertiesFormat": {
      "description": "Configuration group schema properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Configuration group schema resource."
        },
        "versionState": {
          "readOnly": true,
          "description": "The configuration group schema version state.",
          "$ref": "#/definitions/ConfigurationGroupSchemaVersionState"
        },
        "description": {
          "type": "string",
          "description": "Description of what schema can contain."
        },
        "schemaDefinition": {
          "type": "string",
          "description": "Name and value pairs that define the configuration value. It can be a well formed escaped JSON string."
        }
      }
    },
    "ConfigurationGroupSchemaListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationGroupSchema"
          },
          "description": "A list of configuration group schema."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "A list of configuration group schema resources."
    },
    "ConfigurationGroupSchemaVersionState": {
      "type": "string",
      "description": "The configuration group schema state.",
      "enum": [
        "Unknown",
        "Preview",
        "Active",
        "Deprecated"
      ],
      "x-ms-enum": {
        "name": "versionState",
        "modelAsString": true
      }
    },
    "ConfigurationGroupSchemaVersionUpdateState": {
      "type": "object",
      "description": "Publisher configuration group schema update request definition.",
      "properties": {
        "versionState": {
          "description": "The configuration group schema state.",
          "$ref": "#/definitions/ConfigurationGroupSchemaVersionState",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}