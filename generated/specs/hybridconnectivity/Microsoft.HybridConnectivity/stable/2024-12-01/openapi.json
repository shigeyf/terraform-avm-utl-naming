{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.HybridConnectivity",
    "version": "2024-12-01"
  },
  "components": {},
  "paths": {
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints": {
      "get": {
        "operationId": "Endpoints_List",
        "tags": [
          "EndpointResources"
        ],
        "description": "List of endpoints to the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EndpointsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsGet": {
            "$ref": "./examples/EndpointsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}": {
      "get": {
        "operationId": "Endpoints_Get",
        "tags": [
          "EndpointResources"
        ],
        "description": "Gets the endpoint to the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsGetCustom": {
            "$ref": "./examples/EndpointsGetCustom.json"
          },
          "HybridConnectivityEndpointsGetDefault": {
            "$ref": "./examples/EndpointsGetDefault.json"
          }
        }
      },
      "put": {
        "operationId": "Endpoints_CreateOrUpdate",
        "tags": [
          "EndpointResources"
        ],
        "description": "Create or update the endpoint to the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "EndpointResource",
            "in": "body",
            "description": "Endpoint details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsPutCustom": {
            "$ref": "./examples/EndpointsPutCustom.json"
          },
          "HybridConnectivityEndpointsPutDefault": {
            "$ref": "./examples/EndpointsPutDefault.json"
          }
        }
      },
      "patch": {
        "operationId": "Endpoints_Update",
        "tags": [
          "EndpointResources"
        ],
        "description": "Update the endpoint to the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "EndpointResource",
            "in": "body",
            "description": "Endpoint details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsPatchDefault": {
            "$ref": "./examples/EndpointsPatchDefault.json"
          }
        }
      },
      "delete": {
        "operationId": "Endpoints_Delete",
        "tags": [
          "EndpointResources"
        ],
        "description": "Deletes the endpoint access to the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsDeleteDefault": {
            "$ref": "./examples/EndpointsDeleteDefault.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listCredentials": {
      "post": {
        "operationId": "Endpoints_ListCredentials",
        "tags": [
          "EndpointResources"
        ],
        "description": "Gets the endpoint access credentials to the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "expiresin",
            "in": "query",
            "description": "The is how long the endpoint access token is valid (in seconds).",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 10800,
            "minimum": 600,
            "maximum": 10800
          },
          {
            "name": "ListCredentialsRequest",
            "in": "body",
            "description": "Object of type ListCredentialsRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ListCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EndpointAccessResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListCredentials": {
            "$ref": "./examples/EndpointsPostListCredentials.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listIngressGatewayCredentials": {
      "post": {
        "operationId": "Endpoints_ListIngressGatewayCredentials",
        "tags": [
          "EndpointResources"
        ],
        "description": "Gets the ingress gateway endpoint credentials ",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "expiresin",
            "in": "query",
            "description": "The is how long the endpoint access token is valid (in seconds).",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 10800,
            "minimum": 600,
            "maximum": 10800
          },
          {
            "name": "ListIngressGatewayCredentialsRequest",
            "in": "body",
            "description": "Object of type ListIngressGatewayCredentialsRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ListIngressGatewayCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IngressGatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListIngressGatewayCredentials": {
            "$ref": "./examples/EndpointsPostListIngressGatewayCredentials.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listManagedProxyDetails": {
      "post": {
        "operationId": "Endpoints_ListManagedProxyDetails",
        "tags": [
          "EndpointResources"
        ],
        "description": "Fetches the managed proxy details ",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "ManagedProxyRequest",
            "in": "body",
            "description": "Object of type ManagedProxyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedProxyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedProxyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListManagedProxyDetails": {
            "$ref": "./examples/EndpointsPostListManagedProxyDetails.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/serviceConfigurations": {
      "get": {
        "operationId": "ServiceConfigurations_ListByEndpointResource",
        "tags": [
          "ServiceConfigurationResources"
        ],
        "summary": "Lists of all the services associated with endpoint resource.",
        "description": "API to enumerate registered services in service configurations under a Endpoint Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetClustersExample": {
            "$ref": "./examples/ServiceConfigurationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/serviceConfigurations/{serviceConfigurationName}": {
      "get": {
        "operationId": "ServiceConfigurations_Get",
        "tags": [
          "ServiceConfigurationResources"
        ],
        "description": "Gets the details about the service to the resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceConfigurationName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityEndpointsServiceconfigurationsGetSSH": {
            "$ref": "./examples/ServiceConfigurationsGetSSH.json"
          },
          "HybridConnectivityEndpointsServiceconfigurationsGetWAC": {
            "$ref": "./examples/ServiceConfigurationsGetWAC.json"
          }
        }
      },
      "put": {
        "operationId": "ServiceConfigurations_CreateOrupdate",
        "tags": [
          "ServiceConfigurationResources"
        ],
        "description": "Create or update a service in serviceConfiguration for the endpoint resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceConfigurationName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "ServiceConfigurationResource",
            "in": "body",
            "description": "Service details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceConfigurationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResource"
            }
          },
          "201": {
            "description": "Resource 'ServiceConfigurationResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceConfigurationsPutSSH": {
            "$ref": "./examples/ServiceConfigurationsPutSSH.json"
          },
          "ServiceConfigurationsPutWAC": {
            "$ref": "./examples/ServiceConfigurationsPutWAC.json"
          }
        }
      },
      "patch": {
        "operationId": "ServiceConfigurations_Update",
        "tags": [
          "ServiceConfigurationResources"
        ],
        "description": "Update the service details in the service configurations of the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceConfigurationName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "ServiceConfigurationResource",
            "in": "body",
            "description": "Service details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResourcePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceConfigurationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceConfigurationsPatchSSH": {
            "$ref": "./examples/ServiceConfigurationsPatchSSH.json"
          }
        }
      },
      "delete": {
        "operationId": "ServiceConfigurations_Delete",
        "tags": [
          "ServiceConfigurationResources"
        ],
        "description": "Deletes the service details to the target resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "The endpoint name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "serviceConfigurationName",
            "in": "path",
            "description": "The service name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ServiceConfigurationsDeleteSSH": {
            "$ref": "./examples/ServiceConfigurationsDeleteSSH.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations": {
      "get": {
        "operationId": "SolutionConfigurations_List",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "List SolutionConfiguration resources by parent",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_List": {
            "$ref": "./examples/SolutionConfigurations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}": {
      "get": {
        "operationId": "SolutionConfigurations_Get",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "Get a SolutionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_Get": {
            "$ref": "./examples/SolutionConfigurations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SolutionConfigurations_CreateOrUpdate",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "Create a SolutionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionConfiguration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionConfiguration"
            }
          },
          "201": {
            "description": "Resource 'SolutionConfiguration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_CreateOrUpdate": {
            "$ref": "./examples/SolutionConfigurations_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "SolutionConfigurations_Update",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "Update a SolutionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_Update": {
            "$ref": "./examples/SolutionConfigurations_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "SolutionConfigurations_Delete",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "Delete a SolutionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_Delete": {
            "$ref": "./examples/SolutionConfigurations_Delete.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}/inventory": {
      "get": {
        "operationId": "Inventory_ListBySolutionConfiguration",
        "tags": [
          "Inventory"
        ],
        "description": "List InventoryResource resources by SolutionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InventoryResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Inventory_ListBySolutionConfiguration": {
            "$ref": "./examples/Inventory_ListBySolutionConfiguration.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}/inventory/{inventoryId}": {
      "get": {
        "operationId": "Inventory_Get",
        "tags": [
          "Inventory"
        ],
        "description": "Get a InventoryResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "Inventory resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InventoryResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Inventory_Get": {
            "$ref": "./examples/Inventory_Get.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionConfiguration}/syncNow": {
      "post": {
        "operationId": "SolutionConfigurations_SyncNow",
        "tags": [
          "SolutionConfigurations"
        ],
        "description": "Trigger immediate sync with source cloud",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "solutionConfiguration",
            "in": "path",
            "description": "Represent Solution Configuration Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionConfigurations_SyncNow": {
            "$ref": "./examples/SolutionConfigurations_SyncNow.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.HybridConnectivity/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HybridConnectivityOperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/generateAwsTemplate": {
      "post": {
        "operationId": "GenerateAwsTemplate_Post",
        "tags": [
          "GenerateAwsTemplate"
        ],
        "description": "Retrieve AWS Cloud Formation template",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "generateAwsTemplateRequest",
            "in": "body",
            "description": "ConnectorId and SolutionTypes and their properties to Generate AWS CFT Template.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateAwsTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateAwsTemplateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GenerateAwsTemplate_Post": {
            "$ref": "./examples/GenerateAwsTemplate_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/publicCloudConnectors": {
      "get": {
        "operationId": "PublicCloudConnectors_ListBySubscription",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "List PublicCloudConnector resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_ListBySubscription": {
            "$ref": "./examples/PublicCloudConnectors_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/solutionTypes": {
      "get": {
        "operationId": "SolutionTypes_ListBySubscription",
        "tags": [
          "SolutionTypes"
        ],
        "description": "List SolutionTypeResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTypeResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTypes_ListBySubscription": {
            "$ref": "./examples/SolutionTypes_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors": {
      "get": {
        "operationId": "PublicCloudConnectors_ListByResourceGroup",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "List PublicCloudConnector resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_ListByResourceGroup": {
            "$ref": "./examples/PublicCloudConnectors_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}": {
      "get": {
        "operationId": "PublicCloudConnectors_Get",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Get a PublicCloudConnector",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "publicCloudConnector",
            "in": "path",
            "description": "Represent public cloud connectors resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_Get": {
            "$ref": "./examples/PublicCloudConnectors_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PublicCloudConnectors_CreateOrUpdate",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Create a PublicCloudConnector",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "publicCloudConnector",
            "in": "path",
            "description": "Represent public cloud connectors resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCloudConnector"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PublicCloudConnector' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnector"
            }
          },
          "201": {
            "description": "Resource 'PublicCloudConnector' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnector"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_CreateOrUpdate": {
            "$ref": "./examples/PublicCloudConnectors_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PublicCloudConnectors_Update",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Update a PublicCloudConnector",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "publicCloudConnector",
            "in": "path",
            "description": "Represent public cloud connectors resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_Update": {
            "$ref": "./examples/PublicCloudConnectors_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "PublicCloudConnectors_Delete",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Delete a PublicCloudConnector",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "publicCloudConnector",
            "in": "path",
            "description": "Represent public cloud connectors resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_Delete": {
            "$ref": "./examples/PublicCloudConnectors_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}/testPermissions": {
      "post": {
        "operationId": "PublicCloudConnectors_TestPermissions",
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "publicCloudConnector",
            "in": "path",
            "description": "Represent public cloud connectors resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PublicCloudConnectors_TestPermissions": {
            "$ref": "./examples/PublicCloudConnectors_TestPermissions.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes": {
      "get": {
        "operationId": "SolutionTypes_ListByResourceGroup",
        "tags": [
          "SolutionTypes"
        ],
        "description": "List SolutionTypeResource resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTypeResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTypes_ListByResourceGroup": {
            "$ref": "./examples/SolutionTypes_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes/{solutionType}": {
      "get": {
        "operationId": "SolutionTypes_Get",
        "tags": [
          "SolutionTypes"
        ],
        "description": "Get a SolutionTypeResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionType",
            "in": "path",
            "description": "Solution Type resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionTypes_Get": {
            "$ref": "./examples/SolutionTypes_Get.json"
          }
        }
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AADProfileProperties": {
      "type": "object",
      "description": "The AAD Profile",
      "properties": {
        "serverId": {
          "type": "string",
          "description": "The arc ingress gateway server app id."
        },
        "tenantId": {
          "type": "string",
          "description": "The target resource home tenant id."
        }
      },
      "required": [
        "serverId",
        "tenantId"
      ]
    },
    "AwsCloudProfile": {
      "type": "object",
      "description": "cloud profile for AWS.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account id for the AWS account.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "excludedAccounts": {
          "type": "array",
          "description": "List of AWS accounts which need to be excluded.",
          "items": {
            "type": "string"
          }
        },
        "isOrganizationalAccount": {
          "type": "boolean",
          "description": "Boolean value that indicates whether the account is organizational or not. True represents organization account, whereas false represents a single account.",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "accountId"
      ]
    },
    "AwsCloudProfileUpdate": {
      "type": "object",
      "description": "cloud profile for AWS.",
      "properties": {
        "excludedAccounts": {
          "type": "array",
          "description": "List of AWS accounts which need to be excluded.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "CloudNativeType": {
      "type": "string",
      "description": "Cloud Native Type enum.",
      "enum": [
        "ec2"
      ],
      "x-ms-enum": {
        "name": "CloudNativeType",
        "modelAsString": true,
        "values": [
          {
            "name": "ec2",
            "value": "ec2",
            "description": "ec2 enum."
          }
        ]
      }
    },
    "EndpointAccessResource": {
      "type": "object",
      "description": "The endpoint access for the target resource.",
      "properties": {
        "relay": {
          "$ref": "#/definitions/RelayNamespaceAccessProperties",
          "description": "Azure relay hybrid connection access properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointProperties": {
      "type": "object",
      "description": "Endpoint details",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The type of endpoint."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the connectivity endpoint (optional)."
        },
        "provisioningState": {
          "type": "string",
          "description": "The resource provisioning state.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ]
    },
    "EndpointResource": {
      "type": "object",
      "description": "The endpoint for the target resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointProperties",
          "description": "The endpoint properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EndpointsList": {
      "type": "object",
      "description": "The list of endpoints.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of endpoint.",
          "items": {
            "$ref": "#/definitions/EndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link used to get the next page of endpoints list."
        }
      },
      "required": [
        "value"
      ]
    },
    "GenerateAwsTemplateRequest": {
      "type": "object",
      "description": "ConnectorId and SolutionTypes and their properties to Generate AWS CFT Template.",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "The name of public cloud connector"
        },
        "solutionTypes": {
          "type": "array",
          "description": "The list of solution types and their settings",
          "items": {
            "$ref": "#/definitions/SolutionTypeSettings"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "connectorId"
      ]
    },
    "GenerateAwsTemplateResponse": {
      "type": "object",
      "description": "The HybridConnectivity post operation response"
    },
    "HostType": {
      "type": "string",
      "description": "Enum of host cloud the public cloud connector is referencing.",
      "enum": [
        "AWS"
      ],
      "x-ms-enum": {
        "name": "HostType",
        "modelAsString": true,
        "values": [
          {
            "name": "AWS",
            "value": "AWS",
            "description": "AWS state"
          }
        ]
      }
    },
    "IngressGatewayResource": {
      "type": "object",
      "description": "The ingress gateway access credentials",
      "properties": {
        "relay": {
          "$ref": "#/definitions/RelayNamespaceAccessProperties",
          "description": "Azure relay hybrid connection access properties",
          "x-ms-client-flatten": true
        },
        "ingress": {
          "$ref": "#/definitions/IngressProfileProperties",
          "description": "Ingress gateway profile",
          "x-ms-client-flatten": true
        }
      }
    },
    "IngressProfileProperties": {
      "type": "object",
      "description": "Ingress gateway profile",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "The ingress hostname."
        },
        "aadProfile": {
          "$ref": "#/definitions/AADProfileProperties",
          "description": "The AAD Profile",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "hostname",
        "aadProfile"
      ]
    },
    "InventoryProperties": {
      "type": "object",
      "description": "Definition of inventory.",
      "properties": {
        "cloudNativeType": {
          "$ref": "#/definitions/CloudNativeType",
          "description": "Gets or sets the cloud native resource type."
        },
        "cloudNativeResourceId": {
          "type": "string",
          "description": "Gets or sets the cloud native resource name."
        },
        "azureResourceId": {
          "type": "string",
          "description": "Gets or sets the mapped azure resource id."
        },
        "status": {
          "$ref": "#/definitions/SolutionConfigurationStatus",
          "description": "Gets or sets the status of the inventory."
        },
        "statusDetails": {
          "type": "string",
          "description": "Gets or sets the status details."
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "InventoryResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InventoryProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "InventoryResourceListResult": {
      "type": "object",
      "description": "The response of a InventoryResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InventoryResource items on this page",
          "items": {
            "$ref": "#/definitions/InventoryResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListCredentialsRequest": {
      "type": "object",
      "description": "The details of the service for which credentials needs to be returned.",
      "properties": {
        "serviceName": {
          "$ref": "#/definitions/ServiceName",
          "description": "The name of the service. If not provided, the request will by pass the generation of service configuration token"
        }
      }
    },
    "ListIngressGatewayCredentialsRequest": {
      "type": "object",
      "description": "Represent ListIngressGatewayCredentials Request object.",
      "properties": {
        "serviceName": {
          "$ref": "#/definitions/ServiceName",
          "description": "The name of the service. If not provided, the request will by pass the generation of service configuration token."
        }
      }
    },
    "ManagedProxyRequest": {
      "type": "object",
      "description": "Represent ManageProxy Request object.",
      "properties": {
        "service": {
          "type": "string",
          "description": "The name of the service."
        },
        "hostname": {
          "type": "string",
          "description": "The target host name."
        },
        "serviceName": {
          "$ref": "#/definitions/ServiceName",
          "description": "The name of the service. It is an optional property, if not provided, service configuration tokens issue code would be by passed."
        }
      },
      "required": [
        "service"
      ]
    },
    "ManagedProxyResource": {
      "type": "object",
      "description": "Managed Proxy",
      "properties": {
        "proxy": {
          "type": "string",
          "description": "The short lived proxy name."
        },
        "expiresOn": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration time of short lived proxy name in unix epoch."
        }
      },
      "required": [
        "proxy",
        "expiresOn"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The resource provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Updating",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      },
      "readOnly": true
    },
    "PublicCloudConnector": {
      "type": "object",
      "description": "Public Cloud Connector",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PublicCloudConnectorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PublicCloudConnectorListResult": {
      "type": "object",
      "description": "The response of a PublicCloudConnector list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PublicCloudConnector items on this page",
          "items": {
            "$ref": "#/definitions/PublicCloudConnector"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PublicCloudConnectorProperties": {
      "type": "object",
      "description": "Properties of public cloud connectors.",
      "properties": {
        "awsCloudProfile": {
          "$ref": "#/definitions/AwsCloudProfile",
          "description": "Cloud profile for AWS."
        },
        "hostType": {
          "$ref": "#/definitions/HostType",
          "description": "Host cloud the public cloud connector.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The resource provisioning state.",
          "readOnly": true
        },
        "connectorPrimaryIdentifier": {
          "type": "string",
          "description": "Connector primary identifier.",
          "readOnly": true
        }
      },
      "required": [
        "awsCloudProfile",
        "hostType"
      ]
    },
    "PublicCloudConnectorPropertiesUpdate": {
      "type": "object",
      "description": "Properties of public cloud connectors.",
      "properties": {
        "awsCloudProfile": {
          "$ref": "#/definitions/AwsCloudProfileUpdate",
          "description": "Cloud profile for AWS."
        }
      }
    },
    "PublicCloudConnectorUpdate": {
      "type": "object",
      "description": "Public Cloud Connector",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PublicCloudConnectorPropertiesUpdate",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    },
    "RelayNamespaceAccessProperties": {
      "type": "object",
      "description": "Azure relay hybrid connection access properties",
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name.",
          "minLength": 1,
          "maxLength": 200
        },
        "namespaceNameSuffix": {
          "type": "string",
          "description": "The suffix domain name of relay namespace.",
          "minLength": 1,
          "maxLength": 100
        },
        "hybridConnectionName": {
          "type": "string",
          "description": "Azure Relay hybrid connection name for the resource."
        },
        "accessKey": {
          "type": "string",
          "description": "Access key for hybrid connection.",
          "readOnly": true
        },
        "expiresOn": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration of access key in unix time."
        },
        "serviceConfigurationToken": {
          "type": "string",
          "description": "The token to access the enabled service."
        }
      },
      "required": [
        "namespaceName",
        "namespaceNameSuffix",
        "hybridConnectionName"
      ]
    },
    "ServiceConfigurationList": {
      "type": "object",
      "description": "The paginated list of serviceConfigurations",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of service configuration",
          "items": {
            "$ref": "#/definitions/ServiceConfigurationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to fetch the next page of connected cluster"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceConfigurationProperties": {
      "type": "object",
      "description": "Service configuration details",
      "properties": {
        "serviceName": {
          "$ref": "#/definitions/ServiceName",
          "description": "Name of the service."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the connectivity endpoint (optional)."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port on which service is enabled."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The resource provisioning state.",
          "readOnly": true
        }
      },
      "required": [
        "serviceName"
      ]
    },
    "ServiceConfigurationPropertiesPatch": {
      "type": "object",
      "description": "Service configuration details",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port on which service is enabled."
        }
      }
    },
    "ServiceConfigurationResource": {
      "type": "object",
      "description": "The service configuration details associated with the target resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceConfigurationProperties",
          "description": "The service configuration properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceConfigurationResourcePatch": {
      "type": "object",
      "description": "The service details under service configuration for the target endpoint resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceConfigurationPropertiesPatch",
          "description": "The service configuration properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServiceName": {
      "type": "string",
      "description": "Name of the service.",
      "enum": [
        "SSH",
        "WAC"
      ],
      "x-ms-enum": {
        "name": "ServiceName",
        "modelAsString": true,
        "values": [
          {
            "name": "SSH",
            "value": "SSH"
          },
          {
            "name": "WAC",
            "value": "WAC"
          }
        ]
      }
    },
    "SolutionConfiguration": {
      "type": "object",
      "description": "Solution Configuration",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionConfigurationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionConfigurationListResult": {
      "type": "object",
      "description": "The response of a SolutionConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/SolutionConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionConfigurationProperties": {
      "type": "object",
      "description": "Solution configuration resource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The resource provisioning state.",
          "readOnly": true
        },
        "solutionType": {
          "type": "string",
          "description": "The type of the solution"
        },
        "solutionSettings": {
          "$ref": "#/definitions/SolutionSettings",
          "description": "Solution settings"
        },
        "status": {
          "$ref": "#/definitions/SolutionConfigurationStatus",
          "description": "The status of solution configurations",
          "readOnly": true
        },
        "statusDetails": {
          "type": "string",
          "description": "The detailed message of status details",
          "readOnly": true
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time resources were inventoried",
          "readOnly": true
        }
      },
      "required": [
        "solutionType"
      ]
    },
    "SolutionConfigurationPropertiesUpdate": {
      "type": "object",
      "description": "Solution configuration resource.",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "The type of the solution"
        },
        "solutionSettings": {
          "$ref": "#/definitions/SolutionSettings",
          "description": "Solution settings"
        }
      }
    },
    "SolutionConfigurationStatus": {
      "type": "string",
      "description": "Solution Configuration Status.",
      "enum": [
        "New",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "SolutionConfigurationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "New status"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "InProgress status"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Canceled status"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed status"
          }
        ]
      }
    },
    "SolutionConfigurationUpdate": {
      "type": "object",
      "description": "Solution Configuration",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionConfigurationPropertiesUpdate",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionSettings": {
      "type": "object",
      "description": "Solution settings",
      "additionalProperties": {
        "type": "string"
      }
    },
    "SolutionTypeProperties": {
      "type": "object",
      "description": "Definition of Solution type resource.",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "The name of the solution type."
        },
        "description": {
          "type": "string",
          "description": "Short description of solution type."
        },
        "supportedAzureRegions": {
          "type": "array",
          "description": "The locations this solution is supported in.",
          "items": {
            "type": "string"
          }
        },
        "solutionSettings": {
          "type": "array",
          "description": "Array of solution settings and its description.",
          "items": {
            "$ref": "#/definitions/SolutionTypeSettingsProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SolutionTypeResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionTypeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionTypeResourceListResult": {
      "type": "object",
      "description": "The response of a SolutionTypeResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionTypeResource items on this page",
          "items": {
            "$ref": "#/definitions/SolutionTypeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionTypeSettings": {
      "type": "object",
      "description": "The properties of Solution Type",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "The type of the solution"
        },
        "solutionSettings": {
          "$ref": "#/definitions/SolutionSettings",
          "description": "Solution settings"
        }
      },
      "required": [
        "solutionType"
      ]
    },
    "SolutionTypeSettingsProperties": {
      "type": "object",
      "description": "Represent Solution settings properties description array.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the solution setting property."
        },
        "displayName": {
          "type": "string",
          "description": "The UI friendly name of the solution setting property."
        },
        "type": {
          "type": "string",
          "description": "Type of the solution setting property, represented as a string."
        },
        "description": {
          "type": "string",
          "description": "Description of solution setting property."
        },
        "allowedValues": {
          "type": "array",
          "description": "Array of allowed values for this solution settings property.",
          "items": {
            "type": "string"
          }
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value for this solution settings property."
        }
      },
      "required": [
        "name",
        "displayName",
        "type",
        "description",
        "allowedValues",
        "defaultValue"
      ]
    },
    "TrackedResourceUpdate": {
      "type": "object",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "Type": {
      "type": "string",
      "description": "The type of endpoint.",
      "enum": [
        "default",
        "custom"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true,
        "values": [
          {
            "name": "default",
            "value": "default"
          },
          {
            "name": "custom",
            "value": "custom"
          }
        ]
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}