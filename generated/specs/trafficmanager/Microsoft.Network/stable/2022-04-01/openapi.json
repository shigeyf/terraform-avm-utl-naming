{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Network",
    "version": "2022-04-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}": {
      "patch": {
        "tags": [
          "Endpoints"
        ],
        "operationId": "Endpoints_Update",
        "description": "Update a Traffic Manager endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "endpointType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The type of the Traffic Manager endpoint to be updated.",
            "enum": [
              "AzureEndpoints",
              "ExternalEndpoints",
              "NestedEndpoints"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": false
            }
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager endpoint to be updated."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "description": "The Traffic Manager endpoint parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Traffic Manager endpoint.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint-PATCH-External-Target": {
            "$ref": "./examples/Endpoint-PATCH-External-Target.json"
          }
        }
      },
      "get": {
        "tags": [
          "Endpoints"
        ],
        "operationId": "Endpoints_Get",
        "description": "Gets a Traffic Manager endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "endpointType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The type of the Traffic Manager endpoint.",
            "enum": [
              "AzureEndpoints",
              "ExternalEndpoints",
              "NestedEndpoints"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": false
            }
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager endpoint."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager endpoint.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint-GET-External-WithGeoMapping": {
            "$ref": "./examples/Endpoint-GET-External-WithGeoMapping.json"
          },
          "Endpoint-GET-External-WithLocation": {
            "$ref": "./examples/Endpoint-GET-External-WithLocation.json"
          },
          "Endpoint-GET-External-WithSubnetMapping": {
            "$ref": "./examples/Endpoint-GET-External-WithSubnetMapping.json"
          }
        }
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "operationId": "Endpoints_CreateOrUpdate",
        "description": "Create or update a Traffic Manager endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "endpointType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The type of the Traffic Manager endpoint to be created or updated.",
            "enum": [
              "AzureEndpoints",
              "ExternalEndpoints",
              "NestedEndpoints"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": false
            }
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager endpoint to be created or updated."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Endpoint"
            },
            "description": "The Traffic Manager endpoint parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created or updated Endpoint.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "201": {
            "description": "The created or updated Endpoint.",
            "schema": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint-PUT-External-WithGeoMapping": {
            "$ref": "./examples/Endpoint-PUT-External-WithGeoMapping.json"
          },
          "Endpoint-PUT-External-WithLocation": {
            "$ref": "./examples/Endpoint-PUT-External-WithLocation.json"
          },
          "Endpoint-PUT-External-WithSubnetMapping": {
            "$ref": "./examples/Endpoint-PUT-External-WithSubnetMapping.json"
          },
          "Endpoint-PUT-External-WithCustomHeaders": {
            "$ref": "./examples/Endpoint-PUT-External-WithCustomHeaders.json"
          },
          "Endpoint-PUT-External-WithAlwaysServe": {
            "$ref": "./examples/Endpoint-PUT-External-WithAlwaysServe.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Endpoints"
        ],
        "operationId": "Endpoints_Delete",
        "description": "Deletes a Traffic Manager endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "endpointType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The type of the Traffic Manager endpoint to be deleted.",
            "enum": [
              "AzureEndpoints",
              "ExternalEndpoints",
              "NestedEndpoints"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": false
            }
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager endpoint to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager Endpoint was deleted successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteOperationResult"
            }
          },
          "204": {
            "description": "The Traffic Manager Endpoint does not exist. It could have been deleted on a previous request."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Endpoint-DELETE-External": {
            "$ref": "./examples/Endpoint-DELETE-External.json"
          }
        }
      }
    },
    "/providers/Microsoft.Network/checkTrafficManagerNameAvailability": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_CheckTrafficManagerRelativeDnsNameAvailability",
        "description": "Checks the availability of a Traffic Manager Relative DNS name.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckTrafficManagerRelativeDnsNameAvailabilityParameters"
            },
            "description": "The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager Name Availability.",
            "schema": {
              "$ref": "#/definitions/TrafficManagerNameAvailability"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NameAvailabilityTest_NameAvailablePOST21": {
            "$ref": "./examples/NameAvailabilityTest_NameAvailable-POST-example-21.json"
          },
          "NameAvailabilityTest_NameNotAvailablePOST23": {
            "$ref": "./examples/NameAvailabilityTest_NameNotAvailable-POST-example-23.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkTrafficManagerNameAvailabilityV2": {
      "post": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_checkTrafficManagerNameAvailabilityV2",
        "description": "Checks the availability of a Traffic Manager Relative DNS name.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckTrafficManagerRelativeDnsNameAvailabilityParameters"
            },
            "description": "The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation."
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager Name Availability.",
            "schema": {
              "$ref": "#/definitions/TrafficManagerNameAvailability"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NameAvailabilityV2Test_NameAvailablePOST21": {
            "$ref": "./examples/NameAvailabilityV2Test_NameAvailable-POST-example-21.json"
          },
          "NameAvailabilityV2Test_NameNotAvailablePOST23": {
            "$ref": "./examples/NameAvailabilityV2Test_NameNotAvailable-POST-example-23.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "operationId": "Profiles_ListByResourceGroup",
        "description": "Lists all Traffic Manager profiles within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Traffic Manager profiles.",
            "schema": {
              "$ref": "#/definitions/ProfileListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListProfilesByResourceGroup": {
            "$ref": "./examples/Profile-GET-ByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "operationId": "Profiles_ListBySubscription",
        "description": "Lists all Traffic Manager profiles within a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Traffic Manager profiles.",
            "schema": {
              "$ref": "#/definitions/ProfileListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListBySubscription": {
            "$ref": "./examples/Profile-GET-BySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_Get",
        "description": "Gets a Traffic Manager profile.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager profile.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Profile-GET-WithEndpoints": {
            "$ref": "./examples/Profile-GET-WithEndpoints.json"
          },
          "Profile-GET-WithTrafficViewEnabled": {
            "$ref": "./examples/Profile-GET-WithTrafficViewEnabled.json"
          },
          "Profile-GET-WithTrafficViewDisabled": {
            "$ref": "./examples/Profile-GET-WithTrafficViewDisabled.json"
          }
        }
      },
      "put": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_CreateOrUpdate",
        "description": "Create or update a Traffic Manager profile.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "description": "The Traffic Manager profile parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The created or updated Traffic Manager profile.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "201": {
            "description": "The created or updated Traffic Manager profile.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Profile-PUT-NoEndpoints": {
            "$ref": "./examples/Profile-PUT-NoEndpoints.json"
          },
          "Profile-PUT-WithEndpoints": {
            "$ref": "./examples/Profile-PUT-WithEndpoints.json"
          },
          "Profile-PUT-WithNestedEndpoints": {
            "$ref": "./examples/Profile-PUT-WithNestedEndpoints.json"
          },
          "Profile-PUT-WithCustomHeaders": {
            "$ref": "./examples/Profile-PUT-WithCustomHeaders.json"
          },
          "Profile-PUT-MultiValue": {
            "$ref": "./examples/Profile-PUT-MultiValue.json"
          },
          "Profile-PUT-WithAliasing": {
            "$ref": "./examples/Profile-PUT-WithAliasing.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_Delete",
        "description": "Deletes a Traffic Manager profile.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile to be deleted."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager Profile was deleted successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteOperationResult"
            }
          },
          "204": {
            "description": "The profile does not exist. It could have been deleted on a previous request."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Profile-DELETE": {
            "$ref": "./examples/Profile-DELETE.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_Update",
        "description": "Update a Traffic Manager profile.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "description": "The Traffic Manager profile parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Traffic Manager profile.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Profile-PATCH-MonitorConfig": {
            "$ref": "./examples/Profile-PATCH-MonitorConfig.json"
          }
        }
      }
    },
    "/providers/Microsoft.Network/trafficManagerGeographicHierarchies/default": {
      "get": {
        "tags": [
          "GeographicHierarchies"
        ],
        "operationId": "GeographicHierarchies_GetDefault",
        "description": "Gets the default Geographic Hierarchy used by the Geographic traffic routing method.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The default Geographic Hierarchy.",
            "schema": {
              "$ref": "#/definitions/TrafficManagerGeographicHierarchy"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GeographicHierarchy-GET-default": {
            "$ref": "./examples/GeographicHierarchy-GET-default.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/heatMaps/{heatMapType}": {
      "get": {
        "tags": [
          "HeatMaps"
        ],
        "operationId": "HeatMap_Get",
        "description": "Gets latest heatmap for Traffic Manager profile.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Traffic Manager profile."
          },
          {
            "name": "heatMapType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "HeatMapType",
              "modelAsString": false
            },
            "description": "The type of HeatMap for the Traffic Manager profile."
          },
          {
            "name": "topLeft",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "description": "The top left latitude,longitude pair of the rectangular viewport to query for.",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "collectionFormat": "csv",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "botRight",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "description": "The bottom right latitude,longitude pair of the rectangular viewport to query for.",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "collectionFormat": "csv",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager heatmap.",
            "schema": {
              "$ref": "#/definitions/HeatMapModel"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HeatMap-GET": {
            "$ref": "./examples/HeatMap-GET.json"
          },
          "HeatMap-GET-With-TopLeft-BotRight": {
            "$ref": "./examples/HeatMap-GET-With-TopLeft-BotRight.json"
          },
          "HeatMap-GET-With-Null-Values": {
            "$ref": "./examples/HeatMap-GET-With-Null-Values.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default": {
      "get": {
        "tags": [
          "RealUserMetrics"
        ],
        "operationId": "TrafficManagerUserMetricsKeys_Get",
        "description": "Get the subscription-level key used for Real User Metrics collection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription-level Traffic Manager Real User Metrics key.",
            "schema": {
              "$ref": "#/definitions/UserMetricsModel"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TrafficManagerUserMetricsKeys-GET": {
            "$ref": "./examples/TrafficManagerUserMetricsKeys-GET.json"
          }
        }
      },
      "put": {
        "tags": [
          "RealUserMetrics"
        ],
        "operationId": "TrafficManagerUserMetricsKeys_CreateOrUpdate",
        "description": "Create or update a subscription-level key used for Real User Metrics collection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "A new subscription-level key has been created for Real User Metrics collection.",
            "schema": {
              "$ref": "#/definitions/UserMetricsModel"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TrafficManagerUserMetricsKeys-PUT": {
            "$ref": "./examples/TrafficManagerUserMetricsKeys-PUT.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RealUserMetrics"
        ],
        "operationId": "TrafficManagerUserMetricsKeys_Delete",
        "description": "Delete a subscription-level key used for Real User Metrics collection.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Manager Real User Metrics key was deleted successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteOperationResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TrafficManagerUserMetricsKeys-DELETE": {
            "$ref": "./examples/TrafficManagerUserMetricsKeys-DELETE.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "DeleteOperationResult": {
      "properties": {
        "boolean": {
          "type": "boolean",
          "x-ms-client-name": "operationResult",
          "readOnly": true,
          "description": "The result of the operation or request."
        }
      },
      "description": "The result of the request or operation."
    },
    "EndpointProperties": {
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'."
        },
        "target": {
          "type": "string",
          "description": "The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint."
        },
        "endpointStatus": {
          "type": "string",
          "description": "The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EndpointStatus",
            "modelAsString": true
          }
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "description": "The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000."
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "description": "The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value."
        },
        "endpointLocation": {
          "type": "string",
          "description": "Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method."
        },
        "endpointMonitorStatus": {
          "type": "string",
          "description": "The monitoring status of the endpoint.",
          "enum": [
            "CheckingEndpoint",
            "Online",
            "Degraded",
            "Disabled",
            "Inactive",
            "Stopped",
            "Unmonitored"
          ],
          "x-ms-enum": {
            "name": "EndpointMonitorStatus",
            "modelAsString": true
          }
        },
        "minChildEndpoints": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'."
        },
        "minChildEndpointsIPv4": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'."
        },
        "minChildEndpointsIPv6": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'."
        },
        "geoMapping": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values."
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "description": "First address in the subnet."
              },
              "last": {
                "type": "string",
                "description": "Last address in the subnet."
              },
              "scope": {
                "type": "integer",
                "description": "Block size (number of leading bits in the subnet mask)."
              }
            },
            "description": "Subnet first address, scope, and/or last address."
          },
          "description": "The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints."
        },
        "customHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Header name."
              },
              "value": {
                "type": "string",
                "description": "Header value."
              }
            },
            "description": "Custom header name and value."
          },
          "description": "List of custom headers."
        },
        "alwaysServe": {
          "type": "string",
          "description": "If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AlwaysServe",
            "modelAsString": true
          }
        }
      },
      "description": "Class representing a Traffic Manager endpoint properties."
    },
    "HeatMapModel": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HeatMapProperties",
          "description": "The properties of the Traffic Manager HeatMap."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing a Traffic Manager HeatMap."
    },
    "UserMetricsModel": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UserMetricsProperties",
          "description": "The properties of the Traffic Manager User Metrics."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing Traffic Manager User Metrics."
    },
    "QueryExperience": {
      "properties": {
        "endpointId": {
          "type": "integer",
          "description": "The id of the endpoint from the 'endpoints' array which these queries were routed to."
        },
        "queryCount": {
          "type": "integer",
          "description": "The number of queries originating from this location."
        },
        "latency": {
          "type": "number",
          "format": "double",
          "description": "The latency experienced by queries originating from this location."
        }
      },
      "required": [
        "endpointId",
        "queryCount"
      ],
      "description": "Class representing a Traffic Manager HeatMap query experience properties."
    },
    "TrafficFlow": {
      "properties": {
        "sourceIp": {
          "type": "string",
          "description": "The IP address that this query experience originated from."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The approximate latitude that these queries originated from."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The approximate longitude that these queries originated from."
        },
        "queryExperiences": {
          "type": "array",
          "description": "The query experiences produced in this HeatMap calculation.",
          "items": {
            "$ref": "#/definitions/QueryExperience"
          }
        }
      },
      "description": "Class representing a Traffic Manager HeatMap traffic flow properties."
    },
    "HeatMapProperties": {
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The beginning of the time window for this HeatMap, inclusive."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The ending of the time window for this HeatMap, exclusive."
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints used in this HeatMap calculation.",
          "items": {
            "$ref": "#/definitions/HeatMapEndpoint"
          }
        },
        "trafficFlows": {
          "type": "array",
          "description": "The traffic flows produced in this HeatMap calculation.",
          "items": {
            "$ref": "#/definitions/TrafficFlow"
          }
        }
      },
      "description": "Class representing a Traffic Manager HeatMap properties."
    },
    "HeatMapEndpoint": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM Resource ID of this Traffic Manager endpoint."
        },
        "endpointId": {
          "type": "integer",
          "description": "A number uniquely identifying this endpoint in query experiences."
        }
      },
      "description": "Class which is a sparse representation of a Traffic Manager endpoint."
    },
    "Endpoint": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EndpointProperties",
          "description": "The properties of the Traffic Manager endpoint."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing a Traffic Manager endpoint."
    },
    "CheckTrafficManagerRelativeDnsNameAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "description": "Parameters supplied to check Traffic Manager name operation."
    },
    "DnsConfig": {
      "properties": {
        "relativeName": {
          "type": "string",
          "description": "The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile."
        },
        "fqdn": {
          "type": "string",
          "readOnly": true,
          "description": "The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager."
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "description": "The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile."
        }
      },
      "description": "Class containing DNS settings in a Traffic Manager profile."
    },
    "MonitorConfig": {
      "properties": {
        "profileMonitorStatus": {
          "type": "string",
          "description": "The profile-level monitoring status of the Traffic Manager profile.",
          "enum": [
            "CheckingEndpoints",
            "Online",
            "Degraded",
            "Disabled",
            "Inactive"
          ],
          "x-ms-enum": {
            "name": "ProfileMonitorStatus",
            "modelAsString": true
          }
        },
        "protocol": {
          "type": "string",
          "description": "The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.",
          "enum": [
            "HTTP",
            "HTTPS",
            "TCP"
          ],
          "x-ms-enum": {
            "name": "MonitorProtocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The TCP port used to probe for endpoint health."
        },
        "path": {
          "type": "string",
          "description": "The path relative to the endpoint domain name used to probe for endpoint health."
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile."
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check."
        },
        "toleratedNumberOfFailures": {
          "type": "integer",
          "format": "int64",
          "description": "The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check."
        },
        "customHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Header name."
              },
              "value": {
                "type": "string",
                "description": "Header value."
              }
            },
            "description": "Custom header name and value."
          },
          "description": "List of custom headers."
        },
        "expectedStatusCodeRanges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "min": {
                "type": "integer",
                "description": "Min status code."
              },
              "max": {
                "type": "integer",
                "description": "Max status code."
              }
            },
            "description": "Min and max value of a status code range."
          },
          "description": "List of expected status code ranges."
        }
      },
      "description": "Class containing endpoint monitoring settings in a Traffic Manager profile."
    },
    "ProfileProperties": {
      "properties": {
        "profileStatus": {
          "type": "string",
          "description": "The status of the Traffic Manager profile.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ProfileStatus",
            "modelAsString": true
          }
        },
        "trafficRoutingMethod": {
          "type": "string",
          "description": "The traffic routing method of the Traffic Manager profile.",
          "enum": [
            "Performance",
            "Priority",
            "Weighted",
            "Geographic",
            "MultiValue",
            "Subnet"
          ],
          "x-ms-enum": {
            "name": "TrafficRoutingMethod",
            "modelAsString": true
          }
        },
        "dnsConfig": {
          "$ref": "#/definitions/DnsConfig",
          "description": "The DNS settings of the Traffic Manager profile."
        },
        "monitorConfig": {
          "$ref": "#/definitions/MonitorConfig",
          "description": "The endpoint monitoring settings of the Traffic Manager profile."
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "description": "The list of endpoints in the Traffic Manager profile."
        },
        "trafficViewEnrollmentStatus": {
          "type": "string",
          "description": "Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TrafficViewEnrollmentStatus",
            "modelAsString": true
          }
        },
        "allowedEndpointRecordTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedEndpointRecordType"
          },
          "description": "The list of allowed endpoint record types."
        },
        "maxReturn": {
          "type": "integer",
          "description": "Maximum number of endpoints to be returned for MultiValue routing type.",
          "format": "int64"
        }
      },
      "description": "Class representing the Traffic Manager profile properties."
    },
    "AllowedEndpointRecordType": {
      "description": "The allowed type DNS record types for this profile.",
      "type": "string",
      "enum": [
        "DomainName",
        "IPv4Address",
        "IPv6Address",
        "Any"
      ],
      "x-ms-enum": {
        "name": "AllowedEndpointRecordType",
        "modelAsString": true
      }
    },
    "Profile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProfileProperties",
          "description": "The properties of the Traffic Manager profile."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Class representing a Traffic Manager profile."
    },
    "ProfileListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Profile"
          },
          "description": "Gets the list of Traffic manager profiles."
        }
      },
      "description": "The list Traffic Manager profiles operation response."
    },
    "TrafficManagerNameAvailability": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The relative name."
        },
        "type": {
          "type": "string",
          "description": "Traffic Manager profile resource type."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Describes whether the relative name is available or not."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the name is not available, when applicable."
        },
        "message": {
          "type": "string",
          "description": "Descriptive message that explains why the name is not available, when applicable."
        }
      },
      "description": "Class representing a Traffic Manager Name Availability response."
    },
    "Region": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the region"
        },
        "name": {
          "type": "string",
          "description": "The name of the region"
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          },
          "description": "The list of Regions grouped under this Region in the Geographic Hierarchy."
        }
      },
      "description": "Class representing a region in the Geographic hierarchy used with the Geographic traffic routing method."
    },
    "GeographicHierarchyProperties": {
      "properties": {
        "geographicHierarchy": {
          "$ref": "#/definitions/Region",
          "description": "The region at the root of the hierarchy from all the regions in the hierarchy can be retrieved."
        }
      },
      "description": "Class representing the properties of the Geographic hierarchy used with the Geographic traffic routing method."
    },
    "TrafficManagerGeographicHierarchy": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GeographicHierarchyProperties",
          "description": "The properties of the Geographic Hierarchy resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Class representing the Geographic hierarchy used with the Geographic traffic routing method."
    },
    "UserMetricsProperties": {
      "properties": {
        "key": {
          "type": "string",
          "description": "The key returned by the User Metrics operation."
        }
      },
      "description": "Class representing a Traffic Manager Real User Metrics key response."
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "CloudError": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The content of the error."
        }
      },
      "description": "An error returned by the Azure Resource Manager",
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "target": {
          "type": "string",
          "description": "Error target"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "Error details"
        }
      },
      "description": "The content of an error returned by the Azure Resource Manager",
      "x-ms-external": true
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}