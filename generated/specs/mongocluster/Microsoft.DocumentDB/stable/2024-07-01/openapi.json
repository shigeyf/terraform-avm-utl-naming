{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DocumentDB",
    "version": "2024-07-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.DocumentDB/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability": {
      "post": {
        "operationId": "MongoClusters_CheckNameAvailability",
        "tags": [
          "MongoClusters"
        ],
        "description": "Check if mongo cluster name is available for use.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Checks and confirms the Mongo Cluster name is availability for use.": {
            "$ref": "./examples/MongoClusters_NameAvailability.json"
          },
          "Checks and returns that the Mongo Cluster name is already in-use.": {
            "$ref": "./examples/MongoClusters_NameAvailability_AlreadyExists.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_List",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Mongo Cluster resources in a subscription.": {
            "$ref": "./examples/MongoClusters_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_ListByResourceGroup",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the Mongo Cluster resources in a resource group.": {
            "$ref": "./examples/MongoClusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}": {
      "get": {
        "operationId": "MongoClusters_Get",
        "tags": [
          "MongoClusters"
        ],
        "description": "Gets information about a mongo cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MongoClusters_CreateOrUpdate",
        "tags": [
          "MongoClusters"
        ],
        "description": "Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify some of the properties, use PATCH.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "201": {
            "description": "Resource 'MongoCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a Mongo Cluster resource from a point in time restore": {
            "$ref": "./examples/MongoClusters_CreatePITR.json"
          },
          "Creates a new Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_Create.json"
          },
          "Creates a replica Mongo Cluster resource from a source resource.": {
            "$ref": "./examples/MongoClusters_CreateGeoReplica.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "MongoClusters_Update",
        "tags": [
          "MongoClusters"
        ],
        "description": "Updates an existing mongo cluster. The request body can contain one to many of the properties present in the normal mongo cluster definition.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Disables public network access on a Mongo Cluster resource with a private endpoint connection.": {
            "$ref": "./examples/MongoClusters_PatchPrivateNetworkAccess.json"
          },
          "Resets the administrator login password.": {
            "$ref": "./examples/MongoClusters_ResetPassword.json"
          },
          "Updates a Mongo Cluster resource": {
            "$ref": "./examples/MongoClusters_Update.json"
          },
          "Updates the disk size on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PatchDiskSize.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoClusters_Delete",
        "tags": [
          "MongoClusters"
        ],
        "description": "Deletes a mongo cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByMongoCluster",
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given mongo cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the firewall rules on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_FirewallRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a mongo cluster firewall rule.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets a firewall rule on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_FirewallRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a firewall rule on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_FirewallRuleCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a mongo cluster firewall rule.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a firewall rule on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_FirewallRuleDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/listConnectionStrings": {
      "post": {
        "operationId": "MongoClusters_ListConnectionStrings",
        "tags": [
          "MongoClusters"
        ],
        "description": "List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListConnectionStringsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the available connection strings for the Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_ListConnectionStrings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByMongoCluster",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List existing private connections",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the private endpoint connection resources on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PrivateEndpointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get a specific private connection",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a private endpoint connection on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PrivateEndpointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Create",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Create a Private endpoint connection",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approves a private endpoint connection on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PrivateEndpointConnectionPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete the private endpoint connection",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a private endpoint connection on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PrivateEndpointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinks_ListByMongoCluster",
        "tags": [
          "PrivateLinks"
        ],
        "description": "list private links on the given resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists the private link resources available on a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_PrivateLinkResourceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/promote": {
      "post": {
        "operationId": "MongoClusters_Promote",
        "tags": [
          "MongoClusters"
        ],
        "description": "Promotes a replica mongo cluster to a primary role.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromoteReplicaRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Promotes a replica Mongo Cluster resource to a primary role.": {
            "$ref": "./examples/MongoClusters_ForcePromoteReplica.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/replicas": {
      "get": {
        "operationId": "Replicas_ListByParent",
        "tags": [
          "Replicas"
        ],
        "description": "List all the replicas for the mongo cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the replicas linked to a Mongo Cluster resource.": {
            "$ref": "./examples/MongoClusters_ReplicaList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "description": "The name of the private endpoint connection associated with the Azure resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AdministratorProperties": {
      "type": "object",
      "description": "The local administrator login properties.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The administrator user name.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The administrator password.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        }
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "BackupProperties": {
      "type": "object",
      "description": "The backup properties of the cluster. This includes the earliest restore time and retention settings.",
      "properties": {
        "earliestRestoreTime": {
          "type": "string",
          "description": "Earliest restore timestamp in UTC ISO8601 format.",
          "readOnly": true
        }
      }
    },
    "ComputeProperties": {
      "type": "object",
      "description": "The compute properties of the cluster. This includes the virtual-cores/memory and scaling options applied to servers in the cluster.",
      "properties": {
        "tier": {
          "type": "string",
          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'."
        }
      }
    },
    "ConnectionString": {
      "type": "object",
      "description": "Connection string for the mongo cluster",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "Value of the connection string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the connection string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the connection string.",
          "readOnly": true
        }
      }
    },
    "CreateMode": {
      "type": "string",
      "description": "The mode that the Mongo Cluster is created with.",
      "enum": [
        "Default",
        "PointInTimeRestore",
        "GeoReplica",
        "Replica"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Create a new mongo cluster."
          },
          {
            "name": "PointInTimeRestore",
            "value": "PointInTimeRestore",
            "description": "Create a mongo cluster from a restore point-in-time."
          },
          {
            "name": "GeoReplica",
            "value": "GeoReplica",
            "description": "Create a replica cluster in distinct geographic region from the source cluster."
          },
          {
            "name": "Replica",
            "value": "Replica",
            "description": "Create a replica cluster in the same geographic region as the source cluster."
          }
        ]
      }
    },
    "FirewallRule": {
      "type": "object",
      "description": "Represents a mongo cluster firewall rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster firewall rule.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall rule.",
          "readOnly": true
        },
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ]
    },
    "HighAvailabilityMode": {
      "type": "string",
      "description": "The high availability modes for a cluster.",
      "enum": [
        "Disabled",
        "SameZone",
        "ZoneRedundantPreferred"
      ],
      "x-ms-enum": {
        "name": "HighAvailabilityMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "High availability mode is disabled. This mode is can see availability impact during faults or maintenance and is not recommended for production."
          },
          {
            "name": "SameZone",
            "value": "SameZone",
            "description": "High availability mode is enabled, where each server in a shard is placed in the same availability zone."
          },
          {
            "name": "ZoneRedundantPreferred",
            "value": "ZoneRedundantPreferred",
            "description": "High availability mode is enabled and preferences ZoneRedundant if availability zones capacity is available in the region, otherwise falls-back to provisioning with SameZone."
          }
        ]
      }
    },
    "HighAvailabilityProperties": {
      "type": "object",
      "description": "The high availability properties of the cluster.",
      "properties": {
        "targetMode": {
          "$ref": "#/definitions/HighAvailabilityMode",
          "description": "The target high availability mode requested for the cluster."
        }
      }
    },
    "ListConnectionStringsResult": {
      "type": "object",
      "description": "The connection strings for the given mongo cluster.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for a mongo cluster.",
          "items": {
            "$ref": "#/definitions/ConnectionString"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "MongoCluster": {
      "type": "object",
      "description": "Represents a mongo cluster resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoClusterProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MongoClusterListResult": {
      "type": "object",
      "description": "The response of a MongoCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MongoCluster items on this page",
          "items": {
            "$ref": "#/definitions/MongoCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MongoClusterProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster.",
      "properties": {
        "createMode": {
          "$ref": "#/definitions/CreateMode",
          "description": "The mode to create a mongo cluster.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "restoreParameters": {
          "$ref": "#/definitions/MongoClusterRestoreParameters",
          "description": "The parameters to create a point-in-time restore mongo cluster.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "replicaParameters": {
          "$ref": "#/definitions/MongoClusterReplicaParameters",
          "description": "The parameters to create a replica mongo cluster.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "administrator": {
          "$ref": "#/definitions/AdministratorProperties",
          "description": "The local administrator properties for the mongo cluster."
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "connectionString": {
          "type": "string",
          "description": "The default mongo connection string for the cluster.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the mongo cluster.",
          "readOnly": true
        },
        "clusterStatus": {
          "$ref": "#/definitions/MongoClusterStatus",
          "description": "The status of the mongo cluster.",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public endpoint access is allowed for this mongo cluster."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailabilityProperties",
          "description": "The high availability properties of the mongo cluster."
        },
        "storage": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The storage properties of the mongo cluster."
        },
        "sharding": {
          "$ref": "#/definitions/ShardingProperties",
          "description": "The sharding properties of the mongo cluster."
        },
        "compute": {
          "$ref": "#/definitions/ComputeProperties",
          "description": "The compute properties of the mongo cluster."
        },
        "backup": {
          "$ref": "#/definitions/BackupProperties",
          "description": "The backup properties of the mongo cluster."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "previewFeatures": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PreviewFeature"
          }
        },
        "replica": {
          "$ref": "#/definitions/ReplicationProperties",
          "description": "The replication properties for the mongo cluster",
          "readOnly": true
        },
        "infrastructureVersion": {
          "type": "string",
          "description": "The infrastructure version the cluster is provisioned on.",
          "readOnly": true
        }
      }
    },
    "MongoClusterReplicaParameters": {
      "type": "object",
      "description": "Parameters used for replica operations.",
      "properties": {
        "sourceResourceId": {
          "$ref": "#/definitions/MongoClusterResourceId",
          "description": "The id of the replication source cluster."
        },
        "sourceLocation": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the source cluster"
        }
      },
      "required": [
        "sourceResourceId",
        "sourceLocation"
      ]
    },
    "MongoClusterResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "Identifier for a mongo cluster resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DocumentDB/mongoClusters"
          }
        ]
      }
    },
    "MongoClusterRestoreParameters": {
      "type": "object",
      "description": "Parameters used for restore operations",
      "properties": {
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC point in time to restore a mongo cluster"
        },
        "sourceResourceId": {
          "$ref": "#/definitions/MongoClusterResourceId",
          "description": "Resource ID to locate the source cluster to restore"
        }
      }
    },
    "MongoClusterStatus": {
      "type": "string",
      "description": "The status of the Mongo cluster resource.",
      "enum": [
        "Ready",
        "Provisioning",
        "Updating",
        "Starting",
        "Stopping",
        "Stopped",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "MongoClusterStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready",
            "description": "The mongo cluster resource is ready for use."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The mongo cluster resource is being provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The mongo cluster resource is being updated."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "The mongo cluster resource is being started."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "The mongo cluster resource is being stopped."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "The mongo cluster resource is stopped."
          },
          {
            "name": "Dropping",
            "value": "Dropping",
            "description": "The mongo cluster resource is being dropped."
          }
        ]
      }
    },
    "MongoClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the MongoCluster.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/MongoClusterUpdateProperties",
          "description": "The resource-specific properties for this resource."
        }
      }
    },
    "MongoClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the MongoCluster.",
      "properties": {
        "administrator": {
          "$ref": "#/definitions/AdministratorProperties",
          "description": "The local administrator properties for the mongo cluster."
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public endpoint access is allowed for this mongo cluster."
        },
        "highAvailability": {
          "$ref": "#/definitions/HighAvailabilityProperties",
          "description": "The high availability properties of the mongo cluster."
        },
        "storage": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The storage properties of the mongo cluster."
        },
        "sharding": {
          "$ref": "#/definitions/ShardingProperties",
          "description": "The sharding properties of the mongo cluster."
        },
        "compute": {
          "$ref": "#/definitions/ComputeProperties",
          "description": "The compute properties of the mongo cluster."
        },
        "backup": {
          "$ref": "#/definitions/BackupProperties",
          "description": "The backup properties of the mongo cluster."
        },
        "previewFeatures": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PreviewFeature"
          }
        }
      }
    },
    "PreviewFeature": {
      "type": "string",
      "description": "Preview features that can be enabled on a mongo cluster.",
      "enum": [
        "GeoReplicas"
      ],
      "x-ms-enum": {
        "name": "PreviewFeature",
        "modelAsString": true,
        "values": [
          {
            "name": "GeoReplicas",
            "value": "GeoReplicas",
            "description": "Enables geo replicas preview feature. The feature must be set at create-time on new cluster to enable linking a geo-replica cluster to it."
          }
        ]
      }
    },
    "PrivateEndpointConnectionResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../v5/types.json#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PromoteMode": {
      "type": "string",
      "description": "The mode to apply to a promote operation.",
      "enum": [
        "Switchover"
      ],
      "x-ms-enum": {
        "name": "PromoteMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Switchover",
            "value": "Switchover",
            "description": "Promotion will switch the current replica cluster to the primary role and the original primary will be switched to a replica role, maintaining the replication link."
          }
        ]
      }
    },
    "PromoteOption": {
      "type": "string",
      "description": "The option to apply to a promote operation.",
      "enum": [
        "Forced"
      ],
      "x-ms-enum": {
        "name": "PromoteOption",
        "modelAsString": true,
        "values": [
          {
            "name": "Forced",
            "value": "Forced",
            "description": "Promote option forces the promotion without waiting for the replica to be caught up to the primary. This can result in data-loss so should only be used during disaster recovery scenarios."
          }
        ]
      }
    },
    "PromoteReplicaRequest": {
      "type": "object",
      "description": "Promote replica request properties.",
      "properties": {
        "promoteOption": {
          "$ref": "#/definitions/PromoteOption",
          "description": "The promote option to apply to the operation."
        },
        "mode": {
          "$ref": "#/definitions/PromoteMode",
          "description": "The mode to apply to the promote operation. Value is optional and default value is 'Switchover'."
        }
      },
      "required": [
        "promoteOption"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the last accepted operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "InProgress",
        "Updating",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "An operation is in-progress on the resource."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "An update operation is in-progress on the resource."
          },
          {
            "name": "Dropping",
            "value": "Dropping",
            "description": "A drop operation is in-progress on the resource."
          }
        ]
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether or not public endpoint access is allowed for this Mongo cluster.  Value is optional and default value is 'Enabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "If set, mongo cluster can be accessed through private and public methods."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "If set, the private endpoints are the exclusive access method."
          }
        ]
      }
    },
    "Replica": {
      "type": "object",
      "description": "Represents a mongo cluster replica.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoClusterProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ReplicaListResult": {
      "type": "object",
      "description": "The response of a Replica list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replica items on this page",
          "items": {
            "$ref": "#/definitions/Replica"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicationProperties": {
      "type": "object",
      "description": "Replica properties of the mongo cluster.",
      "properties": {
        "sourceResourceId": {
          "$ref": "#/definitions/MongoClusterResourceId",
          "description": "The resource id the source cluster for the replica cluster.",
          "readOnly": true
        },
        "role": {
          "$ref": "#/definitions/ReplicationRole",
          "description": "The replication role of the cluster",
          "readOnly": true
        },
        "replicationState": {
          "$ref": "#/definitions/ReplicationState",
          "description": "The replication link state of the replica cluster.",
          "readOnly": true
        }
      }
    },
    "ReplicationRole": {
      "type": "string",
      "description": "Replication role of the mongo cluster.",
      "enum": [
        "Primary",
        "AsyncReplica",
        "GeoAsyncReplica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary",
            "description": "The cluster is a primary replica."
          },
          {
            "name": "AsyncReplica",
            "value": "AsyncReplica",
            "description": "The cluster is a local asynchronous replica."
          },
          {
            "name": "GeoAsyncReplica",
            "value": "GeoAsyncReplica",
            "description": "The cluster is a geo-asynchronous replica."
          }
        ]
      }
    },
    "ReplicationState": {
      "type": "string",
      "description": "The state of the replication link between the replica and source cluster.",
      "enum": [
        "Active",
        "Catchup",
        "Provisioning",
        "Updating",
        "Broken",
        "Reconfiguring"
      ],
      "x-ms-enum": {
        "name": "ReplicationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "Replication link is active."
          },
          {
            "name": "Catchup",
            "value": "Catchup",
            "description": "Replica is catching-up with the primary. This can occur after the replica is created or after a promotion is triggered."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Replica and replication link to the primary is being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Replication link is being updated due to a change on the replica or an upgrade."
          },
          {
            "name": "Broken",
            "value": "Broken",
            "description": "Replication link is broken and the replica may need to be recreated."
          },
          {
            "name": "Reconfiguring",
            "value": "Reconfiguring",
            "description": "Replication link is re-configuring due to a promotion event."
          }
        ]
      }
    },
    "ShardingProperties": {
      "type": "object",
      "description": "The sharding properties of the cluster. This includes the shard count and scaling options for the cluster.",
      "properties": {
        "shardCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of shards to provision on the cluster."
        }
      }
    },
    "StorageProperties": {
      "type": "object",
      "description": "The storage properties of the cluster. This includes the data storage size and scaling applied to servers in the cluster.",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the data disk assigned to each server."
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for private endpoint.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../v5/types.json#/definitions/Resource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "List of private endpoint connections associated with the specified resource.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the private endpoint connection.",
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "The group ids for the private endpoint resource.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint resource."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    }
  }
}