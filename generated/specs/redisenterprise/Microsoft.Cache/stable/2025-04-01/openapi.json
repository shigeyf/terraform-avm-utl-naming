{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Cache",
    "version": "2025-04-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.Cache/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.Cache provider.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/operationsStatus/{operationId}": {
      "get": {
        "tags": [
          "OperationsStatus"
        ],
        "operationId": "OperationsStatus_Get",
        "x-ms-examples": {
          "OperationsStatusGet": {
            "$ref": "./examples/OperationsStatusGet.json"
          }
        },
        "description": "Gets the status of operation.",
        "parameters": [
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The detailed status of the operation is in the response.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}": {
      "put": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Create",
        "x-ms-examples": {
          "RedisEnterpriseCreate": {
            "$ref": "./examples/RedisEnterpriseCreate.json"
          }
        },
        "description": "Creates or updates an existing (overwrite/recreate, with potential downtime) cache cluster",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "description": "Parameters supplied to the Create Redis Enterprise operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The cluster was/is being created. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "200": {
            "description": "The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseUpdate": {
            "$ref": "./examples/RedisEnterpriseUpdate.json"
          }
        },
        "description": "Updates an existing Redis Enterprise cluster",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            },
            "description": "Parameters supplied to the Update Redis Enterprise operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDelete": {
            "$ref": "./examples/RedisEnterpriseDelete.json"
          }
        },
        "description": "Deletes a Redis Enterprise cache cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was successfully deleted."
          },
          "202": {
            "description": "The cluster delete operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "The cluster was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_Get",
        "x-ms-examples": {
          "RedisEnterpriseGet": {
            "$ref": "./examples/RedisEnterpriseGet.json"
          }
        },
        "description": "Gets information about a Redis Enterprise cluster",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request succeeded, response body contains the requested details.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_ListByResourceGroup",
        "x-ms-examples": {
          "RedisEnterpriseListByResourceGroup": {
            "$ref": "./examples/RedisEnterpriseListByResourceGroup.json"
          }
        },
        "description": "Lists all Redis Enterprise clusters in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Redis Enterprise clusters",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise": {
      "get": {
        "tags": [
          "RedisEnterprise"
        ],
        "operationId": "RedisEnterprise_List",
        "x-ms-examples": {
          "RedisEnterpriseList": {
            "$ref": "./examples/RedisEnterpriseList.json"
          }
        },
        "description": "Lists all Redis Enterprise clusters in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Redis Enterprise clusters",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases": {
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ListByCluster",
        "description": "Gets all databases in the specified Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseDatabasesListByCluster": {
            "$ref": "./examples/RedisEnterpriseDatabasesListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of databases",
            "schema": {
              "$ref": "#/definitions/DatabaseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Create",
        "description": "Creates a database",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesCreate": {
            "$ref": "./examples/RedisEnterpriseDatabasesCreate.json"
          },
          "RedisEnterpriseDatabasesCreate With Active Geo Replication": {
            "$ref": "./examples/RedisEnterpriseDatabasesCreateWithGeoReplication.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "Parameters supplied to the create or update database operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The database was/is being updated. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "The database was/is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Update",
        "description": "Updates a database",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesUpdate": {
            "$ref": "./examples/RedisEnterpriseDatabasesUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseUpdate"
            },
            "description": "Parameters supplied to the create or update database operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The database was/is being updated. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "The database update operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Get",
        "description": "Gets information about a database in a Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseDatabasesGet": {
            "$ref": "./examples/RedisEnterpriseDatabasesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found the database",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "description": "Deletes a single database",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesDelete": {
            "$ref": "./examples/RedisEnterpriseDatabasesDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "The database delete operation started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the database."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/listKeys": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ListKeys",
        "x-ms-examples": {
          "RedisEnterpriseDatabasesListKeys": {
            "$ref": "./examples/RedisEnterpriseDatabasesListKeys.json"
          }
        },
        "description": "Retrieves the access keys for the Redis Enterprise database.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The access keys for the specified database.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/regenerateKey": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_RegenerateKey",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesRegenerateKey": {
            "$ref": "./examples/RedisEnterpriseDatabasesRegenerateKey.json"
          }
        },
        "description": "Regenerates the Redis Enterprise database's access keys.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            },
            "description": "Specifies which key to regenerate."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new access keys for the database",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "202": {
            "description": "The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/import": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Import",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesImport": {
            "$ref": "./examples/RedisEnterpriseDatabasesImport.json"
          }
        },
        "description": "Imports database files to target database.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportClusterParameters"
            },
            "description": "Storage information for importing into the cluster"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Import operation succeeded."
          },
          "202": {
            "description": "The import operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/export": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Export",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseDatabasesExport": {
            "$ref": "./examples/RedisEnterpriseDatabasesExport.json"
          }
        },
        "description": "Exports a database file from target database.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportClusterParameters"
            },
            "description": "Storage information for exporting into the cluster"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Export operation succeeded."
          },
          "202": {
            "description": "Export operation successfully enqueued; follow the Location header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments/{accessPolicyAssignmentName}": {
      "put": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_CreateUpdate",
        "description": "Creates/Updates a particular access policy assignment for a database",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-examples": {
          "RedisEnterpriseAccessPolicyAssignmentCreateUpdate": {
            "$ref": "./examples/RedisEnterpriseAccessPolicyAssignmentCreateUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/AccessPolicyAssignmentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessPolicyAssignment"
            },
            "description": "Parameters supplied to the create access policy assignment for database."
          }
        ],
        "responses": {
          "200": {
            "description": "The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "$ref": "#/definitions/AccessPolicyAssignment"
            }
          },
          "201": {
            "description": "The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.",
            "schema": {
              "$ref": "#/definitions/AccessPolicyAssignment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_Get",
        "description": "Gets information about access policy assignment for database.",
        "x-ms-examples": {
          "RedisEnterpriseAccessPolicyAssignmentGet": {
            "$ref": "./examples/RedisEnterpriseAccessPolicyAssignmentGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/AccessPolicyAssignmentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found the access policy assignment",
            "schema": {
              "$ref": "#/definitions/AccessPolicyAssignment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_Delete",
        "description": "Deletes a single access policy assignment.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RedisEnterpriseAccessPolicyAssignmentDelete": {
            "$ref": "./examples/RedisEnterpriseAccessPolicyAssignmentDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/AccessPolicyAssignmentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The access policy assignment delete operation started for database. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "204": {
            "description": "Successfully deleted the access policy assignment."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments": {
      "get": {
        "tags": [
          "RedisEnterprise",
          "Databases",
          "AccessPolicyAssignments"
        ],
        "operationId": "AccessPolicyAssignment_List",
        "description": "Gets all access policy assignments..",
        "x-ms-examples": {
          "RedisEnterpriseAccessPolicyAssignmentList": {
            "$ref": "./examples/RedisEnterpriseAccessPolicyAssignmentsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of access policy assignment.",
            "schema": {
              "$ref": "#/definitions/AccessPolicyAssignmentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Lists all the private endpoint connections associated with the Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseListPrivateEndpointConnections": {
            "$ref": "./examples/RedisEnterpriseListPrivateEndpointConnections.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseGetPrivateEndpointConnection": {
            "$ref": "./examples/RedisEnterpriseGetPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Put",
        "description": "Updates the state of the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterprisePutPrivateEndpointConnection": {
            "$ref": "./examples/RedisEnterprisePutPrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "201": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseDeletePrivateEndpointConnection": {
            "$ref": "./examples/RedisEnterpriseDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "202": {
            "description": "Deletion of specified private endpoint connection was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByCluster",
        "description": "Gets the private link resources that need to be created for a Redis Enterprise cluster.",
        "x-ms-examples": {
          "RedisEnterpriseListPrivateLinkResources": {
            "$ref": "./examples/RedisEnterpriseListPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceUnlink": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ForceUnlink",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "How to unlink a database during a regional outage": {
            "$ref": "./examples/RedisEnterpriseDatabasesForceUnlink.json"
          }
        },
        "description": "Forcibly removes the link to the specified database resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForceUnlinkParameters"
            },
            "description": "Information identifying the database to be unlinked."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Force unlink operation succeeded. The unlinked database must be deleted before it can be recreated and linked again."
          },
          "202": {
            "description": "Force unlink operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceLinkToReplicationGroup": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_ForceLinkToReplicationGroup",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "How to relink a database after a regional outage": {
            "$ref": "./examples/RedisEnterpriseDatabasesForceLink.json"
          }
        },
        "description": "Forcibly recreates an existing database on the specified cluster, and rejoins it to an existing replication group. **IMPORTANT NOTE:** All data in this database will be discarded, and the database will temporarily be unavailable while rejoining the replication group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForceLinkParameters"
            },
            "description": "Information identifying the database to be unlinked."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Force link operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string",
                "format": "uri"
              },
              "Azure-AsyncOperation": {
                "description": "Azure-AsyncOperation URI to poll for result",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/flush": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_Flush",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "How to flush all the keys in the database": {
            "$ref": "./examples/RedisEnterpriseDatabasesFlush.json"
          }
        },
        "description": "Flushes all the keys in this database and also from its linked databases.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlushParameters"
            },
            "description": "Information identifying the databases to be flushed"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Flush operation succeeded. All the keys are cleared in this and all its linked databases."
          },
          "202": {
            "description": "Flush operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/upgradeDBRedisVersion": {
      "post": {
        "tags": [
          "RedisEnterprise",
          "Databases"
        ],
        "operationId": "Databases_UpgradeDBRedisVersion",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "How to upgrade your database Redis version": {
            "$ref": "./examples/RedisEnterpriseDatabasesUpgradeDBRedisVersion.json"
          }
        },
        "description": "Upgrades the database Redis version to the latest available.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Upgrade operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.",
            "headers": {
              "Location": {
                "description": "Location URI to poll for result",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterName",
      "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise database.",
      "x-ms-parameter-location": "method"
    },
    "AccessPolicyAssignmentNameParameter": {
      "name": "accessPolicyAssignmentName",
      "pattern": "^[A-Za-z0-9]{1,60}$",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Redis Enterprise database access policy assignment.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the Azure resource",
      "x-ms-parameter-location": "method"
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Kind": {
      "type": "string",
      "readOnly": true,
      "description": "Distinguishes the kind of cluster. Read-only.",
      "enum": [
        "v1",
        "v2"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "Current provisioning status",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceState": {
      "type": "string",
      "readOnly": true,
      "description": "Current resource status",
      "enum": [
        "Running",
        "Creating",
        "CreateFailed",
        "Updating",
        "UpdateFailed",
        "Deleting",
        "DeleteFailed",
        "Enabling",
        "EnableFailed",
        "Disabling",
        "DisableFailed",
        "Disabled",
        "Scaling",
        "ScalingFailed",
        "Moving"
      ],
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true
      }
    },
    "Cluster": {
      "description": "Describes the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/Kind"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU to create, which affects price, performance, and features."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The Availability Zones where this cluster will be deployed."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterProperties",
          "description": "Other properties of the cluster."
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ClusterUpdate": {
      "description": "A partial update to the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU to create, which affects price, performance, and features."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterProperties",
          "description": "Other properties of the cluster."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "ClusterProperties": {
      "title": "Redis Enterprise cluster properties",
      "description": "Properties of Redis Enterprise clusters, as opposed to general resource properties like location, tags",
      "type": "object",
      "properties": {
        "highAvailability": {
          "type": "string",
          "description": "Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "HighAvailability",
            "modelAsString": true
          }
        },
        "minimumTlsVersion": {
          "type": "string",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.",
          "enum": [
            "1.0",
            "1.1",
            "1.2"
          ],
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "encryption": {
          "type": "object",
          "description": "Encryption-at-rest configuration for the cluster.",
          "properties": {
            "customerManagedKeyEncryption": {
              "type": "object",
              "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
              "properties": {
                "keyEncryptionKeyIdentity": {
                  "type": "object",
                  "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
                  "properties": {
                    "userAssignedIdentityResourceId": {
                      "type": "string",
                      "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId."
                    },
                    "identityType": {
                      "type": "string",
                      "enum": [
                        "systemAssignedIdentity",
                        "userAssignedIdentity"
                      ],
                      "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
                      "x-ms-enum": {
                        "name": "CmkIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "keyEncryptionKeyUrl": {
                  "type": "string",
                  "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"
                }
              }
            }
          }
        },
        "hostName": {
          "type": "string",
          "readOnly": true,
          "description": "DNS name of the cluster endpoint"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "Current provisioning status of the cluster"
        },
        "redundancyMode": {
          "type": "string",
          "readOnly": true,
          "description": "Explains the current redundancy strategy of the cluster, which affects the expected SLA.",
          "enum": [
            "None",
            "LR",
            "ZR"
          ],
          "x-ms-enum": {
            "name": "RedundancyMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No redundancy. Availability loss will occur."
              },
              {
                "name": "LR",
                "value": "LR",
                "description": "Local redundancy with high availability."
              },
              {
                "name": "ZR",
                "value": "ZR",
                "description": "Zone redundant. Higher availability."
              }
            ]
          }
        },
        "resourceState": {
          "$ref": "#/definitions/ResourceState",
          "readOnly": true,
          "description": "Current resource status of the cluster"
        },
        "redisVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of redis the cluster supports, e.g. '6'"
        },
        "privateEndpointConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of private endpoint connections associated with the specified Redis Enterprise cluster",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "ClusterList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "List of clusters."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "Database": {
      "description": "Describes a database on the Redis Enterprise cluster",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseProperties",
          "description": "Other properties of the database."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatabaseUpdate": {
      "description": "A partial update to the Redis Enterprise database",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseProperties",
          "description": "Properties of the database."
        }
      }
    },
    "DatabaseProperties": {
      "title": "Redis Enterprise database properties",
      "description": "Properties of Redis Enterprise databases, as opposed to general resource properties like location, tags",
      "type": "object",
      "properties": {
        "clientProtocol": {
          "type": "string",
          "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
          "enum": [
            "Encrypted",
            "Plaintext"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "Current provisioning status of the database"
        },
        "resourceState": {
          "$ref": "#/definitions/ResourceState",
          "readOnly": true,
          "description": "Current resource status of the database"
        },
        "clusteringPolicy": {
          "type": "string",
          "description": "Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be changed without deleting the database.",
          "enum": [
            "EnterpriseCluster",
            "OSSCluster"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-enum": {
            "name": "ClusteringPolicy",
            "modelAsString": true,
            "values": [
              {
                "value": "EnterpriseCluster",
                "name": "EnterpriseCluster",
                "description": "Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands."
              },
              {
                "value": "OSSCluster",
                "name": "OSSCluster",
                "description": "OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering."
              }
            ]
          }
        },
        "evictionPolicy": {
          "type": "string",
          "description": "Redis eviction policy - default is VolatileLRU",
          "enum": [
            "AllKeysLFU",
            "AllKeysLRU",
            "AllKeysRandom",
            "VolatileLRU",
            "VolatileLFU",
            "VolatileTTL",
            "VolatileRandom",
            "NoEviction"
          ],
          "x-ms-enum": {
            "name": "EvictionPolicy",
            "modelAsString": true
          }
        },
        "persistence": {
          "$ref": "#/definitions/Persistence",
          "description": "Persistence settings",
          "x-ms-identifiers": []
        },
        "modules": {
          "type": "array",
          "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "items": {
            "$ref": "#/definitions/Module"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-identifiers": [
            "name"
          ]
        },
        "geoReplication": {
          "type": "object",
          "description": "Optional set of properties to configure geo replication for this database.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "groupNickname": {
              "type": "string",
              "description": "Name for the group of linked database resources",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "linkedDatabases": {
              "type": "array",
              "description": "List of database resources to link with this database",
              "items": {
                "$ref": "#/definitions/LinkedDatabase"
              }
            }
          }
        },
        "redisVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Version of Redis the database is running on, e.g. '6.0'"
        },
        "deferUpgrade": {
          "type": "string",
          "description": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade",
          "enum": [
            "Deferred",
            "NotDeferred"
          ],
          "x-ms-enum": {
            "name": "DeferUpgradeSetting",
            "modelAsString": true
          }
        },
        "accessKeysAuthentication": {
          "type": "string",
          "description": "This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "accessKeysAuthentication",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "List of databases"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "AccessPolicyAssignmentProperties": {
      "title": "Redis Enterprise database access policy assignment properties",
      "description": "Properties of Redis Enterprise database access policy assignment.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "Current provisioning status of the access policy assignment."
        },
        "accessPolicyName": {
          "type": "string",
          "description": "Name of access policy under specific access policy assignment. Only \"default\" policy is supported for now.",
          "pattern": "^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$"
        },
        "user": {
          "type": "object",
          "properties": {
            "objectId": {
              "type": "string",
              "description": "The object ID of the user.",
              "example": "6497c918-11ad-41e7-1b0f-7c518a87d0b0"
            }
          },
          "description": "The user associated with the access policy."
        }
      },
      "required": [
        "user",
        "accessPolicyName"
      ]
    },
    "AccessPolicyAssignment": {
      "description": "Describes the access policy assignment of Redis Enterprise database",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AccessPolicyAssignmentProperties",
          "description": "Properties of the access policy assignment."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AccessPolicyAssignmentList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPolicyAssignment"
          },
          "description": "List of access policy assignments."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URI to fetch the next page of results."
        }
      },
      "description": "The response of a list-all operation."
    },
    "Persistence": {
      "title": "Persistence settings",
      "description": "Persistence-related configuration for the Redis Enterprise database",
      "type": "object",
      "properties": {
        "aofEnabled": {
          "type": "boolean",
          "description": "Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled."
        },
        "rdbEnabled": {
          "type": "boolean",
          "description": "Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled."
        },
        "aofFrequency": {
          "type": "string",
          "description": "Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.",
          "enum": [
            "1s",
            "always"
          ],
          "x-ms-enum": {
            "name": "AofFrequency",
            "modelAsString": true
          }
        },
        "rdbFrequency": {
          "type": "string",
          "description": "Sets the frequency at which a snapshot of the database is created.",
          "enum": [
            "1h",
            "6h",
            "12h"
          ],
          "x-ms-enum": {
            "name": "RdbFrequency",
            "modelAsString": true
          }
        }
      }
    },
    "Module": {
      "title": "Module settings",
      "description": "Specifies configuration of a redis module",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"
        },
        "args": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of the module, e.g. '1.0'."
        }
      },
      "required": [
        "name"
      ]
    },
    "LinkedDatabase": {
      "title": "Linked Database",
      "description": "Specifies details of a linked database resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Cache/redisEnterprise/databases"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource ID of a database resource to link with this database."
        },
        "state": {
          "type": "string",
          "description": "State of the link between the database resources.",
          "enum": [
            "Linked",
            "Linking",
            "Unlinking",
            "LinkFailed",
            "UnlinkFailed"
          ],
          "x-ms-enum": {
            "name": "LinkState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "AccessKeys": {
      "title": "Access keys",
      "description": "The secret access keys used for authenticating connections to redis",
      "type": "object",
      "properties": {
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current primary key that clients can use to authenticate"
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "The current secondary key that clients can use to authenticate"
        }
      }
    },
    "RegenerateKeyParameters": {
      "title": "Regenerate access keys request",
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "Which access key to regenerate.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "AccessKeyType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Specifies which access keys to reset to a new random value."
    },
    "ImportClusterParameters": {
      "title": "Import RDB files into a target database",
      "type": "object",
      "properties": {
        "sasUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "SAS URIs for the target blobs to import from",
          "x-ms-secret": true
        }
      },
      "required": [
        "sasUris"
      ],
      "description": "Parameters for a Redis Enterprise import operation."
    },
    "ExportClusterParameters": {
      "title": "Export an RDB file into a target database",
      "type": "object",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS URI for the target directory to export to",
          "x-ms-secret": true
        }
      },
      "required": [
        "sasUri"
      ],
      "description": "Parameters for a Redis Enterprise export operation."
    },
    "OperationStatus": {
      "description": "The status of a long-running operation.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The operation's unique id."
        },
        "name": {
          "type": "string",
          "description": "The operation's name."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the operation."
        },
        "status": {
          "type": "string",
          "description": "The current status of the operation."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse",
          "description": "Error response describing why the operation failed."
        }
      }
    },
    "ForceLinkParameters": {
      "type": "object",
      "description": "Parameters for reconfiguring active geo-replication, of an existing database that was previously unlinked from a replication group.",
      "required": [
        "geoReplication"
      ],
      "properties": {
        "geoReplication": {
          "type": "object",
          "description": "Properties to configure geo replication for this database.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "groupNickname": {
              "type": "string",
              "description": "The name of the group of linked database resources. This should match the existing replication group name.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "linkedDatabases": {
              "type": "array",
              "description": "The resource IDs of the databases that are expected to be linked and included in the replication group. This parameter is used to validate that the linking is to the expected (unlinked) part of the replication group, if it is splintered.",
              "items": {
                "$ref": "#/definitions/LinkedDatabase"
              }
            }
          }
        }
      }
    },
    "ForceUnlinkParameters": {
      "title": "Forcibly unlink another database from this database.",
      "description": "Parameters for a Redis Enterprise Active Geo Replication Force Unlink operation.",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Cache/redisEnterprise/databases"
                }
              ]
            }
          },
          "description": "The resource IDs of the database resources to be unlinked."
        }
      },
      "required": [
        "ids"
      ]
    },
    "FlushParameters": {
      "title": "Flush all the keys from the current and all its linked databases.",
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.Cache/redisEnterprise/databases"
                }
              ]
            }
          },
          "description": "The identifiers of all the other database resources in the georeplication group to be flushed."
        }
      },
      "description": "Parameters for a Redis Enterprise active geo-replication flush operation"
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "./types.json#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "./types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      },
      "description": "List of private endpoint connection associated with the specified storage account"
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources"
    }
  }
}