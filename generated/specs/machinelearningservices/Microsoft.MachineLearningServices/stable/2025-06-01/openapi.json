{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.MachineLearningServices",
    "version": "2025-06-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/registries": {
      "get": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "List registries by subscription",
        "operationId": "Registries_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List registries by subscription.": {
            "$ref": "./examples/Registries/listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries": {
      "get": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "List registries",
        "operationId": "Registries_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List registries with system created accounts.": {
            "$ref": "./examples/Registries/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}": {
      "delete": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "Delete registry",
        "operationId": "Registries_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No content"
          }
        },
        "x-ms-examples": {
          "Delete Registry.": {
            "$ref": "./examples/Registries/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "Get registry",
        "operationId": "Registries_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry with system created accounts.": {
            "$ref": "./examples/Registries/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "Update tags",
        "operationId": "Registries_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details required to create the registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialRegistryPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Update Registry with system created accounts.": {
            "$ref": "./examples/Registries/update.json"
          }
        }
      },
      "put": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "Create or update registry",
        "operationId": "Registries_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details required to create the registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry with system created accounts.": {
            "$ref": "./examples/Registries/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/removeRegions": {
      "post": {
        "tags": [
          "RegistryManagement"
        ],
        "summary": "Remove regions from registry",
        "operationId": "Registries_RemoveRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Details required to create the registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Remove regions from registry": {
            "$ref": "./examples/Registries/removeRegions.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "RegistryCodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}": {
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete Code container.",
        "operationId": "RegistryCodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get Code container.",
        "operationId": "RegistryCodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update Code container.",
        "operationId": "RegistryCodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "RegistryCodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}": {
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "RegistryCodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "RegistryCodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "RegistryCodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}/startPendingUpload": {
      "post": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Generate a storage location and credential for the client to upload a code asset to.",
        "operationId": "RegistryCodeVersions_CreateOrGetStartPendingUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "codeName",
            "description": "Pending upload name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pending upload request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components": {
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "List containers.",
        "operationId": "RegistryComponentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}": {
      "delete": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "RegistryComponentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Get container.",
        "operationId": "RegistryComponentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "RegistryComponentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions": {
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "List versions.",
        "operationId": "RegistryComponentVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions/{version}": {
      "delete": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Delete version.",
        "operationId": "RegistryComponentVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Get version.",
        "operationId": "RegistryComponentVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "RegistryComponentVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "componentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data": {
      "get": {
        "tags": [
          "DataContainerRegistry"
        ],
        "summary": "List Data containers.",
        "operationId": "RegistryDataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/registryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}": {
      "delete": {
        "tags": [
          "DataContainerRegistry"
        ],
        "summary": "Delete container.",
        "operationId": "RegistryDataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "DataContainerRegistry"
        ],
        "summary": "Get container.",
        "operationId": "RegistryDataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataContainerRegistry"
        ],
        "summary": "Create or update container.",
        "operationId": "RegistryDataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersionRegistry"
        ],
        "summary": "List data versions in the data container",
        "operationId": "RegistryDataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Data container's name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Please choose OrderBy value from ['createdtime', 'modifiedtime']",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top count of results, top count cannot be greater than the page size.\r\n                              If topCount > page size, results with be default page size count will be returned",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/registryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "DataVersionRegistry"
        ],
        "summary": "Delete version.",
        "operationId": "RegistryDataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "DataVersionRegistry"
        ],
        "summary": "Get version.",
        "operationId": "RegistryDataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataVersionRegistry"
        ],
        "summary": "Create or update version.",
        "operationId": "RegistryDataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "tags": [
          "DataVersionRegistry"
        ],
        "summary": "Generate a storage location and credential for the client to upload a data asset to.",
        "operationId": "RegistryDataVersions_CreateOrGetStartPendingUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Data asset name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pending upload request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/datareferences/{name}/versions/{version}": {
      "post": {
        "tags": [
          "DataReference"
        ],
        "summary": "Get blob reference SAS Uri.",
        "operationId": "RegistryDataReferences_GetBlobReferenceSAS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Data reference name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Asset id and blob uri.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetBlobReferenceSASRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetBlobReferenceSASResponseDto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetBlobReferenceSAS Data Reference.": {
            "$ref": "./examples/DataReference/getBlobReferenceSAS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List environment containers.",
        "operationId": "RegistryEnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}": {
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "RegistryEnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "RegistryEnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "RegistryEnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions": {
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "List versions.",
        "operationId": "RegistryEnvironmentVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions/{version}": {
      "delete": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Delete version.",
        "operationId": "RegistryEnvironmentVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Get version.",
        "operationId": "RegistryEnvironmentVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "RegistryEnvironmentVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "environmentName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "RegistryModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}": {
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "RegistryModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "RegistryModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update model container.",
        "operationId": "RegistryModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List versions.",
        "operationId": "RegistryModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Version identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}": {
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "RegistryModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "RegistryModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "RegistryModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}/startPendingUpload": {
      "post": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Generate a storage location and credential for the client to upload a model asset to.",
        "operationId": "RegistryModelVersions_CreateOrGetStartPendingUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "in": "path",
            "name": "modelName",
            "description": "Model name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pending upload request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists Batch inference endpoint in the workspace.",
        "operationId": "BatchEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Delete Batch Inference Endpoint (asynchronous).",
        "operationId": "BatchEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Gets a batch inference endpoint by name.",
        "operationId": "BatchEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch Endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Update a batch inference endpoint (asynchronous).",
        "operationId": "BatchEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Mutable batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Creates a batch inference endpoint (asynchronous).",
        "operationId": "BatchEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Lists Batch inference deployments in the workspace.",
        "operationId": "BatchDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Delete Batch Inference deployment (asynchronous).",
        "operationId": "BatchDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference deployment identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Gets a batch inference deployment by id.",
        "operationId": "BatchDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch deployments.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Update a batch inference deployment (asynchronous).",
        "operationId": "BatchDeployments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Creates/updates a batch inference deployment (asynchronous).",
        "operationId": "BatchDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
      "post": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists batch Inference Endpoint keys.",
        "operationId": "BatchEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/capabilityHosts/{name}": {
      "delete": {
        "tags": [
          "CapabilityHost"
        ],
        "summary": "Delete capabilityHost.",
        "operationId": "CapabilityHosts_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "CapabilityHost name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "CapabilityHost"
        ],
        "summary": "Get capabilityHost.",
        "operationId": "CapabilityHosts_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "CapabilityHost name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "CapabilityHost"
        ],
        "summary": "Create or update capabilityHost.",
        "operationId": "CapabilityHosts_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "CapabilityHost name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "CapabilityHost definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "CodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete container.",
        "operationId": "CodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get container.",
        "operationId": "CodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "CodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "CodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "hash",
            "description": "If specified, return CodeVersion assets with specified content hash value, regardless of name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "hashVersion",
            "description": "Hash algorithm version when listing by hash",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "CodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "CodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "CodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}/publish": {
      "post": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Publish version asset into registry.",
        "operationId": "CodeVersions_Publish",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Destination registry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Generate a storage location and credential for the client to upload a code asset to.",
        "operationId": "CodeVersions_CreateOrGetStartPendingUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pending upload request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components": {
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "List component containers.",
        "operationId": "ComponentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}": {
      "delete": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ComponentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Get container.",
        "operationId": "ComponentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ComponentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions": {
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "List component versions.",
        "operationId": "ComponentVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Component name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ComponentVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Get version.",
        "operationId": "ComponentVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ComponentVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}/publish": {
      "post": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Publish version asset into registry.",
        "operationId": "ComponentVersions_Publish",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Destination registry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List data containers.",
        "operationId": "DataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete container.",
        "operationId": "DataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get container.",
        "operationId": "DataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "DataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List data versions in the data container",
        "operationId": "DataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Data container's name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Please choose OrderBy value from ['createdtime', 'modifiedtime']",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top count of results, top count cannot be greater than the page size.\r\n                              If topCount > page size, results with be default page size count will be returned",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete version.",
        "operationId": "DataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get version.",
        "operationId": "DataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "DataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}/publish": {
      "post": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Publish version asset into registry.",
        "operationId": "DataVersions_Publish",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Destination registry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/publish.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "skipValidation",
            "description": "Flag to skip validation.",
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate datastore (AzureBlob w/ AccountKey).": {
            "$ref": "./examples/Datastore/AzureBlobWAccountKey/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (Azure Data Lake Gen1 w/ ServicePrincipal).": {
            "$ref": "./examples/Datastore/AzureDataLakeGen1WServicePrincipal/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (Azure Data Lake Gen2 w/ Service Principal).": {
            "$ref": "./examples/Datastore/AzureDataLakeGen2WServicePrincipal/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (Azure File store w/ AccountKey).": {
            "$ref": "./examples/Datastore/AzureFileWAccountKey/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Base definition for datastore secrets.",
              "$ref": "#/definitions/DatastoreSecrets"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List environment containers.",
        "operationId": "EnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "EnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "EnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "List versions.",
        "operationId": "EnvironmentVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Delete version.",
        "operationId": "EnvironmentVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Get version.",
        "operationId": "EnvironmentVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Creates or updates an EnvironmentVersion.",
        "operationId": "EnvironmentVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Name of EnvironmentVersion. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version of EnvironmentVersion.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Definition of EnvironmentVersion.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}/publish": {
      "post": {
        "tags": [
          "EnvironmentVersion"
        ],
        "summary": "Publish version asset into registry.",
        "operationId": "EnvironmentVersions_Publish",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Destination registry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets": {
      "get": {
        "tags": [
          "FeaturesetContainer"
        ],
        "summary": "List featurestore entity containers.",
        "operationId": "FeaturesetContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "page size",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "name": "name",
            "description": "name for the featureset",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "description for the feature set",
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "createdBy user name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features": {
      "get": {
        "tags": [
          "Feature"
        ],
        "summary": "List Features.",
        "operationId": "Features_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "featuresetName",
            "description": "Featureset name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "featuresetVersion",
            "description": "Featureset Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "featureName",
            "description": "feature name.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Description of the featureset.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "Page size.",
            "type": "integer",
            "format": "int32",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Feature.": {
            "$ref": "./examples/Feature/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features/{featureName}": {
      "get": {
        "tags": [
          "Feature"
        ],
        "summary": "Get feature.",
        "operationId": "Features_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "featuresetName",
            "description": "Feature set name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "featuresetVersion",
            "description": "Feature set version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "featureName",
            "description": "Feature Name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeatureResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Feature.": {
            "$ref": "./examples/Feature/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}": {
      "delete": {
        "tags": [
          "FeaturesetContainer"
        ],
        "summary": "Delete container.",
        "operationId": "FeaturesetContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FeaturesetContainer"
        ],
        "summary": "Get container.",
        "operationId": "FeaturesetContainers_GetEntity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetEntity Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/getEntity.json"
          }
        }
      },
      "put": {
        "tags": [
          "FeaturesetContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "FeaturesetContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions": {
      "get": {
        "tags": [
          "FeaturesetVersion"
        ],
        "summary": "List versions.",
        "operationId": "FeaturesetVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Featureset name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "page size",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "name": "versionName",
            "description": "name for the featureset version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "description": "featureset version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "description for the feature set version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "createdBy user name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "stage",
            "description": "Specifies the featurestore stage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "FeaturesetVersion"
        ],
        "summary": "Delete version.",
        "operationId": "FeaturesetVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FeaturesetVersion"
        ],
        "summary": "Get version.",
        "operationId": "FeaturesetVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "FeaturesetVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "FeaturesetVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}/backfill": {
      "post": {
        "tags": [
          "FeaturesetVersion"
        ],
        "summary": "Backfill.",
        "operationId": "FeaturesetVersions_Backfill",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Feature set version backfill request entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionBackfillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionBackfillResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backfill Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/backfill.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities": {
      "get": {
        "tags": [
          "FeaturestoreEntityContainer"
        ],
        "summary": "List featurestore entity containers.",
        "operationId": "FeaturestoreEntityContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "page size",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "name": "name",
            "description": "name for the featurestore entity",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "description for the featurestore entity",
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "createdBy user name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}": {
      "delete": {
        "tags": [
          "FeaturestoreEntityContainer"
        ],
        "summary": "Delete container.",
        "operationId": "FeaturestoreEntityContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FeaturestoreEntityContainer"
        ],
        "summary": "Get container.",
        "operationId": "FeaturestoreEntityContainers_GetEntity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetEntity Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/getEntity.json"
          }
        }
      },
      "put": {
        "tags": [
          "FeaturestoreEntityContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "FeaturestoreEntityContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions": {
      "get": {
        "tags": [
          "FeaturestoreEntityVersion"
        ],
        "summary": "List versions.",
        "operationId": "FeaturestoreEntityVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Feature entity name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "page size",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "in": "query",
            "name": "versionName",
            "description": "name for the featurestore entity version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "description": "featurestore entity version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "description for the feature entity version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "createdBy",
            "description": "createdBy user name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "stage",
            "description": "Specifies the featurestore stage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "FeaturestoreEntityVersion"
        ],
        "summary": "Delete version.",
        "operationId": "FeaturestoreEntityVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FeaturestoreEntityVersion"
        ],
        "summary": "Get version.",
        "operationId": "FeaturestoreEntityVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "FeaturestoreEntityVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "FeaturestoreEntityVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Lists Jobs in the workspace.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Type of job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Jobs returned will have this tag key.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of user property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "$ref": "./examples/Job/CommandJob/list.json"
          },
          "List AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/list.json"
          },
          "List Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Deletes a Job (asynchronous).",
        "operationId": "Jobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Job.": {
            "$ref": "./examples/Job/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets a Job by name/id.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "$ref": "./examples/Job/CommandJob/get.json"
          },
          "Get AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/get.json"
          },
          "Get Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Creates and executes a Job.\r\nFor update case, the Tags in the definition passed in will replace Tags in the existing job.",
        "operationId": "Jobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/Job/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/createOrUpdate.json"
          },
          "CreateOrUpdate Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job (asynchronous).",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cancel Job.": {
            "$ref": "./examples/Job/cancel.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/marketplaceSubscriptions": {
      "get": {
        "tags": [
          "MarketplaceSubscription"
        ],
        "summary": "List containers.",
        "operationId": "MarketplaceSubscriptions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/marketplaceSubscriptions/{name}": {
      "delete": {
        "tags": [
          "MarketplaceSubscription"
        ],
        "summary": "Delete Marketplace Subscription (asynchronous).",
        "operationId": "MarketplaceSubscriptions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Marketplace Subscription name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "MarketplaceSubscription"
        ],
        "summary": "Get container.",
        "operationId": "MarketplaceSubscriptions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "MarketplaceSubscription"
        ],
        "summary": "Create or update Marketplace Subscription (asynchronous).",
        "operationId": "MarketplaceSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Marketplace Subscription name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Marketplace Subscription entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feed",
            "description": "Name of the feed.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "View type for including/excluding (for example) archived entities.",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "ActiveOnly"
                },
                {
                  "value": "ArchivedOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name. This is case-sensitive.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier. This is case-sensitive.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}/publish": {
      "post": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Publish version asset into registry.",
        "operationId": "ModelVersions_Publish",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Destination registry info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List Online Endpoints.",
        "operationId": "OnlineEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the endpoint.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "computeType",
            "description": "EndpointComputeType to be filtered by.",
            "type": "string",
            "enum": [
              "Managed",
              "Kubernetes",
              "AzureMLCompute"
            ],
            "x-ms-enum": {
              "name": "EndpointComputeType",
              "modelAsString": true
            }
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The option to order the response.",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Delete Online Endpoint (asynchronous).",
        "operationId": "OnlineEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get Online Endpoint.",
        "operationId": "OnlineEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Update Online Endpoint (asynchronous).",
        "operationId": "OnlineEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Create or update Online Endpoint (asynchronous).",
        "operationId": "OnlineEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List Inference Endpoint Deployments.",
        "operationId": "OnlineDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployments.": {
            "$ref": "./examples/OnlineDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Delete Inference Endpoint Deployment (asynchronous).",
        "operationId": "OnlineDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Online Deployment.": {
            "$ref": "./examples/Workspace/OnlineDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get Inference Deployment Deployment.",
        "operationId": "OnlineDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/get.json"
          },
          "Get Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Update Online Deployment (asynchronous).",
        "operationId": "OnlineDeployments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/update.json"
          },
          "Update Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Create or update Inference Endpoint Deployment (asynchronous).",
        "operationId": "OnlineDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/createOrUpdate.json"
          },
          "CreateOrUpdate Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineDeployments_GetLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing parameters for retrieving logs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment Logs.": {
            "$ref": "./examples/OnlineDeployment/getLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/skus": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List Inference Endpoint Deployment Skus.",
        "operationId": "OnlineDeployments_ListSkus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of Skus to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SkuResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Managed Online Deployment Skus.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/listSkus.json"
          },
          "List Kubernetes Online Deployment Skus.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/listSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).",
        "operationId": "OnlineEndpoints_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Retrieve a valid AML token for an Endpoint using AMLToken-based authentication.",
        "operationId": "OnlineEndpoints_GetToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthToken"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/getToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "List schedules in specified workspace.",
        "operationId": "Schedules_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "listViewType",
            "description": "Status filter for schedule.",
            "type": "string",
            "default": "EnabledOnly",
            "enum": [
              "EnabledOnly",
              "DisabledOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ScheduleListViewType",
              "modelAsString": true,
              "values": [
                {
                  "value": "EnabledOnly"
                },
                {
                  "value": "DisabledOnly"
                },
                {
                  "value": "All"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Schedules.": {
            "$ref": "./examples/Schedule/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}": {
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Delete schedule.",
        "operationId": "Schedules_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Schedule.": {
            "$ref": "./examples/Schedule/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get schedule.",
        "operationId": "Schedules_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Schedule.": {
            "$ref": "./examples/Schedule/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Create or update schedule.",
        "operationId": "Schedules_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schedule definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Schedule.": {
            "$ref": "./examples/Schedule/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints": {
      "get": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "List Serverless Endpoints.",
        "operationId": "ServerlessEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}": {
      "delete": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "Delete Serverless Endpoint (asynchronous).",
        "operationId": "ServerlessEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "Get Serverless Endpoint.",
        "operationId": "ServerlessEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/get.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "Update Serverless Endpoint (asynchronous).",
        "operationId": "ServerlessEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Serverless Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSkuAndIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "Create or update Serverless Endpoint (asynchronous).",
        "operationId": "ServerlessEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{0,51}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Serverless Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update request is successful.",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/listKeys": {
      "post": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "ServerlessEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/regenerateKeys": {
      "post": {
        "tags": [
          "ServerlessEndpoint"
        ],
        "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).",
        "operationId": "ServerlessEndpoints_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Serverless Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all enabled features for a workspace",
        "operationId": "WorkspaceFeatures_List",
        "x-ms-examples": {
          "List Workspace features": {
            "$ref": "./examples/WorkspaceFeature/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListAmlUserFeatureResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.MachineLearningServices/operations": {
      "get": {
        "tags": [
          "Operation"
        ],
        "description": "Lists all of the available Azure Machine Learning Workspaces REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Workspace/operationsList.json"
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified machine learning workspace.",
        "operationId": "Workspaces_Get",
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/Workspace/get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/Workspace/create.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for creating or updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a machine learning workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/Workspace/delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceForceToPurgeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "The machine learning workspace does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "description": "Updates a machine learning workspace with the specified parameters.",
        "operationId": "Workspaces_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/Workspace/update.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for updating a machine learning workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/Workspace/listByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Diagnose workspace setup issue.",
        "operationId": "Workspaces_Diagnose",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "The parameter of diagnosing workspace health",
            "schema": {
              "$ref": "#/definitions/DiagnoseWorkspaceParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DiagnoseResponseResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnose Workspace": {
            "$ref": "./examples/Workspace/diagnose.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ResyncKeys",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/Workspace/resyncKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/Workspace/listBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "description": "return notebook access token and refresh token",
        "operationId": "Workspaces_ListNotebookAccessToken",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listNotebookAccessToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookAccessTokenResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "List all the private endpoint connections associated with the workspace.",
        "x-ms-examples": {
          "StorageAccountListPrivateEndpointConnections": {
            "$ref": "./examples/PrivateEndpointConnection/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Get the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/createOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The private endpoint connection properties."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update the private endpoint connection properties successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the workspace.",
        "x-ms-examples": {
          "WorkspaceDeletePrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_List",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/PrivateLinkResource/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_PrepareNotebook",
        "description": "Prepare a notebook.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Prepare Notebook": {
            "$ref": "./examples/Notebook/prepare.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotebookResourceInfo"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_ListStorageAccountKeys",
        "description": "List storage account keys of a workspace.",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listStorageAccountKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListStorageAccountKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys": {
      "post": {
        "tags": [
          "ProxyOperations"
        ],
        "operationId": "Workspaces_ListNotebookKeys",
        "description": "List keys of a notebook.",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Notebook/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ListNotebookKeysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}": {
      "put": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The object for creating or updating a new workspace connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/create.json"
          }
        }
      },
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "DeleteWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "Update machine learning workspaces connections under the specified workspace.",
        "operationId": "WorkspaceConnections_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters for workspace connection update.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections": {
      "get": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "operationId": "WorkspaceConnections_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/TargetParameter"
          },
          {
            "$ref": "#/parameters/CategoryParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "includeAll",
            "description": "query parameter that indicates if get connection call should return both connections and datastores",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListWorkspaceConnections": {
            "$ref": "./examples/WorkspaceConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/listsecrets": {
      "post": {
        "tags": [
          "V2WorkspaceConnectionResource"
        ],
        "summary": "List all the secrets of a machine learning workspaces connections.",
        "operationId": "WorkspaceConnections_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "summary": "Called by Client (Portal, CLI, etc) to get a list of all external outbound dependencies (FQDNs) programmatically.",
        "operationId": "Workspaces_ListOutboundNetworkDependenciesEndpoints",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalFQDNResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ExternalFQDN/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules": {
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "summary": "Lists the managed network outbound rules for a machine learning workspace.",
        "operationId": "ManagedNetworkSettingsRule_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/listRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules/{ruleName}": {
      "delete": {
        "tags": [
          "ManagedNetwork"
        ],
        "operationId": "ManagedNetworkSettingsRule_Delete",
        "summary": "Deletes an outbound rule from the managed network of a machine learning workspace.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/deleteRule.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ManagedNetwork"
        ],
        "operationId": "ManagedNetworkSettingsRule_Get",
        "summary": "Gets an outbound rule from the managed network of a machine learning workspace.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/getRule.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedNetwork"
        ],
        "operationId": "ManagedNetworkSettingsRule_CreateOrUpdate",
        "summary": "Creates or updates an outbound rule in the managed network of a machine learning workspace.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/RuleName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Outbound Rule to be created or updated in the managed network of a machine learning workspace.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateRule.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/provisionManagedNetwork": {
      "post": {
        "tags": [
          "ManagedNetwork"
        ],
        "operationId": "ManagedNetworkProvisions_ProvisionManagedNetwork",
        "summary": "Provisions the managed network of a machine learning workspace.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Managed Network Provisioning Options for a machine learning workspace.",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionStatus"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Provision ManagedNetwork": {
            "$ref": "./examples/ManagedNetwork/provision.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usage"
        ],
        "operationId": "Usages_List",
        "description": "Gets the current usage information as well as limits for AML resources for given subscription and location.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Usages": {
            "$ref": "./examples/Usage/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes": {
      "get": {
        "tags": [
          "VirtualMachineSizes"
        ],
        "operationId": "VirtualMachineSizes_List",
        "description": "Returns supported VM Sizes in a location",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location upon which virtual-machine-sizes is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/VirtualMachineSize/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas": {
      "post": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_Update",
        "description": "Update quota for each VM family in workspace.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for update quota is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaUpdateParameters"
            },
            "description": "Quota update parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceQuotasResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "update quotas": {
            "$ref": "./examples/Quota/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/quotas": {
      "get": {
        "tags": [
          "Quota"
        ],
        "operationId": "Quotas_List",
        "description": "Gets the currently assigned Workspace Quotas based on VMFamily.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceQuotas"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List workspace quotas by VMFamily": {
            "$ref": "./examples/Quota/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "Compute_List",
        "description": "Gets computes in specified workspace.",
        "x-ms-examples": {
          "Get Computes": {
            "$ref": "./examples/Compute/list.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.",
            "schema": {
              "$ref": "#/definitions/PaginatedComputeResourcesList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}": {
      "get": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Get",
        "description": "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.",
        "x-ms-examples": {
          "Get a AKS Compute": {
            "$ref": "./examples/Compute/get/AKSCompute.json"
          },
          "Get a AML Compute": {
            "$ref": "./examples/Compute/get/AmlCompute.json"
          },
          "Get an ComputeInstance": {
            "$ref": "./examples/Compute/get/ComputeInstance.json"
          },
          "Get a Kubernetes Compute": {
            "$ref": "./examples/Compute/get/KubernetesCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_CreateOrUpdate",
        "description": "Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAmlCompute.json"
          },
          "Create an ComputeInstance Compute with minimal inputs": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceMinimal.json"
          },
          "Create an ComputeInstance Compute": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstance.json"
          },
          "Create an ComputeInstance Compute with Schedules": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceWithSchedules.json"
          },
          "Create an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAKSCompute.json"
          },
          "Create a DataFactory Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicDataFactoryCompute.json"
          },
          "Update a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AmlCompute.json"
          },
          "Update an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AKSCompute.json"
          },
          "Attach a Kubernetes Compute": {
            "$ref": "./examples/Compute/createOrUpdate/KubernetesCompute.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ComputeDefinitionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Compute creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "201": {
            "description": "Compute creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Update",
        "description": "Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a AmlCompute Compute": {
            "$ref": "./examples/Compute/patch.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdateParameters"
            },
            "description": "Additional parameters for cluster update."
          }
        ],
        "responses": {
          "200": {
            "description": "Compute update initiated.",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Delete",
        "description": "Deletes specified Machine Learning compute.",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Compute": {
            "$ref": "./examples/Compute/delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/UnderlyingResourceActionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Compute deletion initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content; The target compute does not exist."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes": {
      "post": {
        "tags": [
          "MachineLearningComputes"
        ],
        "operationId": "Compute_ListNodes",
        "description": "Get the details (e.g IP address, port etc) of all the compute nodes in the compute.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of IP addresses.",
            "schema": {
              "$ref": "#/definitions/AmlComputeNodesInformation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "nodes"
        },
        "x-ms-examples": {
          "Get compute nodes information for a compute": {
            "$ref": "./examples/Compute/listNodes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_ListKeys",
        "description": "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).",
        "x-ms-examples": {
          "List AKS Compute Keys": {
            "$ref": "./examples/Compute/listKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ComputeSecrets"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Start",
        "description": "Posts a start action to a compute instance",
        "x-ms-examples": {
          "Start ComputeInstance Compute": {
            "$ref": "./examples/Compute/start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Stop",
        "description": "Posts a stop action to a compute instance",
        "x-ms-examples": {
          "Stop ComputeInstance Compute": {
            "$ref": "./examples/Compute/stop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart": {
      "post": {
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "operationId": "Compute_Restart",
        "description": "Posts a restart action to a compute instance",
        "x-ms-examples": {
          "Restart ComputeInstance Compute": {
            "$ref": "./examples/Compute/restart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Success."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "RegistryNameParameter": {
      "name": "registryName",
      "description": "Name of Azure Machine Learning registry. This is case-insensitive",
      "in": "path",
      "type": "string",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
      "x-ms-parameter-location": "method"
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skip",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the workspace",
      "x-ms-parameter-location": "method"
    },
    "ConnectionName": {
      "name": "connectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Friendly name of the workspace connection",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "TargetParameter": {
      "in": "query",
      "name": "target",
      "type": "string",
      "description": "Target of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "CategoryParameter": {
      "in": "query",
      "name": "category",
      "type": "string",
      "description": "Category of the workspace connection.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "RuleName": {
      "in": "path",
      "name": "ruleName",
      "description": "Name of the workspace managed network outbound rule",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
    },
    "WorkspaceForceToPurgeParameter": {
      "in": "query",
      "name": "forceToPurge",
      "description": "Flag to indicate delete is a purge request.",
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "ComputeNameParameter": {
      "name": "computeName",
      "description": "Name of the Azure Machine Learning compute.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AsyncOperationIdParameter": {
      "name": "asyncOperationId",
      "description": "Identifier of an asynchronous Azure Machine Learning compute operation.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ComputeDefinitionParameter": {
      "in": "body",
      "name": "parameters",
      "description": "Payload with Machine Learning compute definition.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ComputeResource"
      },
      "x-ms-parameter-location": "method"
    },
    "ComputeTypeParameter": {
      "in": "query",
      "name": "compute-type",
      "type": "string",
      "description": "Type of compute to filter by.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "UnderlyingResourceActionParameter": {
      "in": "query",
      "name": "underlyingResourceAction",
      "type": "string",
      "description": "Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.",
      "required": true,
      "enum": [
        "Delete",
        "Detach"
      ],
      "x-ms-enum": {
        "name": "UnderlyingResourceAction",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "AcrDetails": {
      "description": "Details of ACR account to be used for the Registry",
      "type": "object",
      "properties": {
        "systemCreatedAcrAccount": {
          "description": "Details of system created ACR account to be used for the Registry",
          "$ref": "#/definitions/SystemCreatedAcrAccount",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ArmResourceId": {
      "description": "ARM ResourceId of a resource",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Arm ResourceId is in the format \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Storage/storageAccounts/{StorageAccountName}\"\r\nor \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{AcrName}\"",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointServiceConnectionStatus": {
      "description": "Connection status of the service consumer with the service provider",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointServiceConnectionStatus",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "RegistryPartialManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      ],
      "additionalProperties": false
    },
    "PartialRegistry": {
      "description": "Partial Registry class for PATCH",
      "type": "object",
      "additionalProperties": false
    },
    "PartialRegistryPartialTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/RegistryPartialManagedServiceIdentity"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/PartialSku"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "PartialSku": {
      "description": "Common SKU definition.",
      "type": "object",
      "properties": {
        "capacity": {
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "type": "integer"
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code.",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier"
        }
      },
      "additionalProperties": false
    },
    "RegistryPrivateEndpointConnection": {
      "description": "Private endpoint connection definition.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This is the private endpoint connection name created on SRP\r\nFull resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/registryPrivateEndpointConnections/{peConnectionName}",
          "type": "string",
          "x-nullable": true
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the Private Endpoint Connection",
          "$ref": "#/definitions/RegistryPrivateEndpointConnectionProperties",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "RegistryPrivateEndpointConnectionProperties": {
      "description": "Properties of the Private Endpoint Connection",
      "type": "object",
      "properties": {
        "groupIds": {
          "description": "The group ids",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "privateEndpoint": {
          "description": "The PE network resource that is linked to this PE connection.",
          "$ref": "#/definitions/PrivateEndpointResource",
          "x-nullable": true
        },
        "registryPrivateLinkServiceConnectionState": {
          "description": "The connection state.",
          "$ref": "#/definitions/RegistryPrivateLinkServiceConnectionState",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "One of null, \"Succeeded\", \"Provisioning\", \"Failed\". While not approved, it's null.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "PrivateEndpointResource": {
      "description": "The PE network resource that is linked to this PE connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/privatelinks.json#/definitions/PrivateEndpoint"
        }
      ],
      "properties": {
        "subnetArmId": {
          "description": "The subnetId that the private endpoint is connected to.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "RegistryPrivateLinkServiceConnectionState": {
      "description": "The connection state.",
      "type": "object",
      "properties": {
        "actionsRequired": {
          "description": "Some RP chose \"None\". Other RPs use this for region expansion.",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "description": "User-defined message that, per NRP doc, may be used for approval-related message.",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "Connection status of the service consumer with the service provider",
          "$ref": "#/definitions/EndpointServiceConnectionStatus"
        }
      },
      "additionalProperties": false
    },
    "Registry": {
      "description": "Details of the Registry",
      "type": "object",
      "properties": {
        "discoveryUrl": {
          "description": "Discovery URL for the Registry",
          "type": "string",
          "x-nullable": true
        },
        "intellectualPropertyPublisher": {
          "description": "IntellectualPropertyPublisher for the registry",
          "type": "string",
          "x-nullable": true
        },
        "managedResourceGroup": {
          "description": "ResourceId of the managed RG if the registry has system created resources",
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        },
        "managedResourceGroupSettings": {
          "description": "Managed resource group specific settings",
          "$ref": "#/definitions/ManagedResourceGroupSettings",
          "x-nullable": true
        },
        "mlFlowRegistryUri": {
          "description": "MLFlow Registry URI for the Registry",
          "type": "string",
          "x-nullable": true
        },
        "registryPrivateEndpointConnections": {
          "description": "Private endpoint connections info used for pending connections in private link portal",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryPrivateEndpointConnection"
          },
          "x-nullable": true
        },
        "publicNetworkAccess": {
          "description": "Is the Registry accessible from the internet?\r\nPossible values: \"Enabled\" or \"Disabled\"",
          "type": "string",
          "x-nullable": true
        },
        "regionDetails": {
          "description": "Details of each region the registry is in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryRegionArmDetails"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "x-ms-client-name": "RegistryProperties",
      "additionalProperties": false
    },
    "RegistryRegionArmDetails": {
      "description": "Details for each region the registry is in",
      "type": "object",
      "properties": {
        "acrDetails": {
          "description": "List of ACR accounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AcrDetails"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        },
        "location": {
          "description": "The location where the registry exists",
          "type": "string",
          "x-nullable": true
        },
        "storageAccountDetails": {
          "description": "List of storage accounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountDetails"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "ManagedResourceGroupSettings": {
      "description": "Managed resource group settings",
      "type": "object",
      "properties": {
        "assignedIdentities": {
          "description": "List of assigned identities for the managed resource group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedResourceGroupAssignedIdentities"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "ManagedResourceGroupAssignedIdentities": {
      "description": "Details for managed resource group assigned identities.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Identity principal Id",
          "type": "string",
          "x-nullable": false,
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "RegistryTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/Registry"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "Registry",
      "additionalProperties": false
    },
    "RegistryTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of Registry entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of Registry objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type Registry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "StorageAccountDetails": {
      "description": "Details of storage account to be used for the Registry",
      "type": "object",
      "properties": {
        "systemCreatedStorageAccount": {
          "description": "Details of system created storage account to be used for the registry",
          "$ref": "#/definitions/SystemCreatedStorageAccount",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "SystemCreatedAcrAccount": {
      "type": "object",
      "properties": {
        "acrAccountName": {
          "description": "Name of the ACR account",
          "type": "string",
          "x-nullable": true
        },
        "acrAccountSku": {
          "description": "SKU of the ACR account",
          "type": "string",
          "x-nullable": true
        },
        "armResourceId": {
          "description": "This is populated once the ACR account is created.",
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "SystemCreatedStorageAccount": {
      "type": "object",
      "properties": {
        "allowBlobPublicAccess": {
          "description": "Public blob access allowed",
          "type": "boolean"
        },
        "armResourceId": {
          "description": "This is populated once the storage account is created.",
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        },
        "storageAccountHnsEnabled": {
          "description": "HNS enabled for storage account",
          "type": "boolean"
        },
        "storageAccountName": {
          "description": "Name of the storage account",
          "type": "string",
          "x-nullable": true
        },
        "storageAccountType": {
          "description": "Allowed values:\r\n\"Standard_LRS\",\r\n\"Standard_GRS\",\r\n\"Standard_RAGRS\",\r\n\"Standard_ZRS\",\r\n\"Standard_GZRS\",\r\n\"Standard_RAGZRS\",\r\n\"Premium_LRS\",\r\n\"Premium_ZRS\"",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AccountKeyDatastoreCredentials": {
      "description": "Account key datastore credentials configuration.",
      "required": [
        "secrets"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "secrets": {
          "description": "[Required] Storage account secrets.",
          "$ref": "#/definitions/AccountKeyDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "x-ms-discriminator-value": "AccountKey",
      "additionalProperties": false
    },
    "AccountKeyDatastoreSecrets": {
      "description": "Datastore account key secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "AccountKey",
      "additionalProperties": false
    },
    "AllFeatures": {
      "required": [
        "filterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "x-ms-discriminator-value": "AllFeatures",
      "additionalProperties": false
    },
    "AllNodes": {
      "description": "All nodes means the service will be running on all of the nodes of the job",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Nodes"
        }
      ],
      "x-ms-discriminator-value": "All",
      "additionalProperties": false
    },
    "AmlToken": {
      "description": "AML Token identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AMLToken",
      "additionalProperties": false
    },
    "AmlTokenComputeIdentity": {
      "description": "AML token compute identity definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeIdentityBase"
        }
      ],
      "x-ms-discriminator-value": "AmlToken",
      "additionalProperties": false
    },
    "AnonymousAccessCredential": {
      "description": "Access credential with no credentials",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "x-ms-discriminator-value": "NoCredentials",
      "additionalProperties": false
    },
    "AssetBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "AssetContainer": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "latestVersion": {
          "description": "The latest version inside this container.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "nextVersion": {
          "description": "The next auto incremental version",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AssetJobInput": {
      "description": "Asset input type.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "Input Asset Delivery Mode.",
          "default": "ReadOnlyMount",
          "$ref": "#/definitions/InputDeliveryMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AssetJobOutput": {
      "description": "Asset output type.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Output Asset Delivery Mode.",
          "default": "ReadWriteMount",
          "$ref": "#/definitions/OutputDeliveryMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "description": "Output Asset URI.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AssetProvisioningState": {
      "description": "Provisioning state of registry asset.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AssetProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          },
          {
            "value": "Creating"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Deleting"
          }
        ]
      },
      "additionalProperties": false
    },
    "AssetReferenceBase": {
      "description": "Base definition for asset references.",
      "required": [
        "referenceType"
      ],
      "type": "object",
      "properties": {
        "referenceType": {
          "description": "[Required] Specifies the type of asset reference.",
          "$ref": "#/definitions/ReferenceType"
        }
      },
      "discriminator": "referenceType"
    },
    "AutoForecastHorizon": {
      "description": "Forecast horizon determined automatically by system.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ForecastHorizon"
        }
      ],
      "x-ms-discriminator-value": "Auto",
      "additionalProperties": false
    },
    "AutoMLJob": {
      "description": "AutoMLJob class.\r\nUse this class for executing AutoML tasks like Classification/Regression etc.\r\nSee TaskType enum for all the tasks supported.",
      "required": [
        "taskDetails"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "environmentId": {
          "description": "The ARM resource ID of the Environment specification for the job.\r\nThis is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "queueSettings": {
          "description": "Queue settings for the job",
          "$ref": "#/definitions/QueueSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "default": "{}",
          "$ref": "#/definitions/JobResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "taskDetails": {
          "description": "[Required] This represents scenario which can be one of Tables/NLP/Image",
          "$ref": "#/definitions/AutoMLVertical"
        }
      },
      "x-ms-discriminator-value": "AutoML",
      "additionalProperties": false
    },
    "AutoMLVertical": {
      "description": "AutoML vertical class.\r\nBase class for AutoML verticals - TableVertical/ImageVertical/NLPVertical",
      "required": [
        "taskType",
        "trainingData"
      ],
      "type": "object",
      "properties": {
        "logVerbosity": {
          "description": "Log verbosity for the job.",
          "default": "Info",
          "$ref": "#/definitions/LogVerbosity"
        },
        "targetColumnName": {
          "description": "Target column name: This is prediction values column.\r\nAlso known as label column name in context of classification tasks.",
          "type": "string",
          "x-nullable": true
        },
        "taskType": {
          "description": "[Required] Task type for AutoMLJob.",
          "$ref": "#/definitions/TaskType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "trainingData": {
          "description": "[Required] Training data input.",
          "$ref": "#/definitions/MLTableJobInput"
        }
      },
      "discriminator": "taskType"
    },
    "AutoNCrossValidations": {
      "description": "N-Cross validations determined automatically.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NCrossValidations"
        }
      ],
      "x-ms-discriminator-value": "Auto",
      "additionalProperties": false
    },
    "AutoRebuildSetting": {
      "description": "AutoRebuild setting for the derived image",
      "enum": [
        "Disabled",
        "OnBaseImageUpdate"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoRebuildSetting",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled"
          },
          {
            "value": "OnBaseImageUpdate"
          }
        ]
      },
      "additionalProperties": false
    },
    "AutoSeasonality": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Seasonality"
        }
      ],
      "x-ms-discriminator-value": "Auto",
      "additionalProperties": false
    },
    "AutoTargetLags": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetLags"
        }
      ],
      "x-ms-discriminator-value": "Auto",
      "additionalProperties": false
    },
    "AutoTargetRollingWindowSize": {
      "description": "Target lags rolling window determined automatically.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetRollingWindowSize"
        }
      ],
      "x-ms-discriminator-value": "Auto",
      "additionalProperties": false
    },
    "AzureBlobDatastore": {
      "description": "Azure Blob datastore configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "Storage account name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "containerName": {
          "description": "Storage account container name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureBlob",
      "additionalProperties": false
    },
    "AzureDataLakeGen1Datastore": {
      "description": "Azure Data Lake Gen1 datastore configuration.",
      "required": [
        "storeName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storeName": {
          "description": "[Required] Azure Data Lake store name.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataLakeGen1",
      "additionalProperties": false
    },
    "AzureDataLakeGen2Datastore": {
      "description": "Azure Data Lake Gen2 datastore configuration.",
      "required": [
        "accountName",
        "filesystem"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "[Required] Storage account name.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "filesystem": {
          "description": "[Required] The name of the Data Lake Gen2 filesystem.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureDataLakeGen2",
      "additionalProperties": false
    },
    "AzureDatastore": {
      "description": "Base definition for Azure datastore contents configuration.",
      "type": "object",
      "properties": {
        "resourceGroup": {
          "description": "Azure Resource Group name",
          "type": "string",
          "x-nullable": true
        },
        "subscriptionId": {
          "description": "Azure Subscription Id",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "AzureDevOpsWebhook": {
      "description": "Webhook details specific for Azure DevOps",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Webhook"
        }
      ],
      "x-ms-discriminator-value": "AzureDevOps",
      "additionalProperties": false
    },
    "AzureFileDatastore": {
      "description": "Azure File datastore configuration.",
      "required": [
        "accountName",
        "fileShareName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "accountName": {
          "description": "[Required] Storage account name.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "fileShareName": {
          "description": "[Required] The name of the Azure file share that the datastore points to.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AzureFile",
      "additionalProperties": false
    },
    "BanditPolicy": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "properties": {
        "slackAmount": {
          "format": "float",
          "description": "Absolute distance allowed from the best performing run.",
          "default": 0,
          "type": "number"
        },
        "slackFactor": {
          "format": "float",
          "description": "Ratio of the allowed distance from the best performing run.",
          "default": 0,
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Bandit",
      "additionalProperties": false
    },
    "BatchDeployment": {
      "description": "Batch inference settings per deployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "properties": {
        "compute": {
          "description": "Compute target for batch inference operation.",
          "type": "string",
          "x-nullable": true
        },
        "deploymentConfiguration": {
          "description": "Properties relevant to different deployment types.",
          "$ref": "#/definitions/BatchDeploymentConfiguration",
          "x-nullable": true
        },
        "errorThreshold": {
          "format": "int32",
          "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored.",
          "default": -1,
          "type": "integer"
        },
        "loggingLevel": {
          "description": "Logging level for batch inference operation.",
          "default": "Info",
          "$ref": "#/definitions/BatchLoggingLevel"
        },
        "maxConcurrencyPerInstance": {
          "format": "int32",
          "description": "Indicates maximum number of parallelism per instance.",
          "default": 1,
          "type": "integer"
        },
        "miniBatchSize": {
          "format": "int64",
          "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
          "default": 10,
          "type": "integer"
        },
        "model": {
          "description": "Reference to the model asset for the endpoint deployment.",
          "$ref": "#/definitions/AssetReferenceBase",
          "x-nullable": true
        },
        "outputAction": {
          "description": "Indicates how the output will be organized.",
          "default": "AppendRow",
          "$ref": "#/definitions/BatchOutputAction"
        },
        "outputFileName": {
          "description": "Customized output file name for append_row output action.",
          "default": "predictions.csv",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "$ref": "#/definitions/DeploymentProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "resources": {
          "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration.",
          "$ref": "#/definitions/DeploymentResourceConfiguration",
          "x-nullable": true
        },
        "retrySettings": {
          "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings.",
          "$ref": "#/definitions/BatchRetrySettings",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "BatchDeploymentProperties",
      "additionalProperties": false
    },
    "BatchDeploymentConfiguration": {
      "description": "Properties relevant to different deployment types.",
      "required": [
        "deploymentConfigurationType"
      ],
      "type": "object",
      "properties": {
        "deploymentConfigurationType": {
          "description": "[Required] The type of the deployment",
          "$ref": "#/definitions/BatchDeploymentConfigurationType"
        }
      },
      "discriminator": "deploymentConfigurationType"
    },
    "BatchDeploymentConfigurationType": {
      "description": "The enumerated property types for batch deployments.",
      "enum": [
        "Model",
        "PipelineComponent"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BatchDeploymentConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "value": "Model"
          },
          {
            "value": "PipelineComponent"
          }
        ]
      },
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/BatchDeployment"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "BatchDeployment",
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchDeployment entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of BatchDeployment objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type BatchDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchDeploymentTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "BatchEndpoint": {
      "description": "Batch endpoint configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "properties": {
        "defaults": {
          "description": "Default values for Batch Endpoint",
          "$ref": "#/definitions/BatchEndpointDefaults",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "BatchEndpointProperties",
      "additionalProperties": false
    },
    "BatchEndpointDefaults": {
      "description": "Batch endpoint default values",
      "type": "object",
      "properties": {
        "deploymentName": {
          "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "BatchEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/BatchEndpoint"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "BatchEndpoint",
      "additionalProperties": false
    },
    "BatchEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchEndpoint entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of BatchEndpoint objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type BatchEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchEndpointTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "BatchLoggingLevel": {
      "description": "Log verbosity for batch inferencing.\r\nIncreasing verbosity order for logging is : Warning, Info and Debug.\r\nThe default value is Info.",
      "enum": [
        "Info",
        "Warning",
        "Debug"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BatchLoggingLevel",
        "modelAsString": true,
        "values": [
          {
            "value": "Info"
          },
          {
            "value": "Warning"
          },
          {
            "value": "Debug"
          }
        ]
      },
      "additionalProperties": false
    },
    "BatchOutputAction": {
      "description": "Enum to determine how batch inferencing will handle output",
      "enum": [
        "SummaryOnly",
        "AppendRow"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BatchOutputAction",
        "modelAsString": true,
        "values": [
          {
            "value": "SummaryOnly"
          },
          {
            "value": "AppendRow"
          }
        ]
      },
      "additionalProperties": false
    },
    "BatchPipelineComponentDeploymentConfiguration": {
      "description": "Properties for a Batch Pipeline Component Deployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BatchDeploymentConfiguration"
        }
      ],
      "properties": {
        "componentId": {
          "description": "The ARM id of the component to be run.",
          "$ref": "#/definitions/IdAssetReference",
          "x-nullable": true
        },
        "description": {
          "description": "The description which will be applied to the job.",
          "type": "string",
          "x-nullable": true
        },
        "settings": {
          "description": "Run-time settings for the pipeline job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "tags": {
          "description": "The tags which will be applied to the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "PipelineComponent",
      "additionalProperties": false
    },
    "BatchRetrySettings": {
      "description": "Retry settings for a batch inference operation.",
      "type": "object",
      "properties": {
        "maxRetries": {
          "format": "int32",
          "description": "Maximum retry count for a mini-batch",
          "default": 3,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "Invocation timeout for a mini-batch, in ISO 8601 format.",
          "default": "PT30S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BayesianSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that generates values based on previous values",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Bayesian",
      "additionalProperties": false
    },
    "BlobReferenceForConsumptionDto": {
      "type": "object",
      "properties": {
        "blobUri": {
          "format": "uri",
          "description": "Blob URI path for client to upload data.\r\nExample: https://blob.windows.core.net/Container/Path",
          "type": "string",
          "x-nullable": true
        },
        "credential": {
          "description": "Credential info to access storage account",
          "$ref": "#/definitions/PendingUploadCredentialDto",
          "x-nullable": true
        },
        "storageAccountArmId": {
          "description": "Arm ID of the storage account to use",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "BlockedTransformers": {
      "description": "Enum for all classification models supported by AutoML.",
      "enum": [
        "TextTargetEncoder",
        "OneHotEncoder",
        "CatTargetEncoder",
        "TfIdf",
        "WoETargetEncoder",
        "LabelEncoder",
        "WordEmbedding",
        "NaiveBayes",
        "CountVectorizer",
        "HashOneHotEncoder"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "BlockedTransformers",
        "modelAsString": true,
        "values": [
          {
            "value": "TextTargetEncoder",
            "description": "Target encoding for text data."
          },
          {
            "value": "OneHotEncoder",
            "description": "Ohe hot encoding creates a binary feature transformation."
          },
          {
            "value": "CatTargetEncoder",
            "description": "Target encoding for categorical data."
          },
          {
            "value": "TfIdf",
            "description": "Tf-Idf stands for, term-frequency times inverse document-frequency. This is a common term weighting scheme for identifying information from documents."
          },
          {
            "value": "WoETargetEncoder",
            "description": "Weight of Evidence encoding is a technique used to encode categorical variables. It uses the natural log of the P(1)/P(0) to create weights."
          },
          {
            "value": "LabelEncoder",
            "description": "Label encoder converts labels/categorical variables in a numerical form."
          },
          {
            "value": "WordEmbedding",
            "description": "Word embedding helps represents words or phrases as a vector, or a series of numbers."
          },
          {
            "value": "NaiveBayes",
            "description": "Naive Bayes is a classified that is used for classification of discrete features that are categorically distributed."
          },
          {
            "value": "CountVectorizer",
            "description": "Count Vectorizer converts a collection of text documents to a matrix of token counts."
          },
          {
            "value": "HashOneHotEncoder",
            "description": "Hashing One Hot Encoder can turn categorical variables into a limited number of new features. This is often used for high-cardinality categorical features."
          }
        ]
      },
      "additionalProperties": false
    },
    "BuildContext": {
      "description": "Configuration settings for Docker build context",
      "required": [
        "contextUri"
      ],
      "type": "object",
      "properties": {
        "contextUri": {
          "description": "[Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\r\n<seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerfilePath": {
          "description": "Path to the Dockerfile in the build context.\r\n<seealso href=\"https://docs.docker.com/engine/reference/builder/\" />",
          "default": "Dockerfile",
          "type": "string",
          "example": "prod/Dockerfile",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "CapabilityHost": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "aiServicesConnections": {
          "description": "List of AI services connections.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "capabilityHostKind": {
          "description": "Kind of this capability host.",
          "default": "Agents",
          "$ref": "#/definitions/CapabilityHostKind"
        },
        "customerSubnet": {
          "description": "Customer subnet info to help set up this capability host.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the CapabilityHost.",
          "$ref": "#/definitions/CapabilityHostProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "storageConnections": {
          "description": "List of Storage connections.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "threadStorageConnections": {
          "description": "List of Thread storage connections.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "vectorStoreConnections": {
          "description": "List of VectorStore connections.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        }
      },
      "x-ms-client-name": "CapabilityHostProperties",
      "additionalProperties": false
    },
    "CapabilityHostKind": {
      "enum": [
        "Agents"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CapabilityHostKind",
        "modelAsString": true,
        "values": [
          {
            "value": "Agents"
          }
        ]
      },
      "additionalProperties": false
    },
    "CapabilityHostProvisioningState": {
      "description": "Provisioning state of capability host.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
        "name": "CapabilityHostProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          },
          {
            "value": "Creating"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Deleting"
          }
        ]
      },
      "additionalProperties": false
    },
    "CapabilityHostResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/CapabilityHost"
        }
      },
      "x-ms-client-name": "CapabilityHost",
      "additionalProperties": false
    },
    "CategoricalDataDriftMetric": {
      "enum": [
        "JensenShannonDistance",
        "PopulationStabilityIndex",
        "PearsonsChiSquaredTest"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CategoricalDataDriftMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "JensenShannonDistance",
            "description": "The Jensen Shannon Distance (JSD) metric."
          },
          {
            "value": "PopulationStabilityIndex",
            "description": "The Population Stability Index (PSI) metric."
          },
          {
            "value": "PearsonsChiSquaredTest",
            "description": "The Pearsons Chi Squared Test metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "CategoricalDataDriftMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataDriftMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The categorical data drift metric to calculate.",
          "$ref": "#/definitions/CategoricalDataDriftMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Categorical",
      "additionalProperties": false
    },
    "CategoricalDataQualityMetric": {
      "enum": [
        "NullValueRate",
        "DataTypeErrorRate",
        "OutOfBoundsRate"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CategoricalDataQualityMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "NullValueRate",
            "description": "Calculates the rate of null values."
          },
          {
            "value": "DataTypeErrorRate",
            "description": "Calculates the rate of data type errors."
          },
          {
            "value": "OutOfBoundsRate",
            "description": "Calculates the rate values are out of bounds."
          }
        ]
      },
      "additionalProperties": false
    },
    "CategoricalDataQualityMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataQualityMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The categorical data quality metric to calculate.",
          "$ref": "#/definitions/CategoricalDataQualityMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Categorical",
      "additionalProperties": false
    },
    "CategoricalPredictionDriftMetric": {
      "enum": [
        "JensenShannonDistance",
        "PopulationStabilityIndex",
        "PearsonsChiSquaredTest"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CategoricalPredictionDriftMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "JensenShannonDistance",
            "description": "The Jensen Shannon Distance (JSD) metric."
          },
          {
            "value": "PopulationStabilityIndex",
            "description": "The Population Stability Index (PSI) metric."
          },
          {
            "value": "PearsonsChiSquaredTest",
            "description": "The Pearsons Chi Squared Test metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "CategoricalPredictionDriftMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The categorical prediction drift metric to calculate.",
          "$ref": "#/definitions/CategoricalPredictionDriftMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Categorical",
      "additionalProperties": false
    },
    "CertificateDatastoreCredentials": {
      "description": "Certificate datastore credentials configuration.",
      "required": [
        "clientId",
        "secrets",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "format": "uuid",
          "description": "[Required] Service principal client ID.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Resource the service principal has access to.",
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "description": "[Required] Service principal secrets.",
          "$ref": "#/definitions/CertificateDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "format": "uuid",
          "description": "[Required] ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "thumbprint": {
          "description": "[Required] Thumbprint of the certificate used for authentication.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Certificate",
      "additionalProperties": false
    },
    "CertificateDatastoreSecrets": {
      "description": "Datastore certificate secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Certificate",
      "additionalProperties": false
    },
    "Classification": {
      "description": "Classification task in AutoML Table vertical.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "positiveLabel": {
          "description": "Positive label for binary metrics calculation.",
          "type": "string",
          "x-nullable": true
        },
        "primaryMetric": {
          "description": "Primary metric for the task.",
          "default": "AUCWeighted",
          "$ref": "#/definitions/ClassificationPrimaryMetrics"
        },
        "trainingSettings": {
          "description": "Inputs for training phase for an AutoML Job.",
          "$ref": "#/definitions/ClassificationTrainingSettings",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Classification",
      "additionalProperties": false
    },
    "ClassificationModels": {
      "description": "Enum for all classification models supported by AutoML.",
      "enum": [
        "LogisticRegression",
        "SGD",
        "MultinomialNaiveBayes",
        "BernoulliNaiveBayes",
        "SVM",
        "LinearSVM",
        "KNN",
        "DecisionTree",
        "RandomForest",
        "ExtremeRandomTrees",
        "LightGBM",
        "GradientBoosting",
        "XGBoostClassifier"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ClassificationModels",
        "modelAsString": true,
        "values": [
          {
            "value": "LogisticRegression",
            "description": "Logistic regression is a fundamental classification technique.\nIt belongs to the group of linear classifiers and is somewhat similar to polynomial and linear regression.\nLogistic regression is fast and relatively uncomplicated, and it's convenient for you to interpret the results.\nAlthough it's essentially a method for binary classification, it can also be applied to multiclass problems."
          },
          {
            "value": "SGD",
            "description": "SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\nto find the model parameters that correspond to the best fit between predicted and actual outputs."
          },
          {
            "value": "MultinomialNaiveBayes",
            "description": "The multinomial Naive Bayes classifier is suitable for classification with discrete features (e.g., word counts for text classification).\nThe multinomial distribution normally requires integer feature counts. However, in practice, fractional counts such as tf-idf may also work."
          },
          {
            "value": "BernoulliNaiveBayes",
            "description": "Naive Bayes classifier for multivariate Bernoulli models."
          },
          {
            "value": "SVM",
            "description": "A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\nAfter giving an SVM model sets of labeled training data for each category, they're able to categorize new text."
          },
          {
            "value": "LinearSVM",
            "description": "A support vector machine (SVM) is a supervised machine learning model that uses classification algorithms for two-group classification problems.\nAfter giving an SVM model sets of labeled training data for each category, they're able to categorize new text.\nLinear SVM performs best when input data is linear, i.e., data can be easily classified by drawing the straight line between classified values on a plotted graph."
          },
          {
            "value": "KNN",
            "description": "K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\nwhich further means that the new data point will be assigned a value based on how closely it matches the points in the training set."
          },
          {
            "value": "DecisionTree",
            "description": "Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\nThe goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features."
          },
          {
            "value": "RandomForest",
            "description": "Random forest is a supervised learning algorithm.\nThe \"forest\" it builds, is an ensemble of decision trees, usually trained with the \"bagging\" method.\nThe general idea of the bagging method is that a combination of learning models increases the overall result."
          },
          {
            "value": "ExtremeRandomTrees",
            "description": "Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm."
          },
          {
            "value": "LightGBM",
            "description": "LightGBM is a gradient boosting framework that uses tree based learning algorithms."
          },
          {
            "value": "GradientBoosting",
            "description": "The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution."
          },
          {
            "value": "XGBoostClassifier",
            "description": "XGBoost: Extreme Gradient Boosting Algorithm. This algorithm is used for structured data where target column values can be divided into distinct class values."
          }
        ]
      },
      "additionalProperties": false
    },
    "ClassificationMultilabelPrimaryMetrics": {
      "description": "Primary metrics for classification multilabel tasks.",
      "enum": [
        "AUCWeighted",
        "Accuracy",
        "NormMacroRecall",
        "AveragePrecisionScoreWeighted",
        "PrecisionScoreWeighted",
        "IOU"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ClassificationMultilabelPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "AUCWeighted",
            "description": "AUC is the Area under the curve.\nThis metric represents arithmetic mean of the score for each class,\nweighted by the number of true instances in each class."
          },
          {
            "value": "Accuracy",
            "description": "Accuracy is the ratio of predictions that exactly match the true class labels."
          },
          {
            "value": "NormMacroRecall",
            "description": "Normalized macro recall is recall macro-averaged and normalized, so that random\nperformance has a score of 0, and perfect performance has a score of 1."
          },
          {
            "value": "AveragePrecisionScoreWeighted",
            "description": "The arithmetic mean of the average precision score for each class, weighted by\nthe number of true instances in each class."
          },
          {
            "value": "PrecisionScoreWeighted",
            "description": "The arithmetic mean of precision for each class, weighted by number of true instances in each class."
          },
          {
            "value": "IOU",
            "description": "Intersection Over Union. Intersection of predictions divided by union of predictions."
          }
        ]
      },
      "additionalProperties": false
    },
    "ClassificationPrimaryMetrics": {
      "description": "Primary metrics for classification tasks.",
      "enum": [
        "AUCWeighted",
        "Accuracy",
        "NormMacroRecall",
        "AveragePrecisionScoreWeighted",
        "PrecisionScoreWeighted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ClassificationPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "AUCWeighted",
            "description": "AUC is the Area under the curve.\nThis metric represents arithmetic mean of the score for each class,\nweighted by the number of true instances in each class."
          },
          {
            "value": "Accuracy",
            "description": "Accuracy is the ratio of predictions that exactly match the true class labels."
          },
          {
            "value": "NormMacroRecall",
            "description": "Normalized macro recall is recall macro-averaged and normalized, so that random\nperformance has a score of 0, and perfect performance has a score of 1."
          },
          {
            "value": "AveragePrecisionScoreWeighted",
            "description": "The arithmetic mean of the average precision score for each class, weighted by\nthe number of true instances in each class."
          },
          {
            "value": "PrecisionScoreWeighted",
            "description": "The arithmetic mean of precision for each class, weighted by number of true instances in each class."
          }
        ]
      },
      "additionalProperties": false
    },
    "ClassificationTrainingSettings": {
      "description": "Classification Training related configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ],
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for classification task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationModels"
          },
          "x-nullable": true
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for classification task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationModels"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "description": "Configuration for a scoring code asset.",
      "required": [
        "scoringScript"
      ],
      "type": "object",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "scoringScript": {
          "description": "[Required] The script to execute on startup. eg. \"score.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "CodeContainer": {
      "description": "Container for code asset versions.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the code container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "CodeContainerProperties",
      "additionalProperties": false
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/CodeContainer"
        }
      },
      "x-ms-client-name": "CodeContainer",
      "additionalProperties": false
    },
    "CodeContainerResourceArmPaginatedResult": {
      "description": "A paginated list of CodeContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of CodeContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type CodeContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "CodeVersion": {
      "description": "Code asset version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "codeUri": {
          "description": "Uri where code is located",
          "type": "string",
          "example": "https://blobStorage/folderName",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the code version.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "CodeVersionProperties",
      "additionalProperties": false
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/CodeVersion"
        }
      },
      "x-ms-client-name": "CodeVersion",
      "additionalProperties": false
    },
    "CodeVersionResourceArmPaginatedResult": {
      "description": "A paginated list of CodeVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of CodeVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type CodeVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "Collection": {
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The msi client id used to collect logging to blob storage. If it's null,backend will pick a registered endpoint identity to auth.",
          "type": "string",
          "x-nullable": true
        },
        "dataCollectionMode": {
          "description": "Enable or disable data collection.",
          "default": "Disabled",
          "$ref": "#/definitions/DataCollectionMode"
        },
        "dataId": {
          "description": "The data asset arm resource id. Client side will ensure data asset is pointing to the blob storage, and backend will collect data to the blob storage.",
          "type": "string",
          "x-nullable": true
        },
        "samplingRate": {
          "format": "double",
          "description": "The sampling rate for collection. Sampling rate 1.0 means we collect 100% of data by default.",
          "default": 1,
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "ColumnTransformer": {
      "description": "Column transformer parameters.",
      "type": "object",
      "properties": {
        "fields": {
          "description": "Fields to apply transformer logic on.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "parameters": {
          "description": "Different properties to be passed to transformer.\r\nInput expected is dictionary of key,value pairs in JSON format.",
          "type": "object",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "CommandJob": {
      "description": "Command job definition.",
      "required": [
        "command",
        "environmentId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "command": {
          "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "$ref": "#/definitions/DistributionConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentId": {
          "description": "[Required] The ARM resource ID of the Environment specification for the job.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "inputs": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "limits": {
          "description": "Command Job limit.",
          "$ref": "#/definitions/CommandJobLimits",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "parameters": {
          "description": "Input parameters.",
          "type": "object",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "queueSettings": {
          "description": "Queue settings for the job",
          "$ref": "#/definitions/QueueSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "default": "{}",
          "$ref": "#/definitions/JobResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "CommandJobLimits": {
      "description": "Command Job limit class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "ComponentContainer": {
      "description": "Component container definition.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the component container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "ComponentContainerProperties",
      "additionalProperties": false
    },
    "ComponentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentContainer"
        }
      },
      "x-ms-client-name": "ComponentContainer",
      "additionalProperties": false
    },
    "ComponentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ComponentContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ComponentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ComponentVersion": {
      "description": "Definition of a component version: defines resources that span component types.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "componentSpec": {
          "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
          "type": "object",
          "example": {
            "name": "Hello_Python_World",
            "display_name": "Hello_Python_World",
            "version": 1,
            "type": "command",
            "code": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/mycode/versions/1",
            "environment": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/AzureML-Tutorial/versions/1",
            "command": "python hello.py"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the component version.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "ComponentVersionProperties",
      "additionalProperties": false
    },
    "ComponentVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentVersion"
        }
      },
      "x-ms-client-name": "ComponentVersion",
      "additionalProperties": false
    },
    "ComponentVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ComponentVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ComponentVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ContainerResourceRequirements": {
      "description": "Resource requirements for each container instance within an online deployment.",
      "type": "object",
      "properties": {
        "containerResourceLimits": {
          "description": "Container resource limit info:",
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        },
        "containerResourceRequests": {
          "description": "Container resource request info:",
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ContainerResourceSettings": {
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "1",
          "x-nullable": true
        },
        "gpu": {
          "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "1",
          "x-nullable": true
        },
        "memory": {
          "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string",
          "example": "2Gi",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ContainerType": {
      "enum": [
        "StorageInitializer",
        "InferenceServer"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true,
        "values": [
          {
            "value": "StorageInitializer"
          },
          {
            "value": "InferenceServer"
          }
        ]
      },
      "additionalProperties": false
    },
    "ContentSafety": {
      "required": [
        "contentSafetyStatus"
      ],
      "type": "object",
      "properties": {
        "contentSafetyStatus": {
          "description": "[Required] Specifies the status of content safety.",
          "$ref": "#/definitions/ContentSafetyStatus"
        }
      },
      "additionalProperties": false
    },
    "ContentSafetyStatus": {
      "description": "Specifies the status of content safety.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ContentSafetyStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "CreateMonitorAction": {
      "required": [
        "monitorDefinition"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "properties": {
        "monitorDefinition": {
          "description": "[Required] Defines the monitor.",
          "$ref": "#/definitions/MonitorDefinition",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "CreateMonitor",
      "additionalProperties": false
    },
    "CredentialsType": {
      "description": "Enum to determine the datastore credentials type.",
      "enum": [
        "AccountKey",
        "Certificate",
        "None",
        "Sas",
        "ServicePrincipal"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CredentialsType",
        "modelAsString": true,
        "values": [
          {
            "value": "AccountKey"
          },
          {
            "value": "Certificate"
          },
          {
            "value": "None"
          },
          {
            "value": "Sas"
          },
          {
            "value": "ServicePrincipal"
          }
        ]
      },
      "additionalProperties": false
    },
    "CronTrigger": {
      "required": [
        "expression"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TriggerBase"
        }
      ],
      "properties": {
        "expression": {
          "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Cron",
      "additionalProperties": false
    },
    "CustomForecastHorizon": {
      "description": "The desired maximum forecast horizon in units of time-series frequency.",
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ForecastHorizon"
        }
      ],
      "properties": {
        "value": {
          "format": "int32",
          "description": "[Required] Forecast horizon value.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "CustomMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "properties": {
        "metric": {
          "description": "[Required] The user-defined metric to calculate.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "$ref": "#/definitions/MonitoringThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "CustomModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "custom_model",
      "additionalProperties": false
    },
    "CustomModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "custom_model",
      "additionalProperties": false
    },
    "CustomMonitoringSignal": {
      "required": [
        "componentId",
        "metricThresholds"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "properties": {
        "componentId": {
          "description": "[Required] Reference to the component asset used to calculate the custom metrics.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputAssets": {
          "description": "Monitoring assets to take as input. Key is the component input port name, value is the data asset.",
          "type": "object",
          "additionalProperties": {
            "description": "Monitoring input data base definition.",
            "$ref": "#/definitions/MonitoringInputDataBase",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "inputs": {
          "description": "Extra component parameters to take as input. Key is the component literal input port name, value is the parameter value.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "metricThresholds": {
          "description": "[Required] A list of metrics to calculate and their associated thresholds.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomMetricThreshold"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-identifiers": []
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "CustomNCrossValidations": {
      "description": "N-Cross validations are specified by user.",
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NCrossValidations"
        }
      ],
      "properties": {
        "value": {
          "format": "int32",
          "description": "[Required] N-Cross validations value.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "CustomSeasonality": {
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Seasonality"
        }
      ],
      "properties": {
        "value": {
          "format": "int32",
          "description": "[Required] Seasonality value.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "CustomTargetLags": {
      "required": [
        "values"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetLags"
        }
      ],
      "properties": {
        "values": {
          "description": "[Required] Set target lags values.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "CustomTargetRollingWindowSize": {
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetRollingWindowSize"
        }
      ],
      "properties": {
        "value": {
          "format": "int32",
          "description": "[Required] TargetRollingWindowSize value.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Custom",
      "additionalProperties": false
    },
    "DataAvailabilityStatus": {
      "enum": [
        "None",
        "Pending",
        "Incomplete",
        "Complete"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataAvailabilityStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "None"
          },
          {
            "value": "Pending"
          },
          {
            "value": "Incomplete"
          },
          {
            "value": "Complete"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataCollectionMode": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataCollectionMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataCollector": {
      "required": [
        "collections"
      ],
      "type": "object",
      "properties": {
        "collections": {
          "description": "[Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.\r\nModel data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Collection",
            "x-nullable": true
          }
        },
        "requestLogging": {
          "description": "The request logging configuration for mdc, it includes advanced logging settings for all collections. It's optional.",
          "$ref": "#/definitions/RequestLogging",
          "x-nullable": true
        },
        "rollingRate": {
          "description": "When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.\r\nIf the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.\r\nIf it's day, all data will be collected in blob path /yyyy/MM/dd/.\r\nThe other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly.",
          "default": "Hour",
          "$ref": "#/definitions/RollingRateType"
        }
      },
      "additionalProperties": false
    },
    "DataContainer": {
      "description": "Container for data asset versions.",
      "required": [
        "dataType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "$ref": "#/definitions/DataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-client-name": "DataContainerProperties",
      "additionalProperties": false
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/DataContainer"
        }
      },
      "x-ms-client-name": "DataContainer",
      "additionalProperties": false
    },
    "DataContainerResourceArmPaginatedResult": {
      "description": "A paginated list of DataContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of DataContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type DataContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "DataDriftMetricThresholdBase": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the data type of the metric threshold.",
          "$ref": "#/definitions/MonitoringFeatureDataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "$ref": "#/definitions/MonitoringThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "discriminator": "dataType"
    },
    "DataDriftMonitoringSignal": {
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "properties": {
        "featureDataTypeOverride": {
          "description": "A dictionary that maps feature names to their respective data types.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "featureImportanceSettings": {
          "description": "The settings for computing feature importance.",
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "features": {
          "description": "The feature filter which identifies which feature to calculate drift over.",
          "$ref": "#/definitions/MonitoringFeatureFilterBase",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "metricThresholds": {
          "description": "[Required] A list of metrics to calculate and their associated thresholds.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDriftMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-identifiers": []
        },
        "productionData": {
          "description": "[Required] The data which drift will be calculated for.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "description": "[Required] The data to calculate drift against.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "DataDrift",
      "additionalProperties": false
    },
    "DataPathAssetReference": {
      "description": "Reference to an asset via its path in a datastore.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "datastoreId": {
          "description": "ARM resource ID of the datastore where the asset is located.",
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "description": "The path of the file/directory in the datastore.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "DataPath",
      "additionalProperties": false
    },
    "DataQualityMetricThresholdBase": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the data type of the metric threshold.",
          "$ref": "#/definitions/MonitoringFeatureDataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "$ref": "#/definitions/MonitoringThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "discriminator": "dataType"
    },
    "DataQualityMonitoringSignal": {
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "properties": {
        "featureDataTypeOverride": {
          "description": "A dictionary that maps feature names to their respective data types.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "featureImportanceSettings": {
          "description": "The settings for computing feature importance.",
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "features": {
          "description": "The features to calculate drift over.",
          "$ref": "#/definitions/MonitoringFeatureFilterBase",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "metricThresholds": {
          "description": "[Required] A list of metrics to calculate and their associated thresholds.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataQualityMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-identifiers": []
        },
        "productionData": {
          "description": "[Required] The data produced by the production service which drift will be calculated for.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "description": "[Required] The data to calculate drift against.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "DataQuality",
      "additionalProperties": false
    },
    "DataReferenceCredential": {
      "description": "DataReferenceCredential base class",
      "required": [
        "credentialType"
      ],
      "type": "object",
      "properties": {
        "credentialType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/DataReferenceCredentialType"
        }
      },
      "discriminator": "credentialType"
    },
    "DataReferenceCredentialType": {
      "description": "Enum to determine the DataReference credentials type.",
      "enum": [
        "SAS",
        "DockerCredentials",
        "ManagedIdentity",
        "NoCredentials"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataReferenceCredentialType",
        "modelAsString": true,
        "values": [
          {
            "value": "SAS"
          },
          {
            "value": "DockerCredentials"
          },
          {
            "value": "ManagedIdentity"
          },
          {
            "value": "NoCredentials"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataType": {
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder",
        "mltable"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataType",
        "modelAsString": true,
        "values": [
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          }
        ]
      },
      "additionalProperties": false
    },
    "DataVersionBase": {
      "description": "Data version base definition",
      "required": [
        "dataType",
        "dataUri"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "$ref": "#/definitions/DataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataUri": {
          "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "x-ms-client-name": "DataVersionBaseProperties"
    },
    "DataVersionBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/DataVersionBase"
        }
      },
      "x-ms-client-name": "DataVersionBase",
      "additionalProperties": false
    },
    "DataVersionBaseResourceArmPaginatedResult": {
      "description": "A paginated list of DataVersionBase entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of DataVersionBase objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type DataVersionBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionBaseResource"
          }
        }
      },
      "additionalProperties": false
    },
    "Datastore": {
      "description": "Base definition for datastore contents configuration.",
      "required": [
        "credentials",
        "datastoreType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "credentials": {
          "description": "[Required] Account credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "datastoreType": {
          "description": "[Required] Storage type backing the datastore.",
          "$ref": "#/definitions/DatastoreType"
        },
        "isDefault": {
          "description": "Readonly property to indicate if datastore is the workspace default datastore",
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "datastoreType",
      "x-ms-client-name": "DatastoreProperties"
    },
    "DatastoreCredentials": {
      "description": "Base definition for datastore credentials.",
      "required": [
        "credentialsType"
      ],
      "type": "object",
      "properties": {
        "credentialsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/CredentialsType"
        }
      },
      "discriminator": "credentialsType"
    },
    "DatastoreResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/Datastore"
        }
      },
      "x-ms-client-name": "Datastore",
      "additionalProperties": false
    },
    "DatastoreResourceArmPaginatedResult": {
      "description": "A paginated list of Datastore entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of Datastore objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type Datastore.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastoreResource"
          }
        }
      },
      "additionalProperties": false
    },
    "DatastoreSecrets": {
      "description": "Base definition for datastore secrets.",
      "required": [
        "secretsType"
      ],
      "type": "object",
      "properties": {
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/SecretsType"
        }
      },
      "discriminator": "secretsType"
    },
    "DatastoreType": {
      "description": "Enum to determine the datastore contents type.",
      "enum": [
        "AzureBlob",
        "AzureDataLakeGen1",
        "AzureDataLakeGen2",
        "AzureFile",
        "OneLake"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DatastoreType",
        "modelAsString": true,
        "values": [
          {
            "value": "AzureBlob"
          },
          {
            "value": "AzureDataLakeGen1"
          },
          {
            "value": "AzureDataLakeGen2"
          },
          {
            "value": "AzureFile"
          },
          {
            "value": "OneLake"
          }
        ]
      },
      "additionalProperties": false
    },
    "DefaultScaleSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "x-ms-discriminator-value": "Default",
      "additionalProperties": false
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "description": "The retrieved online deployment logs.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "description": "The type of container to retrieve logs from.",
          "default": "InferenceServer",
          "$ref": "#/definitions/ContainerType"
        },
        "tail": {
          "format": "int32",
          "description": "The maximum number of lines to tail.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "DeploymentProvisioningState": {
      "description": "Possible values for DeploymentProvisioningState.",
      "enum": [
        "Creating",
        "Deleting",
        "Scaling",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DeploymentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Scaling"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "DeploymentResourceConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceConfiguration"
        }
      ],
      "additionalProperties": false
    },
    "DestinationAsset": {
      "description": "Publishing destination registry asset information",
      "type": "object",
      "properties": {
        "destinationName": {
          "description": "Destination asset name",
          "type": "string",
          "x-nullable": true
        },
        "destinationVersion": {
          "description": "Destination asset version",
          "type": "string",
          "x-nullable": true
        },
        "registryName": {
          "description": "Destination registry name",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "DistributionConfiguration": {
      "description": "Base definition for job distribution configuration.",
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "[Required] Specifies the type of distribution framework.",
          "$ref": "#/definitions/DistributionType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType"
    },
    "DistributionType": {
      "description": "Enum to determine the job distribution type.",
      "enum": [
        "PyTorch",
        "TensorFlow",
        "Mpi"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DistributionType",
        "modelAsString": true,
        "values": [
          {
            "value": "PyTorch"
          },
          {
            "value": "TensorFlow"
          },
          {
            "value": "Mpi"
          }
        ]
      },
      "additionalProperties": false
    },
    "DockerCredential": {
      "description": "Credential for docker with username and password",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "properties": {
        "password": {
          "description": "DockerCredential user password",
          "type": "string",
          "x-nullable": true
        },
        "userName": {
          "description": "DockerCredential user name",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "DockerCredentials",
      "additionalProperties": false
    },
    "EarlyTerminationPolicy": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "delayEvaluation": {
          "format": "int32",
          "description": "Number of intervals by which to delay the first evaluation.",
          "default": 0,
          "type": "integer"
        },
        "evaluationInterval": {
          "format": "int32",
          "description": "Interval (number of runs) between policy evaluations.",
          "default": 0,
          "type": "integer"
        },
        "policyType": {
          "description": "[Required] Name of policy configuration",
          "$ref": "#/definitions/EarlyTerminationPolicyType"
        }
      },
      "discriminator": "policyType"
    },
    "EarlyTerminationPolicyType": {
      "enum": [
        "Bandit",
        "MedianStopping",
        "TruncationSelection"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EarlyTerminationPolicyType",
        "modelAsString": true,
        "values": [
          {
            "value": "Bandit"
          },
          {
            "value": "MedianStopping"
          },
          {
            "value": "TruncationSelection"
          }
        ]
      },
      "additionalProperties": false
    },
    "EgressPublicNetworkAccessType": {
      "description": "Enum to determine whether PublicNetworkAccess is Enabled or Disabled for egress of a deployment.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EgressPublicNetworkAccessType",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "EmailNotificationEnableType": {
      "description": "Enum to determine the email notification type.",
      "enum": [
        "JobCompleted",
        "JobFailed",
        "JobCancelled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EmailNotificationEnableType",
        "modelAsString": true,
        "values": [
          {
            "value": "JobCompleted"
          },
          {
            "value": "JobFailed"
          },
          {
            "value": "JobCancelled"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointAuthKeys": {
      "description": "Keys for endpoint authentication.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointAuthMode": {
      "description": "Enum to determine endpoint authentication mode.",
      "enum": [
        "AMLToken",
        "Key",
        "AADToken"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointAuthMode",
        "modelAsString": true,
        "values": [
          {
            "value": "AMLToken"
          },
          {
            "value": "Key"
          },
          {
            "value": "AADToken"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointAuthToken": {
      "description": "Service Token",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Access token for endpoint authentication.",
          "type": "string",
          "x-nullable": true
        },
        "expiryTimeUtc": {
          "format": "int64",
          "description": "Access token expiry time (UTC).",
          "default": 0,
          "type": "integer"
        },
        "refreshAfterTimeUtc": {
          "format": "int64",
          "description": "Refresh access token after time (UTC).",
          "default": 0,
          "type": "integer"
        },
        "tokenType": {
          "description": "Access token type.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointComputeType": {
      "description": "Enum to determine endpoint compute type.",
      "enum": [
        "Managed",
        "Kubernetes",
        "AzureMLCompute"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointComputeType",
        "modelAsString": true,
        "values": [
          {
            "value": "Managed"
          },
          {
            "value": "Kubernetes"
          },
          {
            "value": "AzureMLCompute"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointDeploymentPropertiesBase": {
      "description": "Base definition for endpoint deployment.",
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "description": "Code configuration for the endpoint deployment.",
          "$ref": "#/definitions/CodeConfiguration",
          "x-nullable": true
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        },
        "environmentId": {
          "description": "ARM resource ID or AssetId of the environment specification for the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointPropertiesBase": {
      "description": "Inference Endpoint base definition",
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "authMode": {
          "description": "[Required] The authentication method for invoking the endpoint (data plane operation). Use 'Key' for key-based authentication. Use 'AMLToken' for Azure Machine Learning token-based authentication. Use 'AADToken' for Microsoft Entra token-based authentication.",
          "$ref": "#/definitions/EndpointAuthMode"
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string",
          "x-nullable": true
        },
        "keys": {
          "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.",
          "$ref": "#/definitions/EndpointAuthKeys",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true,
          "x-nullable": true
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "scoringUri": {
          "format": "uri",
          "description": "Endpoint URI.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "swaggerUri": {
          "format": "uri",
          "description": "Endpoint Swagger URI.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "EndpointProvisioningState": {
      "description": "State of endpoint provisioning.",
      "enum": [
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "EndpointScheduleAction": {
      "required": [
        "actionType",
        "endpointInvocationDefinition"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "properties": {
        "endpointInvocationDefinition": {
          "description": "[Required] Defines Schedule action definition details.\r\n<see href=\"TBD\" />",
          "type": "object",
          "example": {
            "endpoint": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/batchEndpoints/hello-pipeline",
            "inputs": {
              "create_time": "${{creation_context.trigger_time}}"
            }
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "InvokeBatchEndpoint",
      "additionalProperties": false
    },
    "EnvironmentContainer": {
      "description": "Container for environment specification versions.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the environment container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "EnvironmentContainerProperties",
      "additionalProperties": false
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentContainer"
        }
      },
      "x-ms-client-name": "EnvironmentContainer",
      "additionalProperties": false
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of EnvironmentContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type EnvironmentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentType": {
      "description": "Environment type is either user created or curated by Azure ML service",
      "enum": [
        "Curated",
        "UserCreated"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EnvironmentType",
        "modelAsString": true,
        "values": [
          {
            "value": "Curated"
          },
          {
            "value": "UserCreated"
          }
        ]
      },
      "additionalProperties": false
    },
    "EnvironmentVersion": {
      "description": "Environment version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "autoRebuild": {
          "description": "Defines if image needs to be rebuilt based on base image changes.",
          "default": "Disabled",
          "$ref": "#/definitions/AutoRebuildSetting",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "build": {
          "description": "Configuration settings for Docker build context.",
          "$ref": "#/definitions/BuildContext",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "condaFile": {
          "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentType": {
          "description": "Environment type is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "$ref": "#/definitions/EnvironmentType",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "image": {
          "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
          "type": "string",
          "example": "docker.io/tensorflow/serving:latest",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inferenceConfig": {
          "description": "Defines configuration specific to inference.",
          "$ref": "#/definitions/InferenceContainerProperties",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "osType": {
          "description": "The OS type of the environment.",
          "default": "Linux",
          "$ref": "#/definitions/OperatingSystemType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state for the environment version.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "description": "Stage in the environment lifecycle assigned to this environment",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "EnvironmentVersionProperties",
      "additionalProperties": false
    },
    "EnvironmentVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentVersion"
        }
      },
      "x-ms-client-name": "EnvironmentVersion",
      "additionalProperties": false
    },
    "EnvironmentVersionResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of EnvironmentVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type EnvironmentVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "Feature": {
      "description": "DTO object representing feature",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "dataType": {
          "description": "Specifies type",
          "default": "String",
          "$ref": "#/definitions/FeatureDataType"
        },
        "featureName": {
          "description": "Specifies name",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "FeatureProperties",
      "additionalProperties": false
    },
    "FeatureAttributionDriftMonitoringSignal": {
      "required": [
        "featureImportanceSettings",
        "metricThreshold",
        "productionData",
        "referenceData"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "properties": {
        "featureDataTypeOverride": {
          "description": "A dictionary that maps feature names to their respective data types.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "featureImportanceSettings": {
          "description": "[Required] The settings for computing feature importance.",
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThreshold": {
          "description": "[Required] A list of metrics to calculate and their associated thresholds.",
          "$ref": "#/definitions/FeatureAttributionMetricThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "productionData": {
          "description": "[Required] The data which drift will be calculated for.",
          "type": "array",
          "items": {
            "description": "Monitoring input data base definition.",
            "$ref": "#/definitions/MonitoringInputDataBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-identifiers": []
        },
        "referenceData": {
          "description": "[Required] The data to calculate drift against.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "FeatureAttributionDrift",
      "additionalProperties": false
    },
    "FeatureAttributionMetric": {
      "enum": [
        "NormalizedDiscountedCumulativeGain"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FeatureAttributionMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "NormalizedDiscountedCumulativeGain",
            "description": "The Normalized Discounted Cumulative Gain metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "FeatureAttributionMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "properties": {
        "metric": {
          "description": "[Required] The feature attribution metric to calculate.",
          "$ref": "#/definitions/FeatureAttributionMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "$ref": "#/definitions/MonitoringThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FeatureDataType": {
      "enum": [
        "String",
        "Integer",
        "Long",
        "Float",
        "Double",
        "Binary",
        "Datetime",
        "Boolean"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FeatureDataType",
        "modelAsString": true,
        "values": [
          {
            "value": "String"
          },
          {
            "value": "Integer"
          },
          {
            "value": "Long"
          },
          {
            "value": "Float"
          },
          {
            "value": "Double"
          },
          {
            "value": "Binary"
          },
          {
            "value": "Datetime"
          },
          {
            "value": "Boolean"
          }
        ]
      },
      "additionalProperties": false
    },
    "FeatureImportanceMode": {
      "description": "The mode of operation for computing feature importance.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FeatureImportanceMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled",
            "description": "Disables computing feature importance within a signal."
          },
          {
            "value": "Enabled",
            "description": "Enables computing feature importance within a signal."
          }
        ]
      },
      "additionalProperties": false
    },
    "FeatureImportanceSettings": {
      "type": "object",
      "properties": {
        "mode": {
          "description": "The mode of operation for computing feature importance.",
          "default": "Disabled",
          "$ref": "#/definitions/FeatureImportanceMode"
        },
        "targetColumn": {
          "description": "The name of the target column within the input data asset.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FeatureLags": {
      "description": "Flag for generating lags for the numeric features.",
      "enum": [
        "None",
        "Auto"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FeatureLags",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No feature lags generated."
          },
          {
            "value": "Auto",
            "description": "System auto-generates feature lags."
          }
        ]
      },
      "additionalProperties": false
    },
    "FeatureResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/Feature"
        }
      },
      "x-ms-client-name": "Feature",
      "additionalProperties": false
    },
    "FeatureResourceArmPaginatedResult": {
      "description": "A paginated list of Feature entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of Feature objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type Feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FeatureSubset": {
      "required": [
        "features",
        "filterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "properties": {
        "features": {
          "description": "[Required] The list of features to include.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "FeatureSubset",
      "additionalProperties": false
    },
    "FeatureWindow": {
      "description": "Specifies the feature window",
      "type": "object",
      "properties": {
        "featureWindowEnd": {
          "format": "date-time",
          "description": "Specifies the feature window end time",
          "type": "string",
          "x-nullable": true
        },
        "featureWindowStart": {
          "format": "date-time",
          "description": "Specifies the feature window start time",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FeaturesetContainer": {
      "description": "DTO object representing feature set",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the featureset container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "FeaturesetContainerProperties",
      "additionalProperties": false
    },
    "FeaturesetContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/FeaturesetContainer"
        }
      },
      "x-ms-client-name": "FeaturesetContainer",
      "additionalProperties": false
    },
    "FeaturesetContainerResourceArmPaginatedResult": {
      "description": "A paginated list of FeaturesetContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of FeaturesetContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type FeaturesetContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeaturesetContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FeaturesetSpecification": {
      "description": "DTO object representing specification",
      "type": "object",
      "properties": {
        "path": {
          "description": "Specifies the spec path",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FeaturesetVersion": {
      "description": "DTO object representing feature set version",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "entities": {
          "description": "Specifies list of entities",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "materializationSettings": {
          "description": "Specifies the materialization settings",
          "$ref": "#/definitions/MaterializationSettings",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the featureset version container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "specification": {
          "description": "Specifies the feature spec details",
          "$ref": "#/definitions/FeaturesetSpecification",
          "x-nullable": true
        },
        "stage": {
          "description": "Specifies the asset stage",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "FeaturesetVersionProperties",
      "additionalProperties": false
    },
    "FeaturesetVersionBackfillRequest": {
      "description": "Request payload for creating a backfill request for a given feature set version",
      "type": "object",
      "properties": {
        "dataAvailabilityStatus": {
          "description": "Specified the data availability status that you want to backfill",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataAvailabilityStatus"
          }
        },
        "description": {
          "description": "Specifies description",
          "type": "string"
        },
        "displayName": {
          "description": "Specifies description",
          "type": "string"
        },
        "featureWindow": {
          "description": "Specifies the backfill feature window to be materialized",
          "$ref": "#/definitions/FeatureWindow",
          "x-nullable": true
        },
        "jobId": {
          "description": "Specify the jobId to retry the failed materialization",
          "type": "string"
        },
        "properties": {
          "description": "Specifies the properties",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "resource": {
          "description": "Specifies the compute resource settings",
          "$ref": "#/definitions/MaterializationComputeResource"
        },
        "sparkConfiguration": {
          "description": "Specifies the spark compute settings",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "tags": {
          "description": "Specifies the tags",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "FeaturesetVersionBackfillResponse": {
      "description": "Response payload for creating a backfill request for a given feature set version",
      "type": "object",
      "properties": {
        "jobIds": {
          "description": "List of jobs submitted as part of the backfill request.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FeaturesetVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/FeaturesetVersion"
        }
      },
      "x-ms-client-name": "FeaturesetVersion",
      "additionalProperties": false
    },
    "FeaturesetVersionResourceArmPaginatedResult": {
      "description": "A paginated list of FeaturesetVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of FeaturesetVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type FeaturesetVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeaturesetVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FeaturestoreEntityContainer": {
      "description": "DTO object representing feature entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the featurestore entity container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "FeaturestoreEntityContainerProperties",
      "additionalProperties": false
    },
    "FeaturestoreEntityContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/FeaturestoreEntityContainer"
        }
      },
      "x-ms-client-name": "FeaturestoreEntityContainer",
      "additionalProperties": false
    },
    "FeaturestoreEntityContainerResourceArmPaginatedResult": {
      "description": "A paginated list of FeaturestoreEntityContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of FeaturestoreEntityContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type FeaturestoreEntityContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FeaturestoreEntityVersion": {
      "description": "DTO object representing feature entity version",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "indexColumns": {
          "description": "Specifies index columns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndexColumn"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state for the featurestore entity version.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "description": "Specifies the asset stage",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "FeaturestoreEntityVersionProperties",
      "additionalProperties": false
    },
    "FeaturestoreEntityVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/FeaturestoreEntityVersion"
        }
      },
      "x-ms-client-name": "FeaturestoreEntityVersion",
      "additionalProperties": false
    },
    "FeaturestoreEntityVersionResourceArmPaginatedResult": {
      "description": "A paginated list of FeaturestoreEntityVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of FeaturestoreEntityVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type FeaturestoreEntityVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "FeaturizationMode": {
      "description": "Featurization mode - determines data featurization mode.",
      "enum": [
        "Auto",
        "Custom",
        "Off"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FeaturizationMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Auto mode, system performs featurization without any custom featurization inputs."
          },
          {
            "value": "Custom",
            "description": "Custom featurization."
          },
          {
            "value": "Off",
            "description": "Featurization off. 'Forecasting' task cannot use this value."
          }
        ]
      },
      "additionalProperties": false
    },
    "FeaturizationSettings": {
      "description": "Featurization Configuration.",
      "type": "object",
      "properties": {
        "datasetLanguage": {
          "description": "Dataset language, useful for the text data.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "FixedInputData": {
      "description": "Fixed input data definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "x-ms-discriminator-value": "Fixed",
      "additionalProperties": false
    },
    "FlavorData": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Model flavor-specific data.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ForecastHorizon": {
      "description": "The desired maximum forecast horizon in units of time-series frequency.",
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "[Required] Set forecast horizon value selection mode.",
          "$ref": "#/definitions/ForecastHorizonMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode"
    },
    "ForecastHorizonMode": {
      "description": "Enum to determine forecast horizon selection mode.",
      "enum": [
        "Auto",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ForecastHorizonMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Forecast horizon to be determined automatically."
          },
          {
            "value": "Custom",
            "description": "Use the custom forecast horizon."
          }
        ]
      },
      "additionalProperties": false
    },
    "Forecasting": {
      "description": "Forecasting task in AutoML Table vertical.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "forecastingSettings": {
          "description": "Forecasting task specific inputs.",
          "$ref": "#/definitions/ForecastingSettings",
          "x-nullable": true
        },
        "primaryMetric": {
          "description": "Primary metric for forecasting task.",
          "default": "NormalizedRootMeanSquaredError",
          "$ref": "#/definitions/ForecastingPrimaryMetrics"
        },
        "trainingSettings": {
          "description": "Inputs for training phase for an AutoML Job.",
          "$ref": "#/definitions/ForecastingTrainingSettings",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Forecasting",
      "additionalProperties": false
    },
    "ForecastingModels": {
      "description": "Enum for all forecasting models supported by AutoML.",
      "enum": [
        "AutoArima",
        "Prophet",
        "Naive",
        "SeasonalNaive",
        "Average",
        "SeasonalAverage",
        "ExponentialSmoothing",
        "Arimax",
        "TCNForecaster",
        "ElasticNet",
        "GradientBoosting",
        "DecisionTree",
        "KNN",
        "LassoLars",
        "SGD",
        "RandomForest",
        "ExtremeRandomTrees",
        "LightGBM",
        "XGBoostRegressor"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ForecastingModels",
        "modelAsString": true,
        "values": [
          {
            "value": "AutoArima",
            "description": "Auto-Autoregressive Integrated Moving Average (ARIMA) model uses time-series data and statistical analysis to interpret the data and make future predictions.\nThis model aims to explain data by using time series data on its past values and uses linear regression to make predictions."
          },
          {
            "value": "Prophet",
            "description": "Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects.\nIt works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well."
          },
          {
            "value": "Naive",
            "description": "The Naive forecasting model makes predictions by carrying forward the latest target value for each time-series in the training data."
          },
          {
            "value": "SeasonalNaive",
            "description": "The Seasonal Naive forecasting model makes predictions by carrying forward the latest season of target values for each time-series in the training data."
          },
          {
            "value": "Average",
            "description": "The Average forecasting model makes predictions by carrying forward the average of the target values for each time-series in the training data."
          },
          {
            "value": "SeasonalAverage",
            "description": "The Seasonal Average forecasting model makes predictions by carrying forward the average value of the latest season of data for each time-series in the training data."
          },
          {
            "value": "ExponentialSmoothing",
            "description": "Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component."
          },
          {
            "value": "Arimax",
            "description": "An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and/or one or more moving average (MA) terms.\nThis method is suitable for forecasting when data is stationary/non stationary, and multivariate with any type of data pattern, i.e., level/trend /seasonality/cyclicity."
          },
          {
            "value": "TCNForecaster",
            "description": "TCNForecaster: Temporal Convolutional Networks Forecaster. //TODO: Ask forecasting team for brief intro."
          },
          {
            "value": "ElasticNet",
            "description": "Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions."
          },
          {
            "value": "GradientBoosting",
            "description": "The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution."
          },
          {
            "value": "DecisionTree",
            "description": "Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\nThe goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features."
          },
          {
            "value": "KNN",
            "description": "K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\nwhich further means that the new data point will be assigned a value based on how closely it matches the points in the training set."
          },
          {
            "value": "LassoLars",
            "description": "Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer."
          },
          {
            "value": "SGD",
            "description": "SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\nto find the model parameters that correspond to the best fit between predicted and actual outputs.\nIt's an inexact but powerful technique."
          },
          {
            "value": "RandomForest",
            "description": "Random forest is a supervised learning algorithm.\nThe \"forest\" it builds, is an ensemble of decision trees, usually trained with the \"bagging\" method.\nThe general idea of the bagging method is that a combination of learning models increases the overall result."
          },
          {
            "value": "ExtremeRandomTrees",
            "description": "Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm."
          },
          {
            "value": "LightGBM",
            "description": "LightGBM is a gradient boosting framework that uses tree based learning algorithms."
          },
          {
            "value": "XGBoostRegressor",
            "description": "XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners."
          }
        ]
      },
      "additionalProperties": false
    },
    "ForecastingPrimaryMetrics": {
      "description": "Primary metrics for Forecasting task.",
      "enum": [
        "SpearmanCorrelation",
        "NormalizedRootMeanSquaredError",
        "R2Score",
        "NormalizedMeanAbsoluteError"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ForecastingPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "SpearmanCorrelation",
            "description": "The Spearman's rank coefficient of correlation is a non-parametric measure of rank correlation."
          },
          {
            "value": "NormalizedRootMeanSquaredError",
            "description": "The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales."
          },
          {
            "value": "R2Score",
            "description": "The R2 score is one of the performance evaluation measures for forecasting-based machine learning models."
          },
          {
            "value": "NormalizedMeanAbsoluteError",
            "description": "The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales."
          }
        ]
      },
      "additionalProperties": false
    },
    "ForecastingSettings": {
      "description": "Forecasting specific parameters.",
      "type": "object",
      "properties": {
        "countryOrRegionForHolidays": {
          "description": "Country or region for holidays for forecasting tasks.\r\nThese should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'.",
          "type": "string",
          "x-nullable": true
        },
        "cvStepSize": {
          "format": "int32",
          "description": "Number of periods between the origin time of one CV fold and the next fold. For\r\nexample, if `CVStepSize` = 3 for daily data, the origin time for each fold will be\r\nthree days apart.",
          "type": "integer",
          "x-nullable": true
        },
        "featureLags": {
          "description": "Flag for generating lags for the numeric features with 'auto' or null.",
          "default": "None",
          "$ref": "#/definitions/FeatureLags"
        },
        "forecastHorizon": {
          "description": "The desired maximum forecast horizon in units of time-series frequency.",
          "default": "{\"Mode\": \"Custom\", \"Value\": 1}",
          "$ref": "#/definitions/ForecastHorizon"
        },
        "frequency": {
          "description": "When forecasting, this parameter represents the period with which the forecast is desired, for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency by default.",
          "type": "string",
          "x-nullable": true
        },
        "seasonality": {
          "description": "Set time series seasonality as an integer multiple of the series frequency.\r\nIf seasonality is set to 'auto', it will be inferred.",
          "default": "{\"Mode\": \"Auto\"}",
          "$ref": "#/definitions/Seasonality"
        },
        "shortSeriesHandlingConfig": {
          "description": "The parameter defining how if AutoML should handle short time series.",
          "default": "Auto",
          "$ref": "#/definitions/ShortSeriesHandlingConfiguration"
        },
        "targetAggregateFunction": {
          "description": "The function to be used to aggregate the time series target column to conform to a user specified frequency.\r\nIf the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: \"sum\", \"max\", \"min\" and \"mean\".",
          "default": "None",
          "$ref": "#/definitions/TargetAggregationFunction"
        },
        "targetLags": {
          "description": "The number of past periods to lag from the target column.",
          "$ref": "#/definitions/TargetLags",
          "x-nullable": true
        },
        "targetRollingWindowSize": {
          "description": "The number of past periods used to create a rolling window average of the target column.",
          "$ref": "#/definitions/TargetRollingWindowSize",
          "x-nullable": true
        },
        "timeColumnName": {
          "description": "The name of the time column. This parameter is required when forecasting to specify the datetime column in the input data used for building the time series and inferring its frequency.",
          "type": "string",
          "x-nullable": true
        },
        "timeSeriesIdColumnNames": {
          "description": "The names of columns used to group a timeseries. It can be used to create multiple series.\r\nIf grain is not defined, the data set is assumed to be one time-series. This parameter is used with task type forecasting.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "useStl": {
          "description": "Configure STL Decomposition of the time-series target column.",
          "default": "None",
          "$ref": "#/definitions/UseStl"
        }
      },
      "additionalProperties": false
    },
    "ForecastingTrainingSettings": {
      "description": "Forecasting Training related configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ],
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for forecasting task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForecastingModels"
          },
          "x-nullable": true
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for forecasting task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForecastingModels"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "GetBlobReferenceForConsumptionDto": {
      "type": "object",
      "properties": {
        "blobUri": {
          "format": "uri",
          "description": "Blob uri, example: https://blob.windows.core.net/Container/Path",
          "type": "string",
          "x-nullable": true
        },
        "credential": {
          "description": "Credential info to access storage account",
          "$ref": "#/definitions/DataReferenceCredential",
          "x-nullable": true
        },
        "storageAccountArmId": {
          "description": "The ARM id of the storage account",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "GetBlobReferenceSASRequestDto": {
      "description": "BlobReferenceSASRequest for getBlobReferenceSAS API",
      "type": "object",
      "properties": {
        "assetId": {
          "description": "Id of the asset to be accessed",
          "type": "string",
          "x-nullable": true
        },
        "blobUri": {
          "format": "uri",
          "description": "Blob uri of the asset to be accessed",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "GetBlobReferenceSASResponseDto": {
      "description": "BlobReferenceSASResponse for getBlobReferenceSAS API",
      "type": "object",
      "properties": {
        "blobReferenceForConsumption": {
          "description": "Blob reference for consumption details",
          "$ref": "#/definitions/GetBlobReferenceForConsumptionDto",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "Goal": {
      "description": "Defines supported metric goals for hyperparameter tuning",
      "enum": [
        "Minimize",
        "Maximize"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "Goal",
        "modelAsString": true,
        "values": [
          {
            "value": "Minimize"
          },
          {
            "value": "Maximize"
          }
        ]
      },
      "additionalProperties": false
    },
    "GridSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that exhaustively generates every value combination in the space",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Grid",
      "additionalProperties": false
    },
    "IdAssetReference": {
      "description": "Reference to an asset via its ARM resource ID.",
      "required": [
        "assetId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "assetId": {
          "description": "[Required] ARM resource ID of the asset.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Id",
      "additionalProperties": false
    },
    "IdentityConfiguration": {
      "description": "Base definition for identity configuration.",
      "required": [
        "identityType"
      ],
      "type": "object",
      "properties": {
        "identityType": {
          "description": "[Required] Specifies the type of identity framework.",
          "$ref": "#/definitions/IdentityConfigurationType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType"
    },
    "IdentityConfigurationType": {
      "description": "Enum to determine identity framework.",
      "enum": [
        "Managed",
        "AMLToken",
        "UserIdentity"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IdentityConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "value": "Managed"
          },
          {
            "value": "AMLToken"
          },
          {
            "value": "UserIdentity"
          }
        ]
      },
      "additionalProperties": false
    },
    "ImageClassification": {
      "description": "Image Classification. Multi-class image classification is used when an image is classified with only a single label\r\nfrom a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageClassificationBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric to optimize for this task.",
          "default": "Accuracy",
          "$ref": "#/definitions/ClassificationPrimaryMetrics"
        }
      },
      "x-ms-discriminator-value": "ImageClassification",
      "additionalProperties": false
    },
    "ImageClassificationBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageVertical"
        }
      ],
      "properties": {
        "modelSettings": {
          "description": "Settings used for training the model.",
          "$ref": "#/definitions/ImageModelSettingsClassification",
          "x-nullable": true
        },
        "searchSpace": {
          "description": "Search space for sampling different combinations of models and their hyperparameters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageModelDistributionSettingsClassification"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "ImageClassificationMultilabel": {
      "description": "Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\r\nfrom a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageClassificationBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric to optimize for this task.",
          "default": "IOU",
          "$ref": "#/definitions/ClassificationMultilabelPrimaryMetrics"
        }
      },
      "x-ms-discriminator-value": "ImageClassificationMultilabel",
      "additionalProperties": false
    },
    "ImageInstanceSegmentation": {
      "description": "Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\r\ndrawing a polygon around each object in the image.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageObjectDetectionBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric to optimize for this task.",
          "default": "MeanAveragePrecision",
          "$ref": "#/definitions/InstanceSegmentationPrimaryMetrics"
        }
      },
      "x-ms-discriminator-value": "ImageInstanceSegmentation",
      "additionalProperties": false
    },
    "ImageLimitSettings": {
      "description": "Limit settings for the AutoML job.",
      "type": "object",
      "properties": {
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Maximum number of concurrent AutoML iterations.",
          "default": 1,
          "type": "integer"
        },
        "maxTrials": {
          "format": "int32",
          "description": "Maximum number of AutoML iterations.",
          "default": 1,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "AutoML job timeout.",
          "default": "P7D",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ImageModelDistributionSettings": {
      "description": "Distribution expressions to sweep over values of model settings.\r\n<example>\r\nSome examples are:\r\n```\r\nModelName = \"choice('seresnext', 'resnest50')\";\r\nLearningRate = \"uniform(0.001, 0.01)\";\r\nLayersToFreeze = \"choice(0, 2)\";\r\n```</example>\r\nAll distributions can be specified as distribution_name(min, max) or choice(val1, val2, ..., valn)\r\nwhere distribution name can be: uniform, quniform, loguniform, etc\r\nFor more details on how to compose distribution expressions please check the documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "properties": {
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string",
          "example": "choice('hflip;mosaic;random_crop', 'mosaic')",
          "x-nullable": true
        },
        "beta1": {
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0, 1)",
          "x-nullable": true
        },
        "beta2": {
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0, 1)",
          "x-nullable": true
        },
        "distributed": {
          "description": "Whether to use distributer training.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "earlyStoppingDelay": {
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 5)",
          "x-nullable": true
        },
        "earlyStoppingPatience": {
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 5)",
          "x-nullable": true
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "evaluationFrequency": {
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 5)",
          "x-nullable": true
        },
        "gradientAccumulationStep": {
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 5)",
          "x-nullable": true
        },
        "layersToFreeze": {
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string",
          "example": "choice(1, 2)",
          "x-nullable": true
        },
        "learningRate": {
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0.0005, 0.005)",
          "x-nullable": true
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "type": "string",
          "example": "choice('warmup_cosine', 'step')",
          "x-nullable": true
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string",
          "example": "choice('seresnext', 'resnest50')",
          "x-nullable": true
        },
        "momentum": {
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "quniform(0, 1)",
          "x-nullable": true
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "numberOfEpochs": {
          "description": "Number of training epochs. Must be a positive integer.",
          "type": "string",
          "example": "choice(15, 30)",
          "x-nullable": true
        },
        "numberOfWorkers": {
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "type": "string",
          "example": "uniform(8, 16)",
          "x-nullable": true
        },
        "optimizer": {
          "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.",
          "type": "string",
          "example": "choice('sgd', 'adam', 'adamw')",
          "x-nullable": true
        },
        "randomSeed": {
          "description": "Random seed to be used when using deterministic training.",
          "type": "string",
          "example": "loguniform(0, 1)",
          "x-nullable": true
        },
        "stepLRGamma": {
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "choice(0.1, 0.2, 0.25)",
          "x-nullable": true
        },
        "stepLRStepSize": {
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 2, 3)",
          "x-nullable": true
        },
        "trainingBatchSize": {
          "description": "Training batch size. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 2, 3)",
          "x-nullable": true
        },
        "validationBatchSize": {
          "description": "Validation batch size. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 2, 3)",
          "x-nullable": true
        },
        "warmupCosineLRCycles": {
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0, 1)",
          "x-nullable": true
        },
        "warmupCosineLRWarmupEpochs": {
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "type": "string",
          "example": "choice(1, 2, 3)",
          "x-nullable": true
        },
        "weightDecay": {
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "type": "string",
          "example": "uniform(0, 1)",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ImageModelDistributionSettingsClassification": {
      "description": "Distribution expressions to sweep over values of model settings.\r\n<example>\r\nSome examples are:\r\n```\r\nModelName = \"choice('seresnext', 'resnest50')\";\r\nLearningRate = \"uniform(0.001, 0.01)\";\r\nLayersToFreeze = \"choice(0, 2)\";\r\n```</example>\r\nFor more details on how to compose distribution expressions please check the documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelDistributionSettings"
        }
      ],
      "properties": {
        "trainingCropSize": {
          "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
          "type": "string",
          "example": "choice(224, 360)",
          "x-nullable": true
        },
        "validationCropSize": {
          "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
          "type": "string",
          "example": "choice(224, 360)",
          "x-nullable": true
        },
        "validationResizeSize": {
          "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
          "type": "string",
          "example": "choice(128, 256)",
          "x-nullable": true
        },
        "weightedLoss": {
          "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
          "type": "string",
          "example": "choice(0, 1, 2)",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ImageModelDistributionSettingsObjectDetection": {
      "description": "Distribution expressions to sweep over values of model settings.\r\n<example>\r\nSome examples are:\r\n```\r\nModelName = \"choice('seresnext', 'resnest50')\";\r\nLearningRate = \"uniform(0.001, 0.01)\";\r\nLayersToFreeze = \"choice(0, 2)\";\r\n```</example>\r\nFor more details on how to compose distribution expressions please check the documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelDistributionSettings"
        }
      ],
      "properties": {
        "boxDetectionsPerImage": {
          "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice(50, 100)",
          "x-nullable": true
        },
        "boxScoreThreshold": {
          "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1].",
          "type": "string",
          "example": "uniform(0.1, 0.2)",
          "x-nullable": true
        },
        "imageSize": {
          "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice(224, 640)",
          "x-nullable": true
        },
        "maxSize": {
          "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice(640, 1333)",
          "x-nullable": true
        },
        "minSize": {
          "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice(300, 600)",
          "x-nullable": true
        },
        "modelSize": {
          "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice('small', 'medium', 'large', 'xlarge')",
          "x-nullable": true
        },
        "multiScale": {
          "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice(true, false)",
          "x-nullable": true
        },
        "nmsIouThreshold": {
          "description": "IOU threshold used during inference in NMS post processing. Must be float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0.1, 0.2)",
          "x-nullable": true
        },
        "tileGridSize": {
          "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "choice('3x2', '2x2')",
          "x-nullable": true
        },
        "tileOverlapRatio": {
          "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "uniform(0.1, 0.2)",
          "x-nullable": true
        },
        "tilePredictionsNmsThreshold": {
          "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.\r\nNMS: Non-maximum suppression",
          "type": "string",
          "example": "uniform(0.2, 0.3)",
          "x-nullable": true
        },
        "validationIouThreshold": {
          "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1].",
          "type": "string",
          "example": "uniform(0.2, 0.3)",
          "x-nullable": true
        },
        "validationMetricType": {
          "description": "Metric computation method to use for validation metrics. Must be 'none', 'coco', 'voc', or 'coco_voc'.",
          "type": "string",
          "example": "choice('none', 'coco', 'voc', 'coco_voc')",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ImageModelSettings": {
      "description": "Settings used for training the model.\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "properties": {
        "advancedSettings": {
          "description": "Settings for advanced scenarios.",
          "type": "string",
          "example": "key1:val1;key2;key3:val3;key4",
          "x-nullable": true
        },
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "type": "boolean",
          "x-nullable": true
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string",
          "example": "hflip;mosaic;random_crop",
          "x-nullable": true
        },
        "beta1": {
          "format": "float",
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "beta2": {
          "format": "float",
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "checkpointFrequency": {
          "format": "int32",
          "description": "Frequency to store model checkpoints. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "checkpointModel": {
          "description": "The pretrained checkpoint model for incremental training.",
          "$ref": "#/definitions/MLFlowModelJobInput",
          "x-nullable": true
        },
        "checkpointRunId": {
          "description": "The id of a previous run that has a pretrained checkpoint for incremental training.",
          "type": "string",
          "x-nullable": true
        },
        "distributed": {
          "description": "Whether to use distributed training.",
          "type": "boolean",
          "x-nullable": true
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "type": "boolean",
          "x-nullable": true
        },
        "earlyStoppingDelay": {
          "format": "int32",
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "earlyStoppingPatience": {
          "format": "int32",
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "type": "boolean",
          "x-nullable": true
        },
        "evaluationFrequency": {
          "format": "int32",
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "gradientAccumulationStep": {
          "format": "int32",
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "layersToFreeze": {
          "format": "int32",
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "integer",
          "x-nullable": true
        },
        "learningRate": {
          "format": "float",
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "default": "None",
          "$ref": "#/definitions/LearningRateScheduler"
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string",
          "x-nullable": true
        },
        "momentum": {
          "format": "float",
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "type": "boolean",
          "x-nullable": true
        },
        "numberOfEpochs": {
          "format": "int32",
          "description": "Number of training epochs. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "numberOfWorkers": {
          "format": "int32",
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "type": "integer",
          "x-nullable": true
        },
        "optimizer": {
          "description": "Type of optimizer.",
          "default": "None",
          "$ref": "#/definitions/StochasticOptimizer"
        },
        "randomSeed": {
          "format": "int32",
          "description": "Random seed to be used when using deterministic training.",
          "type": "integer",
          "x-nullable": true
        },
        "stepLRGamma": {
          "format": "float",
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "stepLRStepSize": {
          "format": "int32",
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "trainingBatchSize": {
          "format": "int32",
          "description": "Training batch size. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "validationBatchSize": {
          "format": "int32",
          "description": "Validation batch size. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "warmupCosineLRCycles": {
          "format": "float",
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "warmupCosineLRWarmupEpochs": {
          "format": "int32",
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "weightDecay": {
          "format": "float",
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "type": "number",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ImageModelSettingsClassification": {
      "description": "Settings used for training the model.\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelSettings"
        }
      ],
      "properties": {
        "trainingCropSize": {
          "format": "int32",
          "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "validationCropSize": {
          "format": "int32",
          "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "validationResizeSize": {
          "format": "int32",
          "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
          "type": "integer",
          "x-nullable": true
        },
        "weightedLoss": {
          "format": "int32",
          "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ImageModelSettingsObjectDetection": {
      "description": "Settings used for training the model.\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelSettings"
        }
      ],
      "properties": {
        "boxDetectionsPerImage": {
          "format": "int32",
          "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "integer",
          "x-nullable": true
        },
        "boxScoreThreshold": {
          "format": "float",
          "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "imageSize": {
          "format": "int32",
          "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "integer",
          "x-nullable": true
        },
        "maxSize": {
          "format": "int32",
          "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "integer",
          "x-nullable": true
        },
        "minSize": {
          "format": "int32",
          "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "integer",
          "x-nullable": true
        },
        "modelSize": {
          "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "default": "None",
          "$ref": "#/definitions/ModelSize"
        },
        "multiScale": {
          "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "boolean",
          "x-nullable": true
        },
        "nmsIouThreshold": {
          "format": "float",
          "description": "IOU threshold used during inference in NMS post processing. Must be a float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "tileGridSize": {
          "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string",
          "example": "3x2",
          "x-nullable": true
        },
        "tileOverlapRatio": {
          "format": "float",
          "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "number",
          "x-nullable": true
        },
        "tilePredictionsNmsThreshold": {
          "format": "float",
          "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "number",
          "x-nullable": true
        },
        "validationIouThreshold": {
          "format": "float",
          "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1].",
          "type": "number",
          "x-nullable": true
        },
        "validationMetricType": {
          "description": "Metric computation method to use for validation metrics.",
          "default": "None",
          "$ref": "#/definitions/ValidationMetricType"
        }
      },
      "additionalProperties": false
    },
    "ImageObjectDetection": {
      "description": "Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\r\nbounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageObjectDetectionBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric to optimize for this task.",
          "default": "MeanAveragePrecision",
          "$ref": "#/definitions/ObjectDetectionPrimaryMetrics"
        }
      },
      "x-ms-discriminator-value": "ImageObjectDetection",
      "additionalProperties": false
    },
    "ImageObjectDetectionBase": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageVertical"
        }
      ],
      "properties": {
        "modelSettings": {
          "description": "Settings used for training the model.",
          "$ref": "#/definitions/ImageModelSettingsObjectDetection",
          "x-nullable": true
        },
        "searchSpace": {
          "description": "Search space for sampling different combinations of models and their hyperparameters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetection"
          },
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "ImageSweepSettings": {
      "description": "Model sweeping and hyperparameter sweeping related settings.",
      "required": [
        "samplingAlgorithm"
      ],
      "type": "object",
      "properties": {
        "earlyTermination": {
          "description": "Type of early termination policy.",
          "$ref": "#/definitions/EarlyTerminationPolicy",
          "x-nullable": true
        },
        "samplingAlgorithm": {
          "description": "[Required] Type of the hyperparameter sampling algorithms.",
          "$ref": "#/definitions/SamplingAlgorithmType"
        }
      },
      "additionalProperties": false
    },
    "ImageVertical": {
      "description": "Abstract class for AutoML tasks that train image (computer vision) models -\r\nsuch as Image Classification / Image Classification Multilabel / Image Object Detection / Image Instance Segmentation.",
      "required": [
        "limitSettings"
      ],
      "type": "object",
      "properties": {
        "limitSettings": {
          "description": "[Required] Limit settings for the AutoML job.",
          "$ref": "#/definitions/ImageLimitSettings"
        },
        "sweepSettings": {
          "description": "Model sweeping and hyperparameter sweeping related settings.",
          "$ref": "#/definitions/ImageSweepSettings",
          "x-nullable": true
        },
        "validationData": {
          "description": "Validation data inputs.",
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "validationDataSize": {
          "format": "double",
          "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
          "type": "number",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "IndexColumn": {
      "description": "DTO object representing index column",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Specifies the column name",
          "type": "string",
          "x-nullable": true
        },
        "dataType": {
          "description": "Specifies the data type",
          "default": "String",
          "$ref": "#/definitions/FeatureDataType"
        }
      },
      "additionalProperties": false
    },
    "InferenceContainerProperties": {
      "type": "object",
      "properties": {
        "livenessRoute": {
          "description": "The route to check the liveness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "readinessRoute": {
          "description": "The route to check the readiness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "startupRoute": {
          "description": "The route to check the startup of the application in the container.",
          "$ref": "#/definitions/Route",
          "x-nullable": true
        },
        "scoringRoute": {
          "description": "The port to send the scoring requests to, within the inference server container.",
          "$ref": "#/definitions/Route"
        }
      },
      "additionalProperties": false
    },
    "InputDeliveryMode": {
      "description": "Enum to determine the input data delivery mode.",
      "enum": [
        "ReadOnlyMount",
        "ReadWriteMount",
        "Download",
        "Direct",
        "EvalMount",
        "EvalDownload"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InputDeliveryMode",
        "modelAsString": true,
        "values": [
          {
            "value": "ReadOnlyMount"
          },
          {
            "value": "ReadWriteMount"
          },
          {
            "value": "Download"
          },
          {
            "value": "Direct"
          },
          {
            "value": "EvalMount"
          },
          {
            "value": "EvalDownload"
          }
        ]
      },
      "additionalProperties": false
    },
    "InstanceSegmentationPrimaryMetrics": {
      "description": "Primary metrics for InstanceSegmentation tasks.",
      "enum": [
        "MeanAveragePrecision"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InstanceSegmentationPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "MeanAveragePrecision",
            "description": "Mean Average Precision (MAP) is the average of AP (Average Precision).\nAP is calculated for each class and averaged to get the MAP."
          }
        ]
      },
      "additionalProperties": false
    },
    "JobBase": {
      "description": "Base definition for a job.",
      "required": [
        "jobType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "componentId": {
          "description": "ARM resource ID of the component resource.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "computeId": {
          "description": "ARM resource ID of the compute resource.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "displayName": {
          "description": "Display name of job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "experimentName": {
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "default": "Default",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null.",
          "$ref": "#/definitions/IdentityConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "default": false,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "jobType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "notificationSetting": {
          "description": "Notification setting for the job",
          "$ref": "#/definitions/NotificationSetting",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ],
          "x-nullable": true
        },
        "services": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobService",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "jobType",
      "x-ms-client-name": "JobBaseProperties"
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/JobBase"
        }
      },
      "x-ms-client-name": "JobBase",
      "additionalProperties": false
    },
    "JobBaseResourceArmPaginatedResult": {
      "description": "A paginated list of JobBase entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of JobBase objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type JobBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        }
      },
      "additionalProperties": false
    },
    "JobInput": {
      "description": "Command job definition.",
      "required": [
        "jobInputType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the input.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobInputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobInputType"
    },
    "JobInputType": {
      "description": "Enum to determine the Job Input Type.",
      "enum": [
        "literal",
        "uri_file",
        "uri_folder",
        "mltable",
        "custom_model",
        "mlflow_model",
        "triton_model"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobInputType",
        "modelAsString": true,
        "values": [
          {
            "value": "literal"
          },
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          },
          {
            "value": "custom_model"
          },
          {
            "value": "mlflow_model"
          },
          {
            "value": "triton_model"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobLimits": {
      "required": [
        "jobLimitsType"
      ],
      "type": "object",
      "properties": {
        "jobLimitsType": {
          "description": "[Required] JobLimit type.",
          "$ref": "#/definitions/JobLimitsType"
        },
        "timeout": {
          "format": "duration",
          "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
          "type": "string",
          "x-nullable": true
        }
      },
      "discriminator": "jobLimitsType"
    },
    "JobLimitsType": {
      "enum": [
        "Command",
        "Sweep"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobLimitsType",
        "modelAsString": true,
        "values": [
          {
            "value": "Command"
          },
          {
            "value": "Sweep"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobOutput": {
      "description": "Job output definition container information on where to find job output/logs.",
      "required": [
        "jobOutputType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the output.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobOutputType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobOutputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobOutputType"
    },
    "JobOutputType": {
      "description": "Enum to determine the Job Output Type.",
      "enum": [
        "uri_file",
        "uri_folder",
        "mltable",
        "custom_model",
        "mlflow_model",
        "triton_model"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobOutputType",
        "modelAsString": true,
        "values": [
          {
            "value": "uri_file"
          },
          {
            "value": "uri_folder"
          },
          {
            "value": "mltable"
          },
          {
            "value": "custom_model"
          },
          {
            "value": "mlflow_model"
          },
          {
            "value": "triton_model"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobResourceConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceConfiguration"
        }
      ],
      "properties": {
        "dockerArgs": {
          "description": "Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "shmSize": {
          "description": "Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).",
          "default": "2g",
          "pattern": "\\d+[bBkKmMgG]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "JobScheduleAction": {
      "required": [
        "actionType",
        "jobDefinition"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "properties": {
        "jobDefinition": {
          "description": "[Required] Defines Schedule action definition details.",
          "$ref": "#/definitions/JobBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "CreateJob",
      "additionalProperties": false
    },
    "JobService": {
      "description": "Job endpoint definition",
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "Url for endpoint.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "errorMessage": {
          "description": "Any error in the service.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "jobServiceType": {
          "description": "Endpoint type.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "nodes": {
          "description": "Nodes that user would like to start the service on.\r\nIf Nodes is not set or set to null, the service will only be started on leader node.",
          "$ref": "#/definitions/Nodes",
          "x-nullable": true
        },
        "port": {
          "format": "int32",
          "description": "Port for endpoint.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "properties": {
          "description": "Additional properties to set on the endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of endpoint.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "JobStatus": {
      "description": "The status of a job.",
      "enum": [
        "NotStarted",
        "Starting",
        "Provisioning",
        "Preparing",
        "Queued",
        "Running",
        "Finalizing",
        "CancelRequested",
        "Completed",
        "Failed",
        "Canceled",
        "NotResponding",
        "Paused",
        "Unknown"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "NotStarted",
            "description": "Run hasn't started yet."
          },
          {
            "value": "Starting",
            "description": "Run has started. The user has a run ID."
          },
          {
            "value": "Provisioning",
            "description": "(Not used currently) It will be used if ES is creating the compute target."
          },
          {
            "value": "Preparing",
            "description": "The run environment is being prepared."
          },
          {
            "value": "Queued",
            "description": "The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required nodes to be ready."
          },
          {
            "value": "Running",
            "description": "The job started to run in the compute target."
          },
          {
            "value": "Finalizing",
            "description": "Job is completed in the target. It is in output collection state now."
          },
          {
            "value": "CancelRequested",
            "description": "Cancellation has been requested for the job."
          },
          {
            "value": "Completed",
            "description": "Job completed successfully. This reflects that both the job itself and output collection states completed successfully"
          },
          {
            "value": "Failed",
            "description": "Job failed."
          },
          {
            "value": "Canceled",
            "description": "Following cancellation request, the job is now successfully canceled."
          },
          {
            "value": "NotResponding",
            "description": "When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding state.\nNotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of the previous states."
          },
          {
            "value": "Paused",
            "description": "The job is paused by users. Some adjustment to labeling jobs can be made only in paused state."
          },
          {
            "value": "Unknown",
            "description": "Default job status if not mapped to all other statuses"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobTier": {
      "description": "Enum to determine the job tier.",
      "enum": [
        "Null",
        "Spot",
        "Basic",
        "Standard",
        "Premium"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobTier",
        "modelAsString": true,
        "values": [
          {
            "value": "Null"
          },
          {
            "value": "Spot"
          },
          {
            "value": "Basic"
          },
          {
            "value": "Standard"
          },
          {
            "value": "Premium"
          }
        ]
      },
      "additionalProperties": false
    },
    "JobType": {
      "description": "Enum to determine the type of job.",
      "enum": [
        "AutoML",
        "Command",
        "Sweep",
        "Pipeline",
        "Spark"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true,
        "values": [
          {
            "value": "AutoML"
          },
          {
            "value": "Command"
          },
          {
            "value": "Sweep"
          },
          {
            "value": "Pipeline"
          },
          {
            "value": "Spark"
          }
        ]
      },
      "additionalProperties": false
    },
    "KeyType": {
      "enum": [
        "Primary",
        "Secondary"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "value": "Primary"
          },
          {
            "value": "Secondary"
          }
        ]
      },
      "additionalProperties": false
    },
    "KubernetesOnlineDeployment": {
      "description": "Properties specific to a KubernetesOnlineDeployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "properties": {
        "containerResourceRequirements": {
          "description": "The resource requirements for the container (cpu and memory).",
          "$ref": "#/definitions/ContainerResourceRequirements",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Kubernetes",
      "additionalProperties": false
    },
    "LakeHouseArtifact": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OneLakeArtifact"
        }
      ],
      "x-ms-discriminator-value": "LakeHouse",
      "additionalProperties": false
    },
    "LearningRateScheduler": {
      "description": "Learning rate scheduler enum.",
      "enum": [
        "None",
        "WarmupCosine",
        "Step"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "LearningRateScheduler",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No learning rate scheduler selected."
          },
          {
            "value": "WarmupCosine",
            "description": "Cosine Annealing With Warmup."
          },
          {
            "value": "Step",
            "description": "Step learning rate scheduler."
          }
        ]
      },
      "additionalProperties": false
    },
    "ListViewType": {
      "enum": [
        "ActiveOnly",
        "ArchivedOnly",
        "All"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ListViewType",
        "modelAsString": true,
        "values": [
          {
            "value": "ActiveOnly"
          },
          {
            "value": "ArchivedOnly"
          },
          {
            "value": "All"
          }
        ]
      },
      "additionalProperties": false
    },
    "LiteralJobInput": {
      "description": "Literal input type.",
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "value": {
          "description": "[Required] Literal value for the input.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "literal",
      "additionalProperties": false
    },
    "LogVerbosity": {
      "description": "Enum for setting log verbosity.",
      "enum": [
        "NotSet",
        "Debug",
        "Info",
        "Warning",
        "Error",
        "Critical"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "LogVerbosity",
        "modelAsString": true,
        "values": [
          {
            "value": "NotSet",
            "description": "No logs emitted."
          },
          {
            "value": "Debug",
            "description": "Debug and above log statements logged."
          },
          {
            "value": "Info",
            "description": "Info and above log statements logged."
          },
          {
            "value": "Warning",
            "description": "Warning and above log statements logged."
          },
          {
            "value": "Error",
            "description": "Error and above log statements logged."
          },
          {
            "value": "Critical",
            "description": "Only critical statements logged."
          }
        ]
      },
      "additionalProperties": false
    },
    "MLFlowModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model",
      "additionalProperties": false
    },
    "MLFlowModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model",
      "additionalProperties": false
    },
    "MLTableData": {
      "description": "MLTable data definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "properties": {
        "referencedUris": {
          "description": "Uris referenced in the MLTable definition (required for lineage)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "MLTableJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "MLTableJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mltable",
      "additionalProperties": false
    },
    "ManagedComputeIdentity": {
      "description": "Managed compute identity definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeIdentityBase"
        }
      ],
      "properties": {
        "identity": {
          "description": "The identity which will be leveraged by the monitoring jobs.",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "ManagedIdentity",
      "additionalProperties": false
    },
    "ManagedIdentity": {
      "description": "Managed identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "clientId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "objectId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resourceId": {
          "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "ManagedIdentityCredential": {
      "description": "Credential for user managed identity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "properties": {
        "managedIdentityType": {
          "description": "ManagedIdentityCredential identity type",
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityClientId": {
          "description": "ClientId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.",
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityPrincipalId": {
          "description": "PrincipalId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.",
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityResourceId": {
          "description": "Full arm scope for the Id. For ManagedIdentityType = SystemManaged, this field is null.",
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityTenantId": {
          "description": "TenantId for the UAMI. For ManagedIdentityType = SystemManaged, this field is null.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "ManagedIdentity",
      "additionalProperties": false
    },
    "ManagedOnlineDeployment": {
      "description": "Properties specific to a ManagedOnlineDeployment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "MarketplacePlan": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "The identifying name of the Offer of the Marketplace Plan.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "planId": {
          "description": "The identifying name of the Plan of the Marketplace Plan.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "publisherId": {
          "description": "The identifying name of the Publisher of the Marketplace Plan.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "MarketplaceSubscription": {
      "required": [
        "modelId"
      ],
      "type": "object",
      "properties": {
        "marketplacePlan": {
          "description": "Marketplace Plan associated with the Marketplace Subscription.",
          "$ref": "#/definitions/MarketplacePlan",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "marketplaceSubscriptionStatus": {
          "description": "Current status of the Marketplace Subscription.",
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "modelId": {
          "description": "[Required] Target Marketplace Model ID to create a Marketplace Subscription for.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning State of the Marketplace Subscription.",
          "$ref": "#/definitions/MarketplaceSubscriptionProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "MarketplaceSubscriptionProperties",
      "additionalProperties": false
    },
    "MarketplaceSubscriptionProvisioningState": {
      "enum": [
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating",
            "description": "MarketplaceSubscription is being created."
          },
          {
            "value": "Deleting",
            "description": "MarketplaceSubscription is being deleted."
          },
          {
            "value": "Succeeded",
            "description": "MarketplaceSubscription is successfully provisioned."
          },
          {
            "value": "Failed",
            "description": "MarketplaceSubscription provisioning failed."
          },
          {
            "value": "Updating",
            "description": "MarketplaceSubscription is being updated."
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "MarketplaceSubscriptionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/MarketplaceSubscription"
        }
      },
      "x-ms-client-name": "MarketplaceSubscription",
      "additionalProperties": false
    },
    "MarketplaceSubscriptionResourceArmPaginatedResult": {
      "description": "A paginated list of MarketplaceSubscription entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of MarketplaceSubscription objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type MarketplaceSubscription.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceSubscriptionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "MarketplaceSubscriptionStatus": {
      "enum": [
        "Subscribed",
        "Suspended",
        "Unsubscribed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Subscribed",
            "description": "The customer can now use the Marketplace Subscription's\nmodel and will be billed."
          },
          {
            "value": "Suspended",
            "description": "The customer could not be billed for the Marketplace Subscription.\nThe customer will not be able to access the model."
          },
          {
            "value": "Unsubscribed",
            "description": "Marketplace Subscriptions reach this state in response to an explicit customer or CSP action.\nA Marketplace Subscription can also be canceled implicitly, as a result of nonpayment of dues,\nafter being in the Suspended state for some time."
          }
        ]
      },
      "additionalProperties": false
    },
    "MaterializationComputeResource": {
      "description": "DTO object representing compute resource",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Specifies the instance type",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "MaterializationSettings": {
      "type": "object",
      "properties": {
        "notification": {
          "description": "Specifies the notification details",
          "$ref": "#/definitions/NotificationSetting",
          "x-nullable": true
        },
        "resource": {
          "description": "Specifies the compute resource settings",
          "$ref": "#/definitions/MaterializationComputeResource",
          "x-nullable": true
        },
        "schedule": {
          "description": "Specifies the schedule details",
          "$ref": "#/definitions/RecurrenceTrigger",
          "x-nullable": true
        },
        "sparkConfiguration": {
          "description": "Specifies the spark compute settings",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "storeType": {
          "description": "Specifies the stores to which materialization should happen",
          "default": "None",
          "$ref": "#/definitions/MaterializationStoreType"
        }
      },
      "additionalProperties": false
    },
    "MaterializationStoreType": {
      "enum": [
        "None",
        "Online",
        "Offline",
        "OnlineAndOffline"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MaterializationStoreType",
        "modelAsString": true,
        "values": [
          {
            "value": "None"
          },
          {
            "value": "Online"
          },
          {
            "value": "Offline"
          },
          {
            "value": "OnlineAndOffline"
          }
        ]
      },
      "additionalProperties": false
    },
    "MedianStoppingPolicy": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping",
      "additionalProperties": false
    },
    "ModelContainer": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state for the model container.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "ModelContainerProperties",
      "additionalProperties": false
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ModelContainer"
        }
      },
      "x-ms-client-name": "ModelContainer",
      "additionalProperties": false
    },
    "ModelContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ModelContainer entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ModelContainer objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ModelContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelSettings": {
      "type": "object",
      "properties": {
        "modelId": {
          "description": "The unique model identifier that this ServerlessEndpoint should provision.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ModelSize": {
      "description": "Image model size.",
      "enum": [
        "None",
        "Small",
        "Medium",
        "Large",
        "ExtraLarge"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ModelSize",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No value selected."
          },
          {
            "value": "Small",
            "description": "Small size."
          },
          {
            "value": "Medium",
            "description": "Medium size."
          },
          {
            "value": "Large",
            "description": "Large size."
          },
          {
            "value": "ExtraLarge",
            "description": "Extra large size."
          }
        ]
      },
      "additionalProperties": false
    },
    "ModelTaskType": {
      "description": "Model task type enum.",
      "enum": [
        "Classification",
        "Regression"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ModelTaskType",
        "modelAsString": true,
        "values": [
          {
            "value": "Classification"
          },
          {
            "value": "Regression"
          }
        ]
      },
      "additionalProperties": false
    },
    "ModelVersion": {
      "description": "Model asset version details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "properties": {
        "flavors": {
          "description": "Mapping of model flavors to their properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FlavorData",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "jobName": {
          "description": "Name of the training job which produced this model",
          "type": "string",
          "x-nullable": true
        },
        "modelType": {
          "description": "The storage format for this entity. Used for NCD.",
          "type": "string",
          "x-nullable": true
        },
        "modelUri": {
          "description": "The URI path to the model contents.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the model version.",
          "$ref": "#/definitions/AssetProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "description": "Stage in the model lifecycle assigned to this model",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-client-name": "ModelVersionProperties",
      "additionalProperties": false
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ModelVersion"
        }
      },
      "x-ms-client-name": "ModelVersion",
      "additionalProperties": false
    },
    "ModelVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ModelVersion entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ModelVersion objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ModelVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        }
      },
      "additionalProperties": false
    },
    "MonitorComputeConfigurationBase": {
      "description": "Monitor compute configuration base definition.",
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "computeType": {
          "description": "[Required] Specifies the type of signal to monitor.",
          "$ref": "#/definitions/MonitorComputeType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "computeType"
    },
    "MonitorComputeIdentityBase": {
      "description": "Monitor compute identity base definition.",
      "required": [
        "computeIdentityType"
      ],
      "type": "object",
      "properties": {
        "computeIdentityType": {
          "description": "[Required] Specifies the type of identity to use within the monitoring jobs.",
          "$ref": "#/definitions/MonitorComputeIdentityType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "computeIdentityType"
    },
    "MonitorComputeIdentityType": {
      "description": "Monitor compute identity type enum.",
      "enum": [
        "AmlToken",
        "ManagedIdentity"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitorComputeIdentityType",
        "modelAsString": true,
        "values": [
          {
            "value": "AmlToken",
            "description": "Authenticates through user's AML token."
          },
          {
            "value": "ManagedIdentity",
            "description": "Authenticates through a user-provided managed identity."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitorComputeType": {
      "description": "Monitor compute type enum.",
      "enum": [
        "ServerlessSpark"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitorComputeType",
        "modelAsString": true,
        "values": [
          {
            "value": "ServerlessSpark",
            "description": "Serverless Spark compute."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitorDefinition": {
      "required": [
        "computeConfiguration",
        "signals"
      ],
      "type": "object",
      "properties": {
        "alertNotificationSettings": {
          "description": "The monitor's notification settings.",
          "$ref": "#/definitions/MonitorNotificationSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "computeConfiguration": {
          "description": "[Required] The ARM resource ID of the compute resource to run the monitoring job on.",
          "$ref": "#/definitions/MonitorComputeConfigurationBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "monitoringTarget": {
          "description": "The entities targeted by the monitor.",
          "$ref": "#/definitions/MonitoringTarget",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "signals": {
          "description": "[Required] The signals to monitor.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringSignalBase",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "MonitorEmailNotificationSettings": {
      "type": "object",
      "properties": {
        "emails": {
          "description": "The email recipient list which has a limitation of 499 characters in total.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true,
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "MonitorNotificationSettings": {
      "type": "object",
      "properties": {
        "emailNotificationSettings": {
          "description": "The AML notification email settings.",
          "$ref": "#/definitions/MonitorEmailNotificationSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "MonitorServerlessSparkCompute": {
      "description": "Monitor serverless spark compute definition.",
      "required": [
        "computeIdentity",
        "instanceType",
        "runtimeVersion"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeConfigurationBase"
        }
      ],
      "properties": {
        "computeIdentity": {
          "description": "[Required] The identity scheme leveraged to by the spark jobs running on serverless Spark.",
          "$ref": "#/definitions/MonitorComputeIdentityBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "description": "[Required] The instance type running the Spark job.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "runtimeVersion": {
          "description": "[Required] The Spark runtime version.",
          "minLength": 1,
          "pattern": "^[0-9]+\\.[0-9]+$",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "ServerlessSpark",
      "additionalProperties": false
    },
    "MonitoringFeatureDataType": {
      "enum": [
        "Numerical",
        "Categorical"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringFeatureDataType",
        "modelAsString": true,
        "values": [
          {
            "value": "Numerical",
            "description": "Used for features of numerical data type."
          },
          {
            "value": "Categorical",
            "description": "Used for features of categorical data type."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitoringFeatureFilterBase": {
      "required": [
        "filterType"
      ],
      "type": "object",
      "properties": {
        "filterType": {
          "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over.",
          "$ref": "#/definitions/MonitoringFeatureFilterType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "filterType"
    },
    "MonitoringFeatureFilterType": {
      "enum": [
        "AllFeatures",
        "TopNByAttribution",
        "FeatureSubset"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringFeatureFilterType",
        "modelAsString": true,
        "values": [
          {
            "value": "AllFeatures",
            "description": "Includes all features."
          },
          {
            "value": "TopNByAttribution",
            "description": "Only includes the top contributing features, measured by feature attribution."
          },
          {
            "value": "FeatureSubset",
            "description": "Includes a user-defined subset of features."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitoringInputDataBase": {
      "description": "Monitoring input data base definition.",
      "required": [
        "inputDataType",
        "jobInputType",
        "uri"
      ],
      "type": "object",
      "properties": {
        "columns": {
          "description": "Mapping of column names to special uses.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "dataContext": {
          "description": "The context metadata of the data source.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "inputDataType": {
          "description": "[Required] Specifies the type of signal to monitor.",
          "$ref": "#/definitions/MonitoringInputDataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "$ref": "#/definitions/JobInputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "inputDataType"
    },
    "MonitoringInputDataType": {
      "description": "Monitoring input data type enum.",
      "enum": [
        "Static",
        "Rolling",
        "Fixed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringInputDataType",
        "modelAsString": true,
        "values": [
          {
            "value": "Static",
            "description": "An input data with a fixed window size."
          },
          {
            "value": "Rolling",
            "description": "An input data which rolls relatively to the monitor's current run time."
          },
          {
            "value": "Fixed",
            "description": "An input data with tabular format which doesn't require preprocessing."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitoringNotificationType": {
      "enum": [
        "AmlNotification"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringNotificationType",
        "modelAsString": true,
        "values": [
          {
            "value": "AmlNotification",
            "description": "Enables email notifications through AML notifications."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitoringSignalBase": {
      "required": [
        "signalType"
      ],
      "type": "object",
      "properties": {
        "notificationTypes": {
          "description": "The current notification mode for this signal.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringNotificationType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true,
          "x-ms-identifiers": []
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "signalType": {
          "description": "[Required] Specifies the type of signal to monitor.",
          "$ref": "#/definitions/MonitoringSignalType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "signalType"
    },
    "MonitoringSignalType": {
      "enum": [
        "DataDrift",
        "PredictionDrift",
        "DataQuality",
        "FeatureAttributionDrift",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MonitoringSignalType",
        "modelAsString": true,
        "values": [
          {
            "value": "DataDrift",
            "description": "Tracks model input data distribution change, comparing against training data or past production data."
          },
          {
            "value": "PredictionDrift",
            "description": "Tracks prediction result data distribution change, comparing against validation/test label data or past production data."
          },
          {
            "value": "DataQuality",
            "description": "Tracks model input data integrity."
          },
          {
            "value": "FeatureAttributionDrift",
            "description": "Tracks feature importance change in production, comparing against feature importance at training time."
          },
          {
            "value": "Custom",
            "description": "Tracks a custom signal provided by users."
          }
        ]
      },
      "additionalProperties": false
    },
    "MonitoringTarget": {
      "description": "Monitoring target definition.",
      "required": [
        "taskType"
      ],
      "type": "object",
      "properties": {
        "deploymentId": {
          "description": "Reference to the deployment asset targeted by this monitor.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "modelId": {
          "description": "Reference to the model asset targeted by this monitor.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "taskType": {
          "description": "[Required] The machine learning task type of the monitored model.",
          "$ref": "#/definitions/ModelTaskType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "MonitoringThreshold": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "description": "The threshold value. If null, the set default is dependent on the metric type.",
          "type": "number",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "Mpi": {
      "description": "MPI distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "description": "Number of processes per MPI node.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Mpi",
      "additionalProperties": false
    },
    "NCrossValidations": {
      "description": "N-Cross validations value.",
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "[Required] Mode for determining N-Cross validations.",
          "$ref": "#/definitions/NCrossValidationsMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode"
    },
    "NCrossValidationsMode": {
      "description": "Determines how N-Cross validations value is determined.",
      "enum": [
        "Auto",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NCrossValidationsMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Determine N-Cross validations value automatically. Supported only for 'Forecasting' AutoML task."
          },
          {
            "value": "Custom",
            "description": "Use custom N-Cross validations value."
          }
        ]
      },
      "additionalProperties": false
    },
    "NlpVertical": {
      "description": "Abstract class for NLP related AutoML tasks.\r\nNLP - Natural Language Processing.",
      "type": "object",
      "properties": {
        "featurizationSettings": {
          "description": "Featurization inputs needed for AutoML job.",
          "$ref": "#/definitions/NlpVerticalFeaturizationSettings",
          "x-nullable": true
        },
        "limitSettings": {
          "description": "Execution constraints for AutoMLJob.",
          "$ref": "#/definitions/NlpVerticalLimitSettings",
          "x-nullable": true
        },
        "validationData": {
          "description": "Validation data inputs.",
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "NlpVerticalFeaturizationSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturizationSettings"
        }
      ],
      "additionalProperties": false
    },
    "NlpVerticalLimitSettings": {
      "description": "Job execution constraints.",
      "type": "object",
      "properties": {
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Maximum Concurrent AutoML iterations.",
          "default": 1,
          "type": "integer"
        },
        "maxTrials": {
          "format": "int32",
          "description": "Number of AutoML iterations.",
          "default": 1,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "AutoML job timeout.",
          "default": "P7D",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Nodes": {
      "description": "Abstract Nodes definition",
      "required": [
        "nodesValueType"
      ],
      "type": "object",
      "properties": {
        "nodesValueType": {
          "description": "[Required] Type of the Nodes value",
          "$ref": "#/definitions/NodesValueType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "nodesValueType"
    },
    "NodesValueType": {
      "description": "The enumerated types for the nodes value",
      "enum": [
        "All"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NodesValueType",
        "modelAsString": true,
        "values": [
          {
            "value": "All"
          }
        ]
      },
      "additionalProperties": false
    },
    "NoneDatastoreCredentials": {
      "description": "Empty/none datastore credentials.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "None",
      "additionalProperties": false
    },
    "NotificationSetting": {
      "description": "Configuration for notification.",
      "type": "object",
      "properties": {
        "emailOn": {
          "description": "Send email notification to user on specified notification type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailNotificationEnableType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "emails": {
          "description": "This is the email recipient list which has a limitation of 499 characters in total concat with comma separator",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "webhooks": {
          "description": "Send webhook callback to a service. Key is a user-provided name for the webhook.",
          "type": "object",
          "additionalProperties": {
            "description": "Webhook base",
            "$ref": "#/definitions/Webhook",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "NumericalDataDriftMetric": {
      "enum": [
        "JensenShannonDistance",
        "PopulationStabilityIndex",
        "NormalizedWassersteinDistance",
        "TwoSampleKolmogorovSmirnovTest"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NumericalDataDriftMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "JensenShannonDistance",
            "description": "The Jensen Shannon Distance (JSD) metric."
          },
          {
            "value": "PopulationStabilityIndex",
            "description": "The Population Stability Index (PSI) metric."
          },
          {
            "value": "NormalizedWassersteinDistance",
            "description": "The Normalized Wasserstein Distance metric."
          },
          {
            "value": "TwoSampleKolmogorovSmirnovTest",
            "description": "The Two Sample Kolmogorov-Smirnov Test (two-sample K\u00e2\u20ac\u201cS) metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "NumericalDataDriftMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataDriftMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The numerical data drift metric to calculate.",
          "$ref": "#/definitions/NumericalDataDriftMetric"
        }
      },
      "x-ms-discriminator-value": "Numerical",
      "additionalProperties": false
    },
    "NumericalDataQualityMetric": {
      "enum": [
        "NullValueRate",
        "DataTypeErrorRate",
        "OutOfBoundsRate"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NumericalDataQualityMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "NullValueRate",
            "description": "Calculates the rate of null values."
          },
          {
            "value": "DataTypeErrorRate",
            "description": "Calculates the rate of data type errors."
          },
          {
            "value": "OutOfBoundsRate",
            "description": "Calculates the rate values are out of bounds."
          }
        ]
      },
      "additionalProperties": false
    },
    "NumericalDataQualityMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataQualityMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The numerical data quality metric to calculate.",
          "$ref": "#/definitions/NumericalDataQualityMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Numerical",
      "additionalProperties": false
    },
    "NumericalPredictionDriftMetric": {
      "enum": [
        "JensenShannonDistance",
        "PopulationStabilityIndex",
        "NormalizedWassersteinDistance",
        "TwoSampleKolmogorovSmirnovTest"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NumericalPredictionDriftMetric",
        "modelAsString": true,
        "values": [
          {
            "value": "JensenShannonDistance",
            "description": "The Jensen Shannon Distance (JSD) metric."
          },
          {
            "value": "PopulationStabilityIndex",
            "description": "The Population Stability Index (PSI) metric."
          },
          {
            "value": "NormalizedWassersteinDistance",
            "description": "The Normalized Wasserstein Distance metric."
          },
          {
            "value": "TwoSampleKolmogorovSmirnovTest",
            "description": "The Two Sample Kolmogorov-Smirnov Test (two-sample K\u00e2\u20ac\u201cS) metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "NumericalPredictionDriftMetricThreshold": {
      "required": [
        "metric"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
        }
      ],
      "properties": {
        "metric": {
          "description": "[Required] The numerical prediction drift metric to calculate.",
          "$ref": "#/definitions/NumericalPredictionDriftMetric",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Numerical",
      "additionalProperties": false
    },
    "ObjectDetectionPrimaryMetrics": {
      "description": "Primary metrics for Image ObjectDetection task.",
      "enum": [
        "MeanAveragePrecision"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ObjectDetectionPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "MeanAveragePrecision",
            "description": "Mean Average Precision (MAP) is the average of AP (Average Precision).\nAP is calculated for each class and averaged to get the MAP."
          }
        ]
      },
      "additionalProperties": false
    },
    "Objective": {
      "description": "Optimization objective.",
      "required": [
        "goal",
        "primaryMetric"
      ],
      "type": "object",
      "properties": {
        "goal": {
          "description": "[Required] Defines supported metric goals for hyperparameter tuning",
          "$ref": "#/definitions/Goal"
        },
        "primaryMetric": {
          "description": "[Required] Name of the metric to optimize.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OneLakeArtifact": {
      "description": "OneLake artifact (data source) configuration.",
      "required": [
        "artifactName",
        "artifactType"
      ],
      "type": "object",
      "properties": {
        "artifactName": {
          "description": "[Required] OneLake artifact name",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactType": {
          "description": "[Required] OneLake artifact type",
          "$ref": "#/definitions/OneLakeArtifactType"
        }
      },
      "discriminator": "artifactType"
    },
    "OneLakeArtifactType": {
      "description": "Enum to determine OneLake artifact type.",
      "enum": [
        "LakeHouse"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OneLakeArtifactType",
        "modelAsString": true,
        "values": [
          {
            "value": "LakeHouse"
          }
        ]
      },
      "additionalProperties": false
    },
    "OneLakeDatastore": {
      "description": "OneLake (Trident) datastore configuration.",
      "required": [
        "artifact",
        "oneLakeWorkspaceName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "properties": {
        "artifact": {
          "description": "[Required] OneLake artifact backing the datastore.",
          "$ref": "#/definitions/OneLakeArtifact",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "OneLake endpoint to use for the datastore.",
          "type": "string",
          "example": "data.microsoft.com",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "oneLakeWorkspaceName": {
          "description": "[Required] OneLake workspace name.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceDataAccessAuthIdentity": {
          "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
          "default": "None",
          "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "OneLake",
      "additionalProperties": false
    },
    "OnlineDeployment": {
      "required": [
        "endpointComputeType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "properties": {
        "appInsightsEnabled": {
          "description": "If true, enables Application Insights logging.",
          "default": false,
          "type": "boolean"
        },
        "dataCollector": {
          "description": "The mdc configuration, we disable mdc when it's null.",
          "$ref": "#/definitions/DataCollector",
          "x-nullable": true
        },
        "egressPublicNetworkAccess": {
          "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.",
          "default": "Enabled",
          "$ref": "#/definitions/EgressPublicNetworkAccessType"
        },
        "endpointComputeType": {
          "description": "[Required] The compute type of the endpoint.",
          "$ref": "#/definitions/EndpointComputeType"
        },
        "instanceType": {
          "description": "Compute instance type. Default: Standard_F4s_v2.",
          "default": "Standard_F4s_v2",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "livenessProbe": {
          "description": "Liveness probe monitors the health of the container regularly.",
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "model": {
          "description": "The URI path to the model.",
          "type": "string",
          "x-nullable": true
        },
        "modelMountPath": {
          "description": "The path to mount the model in custom container.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "$ref": "#/definitions/DeploymentProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "readinessProbe": {
          "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.",
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "startupProbe": {
          "description": "Startup probe verify whether an application within a container has started successfully.",
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "requestSettings": {
          "description": "Request settings for the deployment.",
          "$ref": "#/definitions/OnlineRequestSettings",
          "x-nullable": true
        },
        "scaleSettings": {
          "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment.",
          "$ref": "#/definitions/OnlineScaleSettings",
          "x-nullable": true
        }
      },
      "discriminator": "endpointComputeType",
      "x-ms-client-name": "OnlineDeploymentProperties"
    },
    "OnlineDeploymentTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineDeployment"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "OnlineDeployment",
      "additionalProperties": false
    },
    "OnlineDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineDeployment entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of OnlineDeployment objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type OnlineDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpoint": {
      "description": "Online endpoint configuration",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "properties": {
        "compute": {
          "description": "ARM resource ID of the compute if it exists.\r\noptional",
          "type": "string",
          "x-nullable": true
        },
        "mirrorTraffic": {
          "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicNetworkAccess": {
          "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled.",
          "default": "Enabled",
          "$ref": "#/definitions/PublicNetworkAccessType"
        },
        "traffic": {
          "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "x-nullable": true
        }
      },
      "x-ms-client-name": "OnlineEndpointProperties",
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineEndpoint"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "OnlineEndpoint",
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineEndpoint entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of OnlineEndpoint objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type OnlineEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineEndpointTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineRequestSettings": {
      "description": "Online deployment scoring requests configuration.",
      "type": "object",
      "properties": {
        "maxConcurrentRequestsPerInstance": {
          "format": "int32",
          "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.",
          "default": 1,
          "type": "integer"
        },
        "maxQueueWait": {
          "format": "duration",
          "description": "(Deprecated for Managed Online Endpoints) The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms.\r\n(Now increase `request_timeout_ms` to account for any networking/queue delays)",
          "default": "PT0.5S",
          "type": "string"
        },
        "requestTimeout": {
          "format": "duration",
          "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms.",
          "default": "PT5S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineScaleSettings": {
      "description": "Online deployment scaling configuration.",
      "required": [
        "scaleType"
      ],
      "type": "object",
      "properties": {
        "scaleType": {
          "description": "[Required] Type of deployment scaling algorithm",
          "$ref": "#/definitions/ScaleType"
        }
      },
      "discriminator": "scaleType"
    },
    "OperatingSystemType": {
      "description": "The type of operating system.",
      "enum": [
        "Linux",
        "Windows"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperatingSystemType",
        "modelAsString": true,
        "values": [
          {
            "value": "Linux"
          },
          {
            "value": "Windows"
          }
        ]
      },
      "additionalProperties": false
    },
    "OrderString": {
      "enum": [
        "CreatedAtDesc",
        "CreatedAtAsc",
        "UpdatedAtDesc",
        "UpdatedAtAsc"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OrderString",
        "modelAsString": true,
        "values": [
          {
            "value": "CreatedAtDesc"
          },
          {
            "value": "CreatedAtAsc"
          },
          {
            "value": "UpdatedAtDesc"
          },
          {
            "value": "UpdatedAtAsc"
          }
        ]
      },
      "additionalProperties": false
    },
    "OutputDeliveryMode": {
      "description": "Output data delivery mode enums.",
      "enum": [
        "ReadWriteMount",
        "Upload",
        "Direct"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OutputDeliveryMode",
        "modelAsString": true,
        "values": [
          {
            "value": "ReadWriteMount"
          },
          {
            "value": "Upload"
          },
          {
            "value": "Direct"
          }
        ]
      },
      "additionalProperties": false
    },
    "OutputPathAssetReference": {
      "description": "Reference to an asset via its path in a job output.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "jobId": {
          "description": "ARM resource ID of the job.",
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "description": "The path of the file/directory in the job output.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "OutputPath",
      "additionalProperties": false
    },
    "PartialBatchDeployment": {
      "description": "Mutable batch inference settings per deployment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/PartialBatchDeployment"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "PartialManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "type": "object",
      "properties": {
        "type": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PartialUserAssignedIdentity"
          }
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResourceWithIdentity": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/PartialManagedServiceIdentity"
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResourceWithSku": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/PartialSku"
        }
      },
      "additionalProperties": false
    },
    "PartialMinimalTrackedResourceWithSkuAndIdentity": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "#/definitions/PartialManagedServiceIdentity"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "#/definitions/PartialSku"
        }
      },
      "additionalProperties": false
    },
    "PartialUserAssignedIdentity": {
      "type": "object",
      "additionalProperties": false
    },
    "PendingUploadCredentialDto": {
      "required": [
        "credentialType"
      ],
      "type": "object",
      "properties": {
        "credentialType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "$ref": "#/definitions/PendingUploadCredentialType"
        }
      },
      "discriminator": "credentialType"
    },
    "PendingUploadCredentialType": {
      "description": "Enum to determine the PendingUpload credentials type.",
      "enum": [
        "SAS"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PendingUploadCredentialType",
        "modelAsString": true,
        "values": [
          {
            "value": "SAS"
          }
        ]
      },
      "additionalProperties": false
    },
    "PendingUploadRequestDto": {
      "type": "object",
      "properties": {
        "pendingUploadId": {
          "description": "If PendingUploadId = null then random guid will be used.",
          "type": "string",
          "x-nullable": true
        },
        "pendingUploadType": {
          "description": "TemporaryBlobReference is the only supported type",
          "default": "TemporaryBlobReference",
          "$ref": "#/definitions/PendingUploadType"
        }
      },
      "additionalProperties": false
    },
    "PendingUploadResponseDto": {
      "type": "object",
      "properties": {
        "blobReferenceForConsumption": {
          "description": "Container level read, write, list SAS",
          "$ref": "#/definitions/BlobReferenceForConsumptionDto",
          "x-nullable": true
        },
        "pendingUploadId": {
          "description": "ID for this upload request",
          "type": "string",
          "x-nullable": true
        },
        "pendingUploadType": {
          "description": "TemporaryBlobReference is the only supported type",
          "default": "TemporaryBlobReference",
          "$ref": "#/definitions/PendingUploadType"
        }
      },
      "additionalProperties": false
    },
    "PendingUploadType": {
      "description": "Type of storage to use for the pending upload location",
      "enum": [
        "None",
        "TemporaryBlobReference"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PendingUploadType",
        "modelAsString": true,
        "values": [
          {
            "value": "None"
          },
          {
            "value": "TemporaryBlobReference"
          }
        ]
      },
      "additionalProperties": false
    },
    "PipelineJob": {
      "description": "Pipeline Job definition: defines generic to MFE attributes.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "inputs": {
          "description": "Inputs for the pipeline job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jobs": {
          "description": "Jobs construct the Pipeline Job.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Outputs for the pipeline job",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "settings": {
          "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc.",
          "type": "object",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "sourceJobId": {
          "description": "ARM resource ID of source job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Pipeline",
      "additionalProperties": false
    },
    "PredictionDriftMetricThresholdBase": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the data type of the metric threshold.",
          "$ref": "#/definitions/MonitoringFeatureDataType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "$ref": "#/definitions/MonitoringThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "discriminator": "dataType"
    },
    "PredictionDriftMonitoringSignal": {
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "properties": {
        "featureDataTypeOverride": {
          "description": "A dictionary that maps feature names to their respective data types.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "metricThresholds": {
          "description": "[Required] A list of metrics to calculate and their associated thresholds.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-ms-identifiers": []
        },
        "productionData": {
          "description": "[Required] The data which drift will be calculated for.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "description": "[Required] The data to calculate drift against.",
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "PredictionDrift",
      "additionalProperties": false
    },
    "ProbeSettings": {
      "description": "Deployment container liveness/readiness probe configuration.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "format": "int32",
          "description": "The number of failures to allow before returning an unhealthy status.",
          "default": 30,
          "type": "integer"
        },
        "initialDelay": {
          "format": "duration",
          "description": "The delay before the first probe in ISO 8601 format.",
          "type": "string",
          "x-nullable": true
        },
        "period": {
          "format": "duration",
          "description": "The length of time between probes in ISO 8601 format.",
          "default": "PT10S",
          "type": "string"
        },
        "successThreshold": {
          "format": "int32",
          "description": "The number of successful probes before returning a healthy status.",
          "default": 1,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "The probe timeout in ISO 8601 format.",
          "default": "PT2S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PublicNetworkAccessType": {
      "description": "Enum to determine whether PublicNetworkAccess is Enabled or Disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccessType",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "PyTorch": {
      "description": "PyTorch distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "description": "Number of processes per node.",
          "type": "integer",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "PyTorch",
      "additionalProperties": false
    },
    "QueueSettings": {
      "type": "object",
      "properties": {
        "jobTier": {
          "description": "Controls the compute job tier",
          "default": "Null",
          "$ref": "#/definitions/JobTier",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "RandomSamplingAlgorithm": {
      "description": "Defines a Sampling Algorithm that generates values randomly",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "properties": {
        "rule": {
          "description": "The specific type of random algorithm",
          "default": "Random",
          "$ref": "#/definitions/RandomSamplingAlgorithmRule"
        },
        "seed": {
          "format": "int32",
          "description": "An optional integer to use as the seed for random number generation",
          "type": "integer",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Random",
      "additionalProperties": false
    },
    "RandomSamplingAlgorithmRule": {
      "description": "The specific type of random algorithm",
      "enum": [
        "Random",
        "Sobol"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RandomSamplingAlgorithmRule",
        "modelAsString": true,
        "values": [
          {
            "value": "Random"
          },
          {
            "value": "Sobol"
          }
        ]
      },
      "additionalProperties": false
    },
    "RecurrenceFrequency": {
      "description": "Enum to describe the frequency of a recurrence schedule",
      "enum": [
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": true,
        "values": [
          {
            "value": "Minute",
            "description": "Minute frequency"
          },
          {
            "value": "Hour",
            "description": "Hour frequency"
          },
          {
            "value": "Day",
            "description": "Day frequency"
          },
          {
            "value": "Week",
            "description": "Week frequency"
          },
          {
            "value": "Month",
            "description": "Month frequency"
          }
        ]
      },
      "additionalProperties": false
    },
    "RecurrenceSchedule": {
      "required": [
        "hours",
        "minutes"
      ],
      "type": "object",
      "properties": {
        "hours": {
          "description": "[Required] List of hours for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "minutes": {
          "description": "[Required] List of minutes for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "monthDays": {
          "description": "List of month days for the schedule",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-nullable": true
        },
        "weekDays": {
          "description": "List of days for the schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeekDay"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "RecurrenceTrigger": {
      "required": [
        "frequency",
        "interval"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TriggerBase"
        }
      ],
      "properties": {
        "frequency": {
          "description": "[Required] The frequency to trigger schedule.",
          "$ref": "#/definitions/RecurrenceFrequency"
        },
        "interval": {
          "format": "int32",
          "description": "[Required] Specifies schedule interval in conjunction with frequency",
          "type": "integer"
        },
        "schedule": {
          "description": "The recurrence schedule.",
          "$ref": "#/definitions/RecurrenceSchedule",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Recurrence",
      "additionalProperties": false
    },
    "ReferenceType": {
      "description": "Enum to determine which reference method to use for an asset.",
      "enum": [
        "Id",
        "DataPath",
        "OutputPath"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReferenceType",
        "modelAsString": true,
        "values": [
          {
            "value": "Id"
          },
          {
            "value": "DataPath"
          },
          {
            "value": "OutputPath"
          }
        ]
      },
      "additionalProperties": false
    },
    "RegenerateEndpointKeysRequest": {
      "required": [
        "keyType"
      ],
      "type": "object",
      "properties": {
        "keyType": {
          "description": "[Required] Specification for which type of key to generate. Primary or Secondary.",
          "$ref": "#/definitions/KeyType",
          "example": "Primary"
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "Regression": {
      "description": "Regression task in AutoML Table vertical.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric for regression task.",
          "default": "NormalizedRootMeanSquaredError",
          "$ref": "#/definitions/RegressionPrimaryMetrics"
        },
        "trainingSettings": {
          "description": "Inputs for training phase for an AutoML Job.",
          "$ref": "#/definitions/RegressionTrainingSettings",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Regression",
      "additionalProperties": false
    },
    "RegressionModels": {
      "description": "Enum for all Regression models supported by AutoML.",
      "enum": [
        "ElasticNet",
        "GradientBoosting",
        "DecisionTree",
        "KNN",
        "LassoLars",
        "SGD",
        "RandomForest",
        "ExtremeRandomTrees",
        "LightGBM",
        "XGBoostRegressor"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RegressionModels",
        "modelAsString": true,
        "values": [
          {
            "value": "ElasticNet",
            "description": "Elastic net is a popular type of regularized linear regression that combines two popular penalties, specifically the L1 and L2 penalty functions."
          },
          {
            "value": "GradientBoosting",
            "description": "The technique of transiting week learners into a strong learner is called Boosting. The gradient boosting algorithm process works on this theory of execution."
          },
          {
            "value": "DecisionTree",
            "description": "Decision Trees are a non-parametric supervised learning method used for both classification and regression tasks.\nThe goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features."
          },
          {
            "value": "KNN",
            "description": "K-nearest neighbors (KNN) algorithm uses 'feature similarity' to predict the values of new datapoints\nwhich further means that the new data point will be assigned a value based on how closely it matches the points in the training set."
          },
          {
            "value": "LassoLars",
            "description": "Lasso model fit with Least Angle Regression a.k.a. Lars. It is a Linear Model trained with an L1 prior as regularizer."
          },
          {
            "value": "SGD",
            "description": "SGD: Stochastic gradient descent is an optimization algorithm often used in machine learning applications\nto find the model parameters that correspond to the best fit between predicted and actual outputs.\nIt's an inexact but powerful technique."
          },
          {
            "value": "RandomForest",
            "description": "Random forest is a supervised learning algorithm.\nThe \"forest\" it builds, is an ensemble of decision trees, usually trained with the \"bagging\" method.\nThe general idea of the bagging method is that a combination of learning models increases the overall result."
          },
          {
            "value": "ExtremeRandomTrees",
            "description": "Extreme Trees is an ensemble machine learning algorithm that combines the predictions from many decision trees. It is related to the widely used random forest algorithm."
          },
          {
            "value": "LightGBM",
            "description": "LightGBM is a gradient boosting framework that uses tree based learning algorithms."
          },
          {
            "value": "XGBoostRegressor",
            "description": "XGBoostRegressor: Extreme Gradient Boosting Regressor is a supervised machine learning model using ensemble of base learners."
          }
        ]
      },
      "additionalProperties": false
    },
    "RegressionPrimaryMetrics": {
      "description": "Primary metrics for Regression task.",
      "enum": [
        "SpearmanCorrelation",
        "NormalizedRootMeanSquaredError",
        "R2Score",
        "NormalizedMeanAbsoluteError"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RegressionPrimaryMetrics",
        "modelAsString": true,
        "values": [
          {
            "value": "SpearmanCorrelation",
            "description": "The Spearman's rank coefficient of correlation is a nonparametric measure of rank correlation."
          },
          {
            "value": "NormalizedRootMeanSquaredError",
            "description": "The Normalized Root Mean Squared Error (NRMSE) the RMSE facilitates the comparison between models with different scales."
          },
          {
            "value": "R2Score",
            "description": "The R2 score is one of the performance evaluation measures for forecasting-based machine learning models."
          },
          {
            "value": "NormalizedMeanAbsoluteError",
            "description": "The Normalized Mean Absolute Error (NMAE) is a validation metric to compare the Mean Absolute Error (MAE) of (time) series with different scales."
          }
        ]
      },
      "additionalProperties": false
    },
    "RegressionTrainingSettings": {
      "description": "Regression Training related configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ],
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for regression task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegressionModels"
          },
          "x-nullable": true
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for regression task.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegressionModels"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "RequestLogging": {
      "type": "object",
      "properties": {
        "captureHeaders": {
          "description": "For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ResourceBase": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string",
          "x-nullable": true
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ResourceConfiguration": {
      "type": "object",
      "properties": {
        "instanceCount": {
          "format": "int32",
          "description": "Optional number of instances or nodes used by the compute target.",
          "default": 1,
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "properties": {
          "description": "Additional properties bag.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "RollingInputData": {
      "description": "Rolling input data definition.",
      "required": [
        "windowOffset",
        "windowSize"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "properties": {
        "preprocessingComponentId": {
          "description": "Reference to the component asset used to preprocess the data.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "windowOffset": {
          "format": "duration",
          "description": "[Required] The time offset between the end of the data window and the monitor's current run time.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowSize": {
          "format": "duration",
          "description": "[Required] The size of the rolling data window.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Rolling",
      "additionalProperties": false
    },
    "RollingRateType": {
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour",
        "Minute"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RollingRateType",
        "modelAsString": true,
        "values": [
          {
            "value": "Year"
          },
          {
            "value": "Month"
          },
          {
            "value": "Day"
          },
          {
            "value": "Hour"
          },
          {
            "value": "Minute"
          }
        ]
      },
      "additionalProperties": false
    },
    "Route": {
      "required": [
        "path",
        "port"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "[Required] The path for the route.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "[Required] The port for the route.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "SASCredential": {
      "description": "Access with full SAS uri",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "properties": {
        "sasUri": {
          "format": "uri",
          "description": "Full SAS Uri, including the storage, container/blob path and SAS token",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "SAS",
      "additionalProperties": false
    },
    "SASCredentialDto": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PendingUploadCredentialDto"
        }
      ],
      "properties": {
        "sasUri": {
          "format": "uri",
          "description": "Full SAS Uri, including the storage, container/blob path and SAS token",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "SAS",
      "additionalProperties": false
    },
    "SamplingAlgorithm": {
      "description": "The Sampling Algorithm used to generate hyperparameter values, along with properties to\r\nconfigure the algorithm",
      "required": [
        "samplingAlgorithmType"
      ],
      "type": "object",
      "properties": {
        "samplingAlgorithmType": {
          "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties",
          "$ref": "#/definitions/SamplingAlgorithmType"
        }
      },
      "discriminator": "samplingAlgorithmType"
    },
    "SamplingAlgorithmType": {
      "enum": [
        "Grid",
        "Random",
        "Bayesian"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SamplingAlgorithmType",
        "modelAsString": true,
        "values": [
          {
            "value": "Grid"
          },
          {
            "value": "Random"
          },
          {
            "value": "Bayesian"
          }
        ]
      },
      "additionalProperties": false
    },
    "SasDatastoreCredentials": {
      "description": "SAS datastore credentials configuration.",
      "required": [
        "secrets"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "secrets": {
          "description": "[Required] Storage container secrets.",
          "$ref": "#/definitions/SasDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "x-ms-discriminator-value": "Sas",
      "additionalProperties": false
    },
    "SasDatastoreSecrets": {
      "description": "Datastore SAS secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Sas",
      "additionalProperties": false
    },
    "ScaleType": {
      "enum": [
        "Default",
        "TargetUtilization"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "Default"
          },
          {
            "value": "TargetUtilization"
          }
        ]
      },
      "additionalProperties": false
    },
    "Schedule": {
      "description": "Base definition of a schedule",
      "required": [
        "action",
        "trigger"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "properties": {
        "action": {
          "description": "[Required] Specifies the action of the schedule",
          "$ref": "#/definitions/ScheduleActionBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "displayName": {
          "description": "Display name of schedule.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "isEnabled": {
          "description": "Is the schedule enabled?",
          "default": true,
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state for the schedule.",
          "$ref": "#/definitions/ScheduleProvisioningStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "trigger": {
          "description": "[Required] Specifies the trigger details",
          "$ref": "#/definitions/TriggerBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "x-ms-client-name": "ScheduleProperties",
      "additionalProperties": false
    },
    "ScheduleActionBase": {
      "required": [
        "actionType"
      ],
      "type": "object",
      "properties": {
        "actionType": {
          "description": "[Required] Specifies the action type of the schedule",
          "$ref": "#/definitions/ScheduleActionType",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "discriminator": "actionType"
    },
    "ScheduleActionType": {
      "enum": [
        "CreateJob",
        "InvokeBatchEndpoint",
        "CreateMonitor"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleActionType",
        "modelAsString": true,
        "values": [
          {
            "value": "CreateJob"
          },
          {
            "value": "InvokeBatchEndpoint"
          },
          {
            "value": "CreateMonitor"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleListViewType": {
      "enum": [
        "EnabledOnly",
        "DisabledOnly",
        "All"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleListViewType",
        "modelAsString": true,
        "values": [
          {
            "value": "EnabledOnly"
          },
          {
            "value": "DisabledOnly"
          },
          {
            "value": "All"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleProvisioningStatus": {
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleProvisioningStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Creating"
          },
          {
            "value": "Updating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/Schedule"
        }
      },
      "x-ms-client-name": "Schedule",
      "additionalProperties": false
    },
    "ScheduleResourceArmPaginatedResult": {
      "description": "A paginated list of Schedule entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of Schedule objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type Schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleResource"
          }
        }
      },
      "additionalProperties": false
    },
    "Seasonality": {
      "description": "Forecasting seasonality.",
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "[Required] Seasonality mode.",
          "$ref": "#/definitions/SeasonalityMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode"
    },
    "SeasonalityMode": {
      "description": "Forecasting seasonality mode.",
      "enum": [
        "Auto",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SeasonalityMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Seasonality to be determined automatically."
          },
          {
            "value": "Custom",
            "description": "Use the custom seasonality value."
          }
        ]
      },
      "additionalProperties": false
    },
    "SecretsType": {
      "description": "Enum to determine the datastore secrets type.",
      "enum": [
        "AccountKey",
        "Certificate",
        "Sas",
        "ServicePrincipal"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SecretsType",
        "modelAsString": true,
        "values": [
          {
            "value": "AccountKey"
          },
          {
            "value": "Certificate"
          },
          {
            "value": "Sas"
          },
          {
            "value": "ServicePrincipal"
          }
        ]
      },
      "additionalProperties": false
    },
    "ServerlessEndpoint": {
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "authMode": {
          "description": "[Required] Specifies the authentication mode for the Serverless endpoint.",
          "$ref": "#/definitions/ServerlessInferenceEndpointAuthMode"
        },
        "contentSafety": {
          "description": "Specifies the content safety options. If omitted, the default content safety settings will be configured",
          "$ref": "#/definitions/ContentSafety",
          "x-nullable": true
        },
        "endpointState": {
          "description": "The current state of the ServerlessEndpoint.",
          "$ref": "#/definitions/ServerlessEndpointState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "inferenceEndpoint": {
          "description": "The inference uri to target when making requests against the serverless endpoint",
          "$ref": "#/definitions/ServerlessInferenceEndpoint",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "marketplaceSubscriptionId": {
          "description": "The MarketplaceSubscription Azure ID associated to this ServerlessEndpoint.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "modelSettings": {
          "description": "The model settings (model id) for the model being serviced on the ServerlessEndpoint.",
          "$ref": "#/definitions/ModelSettings",
          "x-nullable": true
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-client-name": "ServerlessEndpointProperties",
      "additionalProperties": false
    },
    "ServerlessEndpointState": {
      "description": "State of the Serverless Endpoint.",
      "enum": [
        "Unknown",
        "Creating",
        "Deleting",
        "Suspending",
        "Reinstating",
        "Online",
        "Suspended",
        "CreationFailed",
        "DeletionFailed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ServerlessEndpointState",
        "modelAsString": true,
        "values": [
          {
            "value": "Unknown"
          },
          {
            "value": "Creating"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Suspending"
          },
          {
            "value": "Reinstating"
          },
          {
            "value": "Online"
          },
          {
            "value": "Suspended"
          },
          {
            "value": "CreationFailed"
          },
          {
            "value": "DeletionFailed"
          }
        ]
      },
      "additionalProperties": false
    },
    "ServerlessEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "$ref": "#/definitions/ServerlessEndpoint"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "x-ms-client-name": "ServerlessEndpoint",
      "additionalProperties": false
    },
    "ServerlessEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of ServerlessEndpoint entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of ServerlessEndpoint objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type ServerlessEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
          }
        }
      },
      "additionalProperties": false
    },
    "ServerlessInferenceEndpoint": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "headers": {
          "description": "Specifies any required headers to target this serverless endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "uri": {
          "format": "uri",
          "description": "[Required] The inference uri to target when making requests against the Serverless Endpoint.",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ServerlessInferenceEndpointAuthMode": {
      "enum": [
        "Key"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ServerlessInferenceEndpointAuthMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Key"
          }
        ]
      },
      "additionalProperties": false
    },
    "ServiceDataAccessAuthIdentity": {
      "enum": [
        "None",
        "WorkspaceSystemAssignedIdentity",
        "WorkspaceUserAssignedIdentity"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ServiceDataAccessAuthIdentity",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "Do not use any identity for service data access."
          },
          {
            "value": "WorkspaceSystemAssignedIdentity",
            "description": "Use the system assigned managed identity of the Workspace to authenticate service data access."
          },
          {
            "value": "WorkspaceUserAssignedIdentity",
            "description": "Use the user assigned managed identity of the Workspace to authenticate service data access."
          }
        ]
      },
      "additionalProperties": false
    },
    "ServicePrincipalDatastoreCredentials": {
      "description": "Service Principal datastore credentials configuration.",
      "required": [
        "clientId",
        "secrets",
        "tenantId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "format": "uuid",
          "description": "[Required] Service principal client ID.",
          "type": "string"
        },
        "resourceUrl": {
          "description": "Resource the service principal has access to.",
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "description": "[Required] Service principal secrets.",
          "$ref": "#/definitions/ServicePrincipalDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "format": "uuid",
          "description": "[Required] ID of the tenant to which the service principal belongs.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "ServicePrincipalDatastoreSecrets": {
      "description": "Datastore Service Principal secrets.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "properties": {
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "ShortSeriesHandlingConfiguration": {
      "description": "The parameter defining how if AutoML should handle short time series.",
      "enum": [
        "None",
        "Auto",
        "Pad",
        "Drop"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ShortSeriesHandlingConfiguration",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "Represents no/null value."
          },
          {
            "value": "Auto",
            "description": "Short series will be padded if there are no long series, otherwise short series will be dropped."
          },
          {
            "value": "Pad",
            "description": "All the short series will be padded."
          },
          {
            "value": "Drop",
            "description": "All the short series will be dropped."
          }
        ]
      },
      "additionalProperties": false
    },
    "SkuCapacity": {
      "description": "SKU capacity information",
      "type": "object",
      "properties": {
        "default": {
          "format": "int32",
          "description": "Gets or sets the default capacity.",
          "default": 0,
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Gets or sets the maximum.",
          "default": 0,
          "type": "integer"
        },
        "minimum": {
          "format": "int32",
          "description": "Gets or sets the minimum.",
          "default": 0,
          "type": "integer"
        },
        "scaleType": {
          "description": "Gets or sets the type of the scale.",
          "default": "Automatic",
          "$ref": "#/definitions/SkuScaleType"
        }
      },
      "additionalProperties": false
    },
    "SkuResource": {
      "description": "Fulfills ARM Contract requirement to list all available SKUS for a resource.",
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Gets or sets the Sku Capacity.",
          "$ref": "#/definitions/SkuCapacity",
          "x-nullable": true
        },
        "resourceType": {
          "description": "The resource type name.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-nullable": true
        },
        "sku": {
          "description": "Gets or sets the Sku.",
          "$ref": "#/definitions/SkuSetting",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "SkuResourceArmPaginatedResult": {
      "description": "A paginated list of SkuResource entities.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page of SkuResource objects. If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type SkuResource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuResource"
          },
          "x-ms-identifiers": []
        }
      },
      "additionalProperties": false
    },
    "SkuScaleType": {
      "description": "Node scaling setting for the compute sku.",
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "Automatic",
            "description": "Automatically scales node count."
          },
          {
            "value": "Manual",
            "description": "Node count scaled upon user request."
          },
          {
            "value": "None",
            "description": "Fixed set of nodes."
          }
        ]
      },
      "additionalProperties": false
    },
    "SkuSetting": {
      "description": "SkuSetting fulfills the need for stripped down SKU info in ARM contract.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "[Required] The name of the SKU. Ex - P3. It is typically a letter+number code.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "default": "Basic",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier"
        }
      },
      "additionalProperties": false
    },
    "SparkJob": {
      "description": "Spark job definition.",
      "required": [
        "codeId",
        "entry"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "archives": {
          "description": "Archive files used in the job.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "args": {
          "description": "Arguments for the job.",
          "type": "string",
          "example": " --input abfss://blob-container@testgen2.dfs.core.windows.net/mltable",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "codeId": {
          "format": "arm-id",
          "description": "[Required] arm-id of the code asset.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "conf": {
          "description": "Spark configured properties.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "example": [
            {
              "spark.driver.memory": "2g"
            }
          ],
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "entry": {
          "description": "[Required] The entry to execute on startup of the job.",
          "$ref": "#/definitions/SparkJobEntry",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "format": "arm-id",
          "description": "The ARM resource ID of the Environment specification for the job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "files": {
          "description": "Files used in the job.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "inputs": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "jars": {
          "description": "Jar files used in the job.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "pyFiles": {
          "description": "Python files used in the job.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "queueSettings": {
          "description": "Queue settings for the job",
          "$ref": "#/definitions/QueueSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "$ref": "#/definitions/SparkResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Spark",
      "additionalProperties": false
    },
    "SparkJobEntry": {
      "description": "Spark job entry point definition.",
      "required": [
        "sparkJobEntryType"
      ],
      "type": "object",
      "properties": {
        "sparkJobEntryType": {
          "description": "[Required] Type of the job's entry point.",
          "$ref": "#/definitions/SparkJobEntryType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "sparkJobEntryType"
    },
    "SparkJobEntryType": {
      "enum": [
        "SparkJobPythonEntry",
        "SparkJobScalaEntry"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SparkJobEntryType",
        "modelAsString": true,
        "values": [
          {
            "value": "SparkJobPythonEntry"
          },
          {
            "value": "SparkJobScalaEntry"
          }
        ]
      },
      "additionalProperties": false
    },
    "SparkJobPythonEntry": {
      "required": [
        "file"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SparkJobEntry"
        }
      ],
      "properties": {
        "file": {
          "description": "[Required] Relative python file path for job entry point.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "train.py",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "SparkJobPythonEntry",
      "additionalProperties": false
    },
    "SparkJobScalaEntry": {
      "required": [
        "className"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SparkJobEntry"
        }
      ],
      "properties": {
        "className": {
          "description": "[Required] Scala class name used as entry point.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "microsoft.aml.sample.myapp",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "SparkJobScalaEntry",
      "additionalProperties": false
    },
    "SparkResourceConfiguration": {
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "runtimeVersion": {
          "description": "Version of spark runtime used for the job.",
          "default": "3.1",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "StackEnsembleSettings": {
      "description": "Advances setting to customize StackEnsemble run.",
      "type": "object",
      "properties": {
        "stackMetaLearnerKWargs": {
          "description": "Optional parameters to pass to the initializer of the meta-learner.",
          "type": "object",
          "x-nullable": true
        },
        "stackMetaLearnerTrainPercentage": {
          "format": "double",
          "description": "Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.",
          "default": 0.2,
          "type": "number"
        },
        "stackMetaLearnerType": {
          "description": "The meta-learner is a model trained on the output of the individual heterogeneous models.",
          "default": "None",
          "$ref": "#/definitions/StackMetaLearnerType"
        }
      },
      "additionalProperties": false
    },
    "StackMetaLearnerType": {
      "description": "The meta-learner is a model trained on the output of the individual heterogeneous models.\r\nDefault meta-learners are LogisticRegression for classification tasks (or LogisticRegressionCV if cross-validation is enabled) and ElasticNet for regression/forecasting tasks (or ElasticNetCV if cross-validation is enabled).\r\nThis parameter can be one of the following strings: LogisticRegression, LogisticRegressionCV, LightGBMClassifier, ElasticNet, ElasticNetCV, LightGBMRegressor, or LinearRegression",
      "enum": [
        "None",
        "LogisticRegression",
        "LogisticRegressionCV",
        "LightGBMClassifier",
        "ElasticNet",
        "ElasticNetCV",
        "LightGBMRegressor",
        "LinearRegression"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StackMetaLearnerType",
        "modelAsString": true,
        "values": [
          {
            "value": "None"
          },
          {
            "value": "LogisticRegression",
            "description": "Default meta-learners are LogisticRegression for classification tasks."
          },
          {
            "value": "LogisticRegressionCV",
            "description": "Default meta-learners are LogisticRegression for classification task when CV is on."
          },
          {
            "value": "LightGBMClassifier"
          },
          {
            "value": "ElasticNet",
            "description": "Default meta-learners are LogisticRegression for regression task."
          },
          {
            "value": "ElasticNetCV",
            "description": "Default meta-learners are LogisticRegression for regression task when CV is on."
          },
          {
            "value": "LightGBMRegressor"
          },
          {
            "value": "LinearRegression"
          }
        ]
      },
      "additionalProperties": false
    },
    "StaticInputData": {
      "description": "Static input data definition.",
      "required": [
        "windowEnd",
        "windowStart"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "properties": {
        "preprocessingComponentId": {
          "description": "Reference to the component asset used to preprocess the data.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "windowEnd": {
          "format": "date-time",
          "description": "[Required] The end date of the data window.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowStart": {
          "format": "date-time",
          "description": "[Required] The start date of the data window.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Static",
      "additionalProperties": false
    },
    "StochasticOptimizer": {
      "description": "Stochastic optimizer for image models.",
      "enum": [
        "None",
        "Sgd",
        "Adam",
        "Adamw"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StochasticOptimizer",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No optimizer selected."
          },
          {
            "value": "Sgd",
            "description": "Stochastic Gradient Descent optimizer."
          },
          {
            "value": "Adam",
            "description": "Adam is algorithm the optimizes stochastic objective functions based on adaptive estimates of moments"
          },
          {
            "value": "Adamw",
            "description": "AdamW is a variant of the optimizer Adam that has an improved implementation of weight decay."
          }
        ]
      },
      "additionalProperties": false
    },
    "SweepJob": {
      "description": "Sweep job definition.",
      "required": [
        "objective",
        "samplingAlgorithm",
        "searchSpace",
        "trial"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "earlyTermination": {
          "description": "Early termination policies enable canceling poor-performing runs before they complete",
          "$ref": "#/definitions/EarlyTerminationPolicy",
          "x-nullable": true
        },
        "inputs": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Command job definition.",
            "$ref": "#/definitions/JobInput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "limits": {
          "description": "Sweep Job limit.",
          "default": "{}",
          "$ref": "#/definitions/SweepJobLimits",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "objective": {
          "description": "[Required] Optimization objective.",
          "$ref": "#/definitions/Objective"
        },
        "outputs": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "description": "Job output definition container information on where to find job output/logs.",
            "$ref": "#/definitions/JobOutput",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "queueSettings": {
          "description": "Queue settings for the job",
          "$ref": "#/definitions/QueueSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "samplingAlgorithm": {
          "description": "[Required] The hyperparameter sampling algorithm",
          "$ref": "#/definitions/SamplingAlgorithm"
        },
        "searchSpace": {
          "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
          "type": "object"
        },
        "trial": {
          "description": "[Required] Trial component definition.",
          "$ref": "#/definitions/TrialComponent"
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "SweepJobLimits": {
      "description": "Sweep Job limit class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "properties": {
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Sweep Job max concurrent trials.",
          "type": "integer",
          "x-nullable": true
        },
        "maxTotalTrials": {
          "format": "int32",
          "description": "Sweep Job max total trials.",
          "type": "integer",
          "x-nullable": true
        },
        "trialTimeout": {
          "format": "duration",
          "description": "Sweep Job Trial timeout value.",
          "type": "string",
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "TableVertical": {
      "description": "Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting.",
      "type": "object",
      "properties": {
        "cvSplitColumnNames": {
          "description": "Columns to use for CVSplit data.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "featurizationSettings": {
          "description": "Featurization inputs needed for AutoML job.",
          "$ref": "#/definitions/TableVerticalFeaturizationSettings",
          "x-nullable": true
        },
        "limitSettings": {
          "description": "Execution constraints for AutoMLJob.",
          "$ref": "#/definitions/TableVerticalLimitSettings",
          "x-nullable": true
        },
        "nCrossValidations": {
          "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
          "$ref": "#/definitions/NCrossValidations",
          "x-nullable": true
        },
        "testData": {
          "description": "Test data input.",
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "testDataSize": {
          "format": "double",
          "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
          "type": "number",
          "x-nullable": true
        },
        "validationData": {
          "description": "Validation data inputs.",
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "validationDataSize": {
          "format": "double",
          "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
          "type": "number",
          "x-nullable": true
        },
        "weightColumnName": {
          "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "TableVerticalFeaturizationSettings": {
      "description": "Featurization Configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturizationSettings"
        }
      ],
      "properties": {
        "blockedTransformers": {
          "description": "These transformers shall not be used in featurization.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockedTransformers"
          },
          "x-nullable": true
        },
        "columnNameAndTypes": {
          "description": "Dictionary of column name and its type (int, float, string, datetime etc).",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-nullable": true
        },
        "enableDnnFeaturization": {
          "description": "Determines whether to use Dnn based featurizers for data featurization.",
          "default": false,
          "type": "boolean"
        },
        "mode": {
          "description": "Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.\r\nIf 'Off' is selected then no featurization is done.\r\nIf 'Custom' is selected then user can specify additional inputs to customize how featurization is done.",
          "default": "Auto",
          "$ref": "#/definitions/FeaturizationMode"
        },
        "transformerParams": {
          "description": "User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ColumnTransformer"
            },
            "x-nullable": true,
            "x-ms-identifiers": []
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "TableVerticalLimitSettings": {
      "description": "Job execution constraints.",
      "type": "object",
      "properties": {
        "enableEarlyTermination": {
          "description": "Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.",
          "default": true,
          "type": "boolean"
        },
        "exitScore": {
          "format": "double",
          "description": "Exit score for the AutoML job.",
          "type": "number",
          "x-nullable": true
        },
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Maximum Concurrent iterations.",
          "default": 1,
          "type": "integer"
        },
        "maxCoresPerTrial": {
          "format": "int32",
          "description": "Max cores per iteration.",
          "default": -1,
          "type": "integer"
        },
        "maxTrials": {
          "format": "int32",
          "description": "Number of iterations.",
          "default": 1000,
          "type": "integer"
        },
        "timeout": {
          "format": "duration",
          "description": "AutoML job timeout.",
          "default": "PT6H",
          "type": "string"
        },
        "trialTimeout": {
          "format": "duration",
          "description": "Iteration timeout.",
          "default": "PT30M",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TargetAggregationFunction": {
      "description": "Target aggregate function.",
      "enum": [
        "None",
        "Sum",
        "Max",
        "Min",
        "Mean"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TargetAggregationFunction",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "Represent no value set."
          },
          {
            "value": "Sum"
          },
          {
            "value": "Max"
          },
          {
            "value": "Min"
          },
          {
            "value": "Mean"
          }
        ]
      },
      "additionalProperties": false
    },
    "TargetLags": {
      "description": "The number of past periods to lag from the target column.",
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "[Required] Set target lags mode - Auto/Custom",
          "$ref": "#/definitions/TargetLagsMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode"
    },
    "TargetLagsMode": {
      "description": "Target lags selection modes.",
      "enum": [
        "Auto",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TargetLagsMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Target lags to be determined automatically."
          },
          {
            "value": "Custom",
            "description": "Use the custom target lags."
          }
        ]
      },
      "additionalProperties": false
    },
    "TargetRollingWindowSize": {
      "description": "Forecasting target rolling window size.",
      "required": [
        "mode"
      ],
      "type": "object",
      "properties": {
        "mode": {
          "description": "[Required] TargetRollingWindowSiz detection mode.",
          "$ref": "#/definitions/TargetRollingWindowSizeMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode"
    },
    "TargetRollingWindowSizeMode": {
      "description": "Target rolling windows size mode.",
      "enum": [
        "Auto",
        "Custom"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TargetRollingWindowSizeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Auto",
            "description": "Determine rolling windows size automatically."
          },
          {
            "value": "Custom",
            "description": "Use the specified rolling window size."
          }
        ]
      },
      "additionalProperties": false
    },
    "TargetUtilizationScaleSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "properties": {
        "maxInstances": {
          "format": "int32",
          "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.",
          "default": 1,
          "type": "integer"
        },
        "minInstances": {
          "format": "int32",
          "description": "The minimum number of instances to always be present.",
          "default": 1,
          "type": "integer"
        },
        "pollingInterval": {
          "format": "duration",
          "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
          "default": "PT1S",
          "type": "string"
        },
        "targetUtilizationPercentage": {
          "format": "int32",
          "description": "Target CPU usage for the autoscaler.",
          "default": 70,
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "TargetUtilization",
      "additionalProperties": false
    },
    "TaskType": {
      "description": "AutoMLJob Task type.",
      "enum": [
        "Classification",
        "Regression",
        "Forecasting",
        "ImageClassification",
        "ImageClassificationMultilabel",
        "ImageObjectDetection",
        "ImageInstanceSegmentation",
        "TextClassification",
        "TextClassificationMultilabel",
        "TextNER"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TaskType",
        "modelAsString": true,
        "values": [
          {
            "value": "Classification",
            "description": "Classification in machine learning and statistics is a supervised learning approach in which\nthe computer program learns from the data given to it and make new observations or classifications."
          },
          {
            "value": "Regression",
            "description": "Regression means to predict the value using the input data. Regression models are used to predict a continuous value."
          },
          {
            "value": "Forecasting",
            "description": "Forecasting is a special kind of regression task that deals with time-series data and creates forecasting model\nthat can be used to predict the near future values based on the inputs."
          },
          {
            "value": "ImageClassification",
            "description": "Image Classification. Multi-class image classification is used when an image is classified with only a single label\nfrom a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'."
          },
          {
            "value": "ImageClassificationMultilabel",
            "description": "Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\nfrom a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'."
          },
          {
            "value": "ImageObjectDetection",
            "description": "Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\nbounding box e.g. locate all dogs and cats in an image and draw a bounding box around each."
          },
          {
            "value": "ImageInstanceSegmentation",
            "description": "Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\ndrawing a polygon around each object in the image."
          },
          {
            "value": "TextClassification",
            "description": "Text classification (also known as text tagging or text categorization) is the process of sorting texts into categories.\nCategories are mutually exclusive."
          },
          {
            "value": "TextClassificationMultilabel",
            "description": "Multilabel classification task assigns each sample to a group (zero or more) of target labels."
          },
          {
            "value": "TextNER",
            "description": "Text Named Entity Recognition a.k.a. TextNER.\nNamed Entity Recognition (NER) is the ability to take free-form text and identify the occurrences of entities such as people, locations, organizations, and more."
          }
        ]
      },
      "additionalProperties": false
    },
    "TensorFlow": {
      "description": "TensorFlow distribution configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "parameterServerCount": {
          "format": "int32",
          "description": "Number of parameter server tasks.",
          "default": 0,
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "workerCount": {
          "format": "int32",
          "description": "Number of workers. If not specified, will default to the instance count.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        }
      },
      "x-ms-discriminator-value": "TensorFlow",
      "additionalProperties": false
    },
    "TextClassification": {
      "description": "Text Classification task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric for Text-Classification task.",
          "default": "Accuracy",
          "$ref": "#/definitions/ClassificationPrimaryMetrics"
        }
      },
      "x-ms-discriminator-value": "TextClassification",
      "additionalProperties": false
    },
    "TextClassificationMultilabel": {
      "description": "Text Classification Multilabel task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric for Text-Classification-Multilabel task.\r\nCurrently only Accuracy is supported as primary metric, hence user need not set it explicitly.",
          "$ref": "#/definitions/ClassificationMultilabelPrimaryMetrics",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "TextClassificationMultilabel",
      "additionalProperties": false
    },
    "TextNer": {
      "description": "Text-NER task in AutoML NLP vertical.\r\nNER - Named Entity Recognition.\r\nNLP - Natural Language Processing.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "properties": {
        "primaryMetric": {
          "description": "Primary metric for Text-NER task.\r\nOnly 'Accuracy' is supported for Text-NER, so user need not set this explicitly.",
          "$ref": "#/definitions/ClassificationPrimaryMetrics",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "TextNER",
      "additionalProperties": false
    },
    "TopNFeaturesByAttribution": {
      "required": [
        "filterType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "properties": {
        "top": {
          "format": "int32",
          "description": "The number of top features to include.",
          "default": 10,
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "TopNByAttribution",
      "additionalProperties": false
    },
    "TrainingSettings": {
      "description": "Training related configuration.",
      "type": "object",
      "properties": {
        "enableDnnTraining": {
          "description": "Enable recommendation of DNN models.",
          "default": false,
          "type": "boolean"
        },
        "enableModelExplainability": {
          "description": "Flag to turn on explainability on best model.",
          "default": true,
          "type": "boolean"
        },
        "enableOnnxCompatibleModels": {
          "description": "Flag for enabling onnx compatible models.",
          "default": false,
          "type": "boolean"
        },
        "enableStackEnsemble": {
          "description": "Enable stack ensemble run.",
          "default": true,
          "type": "boolean"
        },
        "enableVoteEnsemble": {
          "description": "Enable voting ensemble run.",
          "default": true,
          "type": "boolean"
        },
        "ensembleModelDownloadTimeout": {
          "format": "duration",
          "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed.",
          "default": "PT5M",
          "type": "string"
        },
        "stackEnsembleSettings": {
          "description": "Stack ensemble settings for stack ensemble run.",
          "$ref": "#/definitions/StackEnsembleSettings",
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "TrialComponent": {
      "description": "Trial component definition.",
      "required": [
        "command",
        "environmentId"
      ],
      "type": "object",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "command": {
          "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "$ref": "#/definitions/DistributionConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "environmentId": {
          "description": "[Required] The ARM resource ID of the Environment specification for the job.",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "default": "{}",
          "$ref": "#/definitions/JobResourceConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "TriggerBase": {
      "required": [
        "triggerType"
      ],
      "type": "object",
      "properties": {
        "endTime": {
          "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely",
          "type": "string",
          "x-nullable": true
        },
        "startTime": {
          "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset.",
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "default": "UTC",
          "type": "string"
        },
        "triggerType": {
          "description": "[Required] ",
          "$ref": "#/definitions/TriggerType",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "discriminator": "triggerType"
    },
    "TriggerType": {
      "enum": [
        "Recurrence",
        "Cron"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true,
        "values": [
          {
            "value": "Recurrence"
          },
          {
            "value": "Cron"
          }
        ]
      },
      "additionalProperties": false
    },
    "TritonModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "triton_model",
      "additionalProperties": false
    },
    "TritonModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "triton_model",
      "additionalProperties": false
    },
    "TruncationSelectionPolicy": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "properties": {
        "truncationPercentage": {
          "format": "int32",
          "description": "The percentage of runs to cancel at each evaluation interval.",
          "default": 0,
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "TruncationSelection",
      "additionalProperties": false
    },
    "UriFileDataVersion": {
      "description": "uri-file data version entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFileJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFileJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_file",
      "additionalProperties": false
    },
    "UriFolderDataVersion": {
      "description": "uri-folder data version entity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UriFolderJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UriFolderJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder",
      "additionalProperties": false
    },
    "UseStl": {
      "description": "Configure STL Decomposition of the time-series target column.",
      "enum": [
        "None",
        "Season",
        "SeasonTrend"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "UseStl",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No stl decomposition."
          },
          {
            "value": "Season"
          },
          {
            "value": "SeasonTrend"
          }
        ]
      },
      "additionalProperties": false
    },
    "UserIdentity": {
      "description": "User identity configuration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "UserIdentity",
      "additionalProperties": false
    },
    "ValidationMetricType": {
      "description": "Metric computation method to use for validation metrics in image tasks.",
      "enum": [
        "None",
        "Coco",
        "Voc",
        "CocoVoc"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ValidationMetricType",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No metric."
          },
          {
            "value": "Coco",
            "description": "Coco metric."
          },
          {
            "value": "Voc",
            "description": "Voc metric."
          },
          {
            "value": "CocoVoc",
            "description": "CocoVoc metric."
          }
        ]
      },
      "additionalProperties": false
    },
    "Webhook": {
      "description": "Webhook base",
      "required": [
        "webhookType"
      ],
      "type": "object",
      "properties": {
        "eventType": {
          "description": "Send callback on a specified notification event",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "x-nullable": true
        },
        "webhookType": {
          "description": "[Required] Specifies the type of service to send a callback",
          "$ref": "#/definitions/WebhookType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "webhookType"
    },
    "WebhookType": {
      "description": "Enum to determine the webhook callback service type.",
      "enum": [
        "AzureDevOps"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "WebhookType",
        "modelAsString": true,
        "values": [
          {
            "value": "AzureDevOps"
          }
        ]
      },
      "additionalProperties": false
    },
    "WeekDay": {
      "description": "Enum of weekday",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "WeekDay",
        "modelAsString": true,
        "values": [
          {
            "value": "Monday",
            "description": "Monday weekday"
          },
          {
            "value": "Tuesday",
            "description": "Tuesday weekday"
          },
          {
            "value": "Wednesday",
            "description": "Wednesday weekday"
          },
          {
            "value": "Thursday",
            "description": "Thursday weekday"
          },
          {
            "value": "Friday",
            "description": "Friday weekday"
          },
          {
            "value": "Saturday",
            "description": "Saturday weekday"
          },
          {
            "value": "Sunday",
            "description": "Sunday weekday"
          }
        ]
      },
      "additionalProperties": false
    },
    "AmlUserFeature": {
      "description": "Features enabled for a workspace",
      "type": "object",
      "properties": {
        "id": {
          "description": "Specifies the feature ID",
          "type": "string"
        },
        "displayName": {
          "description": "Specifies the feature name ",
          "type": "string"
        },
        "description": {
          "description": "Describes the feature for user experience",
          "type": "string"
        }
      }
    },
    "ListAmlUserFeatureResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlUserFeature"
          },
          "description": "The list of AML user facing features."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information."
        }
      },
      "description": "The List Aml user feature operation response."
    },
    "Workspace": {
      "type": "object",
      "description": "An object that represents a machine learning workspace.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The properties of the machine learning workspace.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "kind": {
          "type": "string"
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "workspaceId": {
          "description": "The immutable id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string",
          "x-nullable": true
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of Azure ML workspace."
        },
        "hbiWorkspace": {
          "type": "boolean",
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "default": false
        },
        "serviceProvisionedResourceGroup": {
          "type": "string",
          "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
          "readOnly": true
        },
        "privateLinkCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of private connections in the workspace",
          "readOnly": true
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "allowPublicAccessWhenBehindVnet": {
          "type": "boolean",
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "default": false
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of private endpoint connections in the workspace."
        },
        "serverlessComputeSettings": {
          "description": "Settings for serverless compute created in the workspace",
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of shared private link resources in this workspace."
        },
        "notebookInfo": {
          "readOnly": true,
          "$ref": "#/definitions/NotebookResourceInfo",
          "description": "The notebook info of Azure ML workspace."
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id associated with this workspace.",
          "type": "string",
          "readOnly": true
        },
        "storageHnsEnabled": {
          "description": "If the storage associated with the workspace has hierarchical namespace(HNS) enabled.",
          "type": "boolean",
          "readOnly": true
        },
        "systemDatastoresAuthMode": {
          "description": "The auth mode used for accessing the system datastores of the workspace.",
          "type": "string",
          "enum": [
            "AccessKey",
            "Identity",
            "UserDelegationSAS"
          ],
          "x-ms-enum": {
            "name": "systemDatastoresAuthMode",
            "modelAsString": true
          }
        },
        "mlFlowTrackingUri": {
          "description": "The URI associated with this workspace that machine learning flow must point at to set up tracking.",
          "type": "string",
          "readOnly": true
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "default": false,
          "type": "boolean"
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "associatedWorkspaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "enableServiceSideCMKEncryption": {
          "type": "boolean"
        },
        "hubResourceId": {
          "type": "string"
        },
        "workspaceHubConfig": {
          "description": "WorkspaceHub's configuration object.",
          "$ref": "#/definitions/WorkspaceHubConfig"
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a machine learning workspace.",
      "properties": {
        "tags": {
          "description": "The resource tags for the machine learning workspace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "description": "The properties that the machine learning workspace will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating the properties of a machine learning workspace.",
      "properties": {
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name for this workspace.",
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings",
          "description": "The service managed resource settings."
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "serverlessComputeSettings": {
          "description": "Settings for serverless compute created in the workspace",
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Whether requests from Public Network are allowed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string"
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "systemDatastoresAuthMode": {
          "description": "The auth mode used for accessing the system datastores of the workspace.",
          "type": "string",
          "enum": [
            "AccessKey",
            "Identity",
            "UserDelegationSAS"
          ],
          "x-ms-enum": {
            "name": "systemDatastoresAuthMode",
            "modelAsString": true
          }
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionUpdateProperties"
        }
      }
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The result of a request to list machine learning workspaces.",
      "properties": {
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list of machine learning workspaces.",
          "type": "string"
        }
      }
    },
    "DiagnoseRequestProperties": {
      "type": "object",
      "properties": {
        "udr": {
          "description": "Setting for diagnosing user defined routing",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "nsg": {
          "description": "Setting for diagnosing network security group",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resourceLock": {
          "description": "Setting for diagnosing resource lock",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "dnsResolution": {
          "description": "Setting for diagnosing dns resolution",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "storageAccount": {
          "description": "Setting for diagnosing dependent storage account",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "keyVault": {
          "description": "Setting for diagnosing dependent key vault",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "containerRegistry": {
          "description": "Setting for diagnosing dependent container registry",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "applicationInsights": {
          "description": "Setting for diagnosing dependent application insights",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "others": {
          "description": "Setting for diagnosing unclassified category of problems",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DiagnoseWorkspaceParameters": {
      "type": "object",
      "description": "Parameters to diagnose a workspace",
      "properties": {
        "value": {
          "description": "Value of Parameters",
          "$ref": "#/definitions/DiagnoseRequestProperties"
        }
      }
    },
    "DiagnoseResult": {
      "type": "object",
      "description": "Result of Diagnose",
      "properties": {
        "code": {
          "description": "Code for workspace setup error",
          "type": "string",
          "readOnly": true
        },
        "level": {
          "description": "Level of workspace setup error",
          "enum": [
            "Warning",
            "Error",
            "Information"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DiagnoseResultLevel",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Message of workspace setup error",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnoseResponseResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {
            "userDefinedRouteResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "networkSecurityRuleResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "resourceLockResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "dnsResolutionResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "storageAccountResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "keyVaultResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "containerRegistryResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "applicationInsightsResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "otherResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            }
          }
        }
      }
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "userStorageResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "appInsightsInstrumentationKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "containerRegistryCredentials": {
          "readOnly": true,
          "$ref": "#/definitions/RegistryListCredentialsResult"
        },
        "notebookAccessKeys": {
          "readOnly": true,
          "$ref": "#/definitions/ListNotebookKeysResult"
        }
      }
    },
    "NotebookAccessTokenResult": {
      "type": "object",
      "properties": {
        "notebookResourceId": {
          "readOnly": true,
          "type": "string"
        },
        "hostName": {
          "readOnly": true,
          "type": "string"
        },
        "publicDns": {
          "readOnly": true,
          "type": "string"
        },
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "tokenType": {
          "readOnly": true,
          "type": "string"
        },
        "expiresIn": {
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "scope": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string"
        },
        "username": {
          "readOnly": true,
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      },
      "description": "List of private endpoint connection associated with the specified workspace"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the private link.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "type": "object",
      "properties": {
        "privateLinkResourceId": {
          "description": "The resource id that private link links to.",
          "type": "string"
        },
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message.",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "Properties of a shared private link resource."
    },
    "EncryptionProperty": {
      "properties": {
        "status": {
          "description": "Indicates whether or not the encryption is enabled for the workspace.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityForCmk",
          "description": "The identity that will be used to access the key vault for encryption at rest."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultProperties",
          "description": "Customer Key vault properties."
        }
      },
      "required": [
        "status",
        "keyVaultProperties"
      ],
      "type": "object"
    },
    "EncryptionKeyVaultProperties": {
      "properties": {
        "keyVaultArmId": {
          "description": "The ArmId of the keyVault where the customer owned encryption key is present.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        },
        "identityClientId": {
          "description": "For future use - The client id of the identity which will be used to access key vault.",
          "type": "string"
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object"
    },
    "IdentityForCmk": {
      "description": "Identity that will be used to access key vault for encryption at rest",
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "description": "The ArmId of the user assigned identity that will be used to access the customer managed key vault",
          "type": "string"
        }
      }
    },
    "ServerlessComputeSettings": {
      "type": "object",
      "properties": {
        "serverlessComputeCustomSubnet": {
          "description": "The resource ID of an existing virtual network subnet in which serverless compute nodes should be deployed",
          "type": "string",
          "format": "arm-id"
        },
        "serverlessComputeNoPublicIP": {
          "description": "The flag to signal if serverless compute nodes deployed in custom vNet would have no public IP addresses for a workspace with private endpoint",
          "type": "boolean"
        }
      }
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings",
          "description": "The settings for the service managed cosmosdb account."
        }
      }
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "The throughput of the collections in cosmosdb database"
        }
      }
    },
    "OutboundRuleListResult": {
      "description": "List of outbound rules for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.",
          "type": "string"
        },
        "value": {
          "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundRuleBasicResource"
          }
        }
      }
    },
    "OutboundRuleBasicResource": {
      "description": "Outbound Rule Basic Resource for the managed network of a machine learning workspace.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OutboundRule"
        }
      }
    },
    "ManagedNetworkSettings": {
      "description": "Managed Network settings for a machine learning workspace.",
      "type": "object",
      "properties": {
        "isolationMode": {
          "description": "Isolation mode for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/IsolationMode"
        },
        "networkId": {
          "type": "string",
          "readOnly": true
        },
        "outboundRules": {
          "type": "object",
          "additionalProperties": {
            "description": "Outbound Rule for the managed network of a machine learning workspace.",
            "$ref": "#/definitions/OutboundRule"
          },
          "x-nullable": true
        },
        "status": {
          "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
          "$ref": "#/definitions/ManagedNetworkProvisionStatus"
        },
        "firewallSku": {
          "description": "Firewall Sku used for FQDN Rules",
          "$ref": "#/definitions/FirewallSku"
        },
        "managedNetworkKind": {
          "description": "The Kind of the managed network. Users can switch from V1 to V2 for granular access controls, but cannot switch back to V1 once V2 is enabled.",
          "$ref": "#/definitions/ManagedNetworkKind"
        },
        "firewallPublicIpAddress": {
          "description": "Public IP address assigned to the Azure Firewall.",
          "type": "string"
        }
      }
    },
    "ManagedNetworkKind": {
      "description": "The Kind of the managed network. Users can switch from V1 to V2 for granular access controls, but cannot switch back to V1 once V2 is enabled.",
      "enum": [
        "V1",
        "V2"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedNetworkKind",
        "modelAsString": true
      }
    },
    "ManagedNetworkProvisionOptions": {
      "description": "Managed Network Provisioning options for managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "includeSpark": {
          "type": "boolean"
        }
      }
    },
    "ManagedNetworkProvisionStatus": {
      "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
      "type": "object",
      "properties": {
        "sparkReady": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/ManagedNetworkStatus"
        }
      }
    },
    "ManagedNetworkStatus": {
      "description": "Status for the managed network of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedNetworkStatus",
        "modelAsString": true
      }
    },
    "IsolationMode": {
      "description": "Isolation mode for the managed network of a machine learning workspace.",
      "enum": [
        "Disabled",
        "AllowInternetOutbound",
        "AllowOnlyApprovedOutbound"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IsolationMode",
        "modelAsString": true
      }
    },
    "OutboundRule": {
      "description": "Outbound Rule for the managed network of a machine learning workspace.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/RuleCategory"
        },
        "status": {
          "$ref": "#/definitions/RuleStatus"
        },
        "type": {
          "$ref": "#/definitions/RuleType"
        },
        "errorInformation": {
          "description": "Error information about an outbound rule of a machine learning workspace if RuleStatus is failed.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "parentRuleNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "type"
    },
    "PrivateEndpointOutboundRule": {
      "description": "Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "$ref": "#/definitions/PrivateEndpointDestination"
        }
      },
      "x-ms-discriminator-value": "PrivateEndpoint"
    },
    "PrivateEndpointDestination": {
      "type": "object",
      "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "properties": {
        "serviceResourceId": {
          "type": "string",
          "format": "arm-id"
        },
        "sparkEnabled": {
          "type": "boolean"
        },
        "sparkStatus": {
          "$ref": "#/definitions/RuleStatus"
        },
        "subresourceTarget": {
          "type": "string"
        }
      }
    },
    "ServiceTagOutboundRule": {
      "type": "object",
      "description": "Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "$ref": "#/definitions/ServiceTagDestination"
        }
      },
      "x-ms-discriminator-value": "ServiceTag"
    },
    "ServiceTagDestination": {
      "type": "object",
      "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "properties": {
        "action": {
          "$ref": "#/definitions/RuleAction"
        },
        "addressPrefixes": {
          "description": "Optional, if provided, the ServiceTag property will be ignored.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "portRanges": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        }
      }
    },
    "RuleAction": {
      "description": "The action enum for networking rule.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleAction",
        "modelAsString": true
      }
    },
    "FqdnOutboundRule": {
      "type": "object",
      "description": "FQDN Outbound Rule for the managed network of a machine learning workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "properties": {
        "destination": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "FQDN"
    },
    "RuleCategory": {
      "description": "Category of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Required",
        "Recommended",
        "UserDefined",
        "Dependency"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true
      }
    },
    "RuleStatus": {
      "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "Inactive",
        "Active",
        "Provisioning",
        "Deleting",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleStatus",
        "modelAsString": true
      }
    },
    "RuleType": {
      "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
      "enum": [
        "FQDN",
        "PrivateEndpoint",
        "ServiceTag"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleType",
        "modelAsString": true
      }
    },
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "description": "the data plane resourceId that used to initialize notebook component"
        },
        "notebookPreparationError": {
          "$ref": "#/definitions/NotebookPreparationError",
          "description": "The error that occurs when preparing notebook.",
          "x-nullable": true
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListNotebookKeysResult": {
      "type": "object",
      "properties": {
        "primaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryAccessKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ListStorageAccountKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "readOnly": true,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ConnectionAuthType": {
      "description": "Authentication type of the connection target",
      "enum": [
        "PAT",
        "ManagedIdentity",
        "UsernamePassword",
        "None",
        "SAS",
        "AccountKey",
        "ServicePrincipal",
        "AccessKey",
        "ApiKey",
        "CustomKeys",
        "OAuth2",
        "AAD"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionAuthType",
        "modelAsString": true
      }
    },
    "ConnectionCategory": {
      "description": "Category of the connection",
      "enum": [
        "PythonFeed",
        "ContainerRegistry",
        "Git",
        "S3",
        "Snowflake",
        "AzureSqlDb",
        "AzureSynapseAnalytics",
        "AzureMySqlDb",
        "AzurePostgresDb",
        "ADLSGen2",
        "Redis",
        "ApiKey",
        "AzureOpenAI",
        "AIServices",
        "CognitiveSearch",
        "CognitiveService",
        "CustomKeys",
        "AzureBlob",
        "AzureOneLake",
        "CosmosDb",
        "CosmosDbMongoDbApi",
        "AzureDataExplorer",
        "AzureMariaDb",
        "AzureDatabricksDeltaLake",
        "AzureSqlMi",
        "AzureTableStorage",
        "AmazonRdsForOracle",
        "AmazonRdsForSqlServer",
        "AmazonRedshift",
        "Db2",
        "Drill",
        "GoogleBigQuery",
        "Greenplum",
        "Hbase",
        "Hive",
        "Impala",
        "Informix",
        "MariaDb",
        "MicrosoftAccess",
        "MySql",
        "Netezza",
        "Oracle",
        "Phoenix",
        "PostgreSql",
        "Presto",
        "SapOpenHub",
        "SapBw",
        "SapHana",
        "SapTable",
        "Spark",
        "SqlServer",
        "Sybase",
        "Teradata",
        "Vertica",
        "Pinecone",
        "Cassandra",
        "Couchbase",
        "MongoDbV2",
        "MongoDbAtlas",
        "AmazonS3Compatible",
        "FileServer",
        "FtpServer",
        "GoogleCloudStorage",
        "Hdfs",
        "OracleCloudStorage",
        "Sftp",
        "GenericHttp",
        "ODataRest",
        "Odbc",
        "GenericRest",
        "AmazonMws",
        "Concur",
        "Dynamics",
        "DynamicsAx",
        "DynamicsCrm",
        "GoogleAdWords",
        "Hubspot",
        "Jira",
        "Magento",
        "Marketo",
        "Office365",
        "Eloqua",
        "Responsys",
        "OracleServiceCloud",
        "PayPal",
        "QuickBooks",
        "Salesforce",
        "SalesforceServiceCloud",
        "SalesforceMarketingCloud",
        "SapCloudForCustomer",
        "SapEcc",
        "ServiceNow",
        "SharePointOnlineList",
        "Shopify",
        "Square",
        "WebTable",
        "Xero",
        "Zoho",
        "GenericContainerRegistry",
        "Elasticsearch",
        "OpenAI",
        "Serp",
        "BingLLMSearch",
        "Serverless",
        "ManagedOnlineEndpoint"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionCategory",
        "modelAsString": true
      }
    },
    "WorkspaceConnectionUsernamePassword": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "securityToken": {
          "description": "Optional, required by connections like SalesForce for extra security in addition to UsernamePassword",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "WorkspaceConnectionPersonalAccessToken": {
      "type": "object",
      "properties": {
        "pat": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PATAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionPersonalAccessToken"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "PAT"
    },
    "WorkspaceConnectionSharedAccessSignature": {
      "type": "object",
      "properties": {
        "sas": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "WorkspaceConnectionAccountKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "SASAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "SAS"
    },
    "UsernamePasswordAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionUsernamePassword"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "UsernamePassword"
    },
    "WorkspaceConnectionPropertiesV2": {
      "required": [
        "authType"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "Authentication type of the connection target",
          "$ref": "#/definitions/ConnectionAuthType"
        },
        "category": {
          "description": "Category of the connection",
          "$ref": "#/definitions/ConnectionCategory"
        },
        "createdByWorkspaceArmId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true
        },
        "expiryTime": {
          "format": "date-time",
          "type": "string"
        },
        "group": {
          "description": "Group based on connection category",
          "$ref": "#/definitions/ConnectionGroup",
          "readOnly": true
        },
        "isSharedToAll": {
          "type": "boolean"
        },
        "target": {
          "type": "string"
        },
        "metadata": {
          "description": "Store user metadata for this connection",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sharedUserList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "description": "Value details of the workspace connection.",
          "type": "string"
        },
        "valueFormat": {
          "description": "format for the workspace connection value",
          "type": "string",
          "enum": [
            "JSON"
          ],
          "x-ms-enum": {
            "name": "ValueFormat",
            "modelAsString": true
          }
        }
      },
      "discriminator": "authType"
    },
    "NoneAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "additionalProperties": false,
      "x-ms-discriminator-value": "None"
    },
    "WorkspaceConnectionManagedIdentity": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ManagedIdentityAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionManagedIdentity"
        }
      },
      "additionalProperties": false,
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "WorkspaceConnectionPropertiesV2BasicResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      },
      "additionalProperties": false
    },
    "WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FQDNEndpointDetail": {
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FQDNEndpoint": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "endpointDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointDetail"
          },
          "x-ms-identifiers": [
            "port"
          ]
        }
      }
    },
    "FQDNEndpointsProperties": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoint"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "FQDNEndpoints": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FQDNEndpointsProperties"
        }
      }
    },
    "ExternalFQDNResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoints"
          },
          "x-ms-identifiers": [
            "/properties/category"
          ]
        }
      }
    },
    "FeatureStoreSettings": {
      "type": "object",
      "description": "Settings for feature store type workspace.",
      "properties": {
        "computeRuntime": {
          "$ref": "#/definitions/ComputeRuntimeDto"
        },
        "offlineStoreConnectionName": {
          "type": "string"
        },
        "onlineStoreConnectionName": {
          "type": "string"
        }
      }
    },
    "ComputeRuntimeDto": {
      "type": "object",
      "description": "Compute runtime config for feature store type workspace.",
      "properties": {
        "sparkRuntimeVersion": {
          "type": "string"
        }
      }
    },
    "AADAuthTypeWorkspaceConnectionProperties": {
      "description": "This connection type covers the AAD auth for any applicable Azure service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "AccessKeyAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccessKey"
        }
      },
      "x-ms-discriminator-value": "AccessKey"
    },
    "WorkspaceConnectionAccessKey": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      }
    },
    "AccountKeyAuthTypeWorkspaceConnectionProperties": {
      "description": "This connection type covers the account key connection for Azure storage",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccountKey"
        }
      },
      "x-ms-discriminator-value": "AccountKey"
    },
    "ApiKeyAuthWorkspaceConnectionProperties": {
      "description": "This connection type covers the generic ApiKey auth connection categories, for examples:\r\nAzureOpenAI:\r\n    Category:= AzureOpenAI\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {ApiKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {ApiBase}\r\n            \r\nCognitiveService:\r\n    Category:= CognitiveService\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {SubscriptionKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= ServiceRegion={serviceRegion}\r\n            \r\nCognitiveSearch:\r\n    Category:= CognitiveSearch\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {Key} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {Endpoint}\r\n            \r\nUse Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionApiKey"
        }
      },
      "x-ms-discriminator-value": "ApiKey"
    },
    "WorkspaceConnectionApiKey": {
      "description": "Api key object for workspace connection credential.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "CustomKeysWorkspaceConnectionProperties": {
      "description": "Category:= CustomKeys\r\nAuthType:= CustomKeys (as type discriminator)\r\nCredentials:= {CustomKeys} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.CustomKeys\r\nTarget:= {any value}\r\nUse Metadata property bag for ApiVersion and other metadata fields",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "description": "Custom Keys credential object",
          "$ref": "#/definitions/CustomKeys"
        }
      },
      "x-ms-discriminator-value": "CustomKeys"
    },
    "CustomKeys": {
      "description": "Custom Keys credential object",
      "type": "object",
      "properties": {
        "keys": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OAuth2AuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionOAuth2"
        }
      },
      "x-ms-discriminator-value": "OAuth2"
    },
    "WorkspaceConnectionOAuth2": {
      "description": "ClientId and ClientSecret are required. Other properties are optional\r\ndepending on each OAuth2 provider's implementation.",
      "type": "object",
      "properties": {
        "authUrl": {
          "description": "Required by Concur connection category",
          "type": "string",
          "format": "url"
        },
        "clientId": {
          "type": "string",
          "description": "Client id in the format of UUID",
          "format": "uuid"
        },
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "developerToken": {
          "description": "Required by GoogleAdWords connection category",
          "type": "string",
          "x-ms-secret": true
        },
        "password": {
          "type": "string",
          "x-ms-secret": true
        },
        "refreshToken": {
          "description": "Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho\r\nwhere user needs to get RefreshToken offline",
          "type": "string",
          "x-ms-secret": true
        },
        "tenantId": {
          "description": "Required by QuickBooks and Xero connection categories",
          "type": "string"
        },
        "username": {
          "description": "Concur, ServiceNow auth server AccessToken grant type is 'Password'\r\nwhich requires UsernamePassword",
          "type": "string"
        }
      }
    },
    "ServicePrincipalAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionServicePrincipal"
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "WorkspaceConnectionServicePrincipal": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "x-ms-secret": true,
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "ConnectionGroup": {
      "description": "Group based on connection category",
      "enum": [
        "Azure",
        "AzureAI",
        "Database",
        "NoSQL",
        "File",
        "GenericProtocol",
        "ServicesAndApps"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ConnectionGroup",
        "modelAsString": true
      }
    },
    "EncryptionUpdateProperties": {
      "required": [
        "keyVaultProperties"
      ],
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultUpdateProperties"
        }
      }
    },
    "EncryptionKeyVaultUpdateProperties": {
      "required": [
        "keyIdentifier"
      ],
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      }
    },
    "WorkspaceHubConfig": {
      "description": "WorkspaceHub's configuration object.",
      "type": "object",
      "properties": {
        "additionalWorkspaceStorageAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultWorkspaceResourceGroup": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionUpdateParameter": {
      "description": "The properties that the machine learning workspace connection will be updated with.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties that the machine learning workspace connection will be updated with.",
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      }
    },
    "FirewallSku": {
      "description": "Firewall Sku used for FQDN Rules",
      "enum": [
        "Standard",
        "Basic"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FirewallSku",
        "modelAsString": true
      }
    },
    "UsageName": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The current usage of the resource."
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "description": "Describes AML Resource Usage."
    },
    "ListUsagesResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list of AML resource usages."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information."
        }
      },
      "description": "The List Usages operation response."
    },
    "VirtualMachineSize": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual Machine size name",
          "description": "The name of the virtual machine size.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "title": "Virtual Machine family name",
          "description": "The family name of the virtual machine size.",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of vPUs",
          "description": "The number of vCPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "gpus": {
          "type": "integer",
          "format": "int32",
          "title": "Number of gPUs",
          "description": "The number of gPUs supported by the virtual machine size.",
          "readOnly": true
        },
        "osVhdSizeMB": {
          "type": "integer",
          "format": "int32",
          "title": "OS VHD Disk size",
          "description": "The OS VHD disk size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "maxResourceVolumeMB": {
          "type": "integer",
          "format": "int32",
          "title": "Resource volume size",
          "description": "The resource volume size, in MB, allowed by the virtual machine size.",
          "readOnly": true
        },
        "memoryGB": {
          "type": "number",
          "format": "double",
          "title": "Memory size",
          "description": "The amount of memory, in GB, supported by the virtual machine size.",
          "readOnly": true
        },
        "lowPriorityCapable": {
          "type": "boolean",
          "title": "Low priority capable",
          "description": "Specifies if the virtual machine size supports low priority VMs.",
          "readOnly": true
        },
        "premiumIO": {
          "type": "boolean",
          "title": "Premium IO supported",
          "description": "Specifies if the virtual machine size supports premium IO.",
          "readOnly": true
        },
        "estimatedVMPrices": {
          "title": "Estimated VM prices",
          "description": "The estimated price information for using a VM.",
          "$ref": "#/definitions/EstimatedVMPrices"
        },
        "supportedComputeTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Supported Compute Types",
          "description": "Specifies the compute types supported by the virtual machine size."
        }
      },
      "description": "Describes the properties of a VM size."
    },
    "EstimatedVMPrices": {
      "type": "object",
      "properties": {
        "billingCurrency": {
          "type": "string",
          "title": "Billing currency",
          "description": "Three lettered code specifying the currency of the VM price. Example: USD",
          "enum": [
            "USD"
          ],
          "x-ms-enum": {
            "name": "BillingCurrency",
            "modelAsString": true
          }
        },
        "unitOfMeasure": {
          "type": "string",
          "title": "Unit of time measure",
          "description": "The unit of time measurement for the specified VM price. Example: OneHour",
          "enum": [
            "OneHour"
          ],
          "x-ms-enum": {
            "name": "UnitOfMeasure",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EstimatedVMPrice"
          },
          "x-ms-identifiers": [],
          "title": "List of estimated VM prices.",
          "description": "The list of estimated prices for using a VM of a particular OS type, tier, etc."
        }
      },
      "required": [
        "billingCurrency",
        "unitOfMeasure",
        "values"
      ],
      "description": "The estimated price info for using a VM."
    },
    "EstimatedVMPrice": {
      "type": "object",
      "properties": {
        "retailPrice": {
          "type": "number",
          "format": "double",
          "title": "Retail price",
          "description": "The price charged for using the VM."
        },
        "osType": {
          "type": "string",
          "title": "OS type",
          "description": "Operating system type used by the VM.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "VMPriceOSType",
            "modelAsString": true
          }
        },
        "vmTier": {
          "type": "string",
          "title": "VM tier",
          "description": "The type of the VM.",
          "enum": [
            "Standard",
            "LowPriority",
            "Spot"
          ],
          "x-ms-enum": {
            "name": "VMTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "retailPrice",
        "osType",
        "vmTier"
      ],
      "description": "The estimated price info for using a VM of a particular OS type, tier, etc."
    },
    "VirtualMachineSizeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of virtual machine sizes supported by AmlCompute."
        }
      },
      "description": "The List Virtual Machine size operation response."
    },
    "QuotaBaseProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for Quota update or retrieval."
    },
    "QuotaUpdateParameters": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list for update quota.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaBaseProperties"
          }
        },
        "location": {
          "description": "Region of workspace quota to be updated.",
          "type": "string"
        }
      },
      "description": "Quota update parameters."
    },
    "UpdateWorkspaceQuotasResult": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of workspace quota update result.",
          "items": {
            "$ref": "#/definitions/UpdateWorkspaceQuotas"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The result of update workspace quota."
    },
    "UpdateWorkspaceQuotas": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "readOnly": false,
          "title": "Update Workspace Quota Status.",
          "description": "Status of update workspace quota.",
          "enum": [
            "Undefined",
            "Success",
            "Failure",
            "InvalidQuotaBelowClusterMinimum",
            "InvalidQuotaExceedsSubscriptionLimit",
            "InvalidVMFamilyName",
            "OperationNotSupportedForSku",
            "OperationNotEnabledForRegion"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        }
      },
      "description": "The properties for update Quota response."
    },
    "ResourceName": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Resource Name."
    },
    "ResourceQuota": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource ID."
        },
        "amlWorkspaceLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Region of the AML workspace in the id."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the resource type."
        },
        "name": {
          "$ref": "#/definitions/ResourceName",
          "description": "Name of the resource.",
          "readOnly": true
        },
        "limit": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "description": "The maximum permitted quota of the resource."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "An enum describing the unit of quota measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      },
      "description": "The quota assigned to a resource."
    },
    "ListWorkspaceQuotas": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Workspace Quotas by VM Family",
          "items": {
            "$ref": "#/definitions/ResourceQuota"
          },
          "readOnly": true,
          "type": "array"
        },
        "nextLink": {
          "description": "The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "The List WorkspaceQuotasByVMFamily operation response."
    },
    "ResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource"
        }
      },
      "required": [
        "id"
      ],
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
      "x-ms-azure-resource": true
    },
    "PaginatedComputeResourcesList": {
      "type": "object",
      "description": "Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "description": "Machine Learning compute object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ComputeResourceSchema"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The sku of the workspace.",
          "x-nullable": true
        }
      }
    },
    "ComputeResourceSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Compute properties",
          "$ref": "#/definitions/Compute"
        }
      }
    },
    "Compute": {
      "type": "object",
      "description": "Machine Learning compute object.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        },
        "computeLocation": {
          "description": "Location for the underlying compute",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "type": "string",
          "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the Machine Learning compute.",
          "x-nullable": true
        },
        "createdOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was created."
        },
        "modifiedOn": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the compute was last modified."
        },
        "resourceId": {
          "type": "string",
          "description": "ARM resource id of the underlying compute",
          "x-nullable": true
        },
        "provisioningErrors": {
          "type": "array",
          "description": "Errors during provisioning",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ],
          "readOnly": true,
          "x-nullable": true
        },
        "isAttachedCompute": {
          "type": "boolean",
          "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AKS": {
      "description": "A Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AKSSchema"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AKSSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "description": "AKS properties",
          "properties": {
            "clusterFqdn": {
              "description": "Cluster full qualified domain name",
              "type": "string",
              "x-nullable": true
            },
            "systemServices": {
              "type": "array",
              "description": "System services",
              "items": {
                "$ref": "#/definitions/SystemService"
              },
              "x-ms-identifiers": [
                "publicIpAddress"
              ],
              "readOnly": true,
              "x-nullable": true
            },
            "agentCount": {
              "description": "Number of agents",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "x-nullable": true
            },
            "agentVmSize": {
              "description": "Agent virtual machine size",
              "type": "string",
              "x-nullable": true
            },
            "clusterPurpose": {
              "description": "Intended usage of the cluster",
              "type": "string",
              "default": "FastProd",
              "enum": [
                "FastProd",
                "DenseProd",
                "DevTest"
              ],
              "x-ms-enum": {
                "name": "ClusterPurpose",
                "modelAsString": true
              }
            },
            "sslConfiguration": {
              "description": "SSL configuration",
              "$ref": "#/definitions/SslConfiguration",
              "x-nullable": true
            },
            "aksNetworkingConfiguration": {
              "description": "AKS networking configuration for vnet",
              "$ref": "#/definitions/AksNetworkingConfiguration",
              "x-nullable": true
            },
            "loadBalancerType": {
              "description": "Load Balancer Type",
              "type": "string",
              "default": "PublicIp",
              "enum": [
                "PublicIp",
                "InternalLoadBalancer"
              ],
              "x-ms-enum": {
                "name": "LoadBalancerType",
                "modelAsString": true
              }
            },
            "loadBalancerSubnet": {
              "description": "Load Balancer Subnet",
              "type": "string",
              "x-nullable": true
            }
          }
        }
      }
    },
    "Kubernetes": {
      "description": "A Machine Learning compute based on Kubernetes Compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/KubernetesSchema"
        }
      ],
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesSchema": {
      "type": "object",
      "description": "Kubernetes Compute Schema",
      "properties": {
        "properties": {
          "description": "Properties of Kubernetes",
          "$ref": "#/definitions/KubernetesProperties"
        }
      }
    },
    "KubernetesProperties": {
      "type": "object",
      "description": "Kubernetes properties",
      "properties": {
        "relayConnectionString": {
          "description": "Relay connection string.",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "serviceBusConnectionString": {
          "description": "ServiceBus connection string.",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "extensionPrincipalId": {
          "description": "Extension principal-id.",
          "type": "string",
          "x-nullable": true
        },
        "extensionInstanceReleaseTrain": {
          "description": "Extension instance release train.",
          "type": "string"
        },
        "vcName": {
          "description": "VC name.",
          "type": "string"
        },
        "namespace": {
          "description": "Compute namespace",
          "type": "string",
          "default": "default"
        },
        "defaultInstanceType": {
          "description": "Default instance type",
          "type": "string"
        },
        "instanceTypes": {
          "description": "Instance Type Schema",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InstanceTypeSchema"
          }
        }
      }
    },
    "AmlComputeProperties": {
      "type": "object",
      "description": "AML Compute properties",
      "properties": {
        "osType": {
          "description": "Compute OS Type",
          "type": "string",
          "default": "Linux",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          }
        },
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        },
        "vmPriority": {
          "description": "Virtual Machine priority",
          "type": "string",
          "enum": [
            "Dedicated",
            "LowPriority"
          ],
          "x-ms-enum": {
            "name": "VmPriority",
            "modelAsString": true
          }
        },
        "virtualMachineImage": {
          "description": "Virtual Machine image for AML Compute - windows only",
          "$ref": "#/definitions/VirtualMachineImage",
          "x-nullable": true
        },
        "isolatedNetwork": {
          "description": "Network is isolated or not",
          "type": "boolean"
        },
        "scaleSettings": {
          "description": "Scale settings for AML Compute",
          "$ref": "#/definitions/ScaleSettings"
        },
        "userAccountCredentials": {
          "title": "User account credentials.",
          "description": "Credentials for an administrator user account that will be created on each compute node.",
          "$ref": "#/definitions/UserAccountCredentials",
          "x-nullable": true
        },
        "subnet": {
          "title": "Subnet.",
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "$ref": "#/definitions/ResourceId",
          "x-nullable": true
        },
        "remoteLoginPortPublicAccess": {
          "type": "string",
          "default": "NotSpecified",
          "title": "Close remote Login Access Port",
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
          "enum": [
            "Enabled",
            "Disabled",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "remoteLoginPortPublicAccess",
            "modelAsString": true
          }
        },
        "allocationState": {
          "type": "string",
          "readOnly": true,
          "title": "Allocation state.",
          "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
          "enum": [
            "Steady",
            "Resizing"
          ],
          "x-ms-enum": {
            "name": "AllocationState",
            "modelAsString": true
          }
        },
        "allocationStateTransitionTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "title": "Allocation state transition time.",
          "description": "The time at which the compute entered its current allocation state."
        },
        "errors": {
          "readOnly": true,
          "title": "Errors.",
          "description": "Collection of errors encountered by various compute nodes during node setup.",
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "currentNodeCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "title": "Current node count.",
          "description": "The number of compute nodes currently assigned to the compute.",
          "x-nullable": true
        },
        "targetNodeCount": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "title": "Target node count.",
          "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.",
          "x-nullable": true
        },
        "nodeStateCounts": {
          "title": "Node state counts.",
          "description": "Counts of various node states on the compute.",
          "readOnly": true,
          "$ref": "#/definitions/NodeStateCounts",
          "x-nullable": true
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "default": true,
          "title": "Enable node public IP.",
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.",
          "x-nullable": true
        },
        "propertyBag": {
          "type": "object",
          "description": "A property bag containing additional properties.",
          "x-nullable": true
        }
      }
    },
    "AmlCompute": {
      "description": "An Azure Machine Learning compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AmlComputeSchema"
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "AmlComputeSchema": {
      "type": "object",
      "description": "Properties(top level) of AmlCompute",
      "properties": {
        "properties": {
          "description": "Properties of AmlCompute",
          "$ref": "#/definitions/AmlComputeProperties"
        }
      }
    },
    "ComputeInstanceProperties": {
      "description": "Compute Instance properties",
      "type": "object",
      "properties": {
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        },
        "subnet": {
          "title": "Subnet.",
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "$ref": "#/definitions/ResourceId",
          "x-nullable": true
        },
        "applicationSharingPolicy": {
          "type": "string",
          "default": "Shared",
          "title": "Sharing policy for applications on this compute instance",
          "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.",
          "enum": [
            "Personal",
            "Shared"
          ],
          "x-ms-enum": {
            "name": "applicationSharingPolicy",
            "modelAsString": true
          }
        },
        "sshSettings": {
          "description": "Specifies policy and settings for SSH access.",
          "$ref": "#/definitions/ComputeInstanceSshSettings",
          "x-nullable": true
        },
        "customServices": {
          "type": "array",
          "description": "List of Custom Services added to the compute.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CustomService"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "osImageMetadata": {
          "readOnly": true,
          "description": "Returns metadata about the operating system image for this compute instance.",
          "$ref": "#/definitions/ImageMetadata"
        },
        "connectivityEndpoints": {
          "readOnly": true,
          "description": "Describes all connectivity endpoints available for this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceConnectivityEndpoints"
        },
        "applications": {
          "type": "array",
          "readOnly": true,
          "description": "Describes available applications and their endpoints on this ComputeInstance.",
          "items": {
            "$ref": "#/definitions/ComputeInstanceApplication"
          },
          "x-ms-identifiers": [
            "displayName"
          ]
        },
        "createdBy": {
          "readOnly": true,
          "description": "Describes information on user who created this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceCreatedBy"
        },
        "errors": {
          "readOnly": true,
          "title": "Errors.",
          "description": "Collection of errors encountered on this ComputeInstance.",
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "state": {
          "description": "The current state of this ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceState",
          "readOnly": true
        },
        "computeInstanceAuthorizationType": {
          "type": "string",
          "title": "Compute Instance Authorization type.",
          "description": "The Compute Instance Authorization type. Available values are personal (default).",
          "default": "personal",
          "x-nullable": true,
          "enum": [
            "personal"
          ],
          "x-ms-enum": {
            "name": "ComputeInstanceAuthorizationType",
            "modelAsString": true
          }
        },
        "personalComputeInstanceSettings": {
          "title": "Personal Compute Instance settings.",
          "description": "Settings for a personal compute instance.",
          "$ref": "#/definitions/PersonalComputeInstanceSettings",
          "x-nullable": true
        },
        "setupScripts": {
          "description": "Details of customized scripts to execute for setting up the cluster.",
          "$ref": "#/definitions/SetupScripts",
          "x-nullable": true
        },
        "lastOperation": {
          "description": "The last operation on ComputeInstance.",
          "$ref": "#/definitions/ComputeInstanceLastOperation",
          "readOnly": true,
          "x-nullable": true
        },
        "schedules": {
          "description": "The list of schedules to be applied on the computes.",
          "$ref": "#/definitions/ComputeSchedules",
          "x-nullable": true
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "title": "Enable node public IP.",
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
        },
        "containers": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of containers on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceContainer"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "dataDisks": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of dataDisks on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataDisk"
          },
          "x-ms-identifiers": []
        },
        "dataMounts": {
          "type": "array",
          "readOnly": true,
          "description": "Describes informations of dataMounts on this ComputeInstance.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataMount"
          },
          "x-ms-identifiers": []
        },
        "versions": {
          "description": "ComputeInstance version.",
          "$ref": "#/definitions/ComputeInstanceVersion",
          "readOnly": true
        }
      }
    },
    "ComputeInstance": {
      "description": "An Azure Machine Learning compute instance.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/ComputeInstanceSchema"
        }
      ],
      "x-ms-discriminator-value": "ComputeInstance"
    },
    "ComputeInstanceSchema": {
      "type": "object",
      "description": "Properties(top level) of ComputeInstance",
      "properties": {
        "properties": {
          "description": "Properties of ComputeInstance",
          "$ref": "#/definitions/ComputeInstanceProperties"
        }
      }
    },
    "VirtualMachine": {
      "description": "A Machine Learning compute based on Azure Virtual Machines.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/VirtualMachineSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "virtualMachineSize": {
              "description": "Virtual Machine size",
              "type": "string"
            },
            "sshPort": {
              "description": "Port open for ssh connections.",
              "type": "integer",
              "format": "int32"
            },
            "notebookServerPort": {
              "description": "Notebook server port open for ssh connections.",
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "description": "Public IP address of the virtual machine.",
              "type": "string"
            },
            "administratorAccount": {
              "description": "Admin credentials for virtual machine",
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            "isNotebookInstanceCompute": {
              "description": "Indicates whether this compute will be used for running notebooks.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "HDInsightProperties": {
      "type": "object",
      "description": "HDInsight compute properties",
      "properties": {
        "sshPort": {
          "description": "Port open for ssh connections on the master node of the cluster.",
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "description": "Public IP address of the master node of the cluster.",
          "type": "string"
        },
        "administratorAccount": {
          "description": "Admin credentials for master node of the cluster",
          "$ref": "#/definitions/VirtualMachineSshCredentials",
          "x-nullable": true
        }
      }
    },
    "HDInsight": {
      "description": "A HDInsight compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/HDInsightSchema"
        }
      ],
      "x-ms-discriminator-value": "HDInsight"
    },
    "HDInsightSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HDInsightProperties"
        }
      }
    },
    "DataFactory": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "DataFactory"
    },
    "DatabricksProperties": {
      "type": "object",
      "description": "Properties of Databricks",
      "properties": {
        "databricksAccessToken": {
          "description": "Databricks access token",
          "type": "string"
        },
        "workspaceUrl": {
          "description": "Workspace Url",
          "type": "string"
        }
      }
    },
    "Databricks": {
      "description": "A DataFactory compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DatabricksSchema"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DatabricksSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabricksProperties"
        }
      }
    },
    "DataLakeAnalytics": {
      "description": "A DataLakeAnalytics compute.",
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DataLakeAnalyticsSchema"
        }
      ],
      "x-ms-discriminator-value": "DataLakeAnalytics"
    },
    "DataLakeAnalyticsSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "dataLakeStoreAccountName": {
              "description": "DataLake Store Account Name",
              "type": "string"
            }
          }
        }
      }
    },
    "SynapseSpark": {
      "type": "object",
      "description": "A SynapseSpark compute.",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "autoScaleProperties": {
              "description": "Auto scale properties.",
              "$ref": "#/definitions/AutoScaleProperties"
            },
            "autoPauseProperties": {
              "description": "Auto pause properties.",
              "$ref": "#/definitions/AutoPauseProperties"
            },
            "sparkVersion": {
              "description": "Spark version.",
              "type": "string"
            },
            "nodeCount": {
              "description": "The number of compute nodes currently assigned to the compute.",
              "type": "integer",
              "format": "int32"
            },
            "nodeSize": {
              "description": "Node size.",
              "type": "string"
            },
            "nodeSizeFamily": {
              "description": "Node size family.",
              "type": "string"
            },
            "subscriptionId": {
              "description": "Azure subscription identifier.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Name of the resource group in which workspace is located.",
              "type": "string"
            },
            "workspaceName": {
              "description": "Name of Azure Machine Learning workspace.",
              "type": "string"
            },
            "poolName": {
              "description": "Pool name.",
              "type": "string"
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "SystemService": {
      "type": "object",
      "description": "A system service running on a compute.",
      "properties": {
        "systemServiceType": {
          "description": "The type of this system service.",
          "readOnly": true,
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address",
          "readOnly": true
        },
        "version": {
          "description": "The version for this type.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SslConfiguration": {
      "type": "object",
      "description": "The ssl configuration for scoring",
      "properties": {
        "status": {
          "description": "Enable or disable ssl for scoring",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Auto"
          ],
          "x-ms-enum": {
            "name": "SslConfigStatus",
            "modelAsString": true
          }
        },
        "cert": {
          "description": "Cert data",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "key": {
          "description": "Key data",
          "type": "string",
          "x-ms-secret": true,
          "x-nullable": true
        },
        "cname": {
          "description": "CNAME of the cert",
          "type": "string",
          "x-nullable": true
        },
        "leafDomainLabel": {
          "description": "Leaf domain label of public endpoint",
          "type": "string",
          "x-nullable": true
        },
        "overwriteExistingDomain": {
          "description": "Indicates whether to overwrite existing domain label.",
          "type": "boolean"
        }
      }
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "description": "Advance configuration for AKS networking",
      "properties": {
        "subnetId": {
          "description": "Virtual network subnet resource ID the compute nodes belong to",
          "type": "string"
        },
        "serviceCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "type": "string"
        },
        "dnsServiceIP": {
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "dockerBridgeCidr": {
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
          "type": "string"
        }
      }
    },
    "UserAccountCredentials": {
      "type": "object",
      "properties": {
        "adminUserName": {
          "type": "string",
          "title": "User name.",
          "description": "Name of the administrator user account which can be used to SSH to nodes."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "x-ms-secret": true,
          "title": "SSH public key.",
          "description": "SSH public key of the administrator user account."
        },
        "adminUserPassword": {
          "type": "string",
          "x-ms-secret": true,
          "title": "Password.",
          "description": "Password of the administrator user account."
        }
      },
      "required": [
        "adminUserName"
      ],
      "description": "Settings for user account that gets created on each on the nodes of a compute."
    },
    "ScaleSettings": {
      "type": "object",
      "description": "scale settings for AML Compute",
      "properties": {
        "maxNodeCount": {
          "description": "Max number of nodes to use",
          "type": "integer",
          "format": "int32"
        },
        "minNodeCount": {
          "description": "Min number of nodes to use",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration",
          "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
        }
      },
      "required": [
        "maxNodeCount"
      ]
    },
    "VirtualMachineImage": {
      "type": "object",
      "description": "Virtual Machine image for Windows AML Compute",
      "properties": {
        "id": {
          "description": "Virtual Machine image path",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "NodeStateCounts": {
      "type": "object",
      "properties": {
        "idleNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Idle node count.",
          "description": "Number of compute nodes in idle state."
        },
        "runningNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Running node count.",
          "description": "Number of compute nodes which are running jobs."
        },
        "preparingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preparing node count.",
          "description": "Number of compute nodes which are being prepared."
        },
        "unusableNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Unusable node count.",
          "description": "Number of compute nodes which are in unusable state."
        },
        "leavingNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Leaving node count.",
          "description": "Number of compute nodes which are leaving the amlCompute."
        },
        "preemptedNodeCount": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "title": "Preempted node count.",
          "description": "Number of compute nodes which are in preempted state."
        }
      },
      "description": "Counts of various compute node states on the amlCompute."
    },
    "ScaleSettingsInformation": {
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings",
          "title": "Scale settings."
        }
      },
      "description": "Desired scale settings for the amlCompute."
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of ClusterUpdate",
          "$ref": "#/definitions/ScaleSettingsInformation"
        }
      },
      "description": "The properties of a amlCompute that need to be updated."
    },
    "ClusterUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ClusterUpdateProperties",
          "description": "The properties of the amlCompute."
        }
      },
      "description": "AmlCompute update parameters."
    },
    "AmlComputeNodesInformation": {
      "type": "object",
      "description": "Result of AmlCompute Nodes",
      "properties": {
        "nodes": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlComputeNodeInformation"
          },
          "x-ms-identifiers": [
            "nodeId"
          ],
          "description": "The collection of returned AmlCompute nodes details."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The continuation token."
        }
      }
    },
    "AmlComputeNodeInformation": {
      "type": "object",
      "description": "Compute node information related to a AmlCompute.",
      "properties": {
        "nodeId": {
          "readOnly": true,
          "type": "string",
          "title": "Node ID.",
          "description": "ID of the compute node."
        },
        "privateIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Private IP address.",
          "description": "Private IP address of the compute node.",
          "x-nullable": true
        },
        "publicIpAddress": {
          "readOnly": true,
          "type": "string",
          "title": "Public IP address.",
          "description": "Public IP address of the compute node.",
          "x-nullable": true
        },
        "port": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "title": "Port.",
          "description": "SSH port number of the node."
        },
        "nodeState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "idle",
            "running",
            "preparing",
            "unusable",
            "leaving",
            "preempted"
          ],
          "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.",
          "x-ms-enum": {
            "name": "nodeState",
            "modelAsString": true
          }
        },
        "runId": {
          "readOnly": true,
          "type": "string",
          "title": "Run ID.",
          "description": "ID of the Experiment running on the node, if any else null.",
          "x-nullable": true
        }
      }
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "description": "Admin credentials for virtual machine",
      "properties": {
        "username": {
          "description": "Username of admin account",
          "type": "string"
        },
        "password": {
          "description": "Password of admin account",
          "type": "string"
        },
        "publicKeyData": {
          "description": "Public key data",
          "type": "string",
          "x-ms-secret": true
        },
        "privateKeyData": {
          "description": "Private key data",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ComputeSecrets": {
      "type": "object",
      "description": "Secrets related to a Machine Learning compute. Might differ for every type of compute.",
      "discriminator": "computeType",
      "properties": {
        "computeType": {
          "description": "The type of compute",
          "$ref": "#/definitions/ComputeType"
        }
      },
      "required": [
        "computeType"
      ]
    },
    "AksComputeSecretsProperties": {
      "type": "object",
      "description": "Properties of AksComputeSecrets",
      "properties": {
        "userKubeConfig": {
          "type": "string",
          "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
        },
        "adminKubeConfig": {
          "type": "string",
          "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster."
        },
        "imagePullSecretName": {
          "type": "string",
          "description": "Image registry pull secret.",
          "x-nullable": true
        }
      }
    },
    "AksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/AksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "VirtualMachineSecrets": {
      "description": "Secrets related to a Machine Learning compute based on AKS.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/VirtualMachineSecretsSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineSecretsSchema": {
      "type": "object",
      "properties": {
        "administratorAccount": {
          "description": "Admin credentials for virtual machine.",
          "$ref": "#/definitions/VirtualMachineSshCredentials"
        }
      }
    },
    "DatabricksComputeSecretsProperties": {
      "type": "object",
      "description": "Properties of Databricks Compute Secrets",
      "properties": {
        "databricksAccessToken": {
          "description": "access token for databricks account.",
          "type": "string"
        }
      }
    },
    "DatabricksComputeSecrets": {
      "description": "Secrets related to a Machine Learning compute based on Databricks.",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/DatabricksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "ComputeType": {
      "type": "string",
      "description": "The type of compute",
      "enum": [
        "AKS",
        "Kubernetes",
        "AmlCompute",
        "ComputeInstance",
        "DataFactory",
        "VirtualMachine",
        "HDInsight",
        "Databricks",
        "DataLakeAnalytics",
        "SynapseSpark"
      ],
      "x-ms-enum": {
        "name": "ComputeType",
        "modelAsString": true
      }
    },
    "ImageMetadata": {
      "type": "object",
      "description": "Returns metadata about the operating system image for this compute instance.",
      "properties": {
        "currentImageVersion": {
          "type": "string",
          "description": "Specifies the current operating system image version this compute instance is running on."
        },
        "latestImageVersion": {
          "type": "string",
          "description": "Specifies the latest available operating system image version."
        },
        "isLatestOsImageVersion": {
          "type": "boolean",
          "description": "Specifies whether this compute instance is running on the latest operating system image."
        }
      }
    },
    "CustomService": {
      "type": "object",
      "description": "Specifies the custom service configuration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Custom Service"
        },
        "image": {
          "$ref": "#/definitions/Image",
          "description": "Describes the Image Specifications"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment Variable for the container",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "docker": {
          "description": "Describes the docker settings for the image",
          "$ref": "#/definitions/Docker",
          "x-nullable": true
        },
        "endpoints": {
          "type": "array",
          "description": "Configuring the endpoints for the container",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "volumes": {
          "type": "array",
          "description": "Configuring the volumes for the container",
          "items": {
            "$ref": "#/definitions/VolumeDefinition"
          },
          "x-ms-identifiers": [
            "source",
            "target"
          ]
        }
      },
      "additionalProperties": true
    },
    "Image": {
      "type": "object",
      "description": "Describes the Image Specifications",
      "properties": {
        "type": {
          "default": "docker",
          "enum": [
            "docker",
            "azureml"
          ],
          "type": "string",
          "title": "Type of the image",
          "description": "Type of the image. Possible values are: docker - For docker images. azureml - For AzureML images",
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true
          }
        },
        "reference": {
          "type": "string",
          "description": "Image reference"
        }
      },
      "additionalProperties": true
    },
    "EnvironmentVariable": {
      "type": "object",
      "description": "Environment Variables for the container",
      "properties": {
        "type": {
          "enum": [
            "local"
          ],
          "default": "local",
          "title": "Type of Environment Variable",
          "description": "Type of the Environment Variable. Possible values are: local - For local variable",
          "type": "string",
          "x-ms-enum": {
            "name": "EnvironmentVariableType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "description": "Value of the Environment variable"
        }
      },
      "additionalProperties": true
    },
    "Docker": {
      "type": "object",
      "description": "Docker container configuration",
      "properties": {
        "privileged": {
          "type": "boolean",
          "description": "Indicate whether container shall run in privileged or non-privileged mode.",
          "x-nullable": true
        }
      },
      "additionalProperties": true
    },
    "Endpoint": {
      "type": "object",
      "description": "Describes the endpoint configuration for the container",
      "properties": {
        "protocol": {
          "enum": [
            "tcp",
            "udp",
            "http"
          ],
          "default": "tcp",
          "title": "Endpoint Communication Protocol",
          "description": "Protocol over which communication will happen over this endpoint",
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true
          },
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the Endpoint"
        },
        "target": {
          "format": "int32",
          "type": "integer",
          "description": "Application port inside the container."
        },
        "published": {
          "format": "int32",
          "type": "integer",
          "description": "Port over which the application is exposed from container.",
          "x-nullable": true
        },
        "hostIp": {
          "description": "Host IP over which the application is exposed from the container",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "VolumeDefinition": {
      "type": "object",
      "description": "Describes the volume configuration for the container",
      "properties": {
        "type": {
          "enum": [
            "bind",
            "volume",
            "tmpfs",
            "npipe"
          ],
          "default": "bind",
          "title": "Type of Volume Definition",
          "description": "Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe",
          "x-ms-enum": {
            "name": "VolumeDefinitionType",
            "modelAsString": true
          },
          "type": "string"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Indicate whether to mount volume as readOnly. Default value for this is false.",
          "x-nullable": true
        },
        "source": {
          "type": "string",
          "description": "Source of the mount. For bind mounts this is the host path."
        },
        "target": {
          "type": "string",
          "description": "Target of the mount. For bind mounts this is the path in the container."
        },
        "consistency": {
          "type": "string",
          "description": "Consistency of the volume"
        },
        "bind": {
          "$ref": "#/definitions/BindOptions",
          "description": "Bind Options of the mount"
        },
        "volume": {
          "$ref": "#/definitions/VolumeOptions",
          "description": "Volume Options of the mount"
        },
        "tmpfs": {
          "$ref": "#/definitions/TmpfsOptions",
          "description": "tmpfs option of the mount"
        }
      }
    },
    "VolumeOptions": {
      "type": "object",
      "description": "Describes the volume options for the container",
      "properties": {
        "nocopy": {
          "type": "boolean",
          "description": "Indicate whether volume is nocopy",
          "x-nullable": true
        }
      }
    },
    "BindOptions": {
      "type": "object",
      "description": "Describes the bind options for the container",
      "properties": {
        "propagation": {
          "type": "string",
          "description": "Type of Bind Option",
          "x-nullable": true
        },
        "createHostPath": {
          "type": "boolean",
          "description": "Indicate whether to create host path.",
          "x-nullable": true
        },
        "selinux": {
          "type": "string",
          "description": "Mention the selinux options.",
          "x-nullable": true
        }
      }
    },
    "TmpfsOptions": {
      "description": "Describes the tmpfs options for the container",
      "type": "object",
      "properties": {
        "size": {
          "format": "int32",
          "type": "integer",
          "description": "Mention the Tmpfs size"
        }
      }
    },
    "ComputeInstanceSshSettings": {
      "type": "object",
      "description": "Specifies policy and settings for SSH access.",
      "properties": {
        "sshPublicAccess": {
          "type": "string",
          "default": "Disabled",
          "title": "Access policy for SSH",
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "sshPublicAccess",
            "modelAsString": true
          }
        },
        "adminUserName": {
          "type": "string",
          "readOnly": true,
          "description": "Describes the admin user name."
        },
        "sshPort": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Describes the port for connecting through SSH."
        },
        "adminPublicKey": {
          "type": "string",
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        }
      }
    },
    "ComputeInstanceState": {
      "type": "string",
      "description": "Current state of an ComputeInstance.",
      "enum": [
        "Creating",
        "CreateFailed",
        "Deleting",
        "Running",
        "Restarting",
        "JobRunning",
        "SettingUp",
        "SetupFailed",
        "Starting",
        "Stopped",
        "Stopping",
        "UserSettingUp",
        "UserSetupFailed",
        "Unknown",
        "Unusable"
      ],
      "x-ms-enum": {
        "name": "ComputeInstanceState",
        "modelAsString": true
      }
    },
    "ComputeInstanceLastOperation": {
      "type": "object",
      "description": "The last operation on ComputeInstance.",
      "properties": {
        "operationName": {
          "type": "string",
          "description": "Name of the last operation.",
          "enum": [
            "Create",
            "Start",
            "Stop",
            "Restart",
            "Reimage",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "OperationName",
            "modelAsString": true
          }
        },
        "operationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last operation."
        },
        "operationStatus": {
          "type": "string",
          "description": "Operation status.",
          "enum": [
            "InProgress",
            "Succeeded",
            "CreateFailed",
            "StartFailed",
            "StopFailed",
            "RestartFailed",
            "ReimageFailed",
            "DeleteFailed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": true
          }
        },
        "operationTrigger": {
          "type": "string",
          "description": "Trigger of operation.",
          "enum": [
            "User",
            "Schedule",
            "IdleShutdown"
          ],
          "x-ms-enum": {
            "name": "operationTrigger",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceVersion": {
      "type": "object",
      "description": "Version of computeInstance.",
      "properties": {
        "runtime": {
          "type": "string",
          "description": "Runtime of compute instance.",
          "x-nullable": true
        }
      }
    },
    "ComputeSchedules": {
      "type": "object",
      "description": "The list of schedules to be applied on the computes",
      "properties": {
        "computeStartStop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeStartStopSchedule"
          },
          "description": "The list of compute start stop schedules to be applied."
        }
      }
    },
    "ComputeStartStopSchedule": {
      "type": "object",
      "description": "Compute start stop schedule properties",
      "properties": {
        "id": {
          "description": "A system assigned id for the schedule.",
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "provisioningStatus": {
          "description": "The current deployment state of schedule.",
          "type": "string",
          "enum": [
            "Completed",
            "Provisioning",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "provisioningStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Completed"
              },
              {
                "value": "Provisioning"
              },
              {
                "value": "Failed"
              }
            ]
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ScheduleStatus"
        },
        "action": {
          "description": "[Required] The compute power action.",
          "$ref": "#/definitions/ComputePowerAction"
        },
        "triggerType": {
          "description": "[Required] The schedule trigger type.",
          "$ref": "#/definitions/ComputeTriggerType"
        },
        "recurrence": {
          "description": "Required if triggerType is Recurrence.",
          "$ref": "#/definitions/Recurrence"
        },
        "cron": {
          "description": "Required if triggerType is Cron.",
          "$ref": "#/definitions/Cron"
        },
        "schedule": {
          "description": "[Deprecated] Not used any more.",
          "$ref": "#/definitions/ScheduleBase"
        }
      }
    },
    "ComputeTriggerType": {
      "enum": [
        "Recurrence",
        "Cron"
      ],
      "description": "Is the trigger type recurrence or cron.",
      "type": "string",
      "x-ms-enum": {
        "name": "ComputeTriggerType",
        "modelAsString": true,
        "values": [
          {
            "value": "Recurrence"
          },
          {
            "value": "Cron"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleBase": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A system assigned id for the schedule.",
          "type": "string",
          "x-nullable": true
        },
        "provisioningStatus": {
          "$ref": "#/definitions/ScheduleProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/ScheduleStatus"
        }
      },
      "additionalProperties": false
    },
    "ScheduleProvisioningState": {
      "enum": [
        "Completed",
        "Provisioning",
        "Failed"
      ],
      "description": "The current deployment state of schedule.",
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Completed"
          },
          {
            "value": "Provisioning"
          },
          {
            "value": "Failed"
          }
        ]
      },
      "additionalProperties": false
    },
    "ScheduleStatus": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "description": "Is the schedule enabled or disabled?",
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled"
          },
          {
            "value": "Disabled"
          }
        ]
      },
      "additionalProperties": false
    },
    "ComputePowerAction": {
      "type": "string",
      "description": "The compute power action.",
      "enum": [
        "Start",
        "Stop"
      ],
      "x-ms-enum": {
        "name": "ComputePowerAction",
        "modelAsString": true
      }
    },
    "Recurrence": {
      "type": "object",
      "description": "The workflow trigger recurrence for ComputeStartStop schedule type.",
      "properties": {
        "frequency": {
          "description": "[Required] The frequency to trigger schedule.",
          "$ref": "#/definitions/ComputeRecurrenceFrequency"
        },
        "interval": {
          "description": "[Required] Specifies schedule interval in conjunction with frequency",
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "description": "The start time in yyyy-MM-ddTHH:mm:ss format.",
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "default": "UTC",
          "type": "string"
        },
        "schedule": {
          "description": "[Required] The recurrence schedule.",
          "$ref": "#/definitions/ComputeRecurrenceSchedule"
        }
      }
    },
    "ComputeRecurrenceFrequency": {
      "description": "Enum to describe the frequency of a compute recurrence schedule",
      "enum": [
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComputeRecurrenceFrequency",
        "modelAsString": true,
        "values": [
          {
            "value": "Minute",
            "description": "Minute frequency"
          },
          {
            "value": "Hour",
            "description": "Hour frequency"
          },
          {
            "value": "Day",
            "description": "Day frequency"
          },
          {
            "value": "Week",
            "description": "Week frequency"
          },
          {
            "value": "Month",
            "description": "Month frequency"
          }
        ]
      },
      "additionalProperties": false
    },
    "ComputeRecurrenceSchedule": {
      "required": [
        "hours",
        "minutes"
      ],
      "type": "object",
      "properties": {
        "hours": {
          "description": "[Required] List of hours for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "minutes": {
          "description": "[Required] List of minutes for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "monthDays": {
          "description": "List of month days for the schedule",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-nullable": true
        },
        "weekDays": {
          "description": "List of days for the schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeWeekDay"
          },
          "x-nullable": true
        }
      },
      "additionalProperties": false
    },
    "ComputeWeekDay": {
      "description": "Enum of weekday",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComputeWeekDay",
        "modelAsString": true,
        "values": [
          {
            "value": "Monday",
            "description": "Monday weekday"
          },
          {
            "value": "Tuesday",
            "description": "Tuesday weekday"
          },
          {
            "value": "Wednesday",
            "description": "Wednesday weekday"
          },
          {
            "value": "Thursday",
            "description": "Thursday weekday"
          },
          {
            "value": "Friday",
            "description": "Friday weekday"
          },
          {
            "value": "Saturday",
            "description": "Saturday weekday"
          },
          {
            "value": "Sunday",
            "description": "Sunday weekday"
          }
        ]
      },
      "additionalProperties": false
    },
    "Cron": {
      "type": "object",
      "description": "The workflow trigger cron for ComputeStartStop schedule type.",
      "properties": {
        "startTime": {
          "description": "The start time in yyyy-MM-ddTHH:mm:ss format.",
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "type": "string",
          "default": "UTC"
        },
        "expression": {
          "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format.",
          "type": "string"
        }
      }
    },
    "IdleShutdownSetting": {
      "type": "object",
      "description": "Stops compute instance after user defined period of inactivity.",
      "properties": {
        "idleTimeBeforeShutdown": {
          "type": "string",
          "description": "Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days."
        }
      }
    },
    "ComputeInstanceDataMount": {
      "type": "object",
      "description": "Defines an Aml Instance DataMount.",
      "properties": {
        "source": {
          "type": "string",
          "description": "Source of the ComputeInstance data mount."
        },
        "sourceType": {
          "description": "Data source type.",
          "type": "string",
          "enum": [
            "Dataset",
            "Datastore",
            "URI"
          ],
          "x-ms-enum": {
            "name": "sourceType",
            "modelAsString": true
          }
        },
        "mountName": {
          "type": "string",
          "description": "name of the ComputeInstance data mount."
        },
        "mountAction": {
          "description": "Mount Action.",
          "type": "string",
          "enum": [
            "Mount",
            "Unmount"
          ],
          "x-ms-enum": {
            "name": "mountAction",
            "modelAsString": true
          }
        },
        "createdBy": {
          "type": "string",
          "description": "who this data mount created by."
        },
        "mountPath": {
          "type": "string",
          "description": "Path of this data mount."
        },
        "mountState": {
          "description": "Mount state.",
          "type": "string",
          "enum": [
            "MountRequested",
            "Mounted",
            "MountFailed",
            "UnmountRequested",
            "UnmountFailed",
            "Unmounted"
          ],
          "x-ms-enum": {
            "name": "mountState",
            "modelAsString": true
          }
        },
        "mountedOn": {
          "type": "string",
          "format": "date-time",
          "title": "Mounted time.",
          "description": "The time when the disk mounted."
        },
        "error": {
          "type": "string",
          "description": "Error of this data mount."
        }
      }
    },
    "ComputeInstanceDataDisk": {
      "type": "object",
      "description": "Defines an Aml Instance DataDisk.",
      "properties": {
        "caching": {
          "description": "Caching type of Data Disk.",
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "caching",
            "modelAsString": true
          }
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "title": "The initial disk size in gigabytes.",
          "description": "The initial disk size in gigabytes."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "The logical unit number.",
          "description": "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun."
        },
        "storageAccountType": {
          "description": "type of this storage account.",
          "type": "string",
          "default": "Standard_LRS",
          "enum": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "storageAccountType",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceContainer": {
      "type": "object",
      "description": "Defines an Aml Instance container.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the ComputeInstance container."
        },
        "autosave": {
          "description": "Auto save settings.",
          "type": "string",
          "enum": [
            "None",
            "Local",
            "Remote"
          ],
          "x-ms-enum": {
            "name": "autosave",
            "modelAsString": true
          }
        },
        "gpu": {
          "type": "string",
          "description": "Information of GPU."
        },
        "network": {
          "description": "network of this container.",
          "type": "string",
          "enum": [
            "Bridge",
            "Host"
          ],
          "x-ms-enum": {
            "name": "network",
            "modelAsString": true
          }
        },
        "environment": {
          "description": "Environment information of this container.",
          "$ref": "#/definitions/ComputeInstanceEnvironmentInfo"
        },
        "services": {
          "type": "array",
          "readOnly": true,
          "description": "services of this containers.",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ComputeInstanceEnvironmentInfo": {
      "type": "object",
      "description": "Environment information",
      "properties": {
        "name": {
          "description": "name of environment.",
          "type": "string"
        },
        "version": {
          "description": "version of environment.",
          "type": "string"
        }
      }
    },
    "ComputeInstanceApplication": {
      "type": "object",
      "description": "Defines an Aml Instance application and its connectivity endpoint URI.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of the ComputeInstance application."
        },
        "endpointUri": {
          "type": "string",
          "description": "Application' endpoint URI."
        }
      }
    },
    "ComputeInstanceConnectivityEndpoints": {
      "type": "object",
      "readOnly": true,
      "description": "Defines all connectivity endpoints and properties for an ComputeInstance.",
      "properties": {
        "publicIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Public IP Address of this ComputeInstance.",
          "x-nullable": true
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Private IP Address of this ComputeInstance (local to the VNET in which the compute instance is deployed).",
          "x-nullable": true
        }
      }
    },
    "ComputeInstanceCreatedBy": {
      "type": "object",
      "readOnly": true,
      "description": "Describes information on user who created this ComputeInstance.",
      "properties": {
        "userName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the user.",
          "x-nullable": true
        },
        "userOrgId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies user' Azure Active Directory organization."
        },
        "userId": {
          "type": "string",
          "readOnly": true,
          "description": "Uniquely identifies the user within his/her organization.",
          "x-nullable": true
        }
      }
    },
    "PersonalComputeInstanceSettings": {
      "type": "object",
      "properties": {
        "assignedUser": {
          "$ref": "#/definitions/AssignedUser",
          "title": "Assigned User.",
          "description": "A user explicitly assigned to a personal compute instance."
        }
      },
      "description": "Settings for a personal compute instance."
    },
    "AssignedUser": {
      "type": "object",
      "description": "A user that can be assigned to a compute instance.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "User\u2019s AAD Object Id."
        },
        "tenantId": {
          "type": "string",
          "description": "User\u2019s AAD Tenant Id."
        }
      },
      "required": [
        "objectId",
        "tenantId"
      ]
    },
    "SetupScripts": {
      "type": "object",
      "description": "Details of customized scripts to execute for setting up the cluster.",
      "properties": {
        "scripts": {
          "description": "Customized setup scripts",
          "$ref": "#/definitions/ScriptsToExecute"
        }
      }
    },
    "ScriptsToExecute": {
      "type": "object",
      "description": "Customized setup scripts",
      "properties": {
        "startupScript": {
          "description": "Script that's run every time the machine starts.",
          "$ref": "#/definitions/ScriptReference"
        },
        "creationScript": {
          "description": "Script that's run only once during provision of the compute.",
          "$ref": "#/definitions/ScriptReference"
        }
      }
    },
    "ScriptReference": {
      "type": "object",
      "description": "Script reference",
      "properties": {
        "scriptSource": {
          "description": "The storage source of the script: workspace.",
          "type": "string"
        },
        "scriptData": {
          "description": "The location of scripts in the mounted volume.",
          "type": "string"
        },
        "scriptArguments": {
          "description": "Optional command line arguments passed to the script to run.",
          "type": "string"
        },
        "timeout": {
          "description": "Optional time period passed to timeout command.",
          "type": "string"
        }
      }
    },
    "AutoScaleProperties": {
      "type": "object",
      "description": "Auto scale properties",
      "properties": {
        "minNodeCount": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "maxNodeCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AutoPauseProperties": {
      "type": "object",
      "description": "Auto pause properties",
      "properties": {
        "delayInMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "InstanceTypeSchema": {
      "type": "object",
      "description": "Instance type schema.",
      "properties": {
        "nodeSelector": {
          "type": "object",
          "description": "Node Selector",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "resources": {
          "type": "object",
          "description": "Resource requests/limits for this instance type",
          "properties": {
            "requests": {
              "description": "Resource requests for this instance type",
              "$ref": "#/definitions/InstanceResourceSchema"
            },
            "limits": {
              "description": "Resource limits for this instance type",
              "$ref": "#/definitions/InstanceResourceSchema"
            }
          }
        }
      }
    },
    "InstanceResourceSchema": {
      "type": "object",
      "description": "Resource requests/limits for this instance type",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}