{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.StandbyPool",
    "version": "2025-03-01"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.StandbyPool/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyContainerGroupPools": {
      "get": {
        "operationId": "StandbyContainerGroupPools_ListBySubscription",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "List StandbyContainerGroupPoolResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_ListBySubscription": {
            "$ref": "./examples/StandbyContainerGroupPools_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_ListBySubscription",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "List StandbyVirtualMachinePoolResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_ListBySubscription": {
            "$ref": "./examples/StandbyVirtualMachinePools_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools": {
      "get": {
        "operationId": "StandbyContainerGroupPools_ListByResourceGroup",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "List StandbyContainerGroupPoolResource resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_ListByResourceGroup": {
            "$ref": "./examples/StandbyContainerGroupPools_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}": {
      "get": {
        "operationId": "StandbyContainerGroupPools_Get",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Get a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_Get": {
            "$ref": "./examples/StandbyContainerGroupPools_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StandbyContainerGroupPools_CreateOrUpdate",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Create a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StandbyContainerGroupPoolResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResource"
            }
          },
          "201": {
            "description": "Resource 'StandbyContainerGroupPoolResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_CreateOrUpdate": {
            "$ref": "./examples/StandbyContainerGroupPools_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StandbyContainerGroupPools_Update",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Update a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_Update": {
            "$ref": "./examples/StandbyContainerGroupPools_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "StandbyContainerGroupPools_Delete",
        "tags": [
          "StandbyContainerGroupPools"
        ],
        "description": "Delete a StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPools_Delete": {
            "$ref": "./examples/StandbyContainerGroupPools_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}/runtimeViews": {
      "get": {
        "operationId": "StandbyContainerGroupPoolRuntimeViews_ListByStandbyPool",
        "tags": [
          "StandbyContainerGroupPoolRuntimeViews"
        ],
        "description": "List StandbyContainerGroupPoolRuntimeViewResource resources by StandbyContainerGroupPoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolRuntimeViewResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPoolRuntimeViews_ListByStandbyPool": {
            "$ref": "./examples/StandbyContainerGroupPoolRuntimeViews_ListByStandbyPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}/runtimeViews/{runtimeView}": {
      "get": {
        "operationId": "StandbyContainerGroupPoolRuntimeViews_Get",
        "tags": [
          "StandbyContainerGroupPoolRuntimeViews"
        ],
        "description": "Get a StandbyContainerGroupPoolRuntimeViewResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyContainerGroupPoolName",
            "in": "path",
            "description": "Name of the standby container group pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "runtimeView",
            "in": "path",
            "description": "The unique identifier for the runtime view. The input string should be the word 'latest', which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{0,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyContainerGroupPoolRuntimeViewResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyContainerGroupPoolRuntimeViews_Get": {
            "$ref": "./examples/StandbyContainerGroupPoolRuntimeViews_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_ListByResourceGroup",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "List StandbyVirtualMachinePoolResource resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_ListByResourceGroup": {
            "$ref": "./examples/StandbyVirtualMachinePools_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}": {
      "get": {
        "operationId": "StandbyVirtualMachinePools_Get",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Get a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_Get": {
            "$ref": "./examples/StandbyVirtualMachinePools_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StandbyVirtualMachinePools_CreateOrUpdate",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Create a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StandbyVirtualMachinePoolResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
            }
          },
          "201": {
            "description": "Resource 'StandbyVirtualMachinePoolResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_CreateOrUpdate": {
            "$ref": "./examples/StandbyVirtualMachinePools_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StandbyVirtualMachinePools_Update",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Update a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_Update": {
            "$ref": "./examples/StandbyVirtualMachinePools_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "StandbyVirtualMachinePools_Delete",
        "tags": [
          "StandbyVirtualMachinePools"
        ],
        "description": "Delete a StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePools_Delete": {
            "$ref": "./examples/StandbyVirtualMachinePools_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/runtimeViews": {
      "get": {
        "operationId": "StandbyVirtualMachinePoolRuntimeViews_ListByStandbyPool",
        "tags": [
          "StandbyVirtualMachinePoolRuntimeViews"
        ],
        "description": "List StandbyVirtualMachinePoolRuntimeViewResource resources by StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolRuntimeViewResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePoolRuntimeViews_ListByStandbyPool": {
            "$ref": "./examples/StandbyVirtualMachinePoolRuntimeViews_ListByStandbyPool.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/runtimeViews/{runtimeView}": {
      "get": {
        "operationId": "StandbyVirtualMachinePoolRuntimeViews_Get",
        "tags": [
          "StandbyVirtualMachinePoolRuntimeViews"
        ],
        "description": "Get a StandbyVirtualMachinePoolRuntimeViewResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "runtimeView",
            "in": "path",
            "description": "The unique identifier for the runtime view. The input string should be the word 'latest', which will get the latest runtime view of the pool, otherwise the request will fail with NotFound exception.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{0,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachinePoolRuntimeViewResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachinePoolRuntimeViews_Get": {
            "$ref": "./examples/StandbyVirtualMachinePoolRuntimeViews_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines": {
      "get": {
        "operationId": "StandbyVirtualMachines_ListByStandbyVirtualMachinePoolResource",
        "tags": [
          "StandbyVirtualMachines"
        ],
        "description": "List StandbyVirtualMachineResource resources by StandbyVirtualMachinePoolResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachineResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachines_ListByStandbyVirtualMachinePoolResource": {
            "$ref": "./examples/StandbyVirtualMachines_ListByStandbyVirtualMachinePoolResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines/{standbyVirtualMachineName}": {
      "get": {
        "operationId": "StandbyVirtualMachines_Get",
        "tags": [
          "StandbyVirtualMachines"
        ],
        "description": "Get a StandbyVirtualMachineResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "standbyVirtualMachinePoolName",
            "in": "path",
            "description": "Name of the standby virtual machine pool",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "standbyVirtualMachineName",
            "in": "path",
            "description": "Name of the standby virtual machine",
            "required": true,
            "type": "string",
            "pattern": "^[_a-zA-Z0-9-]{3,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StandbyVirtualMachineResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StandbyVirtualMachines_Get": {
            "$ref": "./examples/StandbyVirtualMachines_Get.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ContainerGroupInstanceCountSummary": {
      "type": "object",
      "description": "Displays the counts of container groups in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "zone": {
          "type": "integer",
          "format": "int64",
          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled."
        },
        "instanceCountsByState": {
          "type": "array",
          "description": "The count of pooled container groups in each state for the given zone.",
          "items": {
            "$ref": "#/definitions/PoolContainerGroupStateCount"
          },
          "x-ms-identifiers": [
            "state"
          ]
        }
      },
      "required": [
        "instanceCountsByState"
      ]
    },
    "ContainerGroupProfile": {
      "type": "object",
      "description": "Details of the ContainerGroupProfile.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies container group profile id of standby container groups.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ContainerInstance/containerGroupProfiles"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies revision of container group profile."
        }
      },
      "required": [
        "id"
      ]
    },
    "ContainerGroupProperties": {
      "type": "object",
      "description": "Details of the ContainerGroupProperties.",
      "properties": {
        "containerGroupProfile": {
          "$ref": "#/definitions/ContainerGroupProfile",
          "description": "Specifies container group profile of standby container groups."
        },
        "subnetIds": {
          "type": "array",
          "description": "Specifies subnet Ids for container group.",
          "items": {
            "$ref": "#/definitions/Subnet"
          }
        }
      },
      "required": [
        "containerGroupProfile"
      ]
    },
    "HealthStateCode": {
      "type": "string",
      "description": "StandbyPool health state.",
      "enum": [
        "HealthState/healthy",
        "HealthState/degraded"
      ],
      "x-ms-enum": {
        "name": "HealthStateCode",
        "modelAsString": true,
        "values": [
          {
            "name": "healthy",
            "value": "HealthState/healthy",
            "description": "StandbyPool is in healthy state."
          },
          {
            "name": "degraded",
            "value": "HealthState/degraded",
            "description": "StandbyPool is in degraded state."
          }
        ]
      }
    },
    "PoolContainerGroupState": {
      "type": "string",
      "description": "The state of the pooled container groups.",
      "enum": [
        "Running",
        "Creating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "PoolContainerGroupState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The container group is up and running."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The container group is creating."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The container group is deleting."
          }
        ]
      }
    },
    "PoolContainerGroupStateCount": {
      "type": "object",
      "description": "Displays the counts of pooled container groups in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "state": {
          "$ref": "#/definitions/PoolContainerGroupState",
          "description": "The state that the pooled container groups count is for."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The count of pooled container groups in the given state."
        }
      },
      "required": [
        "state",
        "count"
      ]
    },
    "PoolStatus": {
      "type": "object",
      "description": "Displays StandbyPool status.",
      "properties": {
        "code": {
          "$ref": "#/definitions/HealthStateCode",
          "description": "Displays the healthy state of the StandbyPool.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Displays the StandbyPool health state details.",
          "readOnly": true
        }
      },
      "required": [
        "code"
      ]
    },
    "PoolVirtualMachineState": {
      "type": "string",
      "description": "The state of the pooled virtual machines.",
      "enum": [
        "Running",
        "Creating",
        "Starting",
        "Deleting",
        "Deallocated",
        "Deallocating",
        "Hibernated",
        "Hibernating"
      ],
      "x-ms-enum": {
        "name": "PoolVirtualMachineState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The virtual machine is up and running."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The virtual machine is creating."
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "The virtual machine is starting."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The virtual machine is deleting."
          },
          {
            "name": "Deallocated",
            "value": "Deallocated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Deallocating",
            "value": "Deallocating",
            "description": "The virtual machine is releasing the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Hibernated",
            "value": "Hibernated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk. When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
          },
          {
            "name": "Hibernating",
            "value": "Hibernating",
            "description": "The virtual machine is hibernating."
          }
        ]
      }
    },
    "PoolVirtualMachineStateCount": {
      "type": "object",
      "description": "Displays the counts of pooled virtual machines in each state, as known by the StandbyPool resource provider.",
      "properties": {
        "state": {
          "$ref": "#/definitions/PoolVirtualMachineState",
          "description": "The state that the pooled virtual machines count is for."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The count of pooled virtual machines in the given state."
        }
      },
      "required": [
        "state",
        "count"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being deleted."
          }
        ]
      },
      "readOnly": true
    },
    "RefillPolicy": {
      "type": "string",
      "description": "Refill policy of standby pool",
      "enum": [
        "always"
      ],
      "x-ms-enum": {
        "name": "RefillPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "always",
            "value": "always",
            "description": "A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity."
          }
        ]
      }
    },
    "StandbyContainerGroupPoolElasticityProfile": {
      "type": "object",
      "description": "Specifies the elasticity profile of the standby container group pools.",
      "properties": {
        "maxReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies maximum number of standby container groups in the standby pool.",
          "minimum": 0,
          "maximum": 2000
        },
        "refillPolicy": {
          "$ref": "#/definitions/RefillPolicy",
          "description": "Specifies refill policy of the pool."
        }
      },
      "required": [
        "maxReadyCapacity"
      ]
    },
    "StandbyContainerGroupPoolForecastValues": {
      "type": "object",
      "description": "Displays the forecast information of the standby pool.",
      "properties": {
        "instancesRequestedCount": {
          "type": "array",
          "description": "Displays the predicted count of instances to be requested from the standby pool.",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        }
      },
      "required": [
        "instancesRequestedCount"
      ]
    },
    "StandbyContainerGroupPoolPrediction": {
      "type": "object",
      "description": "Displays prediction information of the standby pool.",
      "properties": {
        "forecastValues": {
          "$ref": "#/definitions/StandbyContainerGroupPoolForecastValues",
          "description": "Displays the forecast information of the standby pool.",
          "readOnly": true
        },
        "forecastStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
          "readOnly": true
        },
        "forecastInfo": {
          "type": "string",
          "description": "Displays additional information for the prediction of the standby pool.",
          "readOnly": true
        }
      },
      "required": [
        "forecastValues",
        "forecastStartTime",
        "forecastInfo"
      ]
    },
    "StandbyContainerGroupPoolResource": {
      "type": "object",
      "description": "A StandbyContainerGroupPoolResource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StandbyContainerGroupPoolResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StandbyContainerGroupPoolResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyContainerGroupPoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyContainerGroupPoolResource items on this page",
          "items": {
            "$ref": "#/definitions/StandbyContainerGroupPoolResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyContainerGroupPoolResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyContainerGroupPool.",
      "properties": {
        "elasticityProfile": {
          "$ref": "#/definitions/StandbyContainerGroupPoolElasticityProfile",
          "description": "Specifies elasticity profile of standby container group pools."
        },
        "containerGroupProperties": {
          "$ref": "#/definitions/ContainerGroupProperties",
          "description": "Specifies container group properties of standby container group pools."
        },
        "zones": {
          "type": "array",
          "description": "Specifies zones of standby container group pools.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "elasticityProfile",
        "containerGroupProperties"
      ]
    },
    "StandbyContainerGroupPoolResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the StandbyContainerGroupPoolResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/StandbyContainerGroupPoolResourceUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StandbyContainerGroupPoolResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the StandbyContainerGroupPoolResource.",
      "properties": {
        "elasticityProfile": {
          "$ref": "#/definitions/StandbyContainerGroupPoolElasticityProfile",
          "description": "Specifies elasticity profile of standby container group pools."
        },
        "containerGroupProperties": {
          "$ref": "#/definitions/ContainerGroupProperties",
          "description": "Specifies container group properties of standby container group pools."
        },
        "zones": {
          "type": "array",
          "description": "Specifies zones of standby container group pools.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StandbyContainerGroupPoolRuntimeViewResource": {
      "type": "object",
      "description": "Contains information about a standby container group pool as last known by the StandbyPool resource provider.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StandbyContainerGroupPoolRuntimeViewResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StandbyContainerGroupPoolRuntimeViewResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyContainerGroupPoolRuntimeViewResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyContainerGroupPoolRuntimeViewResource items on this page",
          "items": {
            "$ref": "#/definitions/StandbyContainerGroupPoolRuntimeViewResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyContainerGroupPoolRuntimeViewResourceProperties": {
      "type": "object",
      "description": "Contains information about a standby pool as last known by the StandbyPool resource provider.",
      "properties": {
        "instanceCountSummary": {
          "type": "array",
          "description": "A list containing the counts of container groups in each possible state, as known by the StandbyPool resource provider.",
          "items": {
            "$ref": "#/definitions/ContainerGroupInstanceCountSummary"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/PoolStatus",
          "description": "Display status of the standby pool",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Displays the provisioning state of the standby pool",
          "readOnly": true
        },
        "prediction": {
          "$ref": "#/definitions/StandbyContainerGroupPoolPrediction",
          "description": "Displays prediction information of the standby pool",
          "readOnly": true
        }
      },
      "required": [
        "instanceCountSummary"
      ]
    },
    "StandbyVirtualMachinePoolElasticityProfile": {
      "type": "object",
      "description": "Details of the elasticity profile.",
      "properties": {
        "maxReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the maximum number of virtual machines in the standby virtual machine pool.",
          "minimum": 0,
          "maximum": 2000
        },
        "minReadyCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies the desired minimum number of virtual machines in the standby virtual machine pool. MinReadyCapacity cannot exceed MaxReadyCapacity.",
          "minimum": 0,
          "maximum": 2000
        }
      },
      "required": [
        "maxReadyCapacity"
      ]
    },
    "StandbyVirtualMachinePoolForecastValues": {
      "type": "object",
      "description": "Displays the forecast information of the standby pool.",
      "properties": {
        "instancesRequestedCount": {
          "type": "array",
          "description": "Displays the predicted count of instances to be requested from the standby pool.",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "readOnly": true
        }
      },
      "required": [
        "instancesRequestedCount"
      ]
    },
    "StandbyVirtualMachinePoolPrediction": {
      "type": "object",
      "description": "Displays prediction information of the standby pool.",
      "properties": {
        "forecastValues": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolForecastValues",
          "description": "Displays the forecast information of the standby pool.",
          "readOnly": true
        },
        "forecastStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Displays the UTC timestamp of when the prediction was retrieved for the standby pool.",
          "readOnly": true
        },
        "forecastInfo": {
          "type": "string",
          "description": "Displays additional information for the prediction of the standby pool.",
          "readOnly": true
        }
      },
      "required": [
        "forecastValues",
        "forecastStartTime",
        "forecastInfo"
      ]
    },
    "StandbyVirtualMachinePoolResource": {
      "type": "object",
      "description": "A StandbyVirtualMachinePoolResource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StandbyVirtualMachinePoolResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachinePoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachinePoolResource items on this page",
          "items": {
            "$ref": "#/definitions/StandbyVirtualMachinePoolResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachinePoolResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyVirtualMachinePool.",
      "properties": {
        "elasticityProfile": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolElasticityProfile",
          "description": "Specifies the elasticity profile of the standby virtual machine pools."
        },
        "virtualMachineState": {
          "$ref": "#/definitions/VirtualMachineState",
          "description": "Specifies the desired state of virtual machines in the pool."
        },
        "attachedVirtualMachineScaleSetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/virtualMachineScaleSet"
              }
            ]
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "virtualMachineState"
      ]
    },
    "StandbyVirtualMachinePoolResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the StandbyVirtualMachinePoolResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolResourceUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StandbyVirtualMachinePoolResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the StandbyVirtualMachinePoolResource.",
      "properties": {
        "elasticityProfile": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolElasticityProfile",
          "description": "Specifies the elasticity profile of the standby virtual machine pools."
        },
        "virtualMachineState": {
          "$ref": "#/definitions/VirtualMachineState",
          "description": "Specifies the desired state of virtual machines in the pool."
        },
        "attachedVirtualMachineScaleSetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/virtualMachineScaleSet"
              }
            ]
          }
        }
      }
    },
    "StandbyVirtualMachinePoolRuntimeViewResource": {
      "type": "object",
      "description": "Contains information about a standby virtual machine pool as last known by the StandbyPool resource provider.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolRuntimeViewResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StandbyVirtualMachinePoolRuntimeViewResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachinePoolRuntimeViewResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachinePoolRuntimeViewResource items on this page",
          "items": {
            "$ref": "#/definitions/StandbyVirtualMachinePoolRuntimeViewResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachinePoolRuntimeViewResourceProperties": {
      "type": "object",
      "description": "Contains information about a standby pool as last known by the StandbyPool resource provider.",
      "properties": {
        "instanceCountSummary": {
          "type": "array",
          "description": "A list containing the counts of virtual machines in each possible power state for each zone if enabled, as known by the StandbyPool resource provider. If zones are not enabled on the attached VMSS, the list will contain a single entry without zone values. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
          "items": {
            "$ref": "#/definitions/VirtualMachineInstanceCountSummary"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/PoolStatus",
          "description": "Display status of the standby pool",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Displays the provisioning state of the standby pool",
          "readOnly": true
        },
        "prediction": {
          "$ref": "#/definitions/StandbyVirtualMachinePoolPrediction",
          "description": "Displays prediction information of the standby pool",
          "readOnly": true
        }
      },
      "required": [
        "instanceCountSummary"
      ]
    },
    "StandbyVirtualMachineResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StandbyVirtualMachineResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StandbyVirtualMachineResourceListResult": {
      "type": "object",
      "description": "The response of a StandbyVirtualMachineResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StandbyVirtualMachineResource items on this page",
          "items": {
            "$ref": "#/definitions/StandbyVirtualMachineResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StandbyVirtualMachineResourceProperties": {
      "type": "object",
      "description": "Details of the StandbyVirtualMachine.",
      "properties": {
        "virtualMachineResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource id of the virtual machine.",
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "virtualMachineResourceId"
      ]
    },
    "Subnet": {
      "type": "object",
      "description": "Subnet of container group",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies ARM resource id of the subnet.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "VirtualMachineInstanceCountSummary": {
      "type": "object",
      "description": "Contains the counts of VMs in each power state in a given zone, fault domain, as known by the StandbyPool resource provider. Note: any resources in the Running state may still be installing extensions / not fully provisioned.",
      "properties": {
        "zone": {
          "type": "integer",
          "format": "int64",
          "description": "The zone that the provided counts are in. It will not have a value if zones are not enabled on the attached VMSS."
        },
        "instanceCountsByState": {
          "type": "array",
          "description": "The count of pooled virtual machines in each state for the given zone.",
          "items": {
            "$ref": "#/definitions/PoolVirtualMachineStateCount"
          },
          "x-ms-identifiers": [
            "state"
          ]
        }
      },
      "required": [
        "instanceCountsByState"
      ]
    },
    "VirtualMachineState": {
      "type": "string",
      "description": "State of standby virtual machines",
      "enum": [
        "Running",
        "Deallocated",
        "Hibernated"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineState",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The virtual machine is up and running."
          },
          {
            "name": "Deallocated",
            "value": "Deallocated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off."
          },
          {
            "name": "Hibernated",
            "value": "Hibernated",
            "description": "The virtual machine has released the lease on the underlying hardware and is powered off. Memory contents of the VM are stored in the OS disk.  When started again, applications and processes that were previously running in your VM resume from the state prior to hibernation."
          }
        ]
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}