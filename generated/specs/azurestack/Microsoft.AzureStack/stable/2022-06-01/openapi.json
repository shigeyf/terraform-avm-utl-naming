{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.AzureStack",
    "version": "2022-06-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations": {
      "get": {
        "x-ms-examples": {
          "Returns a list of all registrations.": {
            "$ref": "examples/Registration/List.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Returns a list of all registrations.",
        "operationId": "Registrations_List",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegistrationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStack/registrations": {
      "get": {
        "x-ms-examples": {
          "Returns a list of all registrations under current subscription.": {
            "$ref": "examples/Registration/ListBySubscription.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Returns a list of all registrations under current subscription.",
        "operationId": "Registrations_ListBySubscription",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegistrationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}": {
      "get": {
        "x-ms-examples": {
          "Returns the properties of an Azure Stack registration.": {
            "$ref": "examples/Registration/Get.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Returns the properties of an Azure Stack registration.",
        "operationId": "Registrations_Get",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete the requested Azure Stack registration.": {
            "$ref": "./examples/Registration/Delete.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Delete the requested Azure Stack registration.",
        "operationId": "Registrations_Delete",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create or update an Azure Stack registration.": {
            "$ref": "examples/Registration/Put.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Create or update an Azure Stack registration.",
        "operationId": "Registrations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NewRegistrationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "x-ms-examples": {
          "Patch an Azure Stack registration.": {
            "$ref": "examples/Registration/Patch.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Patch an Azure Stack registration.",
        "operationId": "Registrations_Update",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NewRegistrationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/getactivationkey": {
      "post": {
        "x-ms-examples": {
          "Returns Azure Stack Activation Key.": {
            "$ref": "./examples/Registration/Post.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Returns Azure Stack Activation Key.",
        "operationId": "Registrations_GetActivationKey",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivationKeyResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/enableRemoteManagement": {
      "post": {
        "x-ms-examples": {
          "Returns empty response for successful action..": {
            "$ref": "examples/RemoteManagement/Post.json"
          }
        },
        "tags": [
          "Registrations"
        ],
        "description": "Enables remote management for device under the Azure Stack registration.",
        "operationId": "Registrations_EnableRemoteManagement",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.AzureStack/operations": {
      "get": {
        "x-ms-examples": {
          "Returns the list of supported REST operations.": {
            "$ref": "./examples/Operation/List.json"
          }
        },
        "description": "Returns the list of supported REST operations.",
        "tags": [
          "AzureStack"
        ],
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.AzureStack/cloudManifestFiles": {
      "get": {
        "x-ms-examples": {
          "Returns the properties of a cloud specific manifest file with latest version.": {
            "$ref": "examples/CloudManifestFile/List.json"
          }
        },
        "tags": [
          "AzureStack"
        ],
        "description": "Returns a cloud specific manifest JSON file with latest version.",
        "operationId": "CloudManifestFile_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudManifestFileResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.AzureStack/cloudManifestFiles/{verificationVersion}": {
      "get": {
        "x-ms-examples": {
          "Returns the properties of a cloud specific manifest file.": {
            "$ref": "examples/CloudManifestFile/Get.json"
          }
        },
        "tags": [
          "AzureStack"
        ],
        "description": "Returns a cloud specific manifest JSON file.",
        "operationId": "CloudManifestFile_Get",
        "parameters": [
          {
            "name": "verificationVersion",
            "in": "path",
            "description": "Signing verification key version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "versionCreationDate",
            "in": "query",
            "description": "Signing verification key version creation date.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudManifestFileResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStack/generateDeploymentLicense": {
      "post": {
        "x-ms-examples": {
          "Creates a license that can be used to deploy an Azure Stack device.": {
            "$ref": "examples/DeploymentLicense/Post.json"
          }
        },
        "tags": [
          "AzureStack"
        ],
        "description": "Creates a license that can be used to deploy an Azure Stack device.",
        "operationId": "DeploymentLicense_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/DeploymentLicenseRequestParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLicenseResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions": {
      "get": {
        "x-ms-examples": {
          "Returns a list of products.": {
            "$ref": "examples/CustomerSubscription/List.json"
          }
        },
        "tags": [
          "CustomerSubscription"
        ],
        "description": "Returns a list of products.",
        "operationId": "CustomerSubscriptions_List",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerSubscriptionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/customerSubscriptions/{customerSubscriptionName}": {
      "get": {
        "x-ms-examples": {
          "Returns the specified product.": {
            "$ref": "examples/CustomerSubscription/Get.json"
          }
        },
        "tags": [
          "CustomerSubscription"
        ],
        "description": "Returns the specified product.",
        "operationId": "CustomerSubscriptions_Get",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerSubscriptionNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerSubscription"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Deletes a customer subscription under a registration.": {
            "$ref": "examples/CustomerSubscription/Delete.json"
          }
        },
        "tags": [
          "CustomerSubscription"
        ],
        "description": "Deletes a customer subscription under a registration.",
        "operationId": "CustomerSubscriptions_Delete",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerSubscriptionNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NO CONTENT"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates a new customer subscription under a registration.": {
            "$ref": "examples/CustomerSubscription/Put.json"
          }
        },
        "tags": [
          "CustomerSubscription"
        ],
        "description": "Creates a new customer subscription under a registration.",
        "operationId": "CustomerSubscriptions_Create",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/CustomerSubscriptionNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CustomerSubscriptionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerSubscription"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products": {
      "get": {
        "x-ms-examples": {
          "Returns a list of products.": {
            "$ref": "examples/Product/List.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns a list of products.",
        "operationId": "Products_List",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}": {
      "get": {
        "x-ms-examples": {
          "Returns the specified product.": {
            "$ref": "examples/Product/Get.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns the specified product.",
        "operationId": "Products_Get",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listDetails": {
      "post": {
        "x-ms-examples": {
          "Returns the extended properties of a product.": {
            "$ref": "examples/Product/Post.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns the extended properties of a product.",
        "operationId": "Products_ListDetails",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedProduct"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/listProducts": {
      "post": {
        "x-ms-examples": {
          "Returns a list of products.": {
            "$ref": "examples/Product/ListPost.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns a list of products.",
        "operationId": "Products_ListProducts",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceConfigurationParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/getProducts": {
      "post": {
        "x-ms-examples": {
          "Returns a list of products.": {
            "$ref": "examples/Product/ListPost.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns a list of products.",
        "operationId": "Products_GetProducts",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "#/parameters/DeviceConfigurationParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/getProduct": {
      "post": {
        "x-ms-examples": {
          "Returns the specified product.": {
            "$ref": "examples/Product/GetPost.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns the specified product.",
        "operationId": "Products_GetProduct",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/DeviceConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureStack/registrations/{registrationName}/products/{productName}/uploadProductLog": {
      "post": {
        "x-ms-examples": {
          "Returns the specified product.": {
            "$ref": "examples/Product/UploadLog.json"
          }
        },
        "tags": [
          "Product"
        ],
        "description": "Returns the specified product.",
        "operationId": "Products_UploadLog",
        "parameters": [
          {
            "$ref": "AzureStack.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/RegistrationNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "$ref": "AzureStack.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MarketplaceProductLogUpdateParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductLog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "AzureStack.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "NewRegistrationParameter": {
      "description": "Registration token",
      "name": "token",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/RegistrationParameter"
      },
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Client API Version.",
      "required": true,
      "type": "string",
      "default": "2017-06-01"
    },
    "ResourceGroupNameParameter": {
      "description": "Name of the resource group.",
      "name": "resourceGroup",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RegistrationNameParameter": {
      "description": "Name of the Azure Stack registration.",
      "name": "registrationName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DeploymentLicenseRequestParameter": {
      "description": "Request body for creating a deployment license.",
      "name": "deploymentLicenseRequest",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/DeploymentLicenseRequest"
      },
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "CustomerSubscriptionNameParameter": {
      "description": "Name of the product.",
      "name": "customerSubscriptionName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "CustomerSubscriptionParameter": {
      "description": "Parameters use to create a customer subscription.",
      "name": "customerCreationParameters",
      "schema": {
        "$ref": "#/definitions/CustomerSubscription"
      },
      "in": "body",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ProductNameParameter": {
      "description": "Name of the product.",
      "name": "productName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "DeviceConfigurationParameter": {
      "description": "Device configuration.",
      "name": "deviceConfiguration",
      "in": "body",
      "required": false,
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/DeviceConfiguration"
      }
    },
    "MarketplaceProductLogUpdateParameter": {
      "description": "Update details for product log.",
      "name": "marketplaceProductLogUpdate",
      "in": "body",
      "required": false,
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/MarketplaceProductLogUpdate"
      }
    }
  },
  "definitions": {
    "Registration": {
      "description": "Registration information.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Registration resource.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RegistrationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "AzureStack.json#/definitions/TrackedResource"
        }
      ]
    },
    "RegistrationProperties": {
      "description": "Properties portion of the registration resource.",
      "type": "object",
      "properties": {
        "objectId": {
          "description": "The object identifier associated with the Azure Stack connecting to Azure.",
          "type": "string"
        },
        "cloudId": {
          "description": "The identifier of the registered Azure Stack.",
          "type": "string"
        },
        "billingModel": {
          "description": "Specifies the billing mode for the Azure Stack registration.",
          "type": "string"
        }
      }
    },
    "RegistrationList": {
      "description": "Pageable list of registrations.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        },
        "value": {
          "description": "List of Registrations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Registration"
          }
        }
      }
    },
    "ActivationKeyResult": {
      "description": "The resource containing the Azure Stack activation key.",
      "type": "object",
      "properties": {
        "activationKey": {
          "description": "Azure Stack activation key.",
          "type": "string"
        }
      }
    },
    "RegistrationParameter": {
      "description": "Registration resource",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of the Azure Stack registration resource",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RegistrationParameterProperties"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "enum": [
            "global"
          ],
          "x-ms-enum": {
            "name": "Location",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "properties",
        "location"
      ]
    },
    "RegistrationParameterProperties": {
      "description": "Properties of the Azure Stack registration resource",
      "type": "object",
      "properties": {
        "registrationToken": {
          "description": "The token identifying registered Azure Stack",
          "type": "string"
        }
      },
      "required": [
        "registrationToken"
      ]
    },
    "Resource": {
      "description": "Base resource object.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "ID of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "description": "Type of Resource.",
          "type": "string"
        },
        "etag": {
          "description": "The entity tag used for optimistic concurrency when modifying the resource.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "Base resource object.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "ID of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "description": "Type of Resource.",
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "enum": [
            "global"
          ],
          "x-ms-enum": {
            "name": "Location",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "description": "Custom tags for the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "The entity tag used for optimistic concurrency when modifying the resource.",
          "type": "string"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "description": "The provisioning state of the resource.",
      "enum": [
        "Creating",
        "Failed",
        "Succeeded",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState"
      }
    },
    "Operation": {
      "description": "Describes the supported REST operation.",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on this particular object.",
          "type": "string"
        },
        "display": {
          "description": "Contains the localized display information for this particular operation or action.",
          "$ref": "#/definitions/Display"
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "type": "string"
        }
      }
    },
    "Display": {
      "description": "Contains the localized display information for this particular operation or action.",
      "properties": {
        "provider": {
          "description": "The localized, friendly version of the resource provider name.",
          "type": "string"
        },
        "resource": {
          "description": "The localized, friendly version of the resource type related to this action or operation; the resource type should match the public documentation for the resource provider.",
          "type": "string"
        },
        "operation": {
          "description": "The localized, friendly name for the operation. Use the name as it will displayed to the user.",
          "type": "string"
        },
        "description": {
          "description": "The localized, friendly description for the operation. The description will be displayed to the user. It should be thorough and concise for used in both tooltips and detailed views.",
          "type": "string"
        }
      }
    },
    "OperationList": {
      "description": "List of Operations",
      "properties": {
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "URI to the next page of operations.",
          "type": "string"
        }
      }
    },
    "CloudManifestFileResponse": {
      "description": "Cloud specific manifest GET response.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Cloud specific manifest data.",
          "$ref": "#/definitions/CloudManifestFileProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "CloudManifestFileProperties": {
      "description": "Cloud specific manifest JSON properties.",
      "type": "object",
      "properties": {
        "deploymentData": {
          "description": "Cloud specific manifest data.",
          "$ref": "#/definitions/CloudManifestFileDeploymentData"
        },
        "signature": {
          "description": "Signature of the cloud specific manifest data.",
          "type": "string"
        }
      }
    },
    "CloudManifestFileDeploymentData": {
      "description": "Cloud specific manifest data for AzureStack deployment.",
      "type": "object",
      "properties": {
        "externalDsmsCertificates": {
          "description": "Dsms external certificates.",
          "type": "string"
        },
        "customCloudVerificationKey": {
          "description": "Signing verification public key.",
          "type": "string"
        },
        "customEnvironmentEndpoints": {
          "description": "Environment endpoints.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CloudManifestFileEnvironmentEndpoints"
        }
      }
    },
    "CloudManifestFileEnvironmentEndpoints": {
      "description": "Cloud specific environment endpoints for AzureStack deployment.",
      "type": "object",
      "properties": {
        "customCloudArmEndpoint": {
          "description": "ARM endpoint.",
          "type": "string"
        },
        "externalDsmsEndpoint": {
          "description": "Dsms endpoint.",
          "type": "string"
        }
      }
    },
    "DeploymentLicenseRequest": {
      "description": "Request details for generating a deployment license.",
      "type": "object",
      "properties": {
        "verificationVersion": {
          "description": "Signing verification public key version.",
          "type": "string"
        }
      }
    },
    "DeploymentLicenseResponse": {
      "description": "A license that can be used to deploy an Azure Stack device.",
      "type": "object",
      "properties": {
        "temporaryLicenseChain": {
          "description": "A license chain that can be used to temporarily activate an Azure Stack device.",
          "type": "array",
          "items": {
            "description": "An intermediate or leaf license item.",
            "type": "string"
          }
        },
        "signature": {
          "description": "Signature of the license chain.",
          "type": "string"
        }
      }
    },
    "ErrorDetails": {
      "description": "The details of the error.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the particular error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "CustomerSubscription": {
      "description": "Customer subscription.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Customer subscription properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CustomerSubscriptionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "AzureStack.json#/definitions/Resource"
        }
      ]
    },
    "CustomerSubscriptionProperties": {
      "description": "Customer subscription properties.",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "Tenant Id.",
          "type": "string"
        }
      }
    },
    "CustomerSubscriptionList": {
      "description": "Pageable list of customer subscriptions.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        },
        "value": {
          "description": "List of customer subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSubscription"
          }
        }
      }
    },
    "ComputeRole": {
      "description": "Compute role type (IaaS or PaaS).",
      "type": "string",
      "enum": [
        "None",
        "IaaS",
        "PaaS"
      ],
      "x-ms-enum": {
        "name": "ComputeRole",
        "modelAsString": true
      }
    },
    "OperatingSystem": {
      "description": "Operating system type (Windows or Linux).",
      "type": "string",
      "enum": [
        "None",
        "Windows",
        "Linux"
      ],
      "x-ms-enum": {
        "name": "OperatingSystem",
        "modelAsString": true
      }
    },
    "Uri": {
      "description": "The URI.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtendedProduct": {
      "description": "Extended description about the product required for installing it into Azure Stack.",
      "type": "object",
      "properties": {
        "galleryPackageBlobSasUri": {
          "description": "The URI to the .azpkg file that provides information required for showing product in the gallery.",
          "type": "string",
          "readOnly": true
        },
        "productKind": {
          "description": "Specifies the kind of the product (virtualMachine or virtualMachineExtension).",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Specifies additional properties describing the product.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExtendedProductProperties",
          "readOnly": true
        }
      }
    },
    "ExtendedProductProperties": {
      "description": "Product information.",
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/VirtualMachineExtensionProductProperties"
        },
        {
          "$ref": "#/definitions/VirtualMachineProductProperties"
        }
      ]
    },
    "VirtualMachineExtensionProductProperties": {
      "description": "Product information.",
      "type": "object",
      "properties": {
        "computeRole": {
          "description": "Specifies kind of compute role included in the package.",
          "$ref": "#/definitions/ComputeRole",
          "readOnly": true
        },
        "isSystemExtension": {
          "description": "Specifies if product is a Virtual Machine Extension.",
          "type": "boolean",
          "readOnly": true
        },
        "sourceBlob": {
          "description": "Specifies a download location where content can be downloaded from.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Uri",
          "readOnly": true
        },
        "supportMultipleExtensions": {
          "description": "Indicates if specified product supports multiple extensions.",
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "description": "Specifies product version.",
          "type": "string",
          "readOnly": true
        },
        "vmOsType": {
          "description": "Specifies operating system used by the product.",
          "$ref": "#/definitions/OperatingSystem",
          "readOnly": true
        },
        "vmScaleSetEnabled": {
          "description": "Indicates if virtual machine Scale Set is enabled in the specified product.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "VirtualMachineProductProperties": {
      "description": "Product information.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies product version.",
          "type": "string",
          "readOnly": true
        },
        "osDiskImage": {
          "description": "OS disk image used by product.",
          "$ref": "#/definitions/OsDiskImage",
          "readOnly": true
        },
        "dataDiskImages": {
          "description": "List of attached data disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDiskImage"
          },
          "x-ms-identifiers": [
            "lun"
          ],
          "readOnly": true
        }
      }
    },
    "OsDiskImage": {
      "description": "OS disk image.",
      "type": "object",
      "properties": {
        "operatingSystem": {
          "description": "OS operating system type.",
          "$ref": "#/definitions/OperatingSystem",
          "readOnly": true
        },
        "sourceBlobSasUri": {
          "description": "SAS key for source blob.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataDiskImage": {
      "description": "Data disk image.",
      "type": "object",
      "properties": {
        "lun": {
          "description": "The LUN.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "sourceBlobSasUri": {
          "description": "SAS key for source blob.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Product": {
      "description": "Product information.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of the product resource.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductNestedProperties"
        }
      },
      "allOf": [
        {
          "$ref": "AzureStack.json#/definitions/Resource"
        }
      ]
    },
    "ProductNestedProperties": {
      "description": "Properties portion of the product resource.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name of the product.",
          "type": "string"
        },
        "description": {
          "description": "The description of the product.",
          "type": "string"
        },
        "publisherDisplayName": {
          "description": "The user-friendly name of the product publisher.",
          "type": "string"
        },
        "publisherIdentifier": {
          "description": "Publisher identifier.",
          "type": "string"
        },
        "offer": {
          "description": "The offer representing the product.",
          "type": "string"
        },
        "offerVersion": {
          "description": "The version of the product offer.",
          "type": "string"
        },
        "sku": {
          "description": "The product SKU.",
          "type": "string"
        },
        "billingPartNumber": {
          "description": "The part number used for billing purposes.",
          "type": "string"
        },
        "vmExtensionType": {
          "description": "The type of the Virtual Machine Extension.",
          "type": "string"
        },
        "galleryItemIdentity": {
          "description": "The identifier of the gallery item corresponding to the product.",
          "type": "string"
        },
        "iconUris": {
          "description": "Additional links available for this product.",
          "$ref": "#/definitions/IconUris"
        },
        "links": {
          "description": "Additional links available for this product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductLink"
          },
          "x-ms-identifiers": [
            "uri"
          ]
        },
        "legalTerms": {
          "description": "The legal terms.",
          "type": "string"
        },
        "privacyPolicy": {
          "description": "The privacy policy.",
          "type": "string"
        },
        "payloadLength": {
          "description": "The length of product content.",
          "type": "integer",
          "format": "int64"
        },
        "productKind": {
          "description": "The kind of the product (virtualMachine or virtualMachineExtension)",
          "type": "string"
        },
        "productProperties": {
          "description": "Additional properties for the product.",
          "$ref": "#/definitions/ProductProperties"
        },
        "compatibility": {
          "description": "Product compatibility with current device.",
          "$ref": "#/definitions/Compatibility"
        }
      }
    },
    "Compatibility": {
      "description": "Product compatibility",
      "type": "object",
      "properties": {
        "isCompatible": {
          "description": "Tells if product is compatible with current device",
          "type": "boolean"
        },
        "message": {
          "description": "Short error message if any compatibility issues are found",
          "type": "string"
        },
        "description": {
          "description": "Full error message if any compatibility issues are found",
          "type": "string"
        },
        "issues": {
          "description": "List of all issues found",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompatibilityIssue"
          }
        }
      }
    },
    "CompatibilityIssue": {
      "description": "Compatibility issue",
      "type": "string",
      "enum": [
        "HigherDeviceVersionRequired",
        "LowerDeviceVersionRequired",
        "CapacityBillingModelRequired",
        "PayAsYouGoBillingModelRequired",
        "DevelopmentBillingModelRequired",
        "AzureADIdentitySystemRequired",
        "ADFSIdentitySystemRequired",
        "ConnectionToInternetRequired",
        "ConnectionToAzureRequired",
        "DisconnectedEnvironmentRequired"
      ],
      "x-ms-enum": {
        "name": "CompatibilityIssue",
        "modelAsString": true
      }
    },
    "IconUris": {
      "description": "Links to product icons.",
      "type": "object",
      "properties": {
        "large": {
          "description": "URI to large icon.",
          "type": "string"
        },
        "wide": {
          "description": "URI to wide icon.",
          "type": "string"
        },
        "medium": {
          "description": "URI to medium icon.",
          "type": "string"
        },
        "small": {
          "description": "URI to small icon.",
          "type": "string"
        },
        "hero": {
          "description": "URI to hero icon.",
          "type": "string"
        }
      }
    },
    "ProductProperties": {
      "description": "Additional properties of the product",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version.",
          "type": "string"
        }
      }
    },
    "ProductLink": {
      "description": "Link with additional information about a product.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The description of the link.",
          "type": "string"
        },
        "uri": {
          "description": "The URI corresponding to the link.",
          "type": "string"
        }
      }
    },
    "ProductList": {
      "description": "Pageable list of products.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        },
        "value": {
          "description": "List of products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "DeviceConfiguration": {
      "description": "Device Configuration.",
      "properties": {
        "deviceVersion": {
          "description": "Version of the device.",
          "type": "string",
          "readOnly": true
        },
        "identitySystem": {
          "description": "Identity system of the device.",
          "enum": [
            "AzureAD",
            "ADFS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "category",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "MarketplaceProductLogUpdate": {
      "description": "Update details for product log.",
      "properties": {
        "operation": {
          "description": "Operation to log.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Operation status to log.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "description": "Error related to the operation.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Error details related to operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProductLog": {
      "description": "Product action log.",
      "properties": {
        "id": {
          "description": "Log ID.",
          "type": "string",
          "readOnly": true
        },
        "productId": {
          "description": "Logged product ID.",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Logged subscription ID.",
          "type": "string",
          "readOnly": true
        },
        "registrationName": {
          "description": "Logged registration name.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroupName": {
          "description": "Logged resource group name.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "Logged operation.",
          "type": "string",
          "readOnly": true
        },
        "startDate": {
          "description": "Operation start datetime.",
          "type": "string",
          "readOnly": true
        },
        "endDate": {
          "description": "Operation end datetime.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Operation status.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "description": "Operation error data.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Operation error details.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  }
}