{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Network",
    "version": "2024-06-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateDnsZones": {
      "get": {
        "operationId": "PrivateZones_List",
        "tags": [
          "PrivateZones"
        ],
        "description": "Lists the Private DNS zones in all resource groups in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of Private DNS zones to return. If not specified, returns up to 100 zones.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone by Subscription": {
            "$ref": "./examples/PrivateZoneListInSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones": {
      "get": {
        "operationId": "PrivateZones_ListByResourceGroup",
        "tags": [
          "PrivateZones"
        ],
        "description": "Lists the Private DNS zones within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone by Resource Group": {
            "$ref": "./examples/PrivateZoneListInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}": {
      "get": {
        "operationId": "PrivateZones_Get",
        "tags": [
          "PrivateZones"
        ],
        "description": "Gets a Private DNS zone. Retrieves the zone properties, but not the virtual networks links or the record sets within the zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone": {
            "$ref": "./examples/PrivateZoneGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateZones_CreateOrUpdate",
        "tags": [
          "PrivateZones"
        ],
        "description": "Creates or updates a Private DNS zone. Does not modify Links to virtual networks or DNS records within the zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow a new Private DNS zone to be created, but to prevent updating an existing zone. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateZone' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            }
          },
          "201": {
            "description": "Resource 'PrivateZone' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PUT Private DNS Zone": {
            "$ref": "./examples/PrivateZonePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PrivateZones_Update",
        "tags": [
          "PrivateZones"
        ],
        "description": "Updates a Private DNS zone. Does not modify virtual network links or DNS records within the zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the Private DNS zone. Omit this value to always overwrite the current zone. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateZone"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PATCH Private DNS Zone": {
            "$ref": "./examples/PrivateZonePatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateZones_Delete",
        "tags": [
          "PrivateZones"
        ],
        "description": "Deletes a Private DNS zone. WARNING: All DNS records in the zone will also be deleted. This operation cannot be undone. Private DNS zone cannot be deleted unless all virtual network links to it are removed.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DELETE Private DNS Zone": {
            "$ref": "./examples/PrivateZoneDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}": {
      "get": {
        "operationId": "RecordSets_ListByType",
        "description": "Lists the record sets of a specified type in a Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "PTR",
              "SOA",
              "SRV",
              "TXT"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$recordsetnamesuffix",
            "in": "query",
            "description": "The suffix label of the record set name to be used to filter the record set enumeration. If this parameter is specified, the returned enumeration will only contain records that end with \".<recordsetnamesuffix>\".",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone A Record Sets": {
            "$ref": "./examples/RecordSetAList.json"
          },
          "GET Private DNS Zone AAAA Record Sets": {
            "$ref": "./examples/RecordSetAAAAList.json"
          },
          "GET Private DNS Zone CNAME Record Sets": {
            "$ref": "./examples/RecordSetCNAMEList.json"
          },
          "GET Private DNS Zone MX Record Sets": {
            "$ref": "./examples/RecordSetMXList.json"
          },
          "GET Private DNS Zone PTR Record Sets": {
            "$ref": "./examples/RecordSetPTRList.json"
          },
          "GET Private DNS Zone SOA Record Sets": {
            "$ref": "./examples/RecordSetSOAList.json"
          },
          "GET Private DNS Zone SRV Record Sets": {
            "$ref": "./examples/RecordSetSRVList.json"
          },
          "GET Private DNS Zone TXT Record Sets": {
            "$ref": "./examples/RecordSetTXTList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/{recordType}/{relativeRecordSetName}": {
      "get": {
        "operationId": "RecordSets_Get",
        "description": "Gets a record set.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "PTR",
              "SOA",
              "SRV",
              "TXT"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone A Record Set": {
            "$ref": "./examples/RecordSetAGet.json"
          },
          "GET Private DNS Zone AAAA Record Set": {
            "$ref": "./examples/RecordSetAAAAGet.json"
          },
          "GET Private DNS Zone CNAME Record Set": {
            "$ref": "./examples/RecordSetCNAMEGet.json"
          },
          "GET Private DNS Zone MX Record Set": {
            "$ref": "./examples/RecordSetMXGet.json"
          },
          "GET Private DNS Zone PTR Record Set": {
            "$ref": "./examples/RecordSetPTRGet.json"
          },
          "GET Private DNS Zone SOA Record Set": {
            "$ref": "./examples/RecordSetSOAGet.json"
          },
          "GET Private DNS Zone SRV Record Set": {
            "$ref": "./examples/RecordSetSRVGet.json"
          },
          "GET Private DNS Zone TXT Record Set": {
            "$ref": "./examples/RecordSetTXTGet.json"
          }
        }
      },
      "put": {
        "operationId": "RecordSets_CreateOrUpdate",
        "description": "Creates or updates a record set within a Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "PTR",
              "SOA",
              "SRV",
              "TXT"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RecordSet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "201": {
            "description": "Resource 'RecordSet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PUT Private DNS Zone A Record Set": {
            "$ref": "./examples/RecordSetAPut.json"
          },
          "PUT Private DNS Zone AAAA Record Set": {
            "$ref": "./examples/RecordSetAAAAPut.json"
          },
          "PUT Private DNS Zone CNAME Record Set": {
            "$ref": "./examples/RecordSetCNAMEPut.json"
          },
          "PUT Private DNS Zone MX Record Set": {
            "$ref": "./examples/RecordSetMXPut.json"
          },
          "PUT Private DNS Zone PTR Record Set": {
            "$ref": "./examples/RecordSetPTRPut.json"
          },
          "PUT Private DNS Zone SOA Record Set": {
            "$ref": "./examples/RecordSetSOAPut.json"
          },
          "PUT Private DNS Zone SRV Record Set": {
            "$ref": "./examples/RecordSetSRVPut.json"
          },
          "PUT Private DNS Zone TXT Record Set": {
            "$ref": "./examples/RecordSetTXTPut.json"
          }
        }
      },
      "patch": {
        "operationId": "RecordSets_Update",
        "description": "Updates a record set within a Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "PTR",
              "SOA",
              "SRV",
              "TXT"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PATCH Private DNS Zone A Record Set": {
            "$ref": "./examples/RecordSetAPatch.json"
          },
          "PATCH Private DNS Zone AAAA Record Set": {
            "$ref": "./examples/RecordSetAAAAPatch.json"
          },
          "PATCH Private DNS Zone CNAME Record Set": {
            "$ref": "./examples/RecordSetCNAMEPatch.json"
          },
          "PATCH Private DNS Zone MX Record Set": {
            "$ref": "./examples/RecordSetMXPatch.json"
          },
          "PATCH Private DNS Zone PTR Record Set": {
            "$ref": "./examples/RecordSetPTRPatch.json"
          },
          "PATCH Private DNS Zone SOA Record Set": {
            "$ref": "./examples/RecordSetSOAPatch.json"
          },
          "PATCH Private DNS Zone SRV Record Set": {
            "$ref": "./examples/RecordSetSRVPatch.json"
          },
          "PATCH Private DNS Zone TXT Record Set": {
            "$ref": "./examples/RecordSetTXTPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "RecordSets_Delete",
        "description": "Deletes a record set from a Private DNS zone. This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "recordType",
            "in": "path",
            "description": "The type of DNS record in this record set.",
            "required": true,
            "type": "string",
            "enum": [
              "A",
              "AAAA",
              "CNAME",
              "MX",
              "PTR",
              "SOA",
              "SRV",
              "TXT"
            ],
            "x-ms-enum": {
              "name": "RecordType",
              "modelAsString": false
            }
          },
          {
            "name": "relativeRecordSetName",
            "in": "path",
            "description": "The name of the record set, relative to the name of the zone.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the record set. Omit this value to always delete the current record set. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DELETE Private DNS Zone A Record Set": {
            "$ref": "./examples/RecordSetADelete.json"
          },
          "DELETE Private DNS Zone AAAA Record Set": {
            "$ref": "./examples/RecordSetAAAADelete.json"
          },
          "DELETE Private DNS Zone CNAME Record Set": {
            "$ref": "./examples/RecordSetCNAMEDelete.json"
          },
          "DELETE Private DNS Zone MX Record Set": {
            "$ref": "./examples/RecordSetMXDelete.json"
          },
          "DELETE Private DNS Zone PTR Record Set": {
            "$ref": "./examples/RecordSetPTRDelete.json"
          },
          "DELETE Private DNS Zone SRV Record Set": {
            "$ref": "./examples/RecordSetSRVDelete.json"
          },
          "DELETE Private DNS Zone TXT Record Set": {
            "$ref": "./examples/RecordSetTXTDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/aLL": {
      "get": {
        "operationId": "RecordSets_List",
        "tags": [
          "PrivateZones"
        ],
        "description": "Lists all record sets in a Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of record sets to return. If not specified, returns up to 100 record sets.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$recordsetnamesuffix",
            "in": "query",
            "description": "The suffix label of the record set name to be used to filter the record set enumeration. If this parameter is specified, the returned enumeration will only contain records that end with \".<recordsetnamesuffix>\".",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecordSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone ALL Record Sets": {
            "$ref": "./examples/RecordSetALLList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/virtualNetworkLinks": {
      "get": {
        "operationId": "VirtualNetworkLinks_List",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Lists the virtual network links to the specified Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of virtual network links to return. If not specified, returns up to 100 virtual network links.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLinkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Private DNS Zone Virtual Network Links": {
            "$ref": "./examples/VirtualNetworkLinkList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateDnsZones/{privateZoneName}/virtualNetworkLinks/{virtualNetworkLinkName}": {
      "get": {
        "operationId": "VirtualNetworkLinks_Get",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Gets a virtual network link to the specified Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GET Private DNS Zone Virtual Network Link": {
            "$ref": "./examples/VirtualNetworkLinkGet.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworkLinks_CreateOrUpdate",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Creates or updates a virtual network link to the specified Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the virtual network link to the Private DNS zone. Omit this value to always overwrite the current virtual network link. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Set to '*' to allow a new virtual network link to the Private DNS zone to be created, but to prevent updating an existing link. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetworkLink' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "201": {
            "description": "Resource 'VirtualNetworkLink' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PUT Private DNS Zone Virtual Network Link": {
            "$ref": "./examples/VirtualNetworkLinkPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VirtualNetworkLinks_Update",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Updates a virtual network link to the specified Private DNS zone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the virtual network link to the Private DNS zone. Omit this value to always overwrite the current virtual network link. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PATCH Private DNS Zone Virtual Network Link": {
            "$ref": "./examples/VirtualNetworkLinkPatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualNetworkLinks_Delete",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Deletes a virtual network link to the specified Private DNS zone. WARNING: In case of a registration virtual network, all auto-registered DNS records in the zone for the virtual network will also be deleted. This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateZoneName",
            "in": "path",
            "description": "The name of the Private DNS zone (without a terminating dot).",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "The ETag of the virtual network link to the Private DNS zone. Omit this value to always delete the current zone. Specify the last-seen ETag value to prevent accidentally deleting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DELETE Private DNS Zone Virtual Network Link": {
            "$ref": "./examples/VirtualNetworkLinkDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1
    }
  },
  "definitions": {
    "ARecord": {
      "type": "object",
      "description": "An A record.",
      "properties": {
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address of this A record."
        }
      }
    },
    "AaaaRecord": {
      "type": "object",
      "description": "An AAAA record.",
      "properties": {
        "ipv6Address": {
          "type": "string",
          "description": "The IPv6 address of this AAAA record."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      }
    },
    "CnameRecord": {
      "type": "object",
      "description": "A CNAME record.",
      "properties": {
        "cname": {
          "type": "string",
          "description": "The canonical name for this CNAME record."
        }
      }
    },
    "MxRecord": {
      "type": "object",
      "description": "An MX record.",
      "properties": {
        "preference": {
          "type": "integer",
          "format": "int32",
          "description": "The preference value for this MX record."
        },
        "exchange": {
          "type": "string",
          "description": "The domain name of the mail host for this MX record."
        }
      }
    },
    "PrivateZone": {
      "type": "object",
      "description": "Describes a Private DNS zone.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "location": {
          "type": "string",
          "description": "The Azure Region where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the zone."
        },
        "properties": {
          "$ref": "#/definitions/PrivateZoneProperties",
          "description": "Properties of the Private DNS zone.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateZoneListResult": {
      "type": "object",
      "description": "The response of a PrivateZone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateZone items on this page",
          "items": {
            "$ref": "#/definitions/PrivateZone"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateZoneProperties": {
      "type": "object",
      "description": "Represents the properties of the Private DNS zone.",
      "properties": {
        "maxNumberOfRecordSets": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of record sets that can be created in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "numberOfRecordSets": {
          "type": "integer",
          "format": "int64",
          "description": "The current number of record sets in this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "maxNumberOfVirtualNetworkLinks": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of virtual networks that can be linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "numberOfVirtualNetworkLinks": {
          "type": "integer",
          "format": "int64",
          "description": "The current number of virtual networks that are linked to this Private DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "maxNumberOfVirtualNetworkLinksWithRegistration": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "numberOfVirtualNetworkLinksWithRegistration": {
          "type": "integer",
          "format": "int64",
          "description": "The current number of virtual networks that are linked to this Private DNS zone with registration enabled. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "internalId": {
          "type": "string",
          "description": "Private zone internal Id",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      },
      "readOnly": true
    },
    "PtrRecord": {
      "type": "object",
      "description": "A PTR record.",
      "properties": {
        "ptrdname": {
          "type": "string",
          "description": "The PTR target domain name for this PTR record."
        }
      }
    },
    "RecordSet": {
      "type": "object",
      "description": "Describes a DNS record set (a collection of DNS records with the same name and type) in a Private DNS zone.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The ETag of the record set."
        },
        "properties": {
          "$ref": "#/definitions/RecordSetProperties",
          "description": "The properties of the record set.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RecordSetListResult": {
      "type": "object",
      "description": "The response of a RecordSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RecordSet items on this page",
          "items": {
            "$ref": "#/definitions/RecordSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RecordSetProperties": {
      "type": "object",
      "description": "Represents the properties of the records in the record set.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "The metadata attached to the record set.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "description": "The TTL (time-to-live) of the records in the record set."
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name of the record set.",
          "readOnly": true
        },
        "isAutoRegistered": {
          "type": "boolean",
          "description": "Is the record set auto-registered in the Private DNS zone through a virtual network link?",
          "readOnly": true
        },
        "aRecords": {
          "type": "array",
          "description": "The list of A records in the record set.",
          "items": {
            "$ref": "#/definitions/ARecord"
          },
          "x-ms-identifiers": [
            "ipv4Address"
          ]
        },
        "aaaaRecords": {
          "type": "array",
          "description": "The list of AAAA records in the record set.",
          "items": {
            "$ref": "#/definitions/AaaaRecord"
          },
          "x-ms-identifiers": [
            "ipv6Address"
          ]
        },
        "cnameRecord": {
          "$ref": "#/definitions/CnameRecord",
          "description": "The CNAME record in the record set."
        },
        "mxRecords": {
          "type": "array",
          "description": "The list of MX records in the record set.",
          "items": {
            "$ref": "#/definitions/MxRecord"
          },
          "x-ms-identifiers": []
        },
        "ptrRecords": {
          "type": "array",
          "description": "The list of PTR records in the record set.",
          "items": {
            "$ref": "#/definitions/PtrRecord"
          },
          "x-ms-identifiers": []
        },
        "soaRecord": {
          "$ref": "#/definitions/SoaRecord",
          "description": "The SOA record in the record set."
        },
        "srvRecords": {
          "type": "array",
          "description": "The list of SRV records in the record set.",
          "items": {
            "$ref": "#/definitions/SrvRecord"
          },
          "x-ms-identifiers": []
        },
        "txtRecords": {
          "type": "array",
          "description": "The list of TXT records in the record set.",
          "items": {
            "$ref": "#/definitions/TxtRecord"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ResolutionPolicy": {
      "type": "string",
      "description": "The resolution policy on the virtual network link. Only applicable for virtual network links to privatelink zones, and for A,AAAA,CNAME queries. When set to 'NxDomainRedirect', Azure DNS resolver falls back to public resolution if private dns query resolution results in non-existent domain response.",
      "enum": [
        "Default",
        "NxDomainRedirect"
      ],
      "x-ms-enum": {
        "name": "ResolutionPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "NxDomainRedirect",
            "value": "NxDomainRedirect"
          }
        ]
      }
    },
    "SoaRecord": {
      "type": "object",
      "description": "An SOA record.",
      "properties": {
        "host": {
          "type": "string",
          "description": "The domain name of the authoritative name server for this SOA record."
        },
        "email": {
          "type": "string",
          "description": "The email contact for this SOA record."
        },
        "serialNumber": {
          "type": "integer",
          "format": "int64",
          "description": "The serial number for this SOA record."
        },
        "refreshTime": {
          "type": "integer",
          "format": "int64",
          "description": "The refresh value for this SOA record."
        },
        "retryTime": {
          "type": "integer",
          "format": "int64",
          "description": "The retry time for this SOA record."
        },
        "expireTime": {
          "type": "integer",
          "format": "int64",
          "description": "The expire time for this SOA record."
        },
        "minimumTtl": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum value for this SOA record. By convention this is used to determine the negative caching duration."
        }
      }
    },
    "SrvRecord": {
      "type": "object",
      "description": "An SRV record.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority value for this SRV record."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight value for this SRV record."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port value for this SRV record."
        },
        "target": {
          "type": "string",
          "description": "The target domain name for this SRV record."
        }
      }
    },
    "SubResource": {
      "type": "object",
      "description": "Reference to another subresource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "TxtRecord": {
      "type": "object",
      "description": "A TXT record.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The text value of this TXT record.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualNetworkLink": {
      "type": "object",
      "description": "Describes a link to virtual network for a Private DNS zone.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "location": {
          "type": "string",
          "description": "The Azure Region where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The ETag of the virtual network link."
        },
        "properties": {
          "$ref": "#/definitions/VirtualNetworkLinkProperties",
          "description": "Properties of the virtual network link to the Private DNS zone.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualNetworkLinkListResult": {
      "type": "object",
      "description": "The response of a VirtualNetworkLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetworkLink items on this page",
          "items": {
            "$ref": "#/definitions/VirtualNetworkLink"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkLinkProperties": {
      "type": "object",
      "description": "Represents the properties of the Private DNS zone.",
      "properties": {
        "virtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference of the virtual network."
        },
        "registrationEnabled": {
          "type": "boolean",
          "description": "Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled?"
        },
        "resolutionPolicy": {
          "$ref": "#/definitions/ResolutionPolicy",
          "description": "The resolution policy on the virtual network link. Only applicable for virtual network links to privatelink zones, and for A,AAAA,CNAME queries. When set to 'NxDomainRedirect', Azure DNS resolver falls back to public resolution if private dns query resolution results in non-existent domain response."
        },
        "virtualNetworkLinkState": {
          "$ref": "#/definitions/VirtualNetworkLinkState",
          "description": "The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        }
      }
    },
    "VirtualNetworkLinkState": {
      "type": "string",
      "description": "The status of the virtual network link to the Private DNS zone. Possible values are 'InProgress' and 'Done'. This is a read-only property and any attempt to set this value will be ignored.",
      "enum": [
        "InProgress",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkLinkState",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          }
        ]
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ID for the async operation."
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}