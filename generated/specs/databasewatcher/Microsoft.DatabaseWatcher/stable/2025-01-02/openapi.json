{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.DatabaseWatcher",
    "version": "2025-01-02"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.DatabaseWatcher/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DatabaseWatcher/watchers": {
      "get": {
        "operationId": "Watchers_ListBySubscription",
        "tags": [
          "Watchers"
        ],
        "description": "List Watcher resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatcherListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_ListBySubscription_MaximumSet": {
            "$ref": "./examples/Watchers_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers": {
      "get": {
        "operationId": "Watchers_ListByResourceGroup",
        "tags": [
          "Watchers"
        ],
        "description": "List Watcher resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatcherListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/Watchers_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}": {
      "get": {
        "operationId": "Watchers_Get",
        "tags": [
          "Watchers"
        ],
        "description": "Get a Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Get_MaximumSet": {
            "$ref": "./examples/Watchers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Watchers_CreateOrUpdate",
        "tags": [
          "Watchers"
        ],
        "description": "Create a Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Watcher' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "201": {
            "description": "Resource 'Watcher' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Watcher"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Watchers_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Watchers_Update",
        "tags": [
          "Watchers"
        ],
        "description": "Update a Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WatcherUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Update_MaximumSet": {
            "$ref": "./examples/Watchers_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Watchers_Delete",
        "tags": [
          "Watchers"
        ],
        "description": "Delete a Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Delete_MaximumSet": {
            "$ref": "./examples/Watchers_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/alertRuleResources": {
      "get": {
        "operationId": "AlertRuleResources_ListByParent",
        "tags": [
          "AlertRuleResources"
        ],
        "description": "List AlertRuleResource resources by Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRuleResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AlertRuleResources_ListByParent_MaximumSet": {
            "$ref": "./examples/AlertRuleResources_ListByParent_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/alertRuleResources/{alertRuleResourceName}": {
      "get": {
        "operationId": "AlertRuleResources_Get",
        "tags": [
          "AlertRuleResources"
        ],
        "description": "Get a AlertRuleResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "alertRuleResourceName",
            "in": "path",
            "description": "The alert rule proxy resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AlertRuleResources_Get_MaximumSet": {
            "$ref": "./examples/AlertRuleResources_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AlertRuleResources_CreateOrUpdate",
        "tags": [
          "AlertRuleResources"
        ],
        "description": "Create a AlertRuleResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "alertRuleResourceName",
            "in": "path",
            "description": "The alert rule proxy resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AlertRuleResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          },
          "201": {
            "description": "Resource 'AlertRuleResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AlertRuleResources_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/AlertRuleResources_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "AlertRuleResources_Delete",
        "tags": [
          "AlertRuleResources"
        ],
        "description": "Delete a AlertRuleResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "alertRuleResourceName",
            "in": "path",
            "description": "The alert rule proxy resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AlertRuleResources_Delete_MaximumSet": {
            "$ref": "./examples/AlertRuleResources_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/healthValidations": {
      "get": {
        "operationId": "HealthValidations_ListByParent",
        "tags": [
          "HealthValidations"
        ],
        "description": "List HealthValidation resources by Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthValidationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthValidations_ListByParent_MaximumSet": {
            "$ref": "./examples/HealthValidations_ListByParent_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/healthValidations/{healthValidationName}": {
      "get": {
        "operationId": "HealthValidations_Get",
        "tags": [
          "HealthValidations"
        ],
        "description": "Get a HealthValidation",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "healthValidationName",
            "in": "path",
            "description": "The health validation resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthValidation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthValidations_Get_MaximumSet": {
            "$ref": "./examples/HealthValidations_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/healthValidations/{healthValidationName}/startValidation": {
      "post": {
        "operationId": "HealthValidations_StartValidation",
        "tags": [
          "HealthValidations"
        ],
        "description": "Starts health validation for a watcher.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "healthValidationName",
            "in": "path",
            "description": "The health validation resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthValidation"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HealthValidations_StartValidation_MaximumSet": {
            "$ref": "./examples/HealthValidations_StartValidation_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/sharedPrivateLinkResources": {
      "get": {
        "operationId": "SharedPrivateLinkResources_ListByWatcher",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "List SharedPrivateLinkResource resources by Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SharedPrivateLinkResources_ListByWatcher_MaximumSet": {
            "$ref": "./examples/SharedPrivateLinkResources_ListByWatcher_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}": {
      "get": {
        "operationId": "SharedPrivateLinkResources_Get",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "Get a SharedPrivateLinkResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The Shared Private Link resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SharedPrivateLinkResources_Get_MaximumSet": {
            "$ref": "./examples/SharedPrivateLinkResources_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SharedPrivateLinkResources_Create",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "Create a SharedPrivateLinkResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The Shared Private Link resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SharedPrivateLinkResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "201": {
            "description": "Resource 'SharedPrivateLinkResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SharedPrivateLinkResources_Create_MaximumSet": {
            "$ref": "./examples/SharedPrivateLinkResources_Create_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SharedPrivateLinkResources_Delete",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "Delete a SharedPrivateLinkResource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The Shared Private Link resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SharedPrivateLinkResources_Delete_MaximumSet": {
            "$ref": "./examples/SharedPrivateLinkResources_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/start": {
      "post": {
        "operationId": "Watchers_Start",
        "tags": [
          "Watchers"
        ],
        "description": "The action to start monitoring all targets configured for a database watcher.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Start_MaximumSet": {
            "$ref": "./examples/Watchers_Start_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/stop": {
      "post": {
        "operationId": "Watchers_Stop",
        "tags": [
          "Watchers"
        ],
        "description": "The action to stop monitoring all targets configured for a database watcher.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watcher"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Watchers_Stop_MaximumSet": {
            "$ref": "./examples/Watchers_Stop_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets": {
      "get": {
        "operationId": "Targets_ListByWatcher",
        "tags": [
          "Targets"
        ],
        "description": "List Target resources by Watcher",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ListByWatcher_MaximumSet": {
            "$ref": "./examples/Targets_ListByWatcher_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}": {
      "get": {
        "operationId": "Targets_Get",
        "tags": [
          "Targets"
        ],
        "description": "Get a Target",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The target resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Get_MaximumSet": {
            "$ref": "./examples/Targets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Targets_CreateOrUpdate",
        "tags": [
          "Targets"
        ],
        "description": "Create a Target",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The target resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Target"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Target' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "201": {
            "description": "Resource 'Target' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Targets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Targets_Delete",
        "tags": [
          "Targets"
        ],
        "description": "Delete a Target",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "watcherName",
            "in": "path",
            "description": "The database watcher name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The target resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Delete_MaximumSet": {
            "$ref": "./examples/Targets_Delete_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "AlertRuleResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertRuleResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AlertRuleResourceListResult": {
      "type": "object",
      "description": "The response of a AlertRuleResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AlertRuleResource items on this page",
          "items": {
            "$ref": "#/definitions/AlertRuleResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertRuleResourceProperties": {
      "type": "object",
      "description": "The generic properties of the alert rule proxy resource.",
      "properties": {
        "alertRuleResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of the alert rule resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Insights/scheduledQueryRules"
              }
            ]
          }
        },
        "createdWithProperties": {
          "$ref": "#/definitions/alertRuleCreationProperties",
          "description": "The properties with which the alert rule resource was created."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the alert rule resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The provisioning state of the alert rule resource.",
          "readOnly": true
        },
        "alertRuleTemplateId": {
          "type": "string",
          "description": "The template ID associated with alert rule resource."
        },
        "alertRuleTemplateVersion": {
          "type": "string",
          "description": "The alert rule template version."
        }
      },
      "required": [
        "alertRuleResourceId",
        "createdWithProperties",
        "creationTime",
        "alertRuleTemplateId",
        "alertRuleTemplateVersion"
      ]
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "DatabaseWatcherProvisioningState": {
      "type": "string",
      "description": "The status of the last provisioning operation performed on the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "DatabaseWatcherProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "Datastore": {
      "type": "object",
      "description": "The properties of a data store.",
      "properties": {
        "adxClusterResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of an Azure Data Explorer cluster.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Kusto/clusters"
              }
            ]
          }
        },
        "kustoClusterDisplayName": {
          "type": "string",
          "description": "The Kusto cluster display name."
        },
        "kustoClusterUri": {
          "type": "string",
          "description": "The Kusto cluster URI."
        },
        "kustoDataIngestionUri": {
          "type": "string",
          "description": "The Kusto data ingestion URI."
        },
        "kustoDatabaseName": {
          "type": "string",
          "description": "The name of a Kusto database."
        },
        "kustoManagementUrl": {
          "type": "string",
          "description": "The Kusto management URL."
        },
        "kustoOfferingType": {
          "$ref": "#/definitions/KustoOfferingType",
          "description": "The type of a Kusto offering."
        }
      },
      "required": [
        "kustoClusterUri",
        "kustoDataIngestionUri",
        "kustoDatabaseName",
        "kustoManagementUrl",
        "kustoOfferingType"
      ]
    },
    "DatastoreUpdate": {
      "type": "object",
      "description": "The properties of a data store.",
      "properties": {
        "adxClusterResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of an Azure Data Explorer cluster.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Kusto/clusters"
              }
            ]
          }
        },
        "kustoClusterDisplayName": {
          "type": "string",
          "description": "The Kusto cluster display name."
        },
        "kustoClusterUri": {
          "type": "string",
          "description": "The Kusto cluster URI."
        },
        "kustoDataIngestionUri": {
          "type": "string",
          "description": "The Kusto data ingestion URI."
        },
        "kustoDatabaseName": {
          "type": "string",
          "description": "The name of a Kusto database."
        },
        "kustoManagementUrl": {
          "type": "string",
          "description": "The Kusto management URL."
        },
        "kustoOfferingType": {
          "$ref": "#/definitions/KustoOfferingType",
          "description": "The type of a Kusto offering."
        }
      }
    },
    "HealthValidation": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HealthValidationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HealthValidationListResult": {
      "type": "object",
      "description": "The response of a HealthValidation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HealthValidation items on this page",
          "items": {
            "$ref": "#/definitions/HealthValidation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthValidationProperties": {
      "type": "object",
      "description": "The generic properties of the health validation resource.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of health validation, in UTC.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of health validation, in UTC.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/validationStatus",
          "description": "The current health validation status.",
          "readOnly": true
        },
        "issues": {
          "type": "array",
          "description": "The list of issues found by health validation.",
          "items": {
            "$ref": "#/definitions/ValidationIssue"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The provisioning state of the health validation resource.",
          "readOnly": true
        }
      },
      "required": [
        "startTime",
        "endTime",
        "status",
        "issues"
      ]
    },
    "KustoOfferingType": {
      "type": "string",
      "description": "The type of Kusto offering.",
      "enum": [
        "adx",
        "free",
        "fabric"
      ],
      "x-ms-enum": {
        "name": "KustoOfferingType",
        "modelAsString": true,
        "values": [
          {
            "name": "adx",
            "value": "adx",
            "description": "The Azure Data Explorer cluster Kusto offering."
          },
          {
            "name": "free",
            "value": "free",
            "description": "The free Azure Data Explorer cluster Kusto offering."
          },
          {
            "name": "fabric",
            "value": "fabric",
            "description": "The Fabric Real-Time Analytics Kusto offering."
          }
        ]
      }
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SharedPrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a SharedPrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedPrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SharedPrivateLinkResourceProperties": {
      "type": "object",
      "description": "The generic properties of a Shared Private Link resource.",
      "properties": {
        "privateLinkResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of the resource the shared private link resource is for."
        },
        "groupId": {
          "type": "string",
          "description": "The group id from the provider of resource the shared private link resource is for."
        },
        "requestMessage": {
          "type": "string",
          "description": "The request message for requesting approval of the shared private link resource."
        },
        "dnsZone": {
          "type": "string",
          "description": "The DNS zone segment to be included in the DNS name of the shared private link. Value is required for Azure Data Explorer clusters and SQL managed instances, and must be omitted for SQL logical servers and key vaults. The value is the second segment of the host FQDN name of the resource that the shared private link resource is for. For example: if the host name is 'adx-cluster-21187695.eastus.kusto.windows.net', then the value is 'eastus'; if the host name is 'sql-mi-23961134.767d5869f605.database.windows.net', then the value is '767d5869f605'."
        },
        "status": {
          "$ref": "#/definitions/SharedPrivateLinkResourceStatus",
          "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "privateLinkResourceId",
        "groupId",
        "requestMessage"
      ]
    },
    "SharedPrivateLinkResourceStatus": {
      "type": "string",
      "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "SharedPrivateLinkResourceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The shared private link connection request was not yet authorized by the resource owner."
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "The shared private link connection request was approved by the resource owner."
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "The shared private link connection request was rejected by the resource owner."
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "The shared private link connection request was disconnected by the resource owner."
          }
        ]
      }
    },
    "SqlDbElasticPoolTargetProperties": {
      "type": "object",
      "description": "The properties specific to an elastic pool in Azure SQL Database.",
      "properties": {
        "sqlEpResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of an Azure SQL DB elastic pool target.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Sql/servers/elasticPools"
              }
            ]
          }
        },
        "anchorDatabaseResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of the anchor database used to connect to an elastic pool.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Sql/servers/databases"
              }
            ]
          }
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "required": [
        "sqlEpResourceId",
        "anchorDatabaseResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlEp"
    },
    "SqlDbSingleDatabaseTargetProperties": {
      "type": "object",
      "description": "The properties specific to a database in Azure SQL Database.",
      "properties": {
        "sqlDbResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of an Azure SQL DB database target.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Sql/servers/databases"
              }
            ]
          }
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "required": [
        "sqlDbResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlDb"
    },
    "SqlMiTargetProperties": {
      "type": "object",
      "description": "The properties specific to Azure SQL Managed Instance targets.",
      "properties": {
        "sqlMiResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of an Azure SQL Managed Instance target.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Sql/managedInstances"
              }
            ]
          }
        },
        "connectionTcpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target.",
          "default": 1433
        },
        "readIntent": {
          "type": "boolean",
          "description": "Set to true to monitor a high availability replica of specified target, if any.",
          "default": false
        }
      },
      "required": [
        "sqlMiResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlMi"
    },
    "Target": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TargetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TargetAuthenticationType": {
      "type": "string",
      "description": "The type of authentication to use when connecting to a target.",
      "enum": [
        "Aad",
        "Sql"
      ],
      "x-ms-enum": {
        "name": "TargetAuthenticationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Aad",
            "value": "Aad",
            "description": "The Azure Active Directory authentication."
          },
          {
            "name": "Sql",
            "value": "Sql",
            "description": "The SQL password authentication."
          }
        ]
      }
    },
    "TargetListResult": {
      "type": "object",
      "description": "The response of a Target list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Target items on this page",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TargetProperties": {
      "type": "object",
      "description": "The generic properties of a target.",
      "properties": {
        "targetType": {
          "type": "string",
          "description": "Discriminator property for TargetProperties."
        },
        "targetAuthenticationType": {
          "$ref": "#/definitions/TargetAuthenticationType",
          "description": "The type of authentication to use when connecting to a target."
        },
        "targetVault": {
          "$ref": "#/definitions/VaultSecret",
          "description": "To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored."
        },
        "connectionServerName": {
          "type": "string",
          "description": "The FQDN host name of the server to use in the connection string when connecting to a target. For example, for an Azure SQL logical server in the Azure commercial cloud, the value might be 'sql-logical-server-22092780.database.windows.net'; for an Azure SQL managed instance in the Azure commercial cloud, the value might be 'sql-mi-39441134.767d5869f605.database.windows.net'. Port number and instance name must be specified separately.",
          "maxLength": 200
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        }
      },
      "discriminator": "targetType",
      "required": [
        "targetType",
        "targetAuthenticationType",
        "connectionServerName"
      ]
    },
    "ValidationIssue": {
      "type": "object",
      "description": "The model of a health validation issue.",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "The error code of the issue.",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "The error message of the issue.",
          "readOnly": true
        },
        "additionalDetails": {
          "type": "string",
          "description": "The additional details for the issue.",
          "readOnly": true
        },
        "recommendationMessage": {
          "type": "string",
          "description": "The recommendation for resolving the issue.",
          "readOnly": true
        },
        "recommendationUrl": {
          "type": "string",
          "format": "uri",
          "description": "The URL related to resolving the issue.",
          "readOnly": true
        },
        "relatedResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of the Azure resource related to the issue.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        },
        "relatedResourceType": {
          "type": "string",
          "description": "The type of the Azure resource related to the issue.",
          "readOnly": true
        }
      },
      "required": [
        "errorCode",
        "errorMessage",
        "recommendationMessage"
      ]
    },
    "VaultSecret": {
      "type": "object",
      "description": "The vault specific details required if using SQL authentication to connect to a target.",
      "properties": {
        "akvResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The Azure resource ID of the Key Vault instance storing database authentication secrets.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "akvTargetUser": {
          "type": "string",
          "description": "The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.",
          "pattern": "^[a-zA-Z0-9-]{1,127}$"
        },
        "akvTargetPassword": {
          "type": "string",
          "description": "The path to the Key Vault secret storing the password for authentication to a target.",
          "pattern": "^[a-zA-Z0-9-]{1,127}$"
        }
      }
    },
    "Watcher": {
      "type": "object",
      "description": "The DatabaseWatcherProviderHub resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatcherProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WatcherListResult": {
      "type": "object",
      "description": "The response of a Watcher list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Watcher items on this page",
          "items": {
            "$ref": "#/definitions/Watcher"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WatcherProperties": {
      "type": "object",
      "description": "The RP specific properties of the resource.",
      "properties": {
        "datastore": {
          "$ref": "#/definitions/Datastore",
          "description": "The data store for collected monitoring data."
        },
        "status": {
          "$ref": "#/definitions/WatcherStatus",
          "description": "The monitoring collection status of the watcher.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/DatabaseWatcherProvisioningState",
          "description": "The provisioning state of the resource watcher.",
          "readOnly": true
        },
        "defaultAlertRuleIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of a user-assigned managed identity that will be assigned to a new alert rule.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        }
      }
    },
    "WatcherStatus": {
      "type": "string",
      "description": "The monitoring collection status of a watcher.",
      "enum": [
        "Starting",
        "Running",
        "Stopping",
        "Stopped",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "WatcherStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Denotes the watcher is in a starting state."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Denotes the watcher is in a running state."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Denotes the watcher is in a stopping state."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "Denotes the watcher is in a stopped state."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Denotes the watcher is in a deleting state."
          }
        ]
      }
    },
    "WatcherUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Watcher.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WatcherUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WatcherUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Watcher.",
      "properties": {
        "datastore": {
          "$ref": "#/definitions/DatastoreUpdate",
          "description": "The data store for collected monitoring data."
        },
        "defaultAlertRuleIdentityResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource ID of a user-assigned managed identity that will be assigned to a new alert rule.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        }
      }
    },
    "alertRuleCreationProperties": {
      "type": "string",
      "description": "The properties with which the alert rule resource was created.",
      "enum": [
        "CreatedWithActionGroup",
        "None"
      ],
      "x-ms-enum": {
        "name": "alertRuleCreationProperties",
        "modelAsString": true,
        "values": [
          {
            "name": "CreatedWithActionGroup",
            "value": "CreatedWithActionGroup",
            "description": "The alert rule was created with an action group."
          },
          {
            "name": "None",
            "value": "None",
            "description": "The alert rule was created with no properties."
          }
        ]
      }
    },
    "validationStatus": {
      "type": "string",
      "description": "Health validation status.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled",
        "TimedOut"
      ],
      "x-ms-enum": {
        "name": "validationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "Health validation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Health validation is running."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Health validation completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Health validation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Health validation was canceled."
          },
          {
            "name": "TimedOut",
            "value": "TimedOut",
            "description": "Health validation timed out."
          }
        ]
      },
      "readOnly": true
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}