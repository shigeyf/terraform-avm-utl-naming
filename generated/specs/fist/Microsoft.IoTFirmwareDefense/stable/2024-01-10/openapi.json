{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.IoTFirmwareDefense",
    "version": "2024-01-10"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.IoTFirmwareDefense/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the operations for this resource provider",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListBySubscription",
        "description": "Lists all of the firmware analysis workspaces in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Workspaces_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_ListBySubscription_MaximumSet_Gen.json"
          },
          "Workspaces_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListByResourceGroup",
        "description": "Lists all of the firmware analysis workspaces in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceList"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Workspaces_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Workspaces_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}": {
      "put": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Create",
        "description": "The operation to create or update a firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceCreateBodyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Create_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_Create_MaximumSet_Gen.json"
          },
          "Workspaces_Create_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Update",
        "description": "The operation to update a firmware analysis workspaces.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceUpdateBodyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Update_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_Update_MaximumSet_Gen.json"
          },
          "Workspaces_Update_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Delete",
        "description": "The operation to delete a firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_Delete_MaximumSet_Gen.json"
          },
          "Workspaces_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Get",
        "description": "Get firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Get_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_Get_MaximumSet_Gen.json"
          },
          "Workspaces_Get_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/generateUploadUrl": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_GenerateUploadUrl",
        "description": "The operation to get a url for file upload.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/GenerateUploadUrlBodyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./common.json#/definitions/UrlToken"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_GenerateUploadUrl_MaximumSet_Gen": {
            "$ref": "./examples/Workspaces_GenerateUploadUrl_MaximumSet_Gen.json"
          },
          "Workspaces_GenerateUploadUrl_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_GenerateUploadUrl_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/passwordHashes": {
      "get": {
        "tags": [
          "PasswordHashes"
        ],
        "operationId": "PasswordHashes_ListByFirmware",
        "description": "Lists password hash analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PasswordHashListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PasswordHashes_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/PasswordHashes_ListByFirmware_MaximumSet_Gen.json"
          },
          "PasswordHashes_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/PasswordHashes_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cves": {
      "get": {
        "tags": [
          "CVEs"
        ],
        "operationId": "Cves_ListByFirmware",
        "description": "Lists CVE analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CveListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Cves_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/Cves_ListByFirmware_MaximumSet_Gen.json"
          },
          "Cves_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/Cves_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/sbomComponents": {
      "get": {
        "tags": [
          "SBOM"
        ],
        "operationId": "SbomComponents_ListByFirmware",
        "description": "Lists SBOM analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SbomComponentListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "SbomComponents_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/SbomComponents_ListByFirmware_MaximumSet_Gen.json"
          },
          "SbomComponents_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/SbomComponents_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/binaryHardeningResults": {
      "get": {
        "tags": [
          "BinaryHardening"
        ],
        "operationId": "BinaryHardening_ListByFirmware",
        "description": "Lists binary hardening analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BinaryHardeningListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BinaryHardening_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/BinaryHardening_ListByFirmware_MaximumSet_Gen.json"
          },
          "BinaryHardening_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/BinaryHardening_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoCertificates": {
      "get": {
        "tags": [
          "CryptoCertificates"
        ],
        "operationId": "CryptoCertificates_ListByFirmware",
        "description": "Lists cryptographic certificate analysis results found in a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CryptoCertificateListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "CryptoCertificates_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/CryptoCertificates_ListByFirmware_MaximumSet_Gen.json"
          },
          "CryptoCertificates_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/CryptoCertificates_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries": {
      "get": {
        "tags": [
          "Summaries"
        ],
        "operationId": "Summaries_ListByFirmware",
        "description": "Lists analysis result summary names of a firmware. To fetch the full summary data, get that summary by name.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SummaryListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Summaries_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/Summaries_ListByFirmware_MaximumSet_Gen.json"
          },
          "Summaries_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/Summaries_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries/{summaryName}": {
      "get": {
        "tags": [
          "Summaries"
        ],
        "operationId": "Summaries_Get",
        "description": "Get an analysis result summary of a firmware by name.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/SummaryNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SummaryResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Summaries_Get_MaximumSet_Gen": {
            "$ref": "./examples/Summaries_Get_MaximumSet_Gen.json"
          },
          "Summaries_Get_MinimumSet_Gen": {
            "$ref": "./examples/Summaries_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoKeys": {
      "get": {
        "tags": [
          "CryptoKeys"
        ],
        "operationId": "CryptoKeys_ListByFirmware",
        "description": "Lists cryptographic key analysis results found in a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CryptoKeyListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "CryptoKeys_ListByFirmware_MaximumSet_Gen": {
            "$ref": "./examples/CryptoKeys_ListByFirmware_MaximumSet_Gen.json"
          },
          "CryptoKeys_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/CryptoKeys_ListByFirmware_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares": {
      "get": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_ListByWorkspace",
        "description": "Lists all of firmwares inside a workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirmwareList"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Firmwares_ListByWorkspace_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_ListByWorkspace_MaximumSet_Gen.json"
          },
          "Firmwares_ListByWorkspace_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_ListByWorkspace_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}": {
      "put": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_Create",
        "description": "The operation to create a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FirmwareCreateBodyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Create_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_Create_MaximumSet_Gen.json"
          },
          "Firmwares_Create_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_Update",
        "description": "The operation to update firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FirmwareUpdateBodyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Update_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_Update_MaximumSet_Gen.json"
          },
          "Firmwares_Update_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_Delete",
        "description": "The operation to delete a firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_Delete_MaximumSet_Gen.json"
          },
          "Firmwares_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_Get",
        "description": "Get firmware.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Get_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_Get_MaximumSet_Gen.json"
          },
          "Firmwares_Get_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/generateDownloadUrl": {
      "post": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_GenerateDownloadUrl",
        "description": "The operation to a url for file download.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./common.json#/definitions/UrlToken"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_GenerateDownloadUrl_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_GenerateDownloadUrl_MaximumSet_Gen.json"
          },
          "Firmwares_GenerateDownloadUrl_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_GenerateDownloadUrl_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/generateFilesystemDownloadUrl": {
      "post": {
        "tags": [
          "Firmwares"
        ],
        "operationId": "Firmwares_GenerateFilesystemDownloadUrl",
        "description": "The operation to a url for tar file download.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/FirmwareIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./common.json#/definitions/UrlToken"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_GenerateFilesystemDownloadUrl_MaximumSet_Gen": {
            "$ref": "./examples/Firmwares_GenerateFilesystemDownloadUrl_MaximumSet_Gen.json"
          },
          "Firmwares_GenerateFilesystemDownloadUrl_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_GenerateFilesystemDownloadUrl_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "parameters": {
    "FirmwareIdParameter": {
      "name": "firmwareId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id of the firmware.",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the firmware analysis workspace.",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceCreateBodyParameter": {
      "name": "workspace",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Workspace"
      },
      "description": "Parameters when creating a firmware analysis workspace.",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceUpdateBodyParameter": {
      "name": "workspace",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WorkspaceUpdateDefinition"
      },
      "description": "Parameters when updating a firmware analysis workspace.",
      "x-ms-parameter-location": "method"
    },
    "GenerateUploadUrlBodyParameter": {
      "name": "generateUploadUrl",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/GenerateUploadUrlRequest"
      },
      "description": "Parameters when requesting a URL to upload firmware.",
      "x-ms-parameter-location": "method"
    },
    "SummaryNameParameter": {
      "name": "summaryName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "enum": [
        "Firmware",
        "CVE",
        "BinaryHardening",
        "CryptoCertificate",
        "CryptoKey"
      ],
      "x-ms-parameter-location": "method",
      "description": "The Firmware analysis summary name describing the type of summary.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "summaryName"
      }
    },
    "FirmwareCreateBodyParameter": {
      "name": "firmware",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Firmware"
      },
      "description": "Details of the firmware being created or updated.",
      "x-ms-parameter-location": "method"
    },
    "FirmwareUpdateBodyParameter": {
      "name": "firmware",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/FirmwareUpdateDefinition"
      },
      "description": "Details of the firmware being created or updated.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "UrlToken": {
      "type": "object",
      "properties": {
        "url": {
          "description": "SAS URL for creating or accessing a blob file.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        }
      },
      "description": "Url data for creating or accessing a blob file."
    },
    "PairedKey": {
      "type": "object",
      "description": "Details of a matching paired key or certificate.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the paired key or certificate."
        },
        "type": {
          "type": "string",
          "description": "The type indicating whether the paired object is a key or certificate."
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "type": "string",
          "enum": [
            "Accepted",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "description": "Workspace properties."
    },
    "Workspace": {
      "type": "object",
      "description": "Firmware analysis workspace.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspaceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkspaceUpdateDefinition": {
      "type": "object",
      "description": "Firmware analysis workspace.",
      "properties": {
        "properties": {
          "description": "The editable workspace properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WorkspaceProperties"
        }
      }
    },
    "WorkspaceList": {
      "type": "object",
      "description": "Return a list of firmware analysis workspaces.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Workspace"
          },
          "description": "The list of firmware analysis workspaces."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of asset."
        }
      }
    },
    "GenerateUploadUrlRequest": {
      "type": "object",
      "description": "Properties for generating an upload URL",
      "properties": {
        "firmwareId": {
          "type": "string",
          "description": "A unique ID for the firmware to be uploaded."
        }
      }
    },
    "PasswordHash": {
      "type": "object",
      "properties": {
        "passwordHashId": {
          "description": "ID for password hash",
          "type": "string",
          "x-nullable": true
        },
        "filePath": {
          "description": "File path of the password hash",
          "type": "string",
          "x-nullable": true
        },
        "salt": {
          "description": "Salt of the password hash",
          "type": "string",
          "x-nullable": true
        },
        "hash": {
          "description": "Hash of the password",
          "type": "string",
          "x-nullable": true
        },
        "context": {
          "description": "Context of password hash",
          "type": "string",
          "x-nullable": true
        },
        "username": {
          "description": "User name of password hash",
          "type": "string",
          "x-nullable": true
        },
        "algorithm": {
          "description": "Algorithm of the password hash",
          "type": "string",
          "x-nullable": true
        }
      },
      "description": "Password hash properties"
    },
    "PasswordHashResource": {
      "type": "object",
      "description": "Password hash resource",
      "properties": {
        "properties": {
          "title": "Password hash properties",
          "description": "The properties of a password hash found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PasswordHash"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "PasswordHashListResult": {
      "type": "object",
      "description": "List of password hash results",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PasswordHashResource"
          },
          "description": "The list of password hash results."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "CveLink": {
      "type": "object",
      "description": "Properties of a reference link for a CVE.",
      "properties": {
        "href": {
          "description": "The destination of the reference link.",
          "type": "string",
          "format": "uri",
          "x-nullable": true
        },
        "label": {
          "description": "The label of the reference link.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CveComponent": {
      "type": "object",
      "description": "Properties of the SBOM component for a CVE.",
      "properties": {
        "componentId": {
          "description": "ID of the SBOM component",
          "type": "string"
        },
        "name": {
          "description": "Name of the SBOM component",
          "type": "string"
        },
        "version": {
          "description": "Version of the SBOM component.",
          "type": "string"
        }
      }
    },
    "CveResult": {
      "type": "object",
      "properties": {
        "cveId": {
          "description": "ID of the CVE result.",
          "type": "string",
          "x-nullable": true
        },
        "component": {
          "description": "The SBOM component for the CVE.",
          "$ref": "#/definitions/CveComponent",
          "x-nullable": true
        },
        "severity": {
          "description": "Severity of the CVE.",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the CVE.",
          "type": "string"
        },
        "cvssScore": {
          "description": "A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the V2 score is specified it will be the V2 score.",
          "type": "string",
          "x-nullable": true
        },
        "cvssVersion": {
          "description": "CVSS version of the CVE.",
          "type": "string",
          "x-nullable": true
        },
        "cvssV2Score": {
          "description": "CVSS V2 score of the CVE.",
          "type": "string",
          "x-nullable": true
        },
        "cvssV3Score": {
          "description": "CVSS V3 score of the CVE.",
          "type": "string",
          "x-nullable": true
        },
        "links": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CveLink"
          },
          "description": "The list of reference links for the CVE.",
          "x-ms-identifiers": []
        },
        "description": {
          "description": "The CVE description.",
          "type": "string",
          "x-nullable": true
        }
      },
      "description": "Details of a CVE detected in firmware."
    },
    "CveResource": {
      "type": "object",
      "description": "CVE analysis result resource",
      "properties": {
        "properties": {
          "title": "CVE result properties",
          "description": "The properties of a CVE result found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CveResult"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "CveListResult": {
      "type": "object",
      "description": "List of CVE results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CveResource"
          },
          "description": "The list of CVE results."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "SbomComponent": {
      "type": "object",
      "properties": {
        "componentId": {
          "description": "ID for the component.",
          "type": "string",
          "x-nullable": true
        },
        "componentName": {
          "description": "Name for the component.",
          "type": "string"
        },
        "version": {
          "description": "Version for the component.",
          "type": "string"
        },
        "license": {
          "description": "License for the component.",
          "type": "string",
          "x-nullable": true
        },
        "filePaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "File paths related to the component."
        }
      },
      "description": "SBOM component of a firmware."
    },
    "SbomComponentResource": {
      "type": "object",
      "description": "SBOM analysis result resource",
      "properties": {
        "properties": {
          "title": "SBOM result properties",
          "description": "The properties of an SBOM component found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SbomComponent"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "SbomComponentListResult": {
      "type": "object",
      "description": "List of SBOM results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SbomComponentResource"
          },
          "description": "The list of SBOM components."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "BinaryHardeningFeatures": {
      "type": "object",
      "properties": {
        "nx": {
          "description": "NX (no-execute) flag.",
          "type": "boolean"
        },
        "pie": {
          "description": "PIE (position independent executable) flag.",
          "type": "boolean"
        },
        "relro": {
          "description": "RELRO (relocation read-only) flag.",
          "type": "boolean"
        },
        "canary": {
          "description": "Canary (stack canaries) flag.",
          "type": "boolean"
        },
        "stripped": {
          "description": "Stripped flag.",
          "type": "boolean"
        }
      },
      "description": "Binary hardening features."
    },
    "BinaryHardeningResult": {
      "type": "object",
      "properties": {
        "binaryHardeningId": {
          "description": "ID for the binary hardening result.",
          "type": "string",
          "x-nullable": true
        },
        "features": {
          "title": "BinaryHardeningFeatures",
          "description": "Binary hardening features.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BinaryHardeningFeatures"
        },
        "architecture": {
          "description": "The architecture of the uploaded firmware.",
          "type": "string",
          "x-nullable": true
        },
        "filePath": {
          "description": "The executable path.",
          "type": "string",
          "x-nullable": true
        },
        "class": {
          "description": "The executable class to indicate 32 or 64 bit.",
          "type": "string",
          "x-nullable": true
        },
        "runpath": {
          "description": "The runpath of the uploaded firmware.",
          "type": "string",
          "x-nullable": true
        },
        "rpath": {
          "description": "The rpath of the uploaded firmware.",
          "type": "string",
          "x-nullable": true
        }
      },
      "description": "Binary hardening of a firmware."
    },
    "BinaryHardeningResource": {
      "type": "object",
      "description": "binary hardening analysis result resource",
      "properties": {
        "properties": {
          "title": "binary hardening result properties",
          "description": "The properties of a binary hardening result found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BinaryHardeningResult"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "BinaryHardeningListResult": {
      "type": "object",
      "description": "List of binary hardening results.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/BinaryHardeningResource"
          },
          "description": "The list of binary hardening results."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "CryptoCertificateEntity": {
      "type": "object",
      "description": "Information on an entity (distinguished name) in a cryptographic certificate.",
      "properties": {
        "commonName": {
          "description": "Common name of the certificate entity.",
          "type": "string",
          "x-nullable": true
        },
        "organization": {
          "description": "Organization of the certificate entity.",
          "type": "string",
          "x-nullable": true
        },
        "organizationalUnit": {
          "description": "The organizational unit of the certificate entity.",
          "type": "string",
          "x-nullable": true
        },
        "state": {
          "description": "Geographical state or province of the certificate entity.",
          "type": "string",
          "x-nullable": true
        },
        "country": {
          "description": "Country code of the certificate entity.",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CryptoCertificate": {
      "type": "object",
      "properties": {
        "cryptoCertId": {
          "description": "ID for the certificate result.",
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "subject": {
          "description": "Subject information of the certificate.",
          "$ref": "#/definitions/CryptoCertificateEntity",
          "x-nullable": true
        },
        "issuer": {
          "description": "Issuer information of the certificate.",
          "$ref": "#/definitions/CryptoCertificateEntity",
          "x-nullable": true
        },
        "issuedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue date for the certificate.",
          "x-nullable": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date for the certificate.",
          "x-nullable": true
        },
        "role": {
          "description": "Role of the certificate (Root CA, etc)",
          "type": "string",
          "x-nullable": true
        },
        "signatureAlgorithm": {
          "description": "The signature algorithm used in the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "keySize": {
          "description": "Size of the certificate's key in bits",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "keyAlgorithm": {
          "description": "Key algorithm used in the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "encoding": {
          "description": "Encoding used for the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "serialNumber": {
          "description": "Serial number of the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "fingerprint": {
          "description": "Fingerprint of the certificate.",
          "type": "string",
          "x-nullable": true
        },
        "usage": {
          "description": "List of functions the certificate can fulfill.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "filePaths": {
          "type": "array",
          "readOnly": true,
          "description": "List of files where this certificate was found.",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "pairedKey": {
          "description": "A matching paired private key.",
          "$ref": "./common.json#/definitions/PairedKey",
          "x-nullable": true
        },
        "isExpired": {
          "description": "Indicates if the certificate is expired.",
          "type": "boolean",
          "x-nullable": true
        },
        "isSelfSigned": {
          "description": "Indicates if the certificate is self-signed.",
          "type": "boolean",
          "x-nullable": true
        },
        "isWeakSignature": {
          "description": "Indicates the signature algorithm used is insecure.",
          "type": "boolean",
          "x-nullable": true
        },
        "isShortKeySize": {
          "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "description": "Crypto certificate properties"
    },
    "CryptoCertificateResource": {
      "type": "object",
      "description": "Crypto certificate resource",
      "properties": {
        "properties": {
          "title": "Crypto certificate properties",
          "description": "The properties of a crypto certificate found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CryptoCertificate"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "CryptoCertificateListResult": {
      "type": "object",
      "description": "List of crypto certificates.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CryptoCertificateResource"
          },
          "description": "The list of crypto certificate results."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "SummaryType": {
      "type": "string",
      "enum": [
        "Firmware",
        "CVE",
        "BinaryHardening",
        "CryptoCertificate",
        "CryptoKey"
      ],
      "description": "Describes the type of summary.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SummaryType"
      }
    },
    "SummaryListResult": {
      "type": "object",
      "description": "List of analysis summaries.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SummaryResource"
          },
          "description": "The list of summaries."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "SummaryResourceProperties": {
      "description": "Properties of an analysis summary.",
      "type": "object",
      "discriminator": "summaryType",
      "properties": {
        "summaryType": {
          "$ref": "#/definitions/SummaryType"
        }
      },
      "readOnly": true,
      "required": [
        "summaryType"
      ]
    },
    "SummaryResource": {
      "description": "The object representing a firmware analysis summary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      }
    },
    "FirmwareSummary": {
      "description": "Properties for high level summary of firmware analysis results.",
      "type": "object",
      "x-ms-discriminator-value": "Firmware",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "properties": {
        "extractedSize": {
          "description": "Total extracted size of the firmware in bytes.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "fileSize": {
          "description": "Firmware file size in bytes.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "extractedFileCount": {
          "description": "Extracted file count.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "componentCount": {
          "description": "Components count.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "binaryCount": {
          "description": "Binary count",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "analysisTimeSeconds": {
          "description": "Time used for analysis",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "rootFileSystems": {
          "description": "The number of root file systems found.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "CveSummary": {
      "description": "Properties for a CVE analysis summary.",
      "type": "object",
      "x-ms-discriminator-value": "CVE",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "properties": {
        "critical": {
          "description": "The total number of critical severity CVEs detected",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "high": {
          "description": "The total number of high severity CVEs detected",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "medium": {
          "description": "The total number of medium severity CVEs detected",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "low": {
          "description": "The total number of low severity CVEs detected",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "unknown": {
          "description": "The total number of unknown severity CVEs detected",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "BinaryHardeningSummaryResource": {
      "description": "Properties for a binary hardening analysis summary.",
      "type": "object",
      "x-ms-discriminator-value": "BinaryHardening",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "properties": {
        "totalFiles": {
          "description": "Total number of binaries that were analyzed",
          "type": "integer",
          "format": "int64"
        },
        "nx": {
          "description": "NX summary percentage",
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "pie": {
          "description": "PIE summary percentage",
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "relro": {
          "description": "RELRO summary percentage",
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "canary": {
          "description": "Canary summary percentage",
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "stripped": {
          "description": "Stripped summary percentage",
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      }
    },
    "CryptoCertificateSummaryResource": {
      "description": "Properties for cryptographic certificate summary.",
      "type": "object",
      "x-ms-discriminator-value": "CryptoCertificate",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "properties": {
        "totalCertificates": {
          "description": "Total number of certificates found.",
          "type": "integer",
          "format": "int64"
        },
        "pairedKeys": {
          "description": "Total number of paired private keys found for the certificates.",
          "type": "integer",
          "format": "int64"
        },
        "expired": {
          "description": "Total number of expired certificates found.",
          "type": "integer",
          "format": "int64"
        },
        "expiringSoon": {
          "description": "Total number of nearly expired certificates found.",
          "type": "integer",
          "format": "int64"
        },
        "weakSignature": {
          "description": "Total number of certificates found using a weak signature algorithm.",
          "type": "integer",
          "format": "int64"
        },
        "selfSigned": {
          "description": "Total number of certificates found that are self-signed.",
          "type": "integer",
          "format": "int64"
        },
        "shortKeySize": {
          "description": "Total number of certificates found that have an insecure key size for the key algorithm.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CryptoKeySummaryResource": {
      "description": "Properties for cryptographic key summary.",
      "type": "object",
      "x-ms-discriminator-value": "CryptoKey",
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "properties": {
        "totalKeys": {
          "description": "Total number of cryptographic keys found.",
          "type": "integer",
          "format": "int64"
        },
        "publicKeys": {
          "description": "Total number of (non-certificate) public keys found.",
          "type": "integer",
          "format": "int64"
        },
        "privateKeys": {
          "description": "Total number of private keys found.",
          "type": "integer",
          "format": "int64"
        },
        "pairedKeys": {
          "description": "Total number of keys found that have a matching paired key or certificate.",
          "type": "integer",
          "format": "int64"
        },
        "shortKeySize": {
          "description": "Total number of keys found that have an insecure key size for the algorithm.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CryptoKey": {
      "type": "object",
      "properties": {
        "cryptoKeyId": {
          "description": "ID for the key result.",
          "type": "string",
          "x-nullable": true
        },
        "keyType": {
          "description": "Type of the key (public or private).",
          "type": "string",
          "x-nullable": true
        },
        "keySize": {
          "description": "Size of the key in bits.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "keyAlgorithm": {
          "description": "Key algorithm name.",
          "type": "string",
          "x-nullable": true
        },
        "usage": {
          "description": "Functions the key can fulfill.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "filePaths": {
          "type": "array",
          "readOnly": true,
          "description": "List of files where this key was found.",
          "items": {
            "type": "string"
          },
          "x-nullable": true
        },
        "pairedKey": {
          "description": "A matching paired key or certificate.",
          "$ref": "./common.json#/definitions/PairedKey",
          "x-nullable": true
        },
        "isShortKeySize": {
          "description": "Indicates the key size is considered too small to be secure for the algorithm.",
          "type": "boolean",
          "x-nullable": true
        }
      },
      "description": "Crypto key properties"
    },
    "CryptoKeyResource": {
      "type": "object",
      "description": "Crypto key resource",
      "properties": {
        "properties": {
          "title": "Crypto key properties",
          "description": "The properties of a crypto key found within a firmware image",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CryptoKey"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "CryptoKeyListResult": {
      "type": "object",
      "description": "List of crypto keys.",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CryptoKeyResource"
          },
          "description": "The list of crypto key results."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources."
        }
      }
    },
    "FirmwareList": {
      "type": "object",
      "description": "List of firmwares",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Firmware"
          },
          "description": "The list of firmwares."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of asset."
        }
      }
    },
    "Firmware": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "properties": {
          "title": "Firmware properties",
          "description": "The properties of a firmware",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirmwareProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "FirmwareUpdateDefinition": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "properties": {
          "title": "Firmware properties",
          "description": "The editable properties of a firmware",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirmwareProperties"
        }
      }
    },
    "FirmwareProperties": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "File name for a firmware that user uploaded."
        },
        "vendor": {
          "type": "string",
          "description": "Firmware vendor."
        },
        "model": {
          "type": "string",
          "description": "Firmware model."
        },
        "version": {
          "type": "string",
          "description": "Firmware version."
        },
        "description": {
          "type": "string",
          "description": "User-specified description of the firmware."
        },
        "fileSize": {
          "description": "File size of the uploaded firmware image.",
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "status": {
          "type": "string",
          "description": "The status of firmware scan.",
          "enum": [
            "Pending",
            "Extracting",
            "Analyzing",
            "Ready",
            "Error"
          ],
          "default": "Pending",
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "statusMessages": {
          "type": "array",
          "description": "A list of errors or other messages generated during firmware analysis",
          "items": {
            "$ref": "#/definitions/StatusMessage"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "type": "string",
          "enum": [
            "Accepted",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "description": "Firmware properties."
    },
    "StatusMessage": {
      "type": "object",
      "description": "Error and status message",
      "properties": {
        "errorCode": {
          "description": "The error code",
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "description": "The error or status message",
          "type": "string"
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}