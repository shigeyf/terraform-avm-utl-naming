{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.MobileNetwork",
    "version": "2024-04-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}": {
      "delete": {
        "tags": [
          "MobileNetwork"
        ],
        "operationId": "MobileNetworks_Delete",
        "description": "Deletes the specified mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete mobile network": {
            "$ref": "./examples/MobileNetworkDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "MobileNetwork"
        ],
        "operationId": "MobileNetworks_Get",
        "description": "Gets information about the specified mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting mobile network resource.",
            "schema": {
              "$ref": "#/definitions/MobileNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get mobile network": {
            "$ref": "./examples/MobileNetworkGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "MobileNetwork"
        ],
        "operationId": "MobileNetworks_CreateOrUpdate",
        "description": "Creates or updates a mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MobileNetwork"
            },
            "description": "Parameters supplied to the create or update mobile network operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting mobile network resource.",
            "schema": {
              "$ref": "#/definitions/MobileNetwork"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting mobile network resource.",
            "schema": {
              "$ref": "#/definitions/MobileNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create mobile network": {
            "$ref": "./examples/MobileNetworkCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "MobileNetwork"
        ],
        "operationId": "MobileNetworks_UpdateTags",
        "description": "Updates mobile network tags and managed identity.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/IdentityAndTagsObject"
            },
            "description": "Parameters supplied to update mobile network tags and/or identity."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting mobile network resource.",
            "schema": {
              "$ref": "#/definitions/MobileNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update mobile network tags": {
            "$ref": "./examples/MobileNetworkUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobileNetwork/mobileNetworks": {
      "get": {
        "tags": [
          "MobileNetworks"
        ],
        "operationId": "MobileNetworks_ListBySubscription",
        "description": "Lists all the mobile networks in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of mobile network resources.",
            "schema": {
              "$ref": "#/definitions/MobileNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List mobile networks in a subscription": {
            "$ref": "./examples/MobileNetworkListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks": {
      "get": {
        "tags": [
          "MobileNetworks"
        ],
        "operationId": "MobileNetworks_ListByResourceGroup",
        "description": "Lists all the mobile networks in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of mobile network resources.",
            "schema": {
              "$ref": "#/definitions/MobileNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List mobile networks in resource group": {
            "$ref": "./examples/MobileNetworkListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/listSimGroups": {
      "post": {
        "tags": [
          "MobileNetworks"
        ],
        "operationId": "MobileNetworks_ListSimGroups",
        "description": "Gets all the SIM groups assigned to a mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SIM group resources.",
            "schema": {
              "$ref": "./simGroup.json#/definitions/SimGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SIM groups in a mobile network": {
            "$ref": "./examples/SimGroupListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/sims/{simName}": {
      "delete": {
        "tags": [
          "SIM"
        ],
        "operationId": "Sims_Delete",
        "description": "Deletes the specified SIM.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete SIM": {
            "$ref": "./examples/SimDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SIM"
        ],
        "operationId": "Sims_Get",
        "description": "Gets information about the specified SIM.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SIM resource.",
            "schema": {
              "$ref": "#/definitions/Sim"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SIM": {
            "$ref": "./examples/SimGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SIM"
        ],
        "operationId": "Sims_CreateOrUpdate",
        "description": "Creates or updates a SIM.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sim"
            },
            "description": "Parameters supplied to the create or update SIM operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SIM resource.",
            "schema": {
              "$ref": "#/definitions/Sim"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting SIM resource.",
            "schema": {
              "$ref": "#/definitions/Sim"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create SIM": {
            "$ref": "./examples/SimCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/sims": {
      "get": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_ListByGroup",
        "description": "Gets all the SIMs in a SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SIM resources.",
            "schema": {
              "$ref": "#/definitions/SimListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SIMs in a SIM group": {
            "$ref": "./examples/SimListBySimGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/uploadSims": {
      "post": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_BulkUpload",
        "description": "Bulk upload SIMs to a SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimUploadList"
            },
            "description": "Parameters supplied to the bulk SIM upload operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bulk upload SIMs in a SIM group": {
            "$ref": "./examples/SimBulkUpload.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/deleteSims": {
      "post": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_BulkDelete",
        "description": "Bulk delete SIMs from a SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimDeleteList"
            },
            "description": "Parameters supplied to the bulk SIM delete operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState on each SIM until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resources do not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bulk delete SIMs from a SIM group": {
            "$ref": "./examples/SimBulkDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/uploadEncryptedSims": {
      "post": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_BulkUploadEncrypted",
        "description": "Bulk upload SIMs in encrypted form to a SIM group. The SIM credentials must be encrypted.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EncryptedSimUploadList"
            },
            "description": "Parameters supplied to the encrypted SIMs upload operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Bulk upload encrypted SIMs to a SIM group": {
            "$ref": "./examples/SimBulkUploadEncrypted.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/moveSims": {
      "post": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_Move",
        "description": "Move SIMs to another SIM Group",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimMove"
            },
            "description": "Parameters supplied to move the SIMs."
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            },
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Move list of SIMs to target SIM group": {
            "$ref": "./examples/SimMove.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}/cloneSims": {
      "post": {
        "tags": [
          "SIMs"
        ],
        "operationId": "Sims_Clone",
        "description": "Clone SIMs to another SIM Group",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimClone"
            },
            "description": "Parameters supplied to clone the SIMs."
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "headers": {
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            },
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Clone list of SIMs to target SIM group": {
            "$ref": "./examples/SimClone.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCoreDataPlanes/{packetCoreDataPlaneName}/attachedDataNetworks/{attachedDataNetworkName}": {
      "delete": {
        "tags": [
          "AttachedDataNetwork"
        ],
        "operationId": "AttachedDataNetworks_Delete",
        "description": "Deletes the specified attached data network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedDataNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete attached data network resource": {
            "$ref": "./examples/AttachedDataNetworkDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "AttachedDataNetwork"
        ],
        "operationId": "AttachedDataNetworks_Get",
        "description": "Gets information about the specified attached data network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedDataNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting attached data network resource.",
            "schema": {
              "$ref": "#/definitions/AttachedDataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get attached data network": {
            "$ref": "./examples/AttachedDataNetworkGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AttachedDataNetwork"
        ],
        "operationId": "AttachedDataNetworks_CreateOrUpdate",
        "description": "Creates or updates an attached data network. Must be created in the same location as its parent packet core data plane.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedDataNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachedDataNetwork"
            },
            "description": "Parameters supplied to the create or update attached data network operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting attached data network resource.",
            "schema": {
              "$ref": "#/definitions/AttachedDataNetwork"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting attached data network resource.",
            "schema": {
              "$ref": "#/definitions/AttachedDataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create attached data network": {
            "$ref": "./examples/AttachedDataNetworkCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "AttachedDataNetwork"
        ],
        "operationId": "AttachedDataNetworks_UpdateTags",
        "description": "Updates an attached data network tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/AttachedDataNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update attached data network tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting attached data network resource.",
            "schema": {
              "$ref": "#/definitions/AttachedDataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update attached data network tags": {
            "$ref": "./examples/AttachedDataNetworkUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCoreDataPlanes/{packetCoreDataPlaneName}/attachedDataNetworks": {
      "get": {
        "tags": [
          "AttachedDataNetworks"
        ],
        "operationId": "AttachedDataNetworks_ListByPacketCoreDataPlane",
        "description": "Gets all the attached data networks associated with a packet core data plane.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of attached data network resources.",
            "schema": {
              "$ref": "#/definitions/AttachedDataNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List attached data networks in a data plane": {
            "$ref": "./examples/AttachedDataNetworkListByPacketCoreDataPlane.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/services/{serviceName}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Delete",
        "description": "Deletes the specified service.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete service": {
            "$ref": "./examples/ServiceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Get",
        "description": "Gets information about the specified service.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting service resource.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get service": {
            "$ref": "./examples/ServiceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_CreateOrUpdate",
        "description": "Creates or updates a service. Must be created in the same location as its parent mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            },
            "description": "Parameters supplied to the create or update service operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting service resource.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting service resource.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create service": {
            "$ref": "./examples/ServiceCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_UpdateTags",
        "description": "Updates service tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update service tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting service resource.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update service tags": {
            "$ref": "./examples/ServiceUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_ListByMobileNetwork",
        "description": "Gets all the services in a mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of service resources.",
            "schema": {
              "$ref": "#/definitions/ServiceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List services in a mobile network": {
            "$ref": "./examples/ServiceListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/dataNetworks/{dataNetworkName}": {
      "delete": {
        "tags": [
          "DataNetwork"
        ],
        "operationId": "DataNetworks_Delete",
        "description": "Deletes the specified data network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/DataNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete data network": {
            "$ref": "./examples/DataNetworkDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "DataNetwork"
        ],
        "operationId": "DataNetworks_Get",
        "description": "Gets information about the specified data network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/DataNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting data network resource.",
            "schema": {
              "$ref": "#/definitions/DataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get data network": {
            "$ref": "./examples/DataNetworkGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataNetwork"
        ],
        "operationId": "DataNetworks_CreateOrUpdate",
        "description": "Creates or updates a data network. Must be created in the same location as its parent mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/DataNetworkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataNetwork"
            },
            "description": "Parameters supplied to the create or update data network operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting data network resource.",
            "schema": {
              "$ref": "#/definitions/DataNetwork"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting data network resource.",
            "schema": {
              "$ref": "#/definitions/DataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create data network": {
            "$ref": "./examples/DataNetworkCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "DataNetwork"
        ],
        "operationId": "DataNetworks_UpdateTags",
        "description": "Updates data network tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/DataNetworkNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update data network tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting data network resource.",
            "schema": {
              "$ref": "#/definitions/DataNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update data network tags": {
            "$ref": "./examples/DataNetworkUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/dataNetworks": {
      "get": {
        "tags": [
          "DataNetworks"
        ],
        "operationId": "DataNetworks_ListByMobileNetwork",
        "description": "Lists all data networks in the mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of data network resources.",
            "schema": {
              "$ref": "#/definitions/DataNetworkListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List data networks in a mobile network": {
            "$ref": "./examples/DataNetworkListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/sites/{siteName}": {
      "delete": {
        "tags": [
          "Site"
        ],
        "operationId": "Sites_Delete",
        "description": "Deletes the specified mobile network site. This will also delete any network functions that are a part of this site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete mobile network site": {
            "$ref": "./examples/SiteDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Site"
        ],
        "operationId": "Sites_Get",
        "description": "Gets information about the specified mobile network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting mobile network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get mobile network site": {
            "$ref": "./examples/SiteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Site"
        ],
        "operationId": "Sites_CreateOrUpdate",
        "description": "Creates or updates a mobile network site. Must be created in the same location as its parent mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Parameters supplied to the create or update mobile network site operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting mobile network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting mobile network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create mobile network site": {
            "$ref": "./examples/SiteCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Site"
        ],
        "operationId": "Sites_UpdateTags",
        "description": "Updates site tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network site tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network site resource.",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update mobile network site tags": {
            "$ref": "./examples/SiteUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "operationId": "Sites_ListByMobileNetwork",
        "description": "Lists all sites in the mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of mobile network resources.",
            "schema": {
              "$ref": "#/definitions/SiteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List mobile network sites in a mobile network": {
            "$ref": "./examples/SiteListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/sites/{siteName}/deletePacketCore": {
      "post": {
        "tags": [
          "Site"
        ],
        "operationId": "Sites_DeletePacketCore",
        "description": "Deletes a packet core under the specified mobile network site.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteDeletePacketCore"
            },
            "description": "Parameters supplied to delete a packet core under a site."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete packet core in mobile network site": {
            "$ref": "./examples/SiteDeletePacketCore.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCaptures/{packetCaptureName}": {
      "put": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_CreateOrUpdate",
        "description": "Creates or updates a packet capture.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCaptureNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            },
            "description": "Parameters supplied to the create or update packet capture operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns information about the packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            }
          },
          "201": {
            "description": "Create successful. The operation returns information about the packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create packet capture": {
            "$ref": "./examples/PacketCaptureCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Get",
        "description": "Gets information about the specified packet capture session.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCaptureNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns information about the packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet capture session": {
            "$ref": "./examples/PacketCaptureGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Delete",
        "description": "Deletes the specified packet capture.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCaptureNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete packet capture": {
            "$ref": "./examples/PacketCaptureDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCaptures/{packetCaptureName}/stop": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Stop",
        "description": "Stop a packet capture session.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCaptureNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop packet capture session": {
            "$ref": "./examples/PacketCaptureStop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCaptures": {
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_ListByPacketCoreControlPlane",
        "description": "Lists all the packet capture sessions under a packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of packet capture sessions.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List packet capture sessions under a packet core control plane": {
            "$ref": "./examples/PacketCaptureListByPacketCoreControlPlane.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/slices/{sliceName}": {
      "delete": {
        "tags": [
          "Slice"
        ],
        "operationId": "Slices_Delete",
        "description": "Deletes the specified network slice.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SliceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete network slice": {
            "$ref": "./examples/SliceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Slice"
        ],
        "operationId": "Slices_Get",
        "description": "Gets information about the specified network slice.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SliceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting network slice resource.",
            "schema": {
              "$ref": "#/definitions/Slice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get network slice": {
            "$ref": "./examples/SliceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Slice"
        ],
        "operationId": "Slices_CreateOrUpdate",
        "description": "Creates or updates a network slice. Must be created in the same location as its parent mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SliceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Slice"
            },
            "description": "Parameters supplied to the create or update network slice operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network slice resource.",
            "schema": {
              "$ref": "#/definitions/Slice"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network slice resource.",
            "schema": {
              "$ref": "#/definitions/Slice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create network slice": {
            "$ref": "./examples/SliceCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Slice"
        ],
        "operationId": "Slices_UpdateTags",
        "description": "Updates slice tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SliceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network slice tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network slice resource.",
            "schema": {
              "$ref": "#/definitions/Slice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update network slice tags": {
            "$ref": "./examples/SliceUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/slices": {
      "get": {
        "tags": [
          "Slices"
        ],
        "operationId": "Slices_ListByMobileNetwork",
        "description": "Lists all slices in the mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network slice resources.",
            "schema": {
              "$ref": "#/definitions/SliceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List network slices in a mobile network": {
            "$ref": "./examples/SliceListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}": {
      "delete": {
        "tags": [
          "PacketCoreControlPlane"
        ],
        "operationId": "PacketCoreControlPlanes_Delete",
        "description": "Deletes the specified packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "PacketCoreControlPlane"
        ],
        "operationId": "PacketCoreControlPlanes_Get",
        "description": "Gets information about the specified packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting packet core control plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PacketCoreControlPlane"
        ],
        "operationId": "PacketCoreControlPlanes_CreateOrUpdate",
        "description": "Creates or updates a packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlane"
            },
            "description": "Parameters supplied to the create or update packet core control plane operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting packet core control plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlane"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting packet core control plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "PacketCoreControlPlane"
        ],
        "operationId": "PacketCoreControlPlanes_UpdateTags",
        "description": "Patch packet core control plane resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/IdentityAndTagsObject"
            },
            "description": "Parameters supplied to patch packet core control plane resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting packet core control plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlanePatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes": {
      "get": {
        "tags": [
          "PacketCoreControlPlanes"
        ],
        "operationId": "PacketCoreControlPlanes_ListBySubscription",
        "description": "Lists all the packet core control planes in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of packet core control plane resources.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List packet core control planes in a subscription": {
            "$ref": "./examples/PacketCoreControlPlaneListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes": {
      "get": {
        "tags": [
          "PacketCoreControlPlanes"
        ],
        "operationId": "PacketCoreControlPlanes_ListByResourceGroup",
        "description": "Lists all the packet core control planes in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of packet core control plane resources.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List packet core control planes in resource group": {
            "$ref": "./examples/PacketCoreControlPlaneListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/rollback": {
      "post": {
        "tags": [
          "PacketCoreControlPlaneRollback"
        ],
        "operationId": "PacketCoreControlPlanes_Rollback",
        "description": "Roll back the specified packet core control plane to the previous version, \"rollbackVersion\". Multiple consecutive rollbacks are not possible. This action may cause a service outage.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rollback packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneRollback.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/reinstall": {
      "post": {
        "tags": [
          "PacketCoreControlPlaneReinstall"
        ],
        "operationId": "PacketCoreControlPlanes_Reinstall",
        "description": "Reinstall the specified packet core control plane. This action will try to restore the packet core to the installed state that was disrupted by a transient failure. This action will cause a service outage.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reinstall packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneReinstall.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/collectDiagnosticsPackage": {
      "post": {
        "tags": [
          "PacketCoreControlPlaneCollectDiagnosticsPackage"
        ],
        "operationId": "PacketCoreControlPlanes_CollectDiagnosticsPackage",
        "description": "Collect a diagnostics package for the specified packet core control plane. This action will upload the diagnostics to a storage account.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneCollectDiagnosticsPackage"
            },
            "description": "Parameters supplied to the packet core control plane collect diagnostics package operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Async operation completed.",
            "schema": {
              "$ref": "./common.json#/definitions/AsyncOperationStatus"
            }
          },
          "202": {
            "description": "Accepted. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Collect diagnostics package from packet core control plane": {
            "$ref": "./examples/PacketCoreControlPlaneCollectDiagnosticsPackage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/routingInfo": {
      "get": {
        "tags": [
          "RoutingInfo"
        ],
        "operationId": "RoutingInfo_List",
        "description": "List all of the routing information for the packet core.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of the routing information for the packet core.",
            "schema": {
              "$ref": "#/definitions/RoutingInfoListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List routing information for the packet core": {
            "$ref": "./examples/RoutingInfoListPacketCoreControlPlane.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/routingInfo/default": {
      "get": {
        "tags": [
          "RoutingInfo"
        ],
        "operationId": "RoutingInfo_Get",
        "description": "Get the routing information for the packet core.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the routing information for the packet core.",
            "schema": {
              "$ref": "#/definitions/RoutingInfoModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get routing information for the packet core": {
            "$ref": "./examples/RoutingInfoPacketCoreControlPlane.json"
          }
        }
      }
    },
    "/providers/Microsoft.MobileNetwork/packetCoreControlPlaneVersions/{versionName}": {
      "get": {
        "tags": [
          "PacketCoreControlPlaneVersion"
        ],
        "operationId": "PacketCoreControlPlaneVersions_Get",
        "description": "Gets information about the specified packet core control plane version.",
        "parameters": [
          {
            "name": "versionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet core control plane version."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting packet core control plane version resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet core control plane version": {
            "$ref": "./examples/PacketCoreControlPlaneVersionGet.json"
          }
        }
      }
    },
    "/providers/Microsoft.MobileNetwork/packetCoreControlPlaneVersions": {
      "get": {
        "tags": [
          "PacketCoreControlPlaneVersion"
        ],
        "operationId": "PacketCoreControlPlaneVersions_List",
        "description": "Lists all supported packet core control planes versions.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get supported packet core control plane versions successful.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get supported packet core control plane versions": {
            "$ref": "./examples/PacketCoreControlPlaneVersionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobileNetwork/packetCoreControlPlaneVersions/{versionName}": {
      "get": {
        "tags": [
          "PacketCoreControlPlaneVersion"
        ],
        "operationId": "PacketCoreControlPlaneVersions_GetBySubscription",
        "description": "Gets information about the specified packet core control plane version.",
        "parameters": [
          {
            "name": "versionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet core control plane version."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting packet core control plane version resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet core control plane version by subscription": {
            "$ref": "./examples/PacketCoreControlPlaneVersionGetBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobileNetwork/packetCoreControlPlaneVersions": {
      "get": {
        "tags": [
          "PacketCoreControlPlaneVersion"
        ],
        "operationId": "PacketCoreControlPlaneVersions_ListBySubscription",
        "description": "Lists all supported packet core control planes versions.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get supported packet core control plane versions successful.",
            "schema": {
              "$ref": "#/definitions/PacketCoreControlPlaneVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get supported packet core control plane versions by subscription": {
            "$ref": "./examples/PacketCoreControlPlaneVersionListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/diagnosticsPackages/{diagnosticsPackageName}": {
      "put": {
        "tags": [
          "DiagnosticsPackages"
        ],
        "operationId": "DiagnosticsPackages_CreateOrUpdate",
        "description": "Creates or updates a diagnostics package.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticsPackageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns information about the diagnostics package.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsPackage"
            }
          },
          "201": {
            "description": "Create successful. The operation returns information about the diagnostics package.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsPackage"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create diagnostics package": {
            "$ref": "./examples/DiagnosticsPackageCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "DiagnosticsPackages"
        ],
        "operationId": "DiagnosticsPackages_Get",
        "description": "Gets information about the specified diagnostics package.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticsPackageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns information about the diagnostics package.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsPackage"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get diagnostics package": {
            "$ref": "./examples/DiagnosticsPackageGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DiagnosticsPackages"
        ],
        "operationId": "DiagnosticsPackages_Delete",
        "description": "Deletes the specified diagnostics package.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticsPackageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete diagnostics package": {
            "$ref": "./examples/DiagnosticsPackageDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/diagnosticsPackages": {
      "get": {
        "tags": [
          "DiagnosticsPackages"
        ],
        "operationId": "DiagnosticsPackages_ListByPacketCoreControlPlane",
        "description": "Lists all the diagnostics packages under a packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of diagnostics packages.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsPackageListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List diagnostics packages under a packet core control plane": {
            "$ref": "./examples/DiagnosticsPackageListByPacketCoreControlPlane.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/simPolicies/{simPolicyName}": {
      "delete": {
        "tags": [
          "SIMPolicy"
        ],
        "operationId": "SimPolicies_Delete",
        "description": "Deletes the specified SIM policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SimPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete SIM policy": {
            "$ref": "./examples/SimPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SIMPolicy"
        ],
        "operationId": "SimPolicies_Get",
        "description": "Gets information about the specified SIM policy.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SimPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SIM policy resource.",
            "schema": {
              "$ref": "#/definitions/SimPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SIM policy": {
            "$ref": "./examples/SimPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SIMPolicy"
        ],
        "operationId": "SimPolicies_CreateOrUpdate",
        "description": "Creates or updates a SIM policy. Must be created in the same location as its parent mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SimPolicyNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimPolicy"
            },
            "description": "Parameters supplied to the create or update SIM policy operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SIM policy resource.",
            "schema": {
              "$ref": "#/definitions/SimPolicy"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting SIM policy resource.",
            "schema": {
              "$ref": "#/definitions/SimPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create SIM policy": {
            "$ref": "./examples/SimPolicyCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "SIMPolicy"
        ],
        "operationId": "SimPolicies_UpdateTags",
        "description": "Updates SIM policy tags.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/SimPolicyNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update SIM policy tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SIM policy resource.",
            "schema": {
              "$ref": "#/definitions/SimPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update SIM policy tags": {
            "$ref": "./examples/SimPolicyUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/simPolicies": {
      "get": {
        "tags": [
          "SIMPolicies"
        ],
        "operationId": "SimPolicies_ListByMobileNetwork",
        "description": "Gets all the SIM policies in a mobile network.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MobileNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SIM policy resources.",
            "schema": {
              "$ref": "#/definitions/SimPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SIM policies in a mobile network": {
            "$ref": "./examples/SimPolicyListByMobileNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCoreDataPlanes/{packetCoreDataPlaneName}": {
      "delete": {
        "tags": [
          "PacketCoreDataPlane"
        ],
        "operationId": "PacketCoreDataPlanes_Delete",
        "description": "Deletes the specified packet core data plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete packet core data plane": {
            "$ref": "./examples/PacketCoreDataPlaneDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "PacketCoreDataPlane"
        ],
        "operationId": "PacketCoreDataPlanes_Get",
        "description": "Gets information about the specified packet core data plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting packet core data plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get packet core data plane": {
            "$ref": "./examples/PacketCoreDataPlaneGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "PacketCoreDataPlane"
        ],
        "operationId": "PacketCoreDataPlanes_CreateOrUpdate",
        "description": "Creates or updates a packet core data plane. Must be created in the same location as its parent packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlane"
            },
            "description": "Parameters supplied to the create or update packet core data plane operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting packet core data plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlane"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting packet core data plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create packet core data plane": {
            "$ref": "./examples/PacketCoreDataPlaneCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "PacketCoreDataPlane"
        ],
        "operationId": "PacketCoreDataPlanes_UpdateTags",
        "description": "Updates packet core data planes tags.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreDataPlaneNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update packet core data plane tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting packet core data plane resource.",
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlane"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update packet core data plane tags": {
            "$ref": "./examples/PacketCoreDataPlaneUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/packetCoreDataPlanes": {
      "get": {
        "tags": [
          "PacketCoreDataPlanes"
        ],
        "operationId": "PacketCoreDataPlanes_ListByPacketCoreControlPlane",
        "description": "Lists all the packet core data planes associated with a packet core control plane.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of packet core data plane resources.",
            "schema": {
              "$ref": "#/definitions/PacketCoreDataPlaneListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List packet core data planes in a control plane": {
            "$ref": "./examples/PacketCoreDataPlaneListByPacketCoreControlPlane.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/ues/{ueId}/extendedInformation/default": {
      "get": {
        "tags": [
          "ExtendedUeInformation"
        ],
        "operationId": "ExtendedUeInformation_Get",
        "description": "Gets extended information about the specified UE from the packet core.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "name": "ueId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IMSI of a UE."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the complete information of a UE in a packet core.",
            "schema": {
              "$ref": "#/definitions/ExtendedUeInfo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get UE Information 4G": {
            "$ref": "./examples/ExtendedUeInfo4GGet.json"
          },
          "Get UE Information 5G": {
            "$ref": "./examples/ExtendedUeInfo5GGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/{packetCoreControlPlaneName}/ues": {
      "get": {
        "tags": [
          "UeInformation_List"
        ],
        "operationId": "UeInformation_List",
        "description": "List all UEs and their state in a packet core.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PacketCoreControlPlaneNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successful. This operation return list of UEs and their state in a packet core.",
            "schema": {
              "$ref": "#/definitions/UeInfoList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get UE Information": {
            "$ref": "./examples/UeInfoList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups/{simGroupName}": {
      "delete": {
        "tags": [
          "SIMGroup"
        ],
        "operationId": "SimGroups_Delete",
        "description": "Deletes the specified SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete SIM group": {
            "$ref": "./examples/SimGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "SIMGroup"
        ],
        "operationId": "SimGroups_Get",
        "description": "Gets information about the specified SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting SIM group resource.",
            "schema": {
              "$ref": "#/definitions/SimGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get SIM group": {
            "$ref": "./examples/SimGroupGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SIMGroup"
        ],
        "operationId": "SimGroups_CreateOrUpdate",
        "description": "Creates or updates a SIM group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimGroup"
            },
            "description": "Parameters supplied to the create or update SIM group operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SIM group resource.",
            "schema": {
              "$ref": "#/definitions/SimGroup"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting SIM group resource.",
            "schema": {
              "$ref": "#/definitions/SimGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create SIM group": {
            "$ref": "./examples/SimGroupCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "SIMGroup"
        ],
        "operationId": "SimGroups_UpdateTags",
        "description": "Patch SIM group resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SimGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/IdentityAndTagsObject"
            },
            "description": "Parameters supplied to patch SIM group resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting SIM group resource.",
            "schema": {
              "$ref": "#/definitions/SimGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch SIM group": {
            "$ref": "./examples/SimGroupPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobileNetwork/simGroups": {
      "get": {
        "tags": [
          "SIMGroups"
        ],
        "operationId": "SimGroups_ListBySubscription",
        "description": "Gets all the SIM groups in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SIM group resources.",
            "schema": {
              "$ref": "#/definitions/SimGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SIM groups in a subscription": {
            "$ref": "./examples/SimGroupListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/simGroups": {
      "get": {
        "tags": [
          "SIMGroups"
        ],
        "operationId": "SimGroups_ListByResourceGroup",
        "description": "Gets all the SIM groups in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of SIM group resources.",
            "schema": {
              "$ref": "#/definitions/SimGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SIM groups in a resource group": {
            "$ref": "./examples/SimGroupListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.MobileNetwork/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of the operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK Returns a list of operations.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registration Operations": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "AttachedDataNetworkNameParameter": {
      "name": "attachedDataNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])*(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])*)*$",
      "maxLength": 64,
      "description": "The name of the attached data network.",
      "x-ms-parameter-location": "method"
    },
    "DataNetworkNameParameter": {
      "name": "dataNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])*(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])*)*$",
      "maxLength": 64,
      "description": "The name of the data network.",
      "x-ms-parameter-location": "method"
    },
    "DiagnosticsPackageNameParameter": {
      "name": "diagnosticsPackageName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the diagnostics package.",
      "x-ms-parameter-location": "method"
    },
    "MobileNetworkNameParameter": {
      "name": "mobileNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the mobile network.",
      "x-ms-parameter-location": "method"
    },
    "PacketCaptureNameParameter": {
      "name": "packetCaptureName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the packet capture session.",
      "x-ms-parameter-location": "method"
    },
    "PacketCoreControlPlaneNameParameter": {
      "name": "packetCoreControlPlaneName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the packet core control plane.",
      "x-ms-parameter-location": "method"
    },
    "PacketCoreDataPlaneNameParameter": {
      "name": "packetCoreDataPlaneName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the packet core data plane.",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^(?!(default|requested|service)$)[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the service. You must not use any of the following reserved strings - `default`, `requested` or `service`",
      "x-ms-parameter-location": "method"
    },
    "SimGroupNameParameter": {
      "name": "simGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the SIM Group.",
      "x-ms-parameter-location": "method"
    },
    "SimNameParameter": {
      "name": "simName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the SIM.",
      "x-ms-parameter-location": "method"
    },
    "SimPolicyNameParameter": {
      "name": "simPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the SIM policy.",
      "x-ms-parameter-location": "method"
    },
    "SiteNameParameter": {
      "name": "siteName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the mobile network site.",
      "x-ms-parameter-location": "method"
    },
    "SliceNameParameter": {
      "name": "sliceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the network slice.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "MobileNetwork": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MobileNetworkPropertiesFormat",
          "description": "Mobile network properties."
        },
        "identity": {
          "$ref": "./common.json#/definitions/ManagedServiceIdentity",
          "description": "The identity used to retrieve any private keys used for SUPI concealment from Azure key vault."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Mobile network resource."
    },
    "MobileNetworkPropertiesFormat": {
      "type": "object",
      "description": "Mobile network properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the mobile network resource."
        },
        "publicLandMobileNetworkIdentifier": {
          "$ref": "./ts29571.json#/definitions/PlmnId",
          "description": "The unique public land mobile network identifier for the network. If both 'publicLandMobileNetworks' and 'publicLandMobileNetworkIdentifier' are specified, then the 'publicLandMobileNetworks' will take precedence."
        },
        "publicLandMobileNetworks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/publicLandMobileNetwork"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "A list of public land mobile networks including their identifiers. If both 'publicLandMobileNetworks' and 'publicLandMobileNetworkIdentifier' are specified, then the 'publicLandMobileNetworks' will take precedence.",
          "x-ms-identifiers": [
            "mcc",
            "mnc"
          ]
        },
        "serviceKey": {
          "type": "string",
          "readOnly": true,
          "description": "The mobile network resource identifier"
        }
      },
      "required": [
        "publicLandMobileNetworkIdentifier"
      ]
    },
    "publicLandMobileNetwork": {
      "type": "object",
      "description": "Configuration relating to a particular PLMN",
      "properties": {
        "homeNetworkPublicKeys": {
          "type": "object",
          "description": "Configuration relating to SUPI concealment.",
          "properties": {
            "profileA": {
              "$ref": "#/definitions/homeNetworkPublicKeys",
              "description": "This provides a mapping to identify which public key has been used for SUPI concealment using the Profile A Protection Scheme."
            },
            "profileB": {
              "$ref": "#/definitions/homeNetworkPublicKeys",
              "description": "This provides a mapping to identify which public key has been used for SUPI concealment using the Profile B Protection Scheme."
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "./ts29571.json#/definitions/PlmnId"
        }
      ]
    },
    "homeNetworkPublicKeys": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/homeNetworkPublicKey"
      },
      "minItems": 0,
      "uniqueItems": true
    },
    "homeNetworkPublicKey": {
      "type": "object",
      "description": "A key used for SUPI concealment.",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 255,
          "description": "The Home Network Public Key Identifier determines which public key was used to generate the SUCI sent to the AMF. See TS 23.003 Section 2.2B Section 5."
        },
        "url": {
          "type": "string",
          "description": "The URL of Azure Key Vault secret containing the private key, versioned or unversioned. For example: https://contosovault.vault.azure.net/secrets/mySuciPrivateKey/562a4bb76b524a1493a6afe8e536ee78."
        }
      },
      "required": [
        "id"
      ]
    },
    "MobileNetworkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobileNetwork"
          },
          "description": "A list of mobile networks in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for mobile networks API service call."
    },
    "Sim": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SimPropertiesFormat",
          "description": "SIM Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "SIM resource."
    },
    "SimNameAndProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SIM."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SimPropertiesFormat",
          "description": "SIM Properties."
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "SIM name and properties."
    },
    "SimNameAndEncryptedProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SIM."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/EncryptedSimPropertiesFormat",
          "description": "Encrypted SIM Properties."
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "SIM name and encrypted properties."
    },
    "SimPropertiesFormat": {
      "type": "object",
      "description": "SIM properties.",
      "properties": {
        "authenticationKey": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{32}$",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "The Ki value for the SIM."
        },
        "operatorKeyCode": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{32}$",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "The Opc value for the SIM."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CommonSimPropertiesFormat"
        }
      ]
    },
    "EncryptedSimPropertiesFormat": {
      "type": "object",
      "description": "Encrypted SIM properties.",
      "properties": {
        "encryptedCredentials": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]+$",
          "x-ms-secret": true,
          "description": "The encrypted SIM credentials."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CommonSimPropertiesFormat"
        }
      ]
    },
    "CommonSimPropertiesFormat": {
      "type": "object",
      "description": "Common SIM properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the SIM resource."
        },
        "simState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/SimState",
          "description": "The state of the SIM resource."
        },
        "siteProvisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/SiteProvisioning",
          "description": "A dictionary of sites to the provisioning state of this SIM on that site."
        },
        "internationalMobileSubscriberIdentity": {
          "type": "string",
          "pattern": "^[0-9]{5,15}$",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "description": "The international mobile subscriber identity (IMSI) for the SIM."
        },
        "integratedCircuitCardIdentifier": {
          "type": "string",
          "pattern": "^[0-9]{10,20}$",
          "description": "The integrated circuit card ID (ICCID) for the SIM."
        },
        "deviceType": {
          "type": "string",
          "description": "An optional free-form text field that can be used to record the device type this SIM is associated with, for example 'Video camera'. The Azure portal allows SIMs to be grouped and filtered based on this value."
        },
        "simPolicy": {
          "$ref": "./common.json#/definitions/SimPolicyResourceId",
          "description": "The SIM policy used by this SIM. The SIM policy must be in the same location as the SIM."
        },
        "staticIpConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimStaticIpProperties"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "A list of static IP addresses assigned to this SIM. Each address is assigned at a defined network scope, made up of {attached data network, slice}.",
          "x-ms-identifiers": [
            "attachedDataNetwork",
            "slice"
          ]
        },
        "vendorName": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the SIM vendor who provided this SIM, if any."
        },
        "vendorKeyFingerprint": {
          "readOnly": true,
          "type": "string",
          "description": "The public key fingerprint of the SIM vendor who provided this SIM, if any."
        }
      },
      "required": [
        "internationalMobileSubscriberIdentity"
      ]
    },
    "SimStaticIpProperties": {
      "type": "object",
      "description": "Static IP configuration for a SIM, scoped to a particular attached data network and slice.",
      "properties": {
        "attachedDataNetwork": {
          "$ref": "./common.json#/definitions/AttachedDataNetworkResourceId",
          "description": "The attached data network on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address. The attached data network must be in the same location as the SIM."
        },
        "slice": {
          "$ref": "./common.json#/definitions/SliceResourceId",
          "description": "The network slice on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address. The slice must be in the same location as the SIM."
        },
        "staticIp": {
          "type": "object",
          "description": "The static IP configuration for the SIM to use at the defined network scope.",
          "properties": {
            "ipv4Address": {
              "$ref": "./ts29571.json#/definitions/Ipv4Addr",
              "description": "The IPv4 address assigned to the SIM at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attached data network."
            }
          }
        }
      }
    },
    "SimListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sim"
          },
          "description": "A list of SIMs in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list SIMs API service call."
    },
    "SimUploadList": {
      "type": "object",
      "description": "The SIMs to upload.",
      "properties": {
        "sims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimNameAndProperties"
          },
          "minItems": 1,
          "description": "A list of SIMs to upload.",
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "sims"
      ]
    },
    "SimDeleteList": {
      "type": "object",
      "description": "The SIMs to delete.",
      "properties": {
        "sims": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "A list of SIM resource names to delete."
        }
      },
      "required": [
        "sims"
      ]
    },
    "EncryptedSimUploadList": {
      "type": "object",
      "description": "The SIMs to upload. The SIM credentials must be encrypted.",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The upload file format version."
        },
        "azureKeyIdentifier": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "An identifier for the Azure SIM onboarding public key used for encrypted upload."
        },
        "vendorKeyFingerprint": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]+$",
          "description": "The fingerprint of the SIM vendor public key. The private counterpart is used for signing the encrypted transport key."
        },
        "encryptedTransportKey": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]+$",
          "description": "The transport key used for encrypting SIM credentials, encrypted using the SIM onboarding public key."
        },
        "signedTransportKey": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]+$",
          "description": "The encrypted transport key, signed using the SIM vendor private key."
        },
        "sims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimNameAndEncryptedProperties"
          },
          "minItems": 1,
          "description": "A list of SIMs to upload, with encrypted properties.",
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "version",
        "azureKeyIdentifier",
        "vendorKeyFingerprint",
        "encryptedTransportKey",
        "signedTransportKey",
        "sims"
      ]
    },
    "SimMove": {
      "type": "object",
      "description": "The SIMs to move.",
      "properties": {
        "targetSimGroupId": {
          "$ref": "./common.json#/definitions/SimGroupResourceId",
          "description": "The SIM Group where the SIMs should be moved."
        },
        "sims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimName",
            "description": "SIM name."
          },
          "minItems": 1,
          "description": "A list of SIM resource names to be moved."
        }
      }
    },
    "SimClone": {
      "type": "object",
      "description": "The SIMs to clone.",
      "properties": {
        "targetSimGroupId": {
          "$ref": "./common.json#/definitions/SimGroupResourceId",
          "description": "The SIM Group where the SIMs should be cloned."
        },
        "sims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimName",
            "description": "SIM name."
          },
          "minItems": 1,
          "description": "A list of SIM resource names to be cloned."
        }
      }
    },
    "SimName": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]*$",
      "maxLength": 64,
      "description": "The name of the SIM."
    },
    "AttachedDataNetwork": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AttachedDataNetworkPropertiesFormat",
          "description": "Attached data network properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Attached data network resource. Must be created in the same location as its parent packet core data plane."
    },
    "AttachedDataNetworkPropertiesFormat": {
      "description": "Data network properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the attached data network resource."
        },
        "userPlaneDataInterface": {
          "$ref": "./common.json#/definitions/InterfaceProperties",
          "description": "The user plane interface on the data network. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface."
        },
        "dnsAddresses": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4Addr"
          },
          "uniqueItems": true,
          "description": "The DNS servers to signal to UEs to use for this attached data network. This configuration is mandatory - if you don't want DNS servers, you must provide an empty array."
        },
        "naptConfiguration": {
          "$ref": "#/definitions/NaptConfiguration",
          "description": "The network address and port translation (NAPT) configuration.\nIf this is not specified, the attached data network will use a default NAPT configuration with NAPT enabled."
        },
        "userEquipmentAddressPoolPrefix": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4AddrMask"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "The user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs.\nThe packet core instance assigns an IP address to a UE when the UE sets up a PDU session.\n You must define at least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix. If you define both, they must be of the same size."
        },
        "userEquipmentStaticAddressPoolPrefix": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4AddrMask"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "The user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs.\nThe packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource.\nAt least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined, they must be of the same size."
        }
      },
      "required": [
        "userPlaneDataInterface",
        "dnsAddresses"
      ]
    },
    "AttachedDataNetworkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachedDataNetwork"
          },
          "description": "A list of data networks in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for attached data network API service call."
    },
    "NaptConfiguration": {
      "description": "The network address and port translation settings to use for the attached data network.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether NAPT is enabled for connections to this attached data network.",
          "$ref": "#/definitions/NaptEnabled"
        },
        "portRange": {
          "description": "Range of port numbers to use as translated ports on each translated address.\nIf not specified and NAPT is enabled, this range defaults to 1,024 - 49,999.\n(Ports under 1,024 should not be used because these are special purpose ports reserved by IANA. Ports 50,000 and above are reserved for non-NAPT use.)",
          "$ref": "#/definitions/PortRange"
        },
        "portReuseHoldTime": {
          "description": "The minimum time (in seconds) that will pass before a port that was used by a closed pinhole can be recycled for use by another pinhole. All hold times must be at least 1 second.",
          "$ref": "#/definitions/PortReuseHoldTimes"
        },
        "pinholeLimits": {
          "description": "Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 65536,
          "default": 65536
        },
        "pinholeTimeouts": {
          "description": "Expiry times of inactive NAPT pinholes, in seconds. All timers must be at least 1 second.",
          "$ref": "#/definitions/PinholeTimeouts"
        }
      }
    },
    "NaptEnabled": {
      "description": "Whether network address and port translation is enabled.",
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NaptEnabled",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled",
            "description": "NAPT is enabled"
          },
          {
            "value": "Disabled",
            "description": "NAPT is disabled"
          }
        ]
      },
      "default": "Enabled"
    },
    "PortRange": {
      "description": "Range of port numbers to use as translated ports on each translated address.\nIf not specified and NAPT is enabled, this range defaults to 1,024 - 49,999.\n(Ports under 1,024 should not be used because these are special purpose ports reserved by IANA. Ports 50,000 and above are reserved for non-NAPT use.)",
      "type": "object",
      "properties": {
        "minPort": {
          "description": "The minimum port number",
          "type": "integer",
          "format": "int32",
          "minimum": 1024,
          "maximum": 65535,
          "default": 1024
        },
        "maxPort": {
          "description": "The maximum port number",
          "type": "integer",
          "format": "int32",
          "minimum": 1024,
          "maximum": 65535,
          "default": 49999
        }
      }
    },
    "PortReuseHoldTimes": {
      "description": "The minimum time (in seconds) that will pass before a port that was used by a closed pinhole can be recycled for use by another pinhole. All hold times must be minimum 1 second.",
      "type": "object",
      "properties": {
        "tcp": {
          "description": "Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Default for TCP is 2 minutes.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 120
        },
        "udp": {
          "description": "Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Default for UDP is 1 minute.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 60
        }
      }
    },
    "PinholeTimeouts": {
      "description": "Expiry times of inactive NAPT pinholes, in seconds. All timers must be at least 1 second.",
      "type": "object",
      "properties": {
        "tcp": {
          "description": "Pinhole timeout for TCP pinholes in seconds. Default for TCP is 3 minutes.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 180
        },
        "udp": {
          "description": "Pinhole timeout for UDP pinholes in seconds. Default for UDP is 30 seconds.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30
        },
        "icmp": {
          "description": "Pinhole timeout for ICMP pinholes in seconds. Default for ICMP Echo is 30 seconds.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30
        }
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServicePropertiesFormat",
          "description": "Service Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Service resource. Must be created in the same location as its parent mobile network."
    },
    "ServicePropertiesFormat": {
      "description": "Service properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the service resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "servicePrecedence": {
          "description": "A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 255
        },
        "serviceQosPolicy": {
          "description": "The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a PccRuleConfiguration. If this field is null then the UE's SIM policy will define the QoS settings.",
          "$ref": "#/definitions/QosPolicy"
        },
        "pccRules": {
          "description": "The set of data flow policy rules that make up this service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PccRuleConfiguration"
          },
          "minItems": 1,
          "uniqueItems": true,
          "x-ms-identifiers": [
            "ruleName"
          ]
        }
      },
      "required": [
        "servicePrecedence",
        "pccRules"
      ]
    },
    "PccRuleConfiguration": {
      "description": "Data flow policy rule configuration",
      "type": "object",
      "properties": {
        "ruleName": {
          "description": "The name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.",
          "type": "string",
          "pattern": "^(?!(default|requested|service)$)[a-zA-Z0-9][a-zA-Z0-9_-]*$",
          "maxLength": 64
        },
        "rulePrecedence": {
          "description": "A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 255
        },
        "ruleQosPolicy": {
          "description": "The QoS policy to use for packets matching this rule. If this field is null then the parent service will define the QoS settings.",
          "$ref": "#/definitions/PccRuleQosPolicy"
        },
        "trafficControl": {
          "description": "Determines whether flows that match this data flow policy rule are permitted.",
          "$ref": "#/definitions/TrafficControlPermission",
          "default": "Enabled"
        },
        "serviceDataFlowTemplates": {
          "description": "The set of data flow templates to use for this data flow policy rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDataFlowTemplate"
          },
          "minItems": 1,
          "maxItems": 15,
          "uniqueItems": true,
          "x-ms-identifiers": [
            "templateName"
          ]
        }
      },
      "required": [
        "ruleName",
        "rulePrecedence",
        "serviceDataFlowTemplates"
      ]
    },
    "ServiceDataFlowTemplate": {
      "description": "Data flow template",
      "type": "object",
      "properties": {
        "templateName": {
          "description": "The name of the data flow template. This must be unique within the parent data flow policy rule. You must not use any of the following reserved strings - `default`, `requested` or `service`.",
          "type": "string",
          "pattern": "^(?!(default|requested|service)$)[a-zA-Z0-9][a-zA-Z0-9_-]*$",
          "maxLength": 64
        },
        "direction": {
          "description": "The direction of this flow.",
          "$ref": "#/definitions/SdfDirection"
        },
        "protocol": {
          "description": "A list of the allowed protocol(s) for this flow. If you want this flow to be able to use any protocol within the internet protocol suite, use the value `ip`. If you only want to allow a selection of protocols, you must use the corresponding IANA Assigned Internet Protocol Number for each protocol, as described in https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml. For example, for UDP, you must use 17. If you use the value `ip` then you must leave the field `port` unspecified.",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(ip|[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "remoteIpList": {
          "description": "The remote IP address(es) to which UEs will connect for this flow. If you want to allow connections on any IP address, use the value `any`. Otherwise, you must provide each of the remote IP addresses to which the packet core instance will connect for this flow. You must provide each IP address in CIDR notation, including the netmask (for example, 192.0.2.54/24).",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(any|(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2])))$",
            "description": "IPv4 address mask or value `any`",
            "example": "198.51.0.0/16"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "ports": {
          "description": "The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges. If you specify one or more ports or port ranges then you must specify a value other than `ip` in the `protocol` field. This is an optional setting. If you do not specify it then connections will be allowed on all ports. Port ranges must be specified as <FirstPort>-<LastPort>. For example: [`8080`, `8082-8085`].",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^([1-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])(-([1-9]|[1-9][0-9]{1,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?$"
          },
          "uniqueItems": true
        }
      },
      "required": [
        "templateName",
        "direction",
        "protocol",
        "remoteIpList"
      ]
    },
    "ServiceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          },
          "description": "A list of services."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for services API service call."
    },
    "QosPolicy": {
      "description": "QoS policy",
      "type": "object",
      "properties": {
        "5qi": {
          "description": "5G QoS Flow Indicator value. The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5QI parameter, and table 5.7.4-1 for the definition the 5QI values.",
          "$ref": "./ts29571.json#/definitions/5QiPriorityLevel",
          "default": 9
        },
        "allocationAndRetentionPriorityLevel": {
          "description": "QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/ArpPriorityLevel",
          "default": 9
        },
        "preemptionCapability": {
          "description": "QoS Flow preemption capability. The preemption capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/PreemptionCapability",
          "default": "NotPreempt"
        },
        "preemptionVulnerability": {
          "description": "QoS Flow preemption vulnerability. The preemption vulnerability of a QoS Flow controls whether it can be preempted by a QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/PreemptionVulnerability",
          "default": "Preemptable"
        },
        "maximumBitRate": {
          "description": "The maximum bit rate (MBR) for all service data flows that use this data flow policy rule or service.",
          "$ref": "./ts29571.json#/definitions/Ambr"
        }
      },
      "required": [
        "maximumBitRate"
      ]
    },
    "PccRuleQosPolicy": {
      "description": "Data flow policy rule QoS policy",
      "type": "object",
      "properties": {
        "guaranteedBitRate": {
          "description": "The guaranteed bit rate (GBR) for all service data flows that use this data flow policy rule. This is an optional setting. If you do not provide a value, there will be no GBR set for the data flow policy rule that uses this QoS definition.",
          "$ref": "./ts29571.json#/definitions/Ambr"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/QosPolicy"
        }
      ]
    },
    "TrafficControlPermission": {
      "type": "string",
      "description": "Traffic control permission.",
      "enum": [
        "Enabled",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "TrafficControlPermission",
        "modelAsString": true,
        "values": [
          {
            "value": "Enabled",
            "description": "Traffic matching this rule is allowed to flow."
          },
          {
            "value": "Blocked",
            "description": "Traffic matching this rule is not allowed to flow."
          }
        ]
      }
    },
    "SdfDirection": {
      "type": "string",
      "description": "Service data flow direction.",
      "enum": [
        "Uplink",
        "Downlink",
        "Bidirectional"
      ],
      "x-ms-enum": {
        "name": "SdfDirection",
        "modelAsString": true,
        "values": [
          {
            "value": "Uplink",
            "description": "Traffic flowing from the UE to the data network."
          },
          {
            "value": "Downlink",
            "description": "Traffic flowing from the data network to the UE."
          },
          {
            "value": "Bidirectional",
            "description": "Traffic flowing both to and from the UE."
          }
        ]
      }
    },
    "DataNetwork": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DataNetworkPropertiesFormat",
          "description": "Data network properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Data network resource. Must be created in the same location as its parent mobile network."
    },
    "DataNetworkPropertiesFormat": {
      "description": "Data network properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the data network resource."
        },
        "description": {
          "type": "string",
          "description": "An optional description for this data network."
        }
      }
    },
    "DataNetworkListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataNetwork"
          },
          "description": "A list of data networks."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for data network API service call."
    },
    "Site": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SitePropertiesFormat",
          "description": "Site properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Site resource. Must be created in the same location as its parent mobile network."
    },
    "SitePropertiesFormat": {
      "type": "object",
      "description": "Site properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the site resource."
        },
        "networkFunctions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/SubResource"
          },
          "description": "An array of IDs of the network functions deployed in the site. Deleting the site will delete any network functions that are deployed in the site."
        }
      }
    },
    "SiteListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          },
          "description": "A list of sites in a mobile network."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for sites API service call."
    },
    "SiteDeletePacketCore": {
      "type": "object",
      "properties": {
        "packetCore": {
          "$ref": "./common.json#/definitions/PacketCoreControlPlaneResourceId"
        }
      },
      "description": "The packet core to delete under a site."
    },
    "PacketCapture": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCapturePropertiesFormat",
          "description": "Packet capture session properties. Packet capture file(s) derived from the name of this session will be uploaded to the Storage Account Container URL in the packet core control plane properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Packet capture session resource."
    },
    "PacketCapturePropertiesFormat": {
      "description": "Packet capture session properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the packet capture session resource."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Stopped",
            "Error"
          ],
          "x-ms-enum": {
            "name": "PacketCaptureStatus",
            "modelAsString": true
          },
          "description": "The status of the packet capture session."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason the current packet capture session state."
        },
        "captureStartTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time of the packet capture session."
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "minItems": 1,
          "description": "List of network interfaces to capture on."
        },
        "bytesToCapturePerPacket": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "default": 0,
          "description": "Number of bytes captured per packet, the remaining bytes are truncated. The default \"0\" means the entire packet is captured."
        },
        "totalBytesPerSession": {
          "type": "integer",
          "format": "int64",
          "minimum": 1000,
          "maximum": 4294967295,
          "default": 67108864,
          "description": "Maximum size of the capture output."
        },
        "timeLimitInSeconds": {
          "type": "integer",
          "format": "int32",
          "minimum": 5,
          "maximum": 18000,
          "default": 18000,
          "description": "Maximum duration of the capture session in seconds."
        },
        "outputFiles": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of output files of a packet capture session."
        }
      }
    },
    "PacketCaptureListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCapture"
          },
          "description": "A list of packet capture sessions under a packet core control plane."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for packet capture API service call."
    },
    "Slice": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SlicePropertiesFormat",
          "description": "Slice properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Network slice resource. Must be created in the same location as its parent mobile network."
    },
    "SlicePropertiesFormat": {
      "description": "Network slice properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the network slice resource."
        },
        "snssai": {
          "$ref": "./ts29571.json#/definitions/Snssai",
          "description": "Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network."
        },
        "description": {
          "type": "string",
          "description": "An optional description for this network slice."
        }
      },
      "required": [
        "snssai"
      ]
    },
    "SliceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Slice"
          },
          "description": "A list of network slices in a mobile network."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for network slice API service call."
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to another sub resource.",
      "x-ms-azure-resource": true
    },
    "DataNetworkResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+/[dD][aA][tT][aA][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+$",
          "description": "Data network resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a data network resource.",
      "x-ms-azure-resource": true
    },
    "AttachedDataNetworkResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[pP][aA][cC][kK][eE][tT][cC][oO][rR][eE][cC][oO][nN][tT][rR][oO][lL][pP][lL][aA][nN][eE][sS]/[^/?#]+/[pP][aA][cC][kK][eE][tT][cC][oO][rR][eE][dD][aA][tT][aA][pP][lL][aA][nN][eE][sS]/[^/?#]+/[aA][tT][tT][aA][cC][hH][eE][dD][dD][aA][tT][aA][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+$",
          "description": "Attached data network resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an attached data network resource.",
      "x-ms-azure-resource": true
    },
    "MobileNetworkResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+$",
          "description": "Mobile network resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a mobile network resource.",
      "x-ms-azure-resource": true
    },
    "ServiceResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+/[sS][eE][rR][vV][iI][cC][eE][sS]/[^/?#]+$",
          "description": "Service resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a service resource.",
      "x-ms-azure-resource": true
    },
    "SimGroupResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[sS][iI][mM][gG][rR][oO][uU][pP][sS]/[^/?#]+$",
          "description": "SIM group resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a SIM group resource.",
      "x-ms-azure-resource": true
    },
    "SimPolicyResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+/[sS][iI][mM][pP][oO][lL][iI][cC][iI][eE][sS]/[^/?#]+$",
          "description": "SIM policy resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a SIM policy resource.",
      "x-ms-azure-resource": true
    },
    "SliceResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+/[sS][lL][iI][cC][eE][sS]/[^/?#]+$",
          "description": "Slice resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a slice resource.",
      "x-ms-azure-resource": true
    },
    "SiteResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK][sS]/[^/?#]+/[sS][iI][tT][eE][sS]/[^/?#]+$",
          "description": "Site resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to a site resource.",
      "x-ms-azure-resource": true
    },
    "PacketCoreControlPlaneResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[mM][oO][bB][iI][lL][eE][nN][eE][tT][wW][oO][rR][kK]/[pP][aA][cC][kK][eE][tT][cC][oO][rR][eE][cC][oO][nN][tT][rR][oO][lL][pP][lL][aA][nN][eE][sS]/[^/?#]+$",
          "description": "Packet core control plane resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an packet core control plane resource.",
      "x-ms-azure-resource": true
    },
    "AzureStackEdgeDeviceResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[dD][aA][tT][aA][bB][oO][xX][eE][dD][gG][eE]/[dD][aA][tT][aA][bB][oO][xX][eE][dD][gG][eE][dD][eE][vV][iI][cC][eE][sS]/[^/?#]+$",
          "description": "Azure Stack Edge device resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an Azure Stack Edge device resource.",
      "x-ms-azure-resource": true
    },
    "AzureStackHCIClusterResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[aA][zZ][uU][rR][eE][sS][tT][aA][cC][kK][hH][cC][iI]/[cC][lL][uU][sS][tT][eE][rR][sS]/[^/?#]+$",
          "description": "Azure Stack HCI cluster resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an Azure Stack HCI cluster resource.",
      "x-ms-azure-resource": true
    },
    "ConnectedClusterResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[kK][uU][bB][eE][rR][nN][eE][tT][eE][sS]/[cC][oO][nN][nN][eE][cC][tT][eE][dD][cC][lL][uU][sS][tT][eE][rR][sS]/[^/?#]+$",
          "description": "Azure Arc connected cluster resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an Azure Arc custom location resource.",
      "x-ms-azure-resource": true
    },
    "CustomLocationResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[eE][xX][tT][eE][nN][dD][eE][dD][lL][oO][cC][aA][tT][iI][oO][nN]/[cC][uU][sS][tT][oO][mM][lL][oO][cC][aA][tT][iI][oO][nN][sS]/[^/?#]+$",
          "description": "Azure Arc custom location resource ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an Azure Arc custom location resource.",
      "x-ms-azure-resource": true
    },
    "AsyncOperationId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[^/?#]+/[lL][oO][cC][aA][tT][iI][oO][nN][sS]/[^/?#]+/[oO][pP][eE][rR][aA][tT][iI][oO][nN][sS][tT][aA][tT][uU][sS][eE][sS]/[^/?#]+$",
          "description": "Azure Async Operation ID."
        }
      },
      "required": [
        "id"
      ],
      "description": "Reference to an Azure Async Operation ID."
    },
    "AsyncOperationStatus": {
      "description": "The current status of an async operation.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified ID for the async operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the async operation.",
          "type": "string"
        },
        "status": {
          "description": "The operation status.",
          "type": "string"
        },
        "resourceId": {
          "description": "Fully qualified ID for the resource that this async operation status relates to.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The end time of the operation.",
          "type": "string",
          "format": "date-time"
        },
        "percentComplete": {
          "description": "Percentage of the operation that is complete.",
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100
        },
        "properties": {
          "description": "Properties returned by the resource provider on a successful operation",
          "type": "object"
        },
        "error": {
          "description": "If present, details of the operation error.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail"
        }
      },
      "required": [
        "status"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Accepted",
        "Deleting",
        "Failed",
        "Canceled",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "Unknown"
          },
          {
            "value": "Succeeded"
          },
          {
            "value": "Accepted"
          },
          {
            "value": "Deleting"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Canceled"
          },
          {
            "value": "Deleted"
          }
        ]
      }
    },
    "SiteProvisioning": {
      "type": "object",
      "readOnly": true,
      "description": "The provisioning state of a resource e.g. SIM/SIM policy on a site. The dictionary keys will ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobileNetwork/mobileNetworks/{mobileNetworkName}/sites/{siteName}. The dictionary values will be from the \"SiteProvisioningState\" enum.",
      "additionalProperties": {
        "$ref": "#/definitions/SiteProvisioningState"
      }
    },
    "SiteProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The provisioning state of a resource e.g. SIM/SIM policy on a site.",
      "enum": [
        "NotApplicable",
        "Adding",
        "Updating",
        "Deleting",
        "Provisioned",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "SiteProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "value": "NotApplicable",
            "description": "The resource should not be provisioned on this site."
          },
          {
            "value": "Adding",
            "description": "The resource is being added to this site."
          },
          {
            "value": "Updating",
            "description": "The resource is being updated on this site."
          },
          {
            "value": "Deleting",
            "description": "The resource is being deleted from this site."
          },
          {
            "value": "Provisioned",
            "description": "The resource is provisioned on this site."
          },
          {
            "value": "Failed",
            "description": "The resource failed to be provisioned on this site."
          }
        ]
      }
    },
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "IdentityAndTagsObject": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "The managed service identity associated with this resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Identity and Tags object for patch operations."
    },
    "SimState": {
      "type": "string",
      "readOnly": true,
      "description": "The state of the SIM resource.",
      "enum": [
        "Disabled",
        "Enabled",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "SimState",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled",
            "description": "The SIM is disabled because not all configuration required for enabling is present."
          },
          {
            "value": "Enabled",
            "description": "The SIM is enabled."
          },
          {
            "value": "Invalid",
            "description": "The SIM cannot be enabled because some of the associated configuration is invalid."
          }
        ]
      }
    },
    "InterfaceProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge device."
        },
        "ipv4Address": {
          "$ref": "./ts29571.json#/definitions/Ipv4Addr",
          "description": "The IPv4 address."
        },
        "ipv4Subnet": {
          "$ref": "./ts29571.json#/definitions/Ipv4AddrMask",
          "description": "The IPv4 subnet."
        },
        "ipv4Gateway": {
          "$ref": "./ts29571.json#/definitions/Ipv4Addr",
          "description": "The default IPv4 gateway (router)."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 4094,
          "description": "VLAN identifier of the network interface. Example: 501."
        },
        "ipv4AddressList": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4Addr"
          },
          "x-ms-identifiers": [],
          "description": "The list of IPv4 addresses, for a multi-node system."
        },
        "bfdIpv4Endpoints": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4Addr"
          },
          "x-ms-identifiers": [],
          "description": "The IPv4 addresses of the endpoints to send BFD probes to."
        }
      },
      "description": "Interface properties"
    },
    "BillingSku": {
      "type": "string",
      "description": "The SKU of the packet core control plane resource. The SKU list may change over time when a new SKU gets added or an exiting SKU gets removed.",
      "enum": [
        "G0",
        "G1",
        "G2",
        "G5",
        "G10"
      ],
      "x-ms-enum": {
        "name": "BillingSku",
        "modelAsString": true,
        "values": [
          {
            "value": "G0",
            "description": "100 Mbps, 20 active SIMs plan, 2 RANs"
          },
          {
            "value": "G1",
            "description": "1 Gbps, 100 active SIMs plan, 5 RANs"
          },
          {
            "value": "G2",
            "description": "2 Gbps, 200 active SIMs plan, 10 RANs"
          },
          {
            "value": "G5",
            "description": "5 Gbps, 500 active SIMs plan"
          },
          {
            "value": "G10",
            "description": "10 Gbps, 1000 active SIMs plan"
          }
        ]
      }
    },
    "ManagedServiceIdentityType": {
      "description": "Type of managed service identity (currently only UserAssigned allowed).",
      "enum": [
        "None",
        "UserAssigned"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (User assigned identity)",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentities"
        }
      },
      "required": [
        "type"
      ]
    },
    "PacketCoreControlPlane": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCoreControlPlanePropertiesFormat",
          "description": "Packet core control plane Properties."
        },
        "identity": {
          "$ref": "./common.json#/definitions/ManagedServiceIdentity",
          "description": "The identity used to retrieve the ingress certificate from Azure key vault."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Packet core control plane resource."
    },
    "PacketCoreControlPlanePropertiesFormat": {
      "description": "Packet core control plane properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the packet core control plane resource."
        },
        "installation": {
          "$ref": "#/definitions/Installation",
          "description": "The installation state of the packet core control plane resource."
        },
        "sites": {
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/SiteResourceId"
          },
          "uniqueItems": true,
          "minItems": 1,
          "description": "Site(s) under which this packet core control plane should be deployed. The sites must be in the same location as the packet core control plane."
        },
        "platform": {
          "$ref": "#/definitions/PlatformConfiguration",
          "description": "The platform where the packet core is deployed."
        },
        "coreNetworkTechnology": {
          "$ref": "./ts29571.json#/definitions/CoreNetworkType",
          "description": "The core network technology generation (5G core or EPC / 4G core)."
        },
        "version": {
          "type": "string",
          "description": "The desired version of the packet core software."
        },
        "installedVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The currently installed version of the packet core software."
        },
        "rollbackVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The previous version of the packet core software that was deployed. Used when performing the rollback action."
        },
        "controlPlaneAccessInterface": {
          "$ref": "./common.json#/definitions/InterfaceProperties",
          "description": "The control plane interface on the access network. For 5G networks, this is the N2 interface. For 4G networks, this is the S1-MME interface."
        },
        "controlPlaneAccessVirtualIpv4Addresses": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4Addr"
          },
          "uniqueItems": true,
          "description": "The virtual IP address(es) for the control plane on the access network in a High Availability (HA) system. In an HA deployment the access network router should be configured to anycast traffic for this address to the control plane access interfaces on the active and standby nodes. In non-HA system this list should be omitted or empty."
        },
        "sku": {
          "$ref": "./common.json#/definitions/BillingSku",
          "description": "The SKU defining the throughput and SIM allowances for this packet core control plane deployment."
        },
        "ueMtu": {
          "description": "The MTU (in bytes) signaled to the UE. The same MTU is set on the user plane data links for all data networks. The MTU set on the user plane access link is calculated to be 60 bytes greater than this value to allow for GTP encapsulation.",
          "type": "integer",
          "format": "int32",
          "minimum": 1280,
          "maximum": 1930,
          "default": 1440
        },
        "localDiagnosticsAccess": {
          "$ref": "#/definitions/LocalDiagnosticsAccessConfiguration",
          "description": "The kubernetes ingress configuration to control access to packet core diagnostics over local APIs."
        },
        "diagnosticsUpload": {
          "$ref": "#/definitions/DiagnosticsUploadConfiguration",
          "description": "Configuration for uploading packet core diagnostics"
        },
        "eventHub": {
          "$ref": "#/definitions/EventHubConfiguration",
          "description": "Configuration for sending packet core events to an Azure Event Hub."
        },
        "signaling": {
          "$ref": "#/definitions/SignalingConfiguration",
          "description": "Signaling configuration for the packet core."
        },
        "interopSettings": {
          "type": "object",
          "description": "Settings to allow interoperability with third party components e.g. RANs and UEs."
        },
        "homeNetworkPrivateKeysProvisioning": {
          "readOnly": true,
          "$ref": "#/definitions/homeNetworkPrivateKeysProvisioning",
          "description": "The provisioning state of the secret containing private keys and keyIds for SUPI concealment."
        },
        "userConsent": {
          "$ref": "#/definitions/UserConsentConfiguration",
          "description": "The user consent configuration for the packet core."
        }
      },
      "required": [
        "sites",
        "platform",
        "controlPlaneAccessInterface",
        "sku",
        "localDiagnosticsAccess"
      ]
    },
    "PacketCoreControlPlaneListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCoreControlPlane"
          },
          "description": "A list of packet core control planes in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for packet core control planes API service call."
    },
    "Installation": {
      "description": "The installation state of the packet core.",
      "type": "object",
      "properties": {
        "desiredState": {
          "description": "The desired installation state",
          "$ref": "#/definitions/DesiredInstallationState",
          "default": "Installed"
        },
        "state": {
          "description": "Installation state",
          "readOnly": true,
          "$ref": "#/definitions/InstallationState"
        },
        "reinstallRequired": {
          "description": "Whether a reinstall of the packet core is required to pick up the latest configuration changes.",
          "readOnly": true,
          "$ref": "#/definitions/ReinstallRequired"
        },
        "reasons": {
          "description": "Reason(s) for the current installation state of the packet core.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstallationReason"
          },
          "uniqueItems": true
        },
        "operation": {
          "description": "A reference to an in-progress installation operation",
          "readOnly": true,
          "$ref": "./common.json#/definitions/AsyncOperationId"
        }
      }
    },
    "DesiredInstallationState": {
      "type": "string",
      "description": "The desired installation state of the packet core.",
      "enum": [
        "Uninstalled",
        "Installed"
      ],
      "x-ms-enum": {
        "name": "DesiredInstallationState",
        "modelAsString": true,
        "values": [
          {
            "value": "Uninstalled",
            "description": "Don't install the packet core."
          },
          {
            "value": "Installed",
            "description": "Install the packet core."
          }
        ]
      }
    },
    "InstallationState": {
      "type": "string",
      "description": "The installation state of the packet core.",
      "enum": [
        "Uninstalled",
        "Installing",
        "Installed",
        "Updating",
        "Upgrading",
        "Uninstalling",
        "Reinstalling",
        "RollingBack",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "InstallationState",
        "modelAsString": true,
        "values": [
          {
            "value": "Uninstalled",
            "description": "The packet core is uninstalled."
          },
          {
            "value": "Installing",
            "description": "The packet core is installing."
          },
          {
            "value": "Installed",
            "description": "The packet core is installed."
          },
          {
            "value": "Updating",
            "description": "The packet core is updating its configuration."
          },
          {
            "value": "Upgrading",
            "description": "The packet core is upgrading to a different software version."
          },
          {
            "value": "Uninstalling",
            "description": "The packet core is uninstalling."
          },
          {
            "value": "Reinstalling",
            "description": "The packet core is reinstalling."
          },
          {
            "value": "RollingBack",
            "description": "The packet core is rolling back to its previous version."
          },
          {
            "value": "Failed",
            "description": "The packet core is in failed state."
          }
        ]
      }
    },
    "ReinstallRequired": {
      "type": "string",
      "description": "Whether a reinstall of the packet core is required to pick up the latest configuration changes.",
      "enum": [
        "Required",
        "NotRequired"
      ],
      "x-ms-enum": {
        "name": "ReinstallRequired",
        "modelAsString": true,
        "values": [
          {
            "value": "Required",
            "description": "A reinstall of the packet core is required."
          },
          {
            "value": "NotRequired",
            "description": "A reinstall of the packet core is not required."
          }
        ]
      }
    },
    "InstallationReason": {
      "type": "string",
      "description": "The reason or list of reasons why a packet core has not been installed or requires a reinstall.",
      "enum": [
        "NoSlices",
        "NoPacketCoreDataPlane",
        "NoAttachedDataNetworks",
        "PublicLandMobileNetworkIdentifierHasChanged",
        "ControlPlaneAccessInterfaceHasChanged",
        "UserPlaneAccessInterfaceHasChanged",
        "UserPlaneDataInterfaceHasChanged",
        "ControlPlaneAccessVirtualIpv4AddressesHasChanged",
        "UserPlaneAccessVirtualIpv4AddressesHasChanged"
      ],
      "x-ms-enum": {
        "name": "InstallationReason",
        "modelAsString": true,
        "values": [
          {
            "value": "NoSlices",
            "description": "The packet core has not been installed as the mobile network does not have any applicable configured slices."
          },
          {
            "value": "NoPacketCoreDataPlane",
            "description": "The packet core has not been installed as there is no configured data plane for this packet core."
          },
          {
            "value": "NoAttachedDataNetworks",
            "description": "The packet core has not been installed as the packet core has no attached data networks."
          },
          {
            "value": "PublicLandMobileNetworkIdentifierHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date PLMN ID."
          },
          {
            "value": "ControlPlaneAccessInterfaceHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date control plane access interface information."
          },
          {
            "value": "UserPlaneAccessInterfaceHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date user plane core interface."
          },
          {
            "value": "UserPlaneDataInterfaceHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date user plane access interface."
          },
          {
            "value": "ControlPlaneAccessVirtualIpv4AddressesHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date control plane access network virtual IP address."
          },
          {
            "value": "UserPlaneAccessVirtualIpv4AddressesHasChanged",
            "description": "A reinstall is required as the packet core is running with out-of-date user plane access network virtual IP address."
          }
        ]
      }
    },
    "PlatformConfiguration": {
      "description": "The platform where the packet core is deployed.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/PlatformType",
          "description": "The platform type where packet core is deployed."
        },
        "azureStackEdgeDevice": {
          "$ref": "./common.json#/definitions/AzureStackEdgeDeviceResourceId",
          "description": "The Azure Stack Edge device where the packet core is deployed. If the device is part of a fault tolerant pair, either device in the pair can be specified."
        },
        "azureStackEdgeDevices": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/AzureStackEdgeDeviceResourceId"
          },
          "description": "The Azure Stack Edge devices where the packet core is deployed. If the packet core is deployed across multiple devices, all devices will appear in this list."
        },
        "azureStackHciCluster": {
          "$ref": "./common.json#/definitions/AzureStackHCIClusterResourceId",
          "description": "The Azure Stack HCI cluster where the packet core is deployed."
        },
        "connectedCluster": {
          "$ref": "./common.json#/definitions/ConnectedClusterResourceId",
          "description": "Azure Arc connected cluster where the packet core is deployed."
        },
        "customLocation": {
          "$ref": "./common.json#/definitions/CustomLocationResourceId",
          "description": "Azure Arc custom location where the packet core is deployed."
        }
      },
      "required": [
        "type"
      ]
    },
    "PlatformType": {
      "type": "string",
      "description": "The platform type where packet core is deployed. The contents of this enum can change.",
      "enum": [
        "AKS-HCI",
        "3P-AZURE-STACK-HCI"
      ],
      "x-ms-enum": {
        "name": "PlatformType",
        "modelAsString": true,
        "values": [
          {
            "value": "AKS-HCI",
            "description": "If this option is chosen, you must set one of \"azureStackEdgeDevice\", \"connectedCluster\" or \"customLocation\". If multiple are set, they must be consistent with each other."
          },
          {
            "value": "3P-AZURE-STACK-HCI",
            "description": "If this option is chosen, you must set one of \"azureStackHciCluster\", \"connectedCluster\" or \"customLocation\". If multiple are set, they must be consistent with each other."
          }
        ]
      }
    },
    "LocalDiagnosticsAccessConfiguration": {
      "description": "The kubernetes ingress configuration to control access to packet core diagnostics over local APIs.",
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "description": "How to authenticate users who access local diagnostics APIs.",
          "enum": [
            "AAD",
            "Password"
          ],
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true,
            "values": [
              {
                "value": "AAD",
                "description": "Use AAD SSO to authenticate the user (this requires internet access)."
              },
              {
                "value": "Password",
                "description": "Use locally stored passwords to authenticate the user."
              }
            ]
          }
        },
        "httpsServerCertificate": {
          "$ref": "#/definitions/HttpsServerCertificate",
          "description": "The HTTPS server TLS certificate used to secure local access to diagnostics."
        }
      },
      "required": [
        "authenticationType"
      ]
    },
    "DiagnosticsUploadConfiguration": {
      "description": "Configuration for uploading packet core diagnostics.",
      "type": "object",
      "properties": {
        "storageAccountContainerUrl": {
          "type": "string",
          "description": "The Storage Account Container URL to upload diagnostics to."
        }
      },
      "required": [
        "storageAccountContainerUrl"
      ]
    },
    "EventHubConfiguration": {
      "description": "Configuration for sending packet core events to Azure Event Hub.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^/[sS][uU][bB][sS][cC][rR][iI][pP][tT][iI][oO][nN][sS]/[^/?#]+/[rR][eE][sS][oO][uU][rR][cC][eE][gG][rR][oO][uU][pP][sS]/[^/?#]+/[pP][rR][oO][vV][iI][dD][eE][rR][sS]/[mM][iI][cC][rR][oO][sS][oO][fF][tT]\\.[eE][vV][eE][nN][tT][hH][uU][bB]/[nN][aA][mM][eE][sS][pP][aA][cC][eE][sS]/[^/?#]+/[eV][vV][eE][nN][tT][hH][uU][bB][sS]/[^/?#]+$",
          "description": "Resource ID  of Azure Event Hub to send packet core events to."
        },
        "reportingInterval": {
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "maximum": 3600,
          "default": 1800,
          "description": "The duration (in seconds) between UE usage reports."
        }
      },
      "required": [
        "id"
      ]
    },
    "SignalingConfiguration": {
      "description": "Signaling configuration for the packet core.",
      "type": "object",
      "properties": {
        "nasReroute": {
          "$ref": "#/definitions/NASRerouteConfiguration",
          "description": "Configuration enabling 4G NAS reroute."
        },
        "nasEncryption": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/NASEncryptionType"
          },
          "description": "An ordered list of NAS encryption algorithms, used to encrypt control plane traffic between the UE and packet core, in order from most to least preferred. If not specified, the packet core will use a built-in default ordering."
        }
      }
    },
    "NASRerouteConfiguration": {
      "description": "Configuration enabling NAS reroute.",
      "type": "object",
      "properties": {
        "macroMmeGroupId": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "The macro network's MME group ID. This is where unknown UEs are sent to via NAS reroute."
        }
      },
      "required": [
        "macroMmeGroupId"
      ]
    },
    "NASEncryptionType": {
      "type": "string",
      "description": "The supported NAS Encryption types.",
      "enum": [
        "NEA0/EEA0",
        "NEA1/EEA1",
        "NEA2/EEA2"
      ],
      "x-ms-enum": {
        "name": "nasEncryptionType",
        "modelAsString": true,
        "values": [
          {
            "value": "NEA0/EEA0",
            "description": "NAS signaling is not encrypted."
          },
          {
            "value": "NEA1/EEA1",
            "description": "NAS signaling is encrypted with SNOW 3G cipher."
          },
          {
            "value": "NEA2/EEA2",
            "description": " NAS signaling is encrypted with AES cipher."
          }
        ]
      }
    },
    "HttpsServerCertificate": {
      "description": "HTTPS server certificate configuration.",
      "type": "object",
      "properties": {
        "certificateUrl": {
          "type": "string",
          "description": "The certificate URL, unversioned. For example: https://contosovault.vault.azure.net/certificates/ingress."
        },
        "provisioning": {
          "readOnly": true,
          "$ref": "#/definitions/CertificateProvisioning",
          "description": "The provisioning state of the certificate."
        }
      },
      "required": [
        "certificateUrl"
      ]
    },
    "CertificateProvisioning": {
      "description": "Certificate provisioning state",
      "type": "object",
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "The certificate's provisioning state",
          "enum": [
            "NotProvisioned",
            "Provisioned",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "CertificateProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "NotProvisioned",
                "description": "The certificate has not been provisioned."
              },
              {
                "value": "Provisioned",
                "description": "The certificate has been provisioned."
              },
              {
                "value": "Failed",
                "description": "The certificate failed to be provisioned. The \"reason\" property explains why."
              }
            ]
          }
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "Reason for certificate provisioning failure."
        }
      }
    },
    "homeNetworkPrivateKeysProvisioning": {
      "type": "object",
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the private keys for SUPI concealment.",
          "enum": [
            "NotProvisioned",
            "Provisioned",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "homeNetworkPrivateKeysProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "NotProvisioned",
                "description": "Provisioning of the private keys for SUPI concealment has not been attempted."
              },
              {
                "value": "Provisioned",
                "description": "The private keys for SUPI concealment are successfully provisioned."
              },
              {
                "value": "Failed",
                "description": "Provisioning of the private keys for SUPI concealment has failed."
              }
            ]
          }
        }
      },
      "required": [
        "state"
      ]
    },
    "UserConsentConfiguration": {
      "type": "object",
      "properties": {
        "allowSupportTelemetryAccess": {
          "type": "boolean",
          "description": "Allow Microsoft to access non-PII telemetry information from the packet core."
        }
      }
    },
    "PacketCoreControlPlaneCollectDiagnosticsPackage": {
      "description": "Packet core control plane collect diagnostics package options",
      "type": "object",
      "properties": {
        "storageAccountBlobUrl": {
          "type": "string",
          "description": "The Storage Account Blob URL to upload the diagnostics package to."
        }
      },
      "required": [
        "storageAccountBlobUrl"
      ]
    },
    "PacketCoreControlPlaneVersion": {
      "description": "Packet core control plane version resource.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCoreControlPlaneVersionPropertiesFormat",
          "description": "Packet core control plane version properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "PacketCoreControlPlaneVersionPropertiesFormat": {
      "description": "Packet core control plane version properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the packet core control plane version resource."
        },
        "platforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Platform"
          },
          "description": "Platform specific packet core control plane version properties.",
          "x-ms-identifiers": [
            "platformType"
          ]
        }
      }
    },
    "Platform": {
      "description": "Platform specific packet core control plane version properties.",
      "type": "object",
      "properties": {
        "platformType": {
          "$ref": "#/definitions/PlatformType",
          "description": "The platform type where this version can be deployed."
        },
        "versionState": {
          "$ref": "#/definitions/VersionState",
          "description": "The state of this packet core control plane version on this platform."
        },
        "minimumPlatformSoftwareVersion": {
          "type": "string",
          "description": "The minimum software version of the platform where this packet core version can be deployed."
        },
        "maximumPlatformSoftwareVersion": {
          "type": "string",
          "description": "The maximum software version of the platform where this packet core version can be deployed."
        },
        "recommendedVersion": {
          "$ref": "#/definitions/RecommendedVersion",
          "description": "Indicates whether this is the recommended version for this platform."
        },
        "obsoleteVersion": {
          "$ref": "#/definitions/ObsoleteVersion",
          "description": "Indicates whether this version is obsoleted for this platform."
        },
        "haUpgradesAvailable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of versions to which a high availability upgrade from this version is supported."
        }
      }
    },
    "VersionState": {
      "type": "string",
      "description": "The state of this packet core control plane version.",
      "enum": [
        "Unknown",
        "Preview",
        "Validating",
        "ValidationFailed",
        "Active",
        "Deprecated"
      ],
      "x-ms-enum": {
        "name": "versionState",
        "modelAsString": true,
        "values": [
          {
            "value": "Unknown",
            "description": "The state of this version is unknown."
          },
          {
            "value": "Preview",
            "description": "This version is a preview and is not suitable for production use."
          },
          {
            "value": "Validating",
            "description": "This version is currently being validated."
          },
          {
            "value": "ValidationFailed",
            "description": "This version failed validation."
          },
          {
            "value": "Active",
            "description": "This version is active and suitable for production use."
          },
          {
            "value": "Deprecated",
            "description": "This version is deprecated and is no longer supported."
          }
        ]
      }
    },
    "RecommendedVersion": {
      "type": "string",
      "description": "Indicates whether this is the recommended version to use for new packet core control plane deployments.",
      "enum": [
        "Recommended",
        "NotRecommended"
      ],
      "x-ms-enum": {
        "name": "recommendedVersion",
        "modelAsString": true,
        "values": [
          {
            "value": "Recommended",
            "description": "This is the recommended version to use for new packet core control plane deployments."
          },
          {
            "value": "NotRecommended",
            "description": "This is not the recommended version to use for new packet core control plane deployments."
          }
        ]
      }
    },
    "ObsoleteVersion": {
      "type": "string",
      "description": "Indicates whether this version is obsolete.",
      "enum": [
        "Obsolete",
        "NotObsolete"
      ],
      "x-ms-enum": {
        "name": "obsoleteVersion",
        "modelAsString": true,
        "values": [
          {
            "value": "Obsolete",
            "description": "This version is obsolete for use in new packet core control plane deployments."
          },
          {
            "value": "NotObsolete",
            "description": "This version is not obsolete for use in new packet core control plane deployments."
          }
        ]
      }
    },
    "PacketCoreControlPlaneVersionListResult": {
      "description": "Response for packet core control plane version API service call.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCoreControlPlaneVersion"
          },
          "description": "A list of supported packet core control plane versions."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      }
    },
    "RoutingInfoListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingInfoModel"
          },
          "description": "A list of the routing information for the packet core control plane"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the list routing information API service call."
    },
    "RoutingInfoModel": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutingInfoPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Routing information"
    },
    "RoutingInfoPropertiesFormat": {
      "type": "object",
      "properties": {
        "controlPlaneAccessRoutes": {
          "$ref": "#/definitions/Ipv4Routes"
        },
        "userPlaneAccessRoutes": {
          "$ref": "#/definitions/Ipv4Routes"
        },
        "userPlaneDataRoutes": {
          "$ref": "#/definitions/UserPlaneDataRoutes"
        }
      },
      "description": "Routing information properties"
    },
    "UserPlaneDataRoutes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "attachedDataNetwork": {
            "$ref": "./common.json#/definitions/AttachedDataNetworkResourceId"
          },
          "routes": {
            "$ref": "#/definitions/Ipv4Routes"
          }
        }
      },
      "description": "A list of attached data networks and their IPv4 routes.",
      "x-ms-identifiers": [
        "/attachedDataNetwork/id"
      ]
    },
    "Ipv4Routes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Ipv4Route"
      },
      "description": "A list of IPv4 routes.",
      "x-ms-identifiers": [
        "destination"
      ]
    },
    "Ipv4Route": {
      "type": "object",
      "properties": {
        "destination": {
          "$ref": "./ts29571.json#/definitions/Ipv4AddrMask",
          "description": "The destination IPv4 prefix."
        },
        "nextHops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ipv4RouteNextHop"
          },
          "description": "A list of next hops for the destination.",
          "x-ms-identifiers": [
            "address"
          ]
        }
      },
      "description": "An IPv4 route."
    },
    "Ipv4RouteNextHop": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "./ts29571.json#/definitions/Ipv4Addr",
          "description": "The next hop address."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of this next hop. Next hops with lower preference values are preferred."
        }
      },
      "description": "The next hop in an IPv4 route."
    },
    "Ipv4Addr": {
      "type": "string",
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",
      "description": "IPv4 address.",
      "example": "198.51.100.1"
    },
    "Ipv4AddrRm": {
      "$ref": "#/definitions/Ipv4Addr",
      "x-nullable": true,
      "description": "IPv4 address or null."
    },
    "Ipv4AddrMask": {
      "type": "string",
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "description": "IPv4 address prefix.",
      "example": "198.51.0.0/16"
    },
    "Ipv4AddrMaskRm": {
      "$ref": "#/definitions/Ipv4AddrMask",
      "x-nullable": true,
      "description": "IPv4 address prefix or null."
    },
    "BitRate": {
      "type": "string",
      "pattern": "^\\d+(\\.\\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$",
      "description": "Bit rate."
    },
    "BitRateRm": {
      "$ref": "#/definitions/BitRate",
      "x-nullable": true,
      "description": "Bit rate or null."
    },
    "Ambr": {
      "description": "Aggregate maximum bit rate.",
      "type": "object",
      "properties": {
        "uplink": {
          "$ref": "#/definitions/BitRate",
          "description": "Uplink bit rate."
        },
        "downlink": {
          "$ref": "#/definitions/BitRate",
          "description": "Downlink bit rate."
        }
      },
      "required": [
        "uplink",
        "downlink"
      ]
    },
    "AmbrRm": {
      "$ref": "#/definitions/Ambr",
      "x-nullable": true,
      "description": "Aggregate maximum bit rate or null."
    },
    "RfspIndex": {
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 256,
      "description": "RAT/Frequency Selection Priority Index"
    },
    "RfspIndexRm": {
      "$ref": "#/definitions/RfspIndex",
      "x-nullable": true,
      "description": "RAT/Frequency Selection Priority Index or null"
    },
    "5Qi": {
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "maximum": 255,
      "description": "5G QoS Identifier."
    },
    "5QiRm": {
      "$ref": "#/definitions/5Qi",
      "x-nullable": true,
      "description": "5G QoS Identifier or null."
    },
    "5QiPriorityLevel": {
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 127,
      "description": "5G QoS Identifier priority level."
    },
    "5QiPriorityLevelRm": {
      "$ref": "#/definitions/5QiPriorityLevel",
      "x-nullable": true,
      "description": "5G QoS Identifier priority level or null."
    },
    "ArpPriorityLevel": {
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 15,
      "description": "ARP priority level."
    },
    "ArpPriorityLevelRm": {
      "$ref": "#/definitions/ArpPriorityLevel",
      "x-nullable": true,
      "description": "ARP priority level or null."
    },
    "PreemptionCapability": {
      "type": "string",
      "description": "Preemption capability.",
      "enum": [
        "NotPreempt",
        "MayPreempt"
      ],
      "x-ms-enum": {
        "name": "PreemptionCapability",
        "modelAsString": true,
        "values": [
          {
            "value": "NotPreempt",
            "description": "Cannot preempt"
          },
          {
            "value": "MayPreempt",
            "description": "May preempt"
          }
        ]
      }
    },
    "PreemptionVulnerability": {
      "type": "string",
      "description": "Preemption vulnerability.",
      "enum": [
        "NotPreemptable",
        "Preemptable"
      ],
      "x-ms-enum": {
        "name": "PreemptionVulnerability",
        "modelAsString": true,
        "values": [
          {
            "value": "NotPreemptable",
            "description": "Cannot be preempted"
          },
          {
            "value": "Preemptable",
            "description": "May be preempted"
          }
        ]
      }
    },
    "Arp": {
      "description": "Allocation and Retention Priority (ARP) parameters.",
      "type": "object",
      "properties": {
        "priorityLevel": {
          "$ref": "#/definitions/ArpPriorityLevel",
          "description": "ARP priority level."
        },
        "preemptCap": {
          "$ref": "#/definitions/PreemptionCapability",
          "description": "ARP preemption capability."
        },
        "preemptVuln": {
          "$ref": "#/definitions/PreemptionVulnerability",
          "description": "ARP preemption vulnerability"
        }
      },
      "required": [
        "priorityLevel",
        "preemptCap",
        "preemptVuln"
      ]
    },
    "Mcc": {
      "type": "string",
      "pattern": "^\\d{3}$",
      "description": "Mobile country code."
    },
    "MccRm": {
      "$ref": "#/definitions/Mcc",
      "x-nullable": true,
      "description": "Mobile country code or null."
    },
    "Mnc": {
      "type": "string",
      "pattern": "^\\d{2,3}$",
      "description": "Mobile network code."
    },
    "MncRm": {
      "$ref": "#/definitions/Mnc",
      "x-nullable": true,
      "description": "Mobile network code or null."
    },
    "PlmnId": {
      "description": "Public land mobile network (PLMN) ID. This is made up of the mobile country code and mobile network code, as defined in https://www.itu.int/rec/T-REC-E.212. The values 001-01 and 001-001 can be used for testing and the values 999-99 and 999-999 can be used on internal private networks.",
      "type": "object",
      "properties": {
        "mcc": {
          "$ref": "#/definitions/Mcc",
          "description": "Mobile country code (MCC)."
        },
        "mnc": {
          "$ref": "#/definitions/Mnc",
          "description": "Mobile network code (MNC)."
        }
      },
      "required": [
        "mcc",
        "mnc"
      ]
    },
    "PlmnIdRm": {
      "$ref": "#/definitions/PlmnId",
      "x-nullable": true,
      "description": "Public land mobile network ID or null."
    },
    "Tac": {
      "type": "string",
      "pattern": "(^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)",
      "description": "Tracking Area Code (TAC)."
    },
    "TacRm": {
      "$ref": "#/definitions/Tac",
      "x-nullable": true,
      "description": "Tracking Area Code (TAC) or null."
    },
    "CoreNetworkType": {
      "type": "string",
      "description": "The core network technology generation (5G core, EPC / 4G core or EPC / 4G + 5G core).",
      "enum": [
        "5GC",
        "EPC",
        "EPC + 5GC"
      ],
      "default": "5GC",
      "x-ms-enum": {
        "name": "CoreNetworkType",
        "values": [
          {
            "value": "5GC",
            "description": "5G core"
          },
          {
            "value": "EPC",
            "description": "EPC / 4G core"
          },
          {
            "value": "EPC + 5GC",
            "description": "Combined EPC / 4G and 5G core"
          }
        ]
      }
    },
    "CoreNetworkTypeRm": {
      "$ref": "#/definitions/CoreNetworkType",
      "x-nullable": true,
      "description": "Core network type or null."
    },
    "PduSessionType": {
      "type": "string",
      "description": "PDU session type (IPv4/IPv6).",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "name": "PduSessionType",
        "modelAsString": true,
        "values": [
          {
            "value": "IPv4"
          },
          {
            "value": "IPv6"
          }
        ]
      }
    },
    "PduSessionTypeRm": {
      "$ref": "#/definitions/PduSessionType",
      "x-nullable": true,
      "description": "PDU session type or null."
    },
    "Snssai": {
      "description": "Single-network slice selection assistance information (S-NSSAI).",
      "type": "object",
      "properties": {
        "sst": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 255,
          "description": "Slice/service type (SST)."
        },
        "sd": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]{6}$",
          "description": "Slice differentiator (SD)."
        }
      },
      "required": [
        "sst"
      ]
    },
    "Dnn": {
      "description": "Data network name",
      "type": "string"
    },
    "Pei": {
      "description": "Permanent Equipment Identifier",
      "type": "string",
      "pattern": "^(imei-[0-9]{15}|imeisv-[0-9]{16}|.+)$"
    },
    "Supi": {
      "description": "Subscription Permanent Identifier",
      "type": "string",
      "pattern": "^(imsi-[0-9]{5,15}|nai-.+|.+)$"
    },
    "PduSessionId": {
      "description": "PDU session identifier",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "maximum": 255
    },
    "Qfi": {
      "description": "Qos Flow Identifier",
      "type": "integer",
      "format": "int32",
      "minimum": 0,
      "maximum": 63
    },
    "GNbId": {
      "description": "gNodeB identifier",
      "type": "object",
      "properties": {
        "bitLength": {
          "type": "integer",
          "format": "int32",
          "minimum": 22,
          "maximum": 32
        },
        "gNBValue": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]{6,8}$"
        }
      }
    },
    "GlobalRanNodeId": {
      "description": "Global RAN Node ID",
      "type": "object",
      "properties": {
        "plmnId": {
          "x-ms-client-flatten": true,
          "description": "PLMN Identifier",
          "$ref": "#/definitions/PlmnId"
        },
        "gNbId": {
          "x-ms-client-flatten": true,
          "description": "gNodeB identifier",
          "$ref": "#/definitions/GNbId"
        },
        "ngeNbId": {
          "type": "string",
          "pattern": "^(MacroNGeNB-[A-Fa-f0-9]{5}|LMacroNGeNB-[A-Fa-f0-9]{6}|SMacroNGeNB-[A-Fa-f0-9]{5})$",
          "description": "NG-eNodeB identifier"
        },
        "eNbId": {
          "type": "string",
          "pattern": "^(MacroeNB-[A-Fa-f0-9]{5}|LMacroeNB-[A-Fa-f0-9]{6}|SMacroeNB-[A-Fa-f0-9]{5}|HomeeNB-[A-Fa-f0-9]{7})$",
          "description": "eNodeB identifier"
        },
        "n3IwfId": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]+$",
          "description": "N3 IWF identifier"
        },
        "wagfId": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]+$",
          "description": "W-AGF identifier"
        },
        "tngfId": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]+$",
          "description": "TNGF identifier"
        },
        "nid": {
          "type": "string",
          "pattern": "^[A-Fa-f0-9]{11}$",
          "description": "Network identifier"
        }
      },
      "required": [
        "plmnId"
      ]
    },
    "DiagnosticsPackage": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiagnosticsPackagePropertiesFormat",
          "description": "Diagnostics package properties. A diagnostics package file derived from the name of this resource will be uploaded to the Storage Account Container URL in the packet core control plane properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Diagnostics package resource."
    },
    "DiagnosticsPackagePropertiesFormat": {
      "description": "Diagnostics package properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the diagnostics package resource."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "Collecting",
            "Collected",
            "Error"
          ],
          "x-ms-enum": {
            "name": "DiagnosticsPackageStatus",
            "modelAsString": true
          },
          "description": "The status of the diagnostics package collection."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "The reason for the current state of the diagnostics package collection."
        }
      }
    },
    "DiagnosticsPackageListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiagnosticsPackage"
          },
          "description": "A list of diagnostics packages under a packet core control plane."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for diagnostics package API service call."
    },
    "SimPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SimPolicyPropertiesFormat",
          "description": "SIM policy Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "SIM policy resource."
    },
    "SimPolicyPropertiesFormat": {
      "description": "SIM policy properties. Must be created in the same location as its parent mobile network.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioning state of the SIM policy resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "siteProvisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/SiteProvisioning",
          "description": "A dictionary of sites to the provisioning state of this SIM policy on that site."
        },
        "ueAmbr": {
          "description": "Aggregate maximum bit rate across all non-GBR QoS flows of all PDU sessions of a given UE. See 3GPP TS23.501 section 5.7.2.6 for a full description of the UE-AMBR.",
          "$ref": "./ts29571.json#/definitions/Ambr"
        },
        "defaultSlice": {
          "description": "The default slice to use if the UE does not explicitly specify it. This slice must exist in the `sliceConfigurations` map. The slice must be in the same location as the SIM policy.",
          "$ref": "./common.json#/definitions/SliceResourceId"
        },
        "rfspIndex": {
          "description": "RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413. This is an optional setting and by default is unspecified.",
          "$ref": "./ts29571.json#/definitions/RfspIndex"
        },
        "registrationTimer": {
          "description": "UE periodic registration update timer (5G) or UE periodic tracking area update timer (4G), in seconds.",
          "type": "integer",
          "format": "int32",
          "minimum": 30,
          "default": 3240
        },
        "sliceConfigurations": {
          "description": "The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SliceConfiguration"
          },
          "minItems": 1,
          "uniqueItems": true,
          "x-ms-identifiers": [
            "slice"
          ]
        }
      },
      "required": [
        "ueAmbr",
        "defaultSlice",
        "sliceConfigurations"
      ]
    },
    "SliceConfiguration": {
      "description": "Per-slice settings",
      "type": "object",
      "properties": {
        "slice": {
          "description": "A reference to the slice that these settings apply to. The slice must be in the same location as the SIM policy.",
          "$ref": "./common.json#/definitions/SliceResourceId"
        },
        "defaultDataNetwork": {
          "description": "The default data network to use if the UE does not explicitly specify it. Configuration for this object must exist in the `dataNetworkConfigurations` map. The data network must be in the same location as the SIM policy.",
          "$ref": "./common.json#/definitions/DataNetworkResourceId"
        },
        "dataNetworkConfigurations": {
          "description": "The allowed data networks and the settings to use for them. The list must not contain duplicate items and must contain at least one item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataNetworkConfiguration"
          },
          "minItems": 1,
          "uniqueItems": true,
          "x-ms-identifiers": [
            "dataNetwork"
          ]
        }
      },
      "required": [
        "slice",
        "defaultDataNetwork",
        "dataNetworkConfigurations"
      ]
    },
    "DataNetworkConfiguration": {
      "description": "Settings controlling data network use",
      "type": "object",
      "properties": {
        "dataNetwork": {
          "description": "A reference to the data network that these settings apply to. The data network must be in the same location as the SIM policy.",
          "$ref": "./common.json#/definitions/DataNetworkResourceId"
        },
        "sessionAmbr": {
          "description": "Aggregate maximum bit rate across all non-GBR QoS flows of a given PDU session. See 3GPP TS23.501 section 5.7.2.6 for a full description of the Session-AMBR.",
          "$ref": "./ts29571.json#/definitions/Ambr"
        },
        "5qi": {
          "description": "Default 5G QoS Flow Indicator value. The 5QI identifies a specific QoS forwarding treatment to be provided to a flow. See 3GPP TS23.501 section 5.7.2.1 for a full description of the 5QI parameter, and table 5.7.4-1 for the definition the 5QI values.",
          "$ref": "./ts29571.json#/definitions/5Qi",
          "default": 9
        },
        "allocationAndRetentionPriorityLevel": {
          "description": "Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `5qi` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/ArpPriorityLevel",
          "default": 9
        },
        "preemptionCapability": {
          "description": "Default QoS Flow preemption capability. The preemption capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/PreemptionCapability",
          "default": "NotPreempt"
        },
        "preemptionVulnerability": {
          "description": "Default QoS Flow preemption vulnerability. The preemption vulnerability of a QoS Flow controls whether it can be preempted by a QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.",
          "$ref": "./ts29571.json#/definitions/PreemptionVulnerability",
          "default": "Preemptable"
        },
        "defaultSessionType": {
          "description": "The default PDU session type, which is used if the UE does not request a specific session type.",
          "$ref": "./ts29571.json#/definitions/PduSessionType",
          "default": "IPv4"
        },
        "additionalAllowedSessionTypes": {
          "description": "Allowed session types in addition to the default session type. Must not duplicate the default session type.",
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/PduSessionType"
          },
          "maxItems": 1
        },
        "allowedServices": {
          "description": "List of services that can be used as part of this SIM policy. The list must not contain duplicate items and must contain at least one item. The services must be in the same location as the SIM policy.",
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/ServiceResourceId"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "maximumNumberOfBufferedPackets": {
          "description": "The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "default": 10
        }
      },
      "required": [
        "dataNetwork",
        "sessionAmbr",
        "allowedServices"
      ]
    },
    "SimPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimPolicy"
          },
          "description": "A list of SIM policies."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for SIM policies API service call."
    },
    "PacketCoreDataPlane": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCoreDataPlanePropertiesFormat",
          "description": "Packet core data plane Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Packet core data plane resource. Must be created in the same location as its parent packet core control plane."
    },
    "PacketCoreDataPlanePropertiesFormat": {
      "description": "Packet core data plane properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the packet core data plane resource."
        },
        "userPlaneAccessInterface": {
          "$ref": "./common.json#/definitions/InterfaceProperties",
          "description": "The user plane interface on the access network. For 5G networks, this is the N3 interface. For 4G networks, this is the S1-U interface."
        },
        "userPlaneAccessVirtualIpv4Addresses": {
          "type": "array",
          "items": {
            "$ref": "./ts29571.json#/definitions/Ipv4Addr"
          },
          "uniqueItems": true,
          "description": "The virtual IP address(es) for the user plane on the access network in a High Availability (HA) system. In an HA deployment the access network router should be configured to forward traffic for this address to the control plane access interface on the active or standby node. In non-HA system this list should be omitted or empty."
        }
      },
      "required": [
        "userPlaneAccessInterface"
      ]
    },
    "PacketCoreDataPlaneListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCoreDataPlane"
          },
          "description": "A list of packet core data planes in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for packet core data planes API service call."
    },
    "UeInfoList": {
      "description": "Response for packet core list UEs API call.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UeInfo"
          },
          "description": "A list of UEs in a packet core and their basic information."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      }
    },
    "UeInfo": {
      "description": "Basic UE Information.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeInfoPropertiesFormat",
          "description": "Basic UE Information Properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "UeInfoPropertiesFormat": {
      "description": "Basic UE Information Properties.",
      "type": "object",
      "properties": {
        "ratType": {
          "$ref": "#/definitions/RatType"
        },
        "ueState": {
          "$ref": "#/definitions/UeState"
        },
        "ueIpAddresses": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/DnnIpPair"
          }
        },
        "lastReadAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of last list UEs call to the packet core (UTC)."
        }
      },
      "required": [
        "ratType",
        "ueState"
      ]
    },
    "ExtendedUeInfo": {
      "description": "Extended User Equipment (UE) information.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExtendedUeInfoProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "ExtendedUeInfoProperties": {
      "description": "Extended UE Information Properties.",
      "type": "object",
      "properties": {
        "ratType": {
          "$ref": "#/definitions/RatType"
        },
        "lastReadAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of last UE info read from the packet core (UTC)."
        }
      },
      "required": [
        "ratType"
      ],
      "discriminator": "ratType"
    },
    "UeInfo5G": {
      "description": "UE Information for 5G.",
      "type": "object",
      "required": [
        "info"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ExtendedUeInfoProperties"
        }
      ],
      "properties": {
        "info": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeInfo5GProperties"
        }
      },
      "x-ms-discriminator-value": "5G"
    },
    "UeInfo5GProperties": {
      "description": "UE Information properties for 5G.",
      "type": "object",
      "required": [
        "supi",
        "fivegGuti"
      ],
      "properties": {
        "supi": {
          "$ref": "./ts29571.json#/definitions/Supi"
        },
        "pei": {
          "$ref": "./ts29571.json#/definitions/Pei"
        },
        "fivegGuti": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Guti5G"
        },
        "connectionInfo": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeConnectionInfo5G"
        },
        "sessionInfo": {
          "type": "array",
          "maxItems": 15,
          "items": {
            "$ref": "#/definitions/UeSessionInfo5G"
          }
        }
      }
    },
    "Guti5G": {
      "description": "5G GUTI",
      "type": "object",
      "properties": {
        "plmn": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/PlmnId"
        },
        "amfId": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmfId"
        },
        "fivegTmsi": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "5G Temporary Mobile Subscriber Identity"
        }
      },
      "required": [
        "plmn",
        "amfId",
        "fivegTmsi"
      ]
    },
    "AmfId": {
      "description": "AMF identifier",
      "type": "object",
      "properties": {
        "regionId": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 255,
          "description": "AMF region identifier"
        },
        "setId": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 1023,
          "description": "AMF set identifier"
        },
        "pointer": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 63,
          "description": "AMF pointer"
        }
      },
      "required": [
        "regionId",
        "setId",
        "pointer"
      ]
    },
    "UeConnectionInfo5G": {
      "description": "UE Connection Info for 5G.",
      "type": "object",
      "required": [
        "globalRanNodeId",
        "amfUeNgapId",
        "ranUeNgapId",
        "ueState",
        "rrcEstablishmentCause"
      ],
      "properties": {
        "locationInfo": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeLocationInfo"
        },
        "globalRanNodeId": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/GlobalRanNodeId"
        },
        "perUeTnla": {
          "type": "string",
          "description": "Per-UE transport network layer association"
        },
        "amfUeNgapId": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "description": "The AMF UE NGAP ID"
        },
        "ranUeNgapId": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "The RAN UE NGAP ID"
        },
        "lastVisitedTai": {
          "type": "string",
          "description": "Last Visited TAI"
        },
        "allowedNssai": {
          "type": "array",
          "description": "Allowed Network Slice Selection Assistance Information",
          "maxItems": 8,
          "items": {
            "x-ms-client-flatten": true,
            "$ref": "./ts29571.json#/definitions/Snssai"
          }
        },
        "ueState": {
          "$ref": "#/definitions/UeState"
        },
        "rrcEstablishmentCause": {
          "$ref": "#/definitions/RrcEstablishmentCause"
        },
        "ueUsageSetting": {
          "$ref": "#/definitions/UeUsageSetting"
        },
        "lastActivityTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of last activity of UE (UTC)."
        }
      }
    },
    "UeSessionInfo5G": {
      "description": "UE Session Info for 5G.",
      "type": "object",
      "required": [
        "pduSessionId",
        "dnn",
        "snssai",
        "ueIpAddress",
        "pdnType",
        "qosFlow",
        "ambr"
      ],
      "properties": {
        "pduSessionId": {
          "$ref": "./ts29571.json#/definitions/PduSessionId"
        },
        "dnn": {
          "$ref": "./ts29571.json#/definitions/Dnn"
        },
        "snssai": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/Snssai"
        },
        "ueIpAddress": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeIpAddress"
        },
        "pdnType": {
          "$ref": "#/definitions/PdnType"
        },
        "ambr": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/Ambr"
        },
        "qosFlow": {
          "type": "array",
          "items": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/UeQOSFlow"
          }
        }
      }
    },
    "UeInfo4G": {
      "description": "UE Information for 4G.",
      "type": "object",
      "required": [
        "info"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ExtendedUeInfoProperties"
        }
      ],
      "properties": {
        "info": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeInfo4GProperties"
        }
      },
      "x-ms-discriminator-value": "4G"
    },
    "UeInfo4GProperties": {
      "description": "UE Information properties for 4G.",
      "type": "object",
      "required": [
        "imsi",
        "guti"
      ],
      "properties": {
        "imsi": {
          "type": "string",
          "pattern": "^[0-9]{5,15}$",
          "description": "International mobile subscriber identifier"
        },
        "imei": {
          "type": "string",
          "pattern": "^[0-9]{15}$",
          "description": "International mobile equipment identity"
        },
        "imeisv": {
          "type": "string",
          "pattern": "^[0-9]{16}$",
          "description": "International mobile equipment identity \u2013 software version"
        },
        "guti": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Guti4G"
        },
        "connectionInfo": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeConnectionInfo4G"
        },
        "sessionInfo": {
          "type": "array",
          "maxItems": 11,
          "items": {
            "$ref": "#/definitions/UeSessionInfo4G"
          }
        }
      }
    },
    "Guti4G": {
      "description": "Globally Unique Temporary Identifier (4G)",
      "type": "object",
      "properties": {
        "plmn": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/PlmnId"
        },
        "mmeId": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MmeId"
        },
        "mTmsi": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "MME Temporary Mobile Subscriber Identity"
        }
      },
      "required": [
        "plmn",
        "mmeId",
        "mTmsi"
      ]
    },
    "MmeId": {
      "description": "MME identifier",
      "type": "object",
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 65535,
          "description": "MME group identifier"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 255,
          "description": "MME code"
        }
      },
      "required": [
        "groupId",
        "code"
      ]
    },
    "UeConnectionInfo4G": {
      "description": "UE Connection Info for 4G",
      "type": "object",
      "required": [
        "globalRanNodeId",
        "mmeS1apId",
        "enbS1apId",
        "ueState",
        "rrcEstablishmentCause"
      ],
      "properties": {
        "locationInfo": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeLocationInfo"
        },
        "globalRanNodeId": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/GlobalRanNodeId"
        },
        "perUeTnla": {
          "type": "string",
          "description": "Per-UE transport network layer association"
        },
        "mmeS1apId": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "MME S1AP identifier"
        },
        "enbS1apId": {
          "type": "integer",
          "minimum": 0,
          "maximum": 16777215,
          "description": "eNodeB S1AP identifier"
        },
        "lastVisitedTai": {
          "type": "string",
          "description": "Last Visited TAI"
        },
        "ueState": {
          "$ref": "#/definitions/UeState"
        },
        "rrcEstablishmentCause": {
          "$ref": "#/definitions/RrcEstablishmentCause"
        },
        "ueUsageSetting": {
          "$ref": "#/definitions/UeUsageSetting"
        },
        "lastActivityTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of last activity of UE (UTC)."
        }
      }
    },
    "UeSessionInfo4G": {
      "description": "UE Session Info for 4G",
      "type": "object",
      "required": [
        "ebi",
        "apn",
        "ueIpAddress",
        "pdnType"
      ],
      "properties": {
        "ebi": {
          "type": "integer",
          "maximum": 15,
          "minimum": 5,
          "description": "EPS bearer identifier"
        },
        "apn": {
          "type": "string",
          "description": "Access point name"
        },
        "ueIpAddress": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeIpAddress"
        },
        "pdnType": {
          "$ref": "#/definitions/PdnType"
        }
      }
    },
    "UeLocationInfo": {
      "description": "UE Location Info properties",
      "type": "object",
      "properties": {
        "locationType": {
          "type": "string",
          "description": "Location Type"
        },
        "tac": {
          "description": "Type Allocation Code of UE",
          "$ref": "./ts29571.json#/definitions/Tac"
        },
        "plmn": {
          "x-ms-client-flatten": true,
          "description": "PLMN Identifier",
          "$ref": "./ts29571.json#/definitions/PlmnId"
        }
      },
      "required": [
        "locationType",
        "tac",
        "plmn"
      ]
    },
    "RrcEstablishmentCause": {
      "description": "Radio connection establishment cause",
      "type": "string",
      "enum": [
        "Emergency",
        "MobileOriginatedSignaling",
        "MobileTerminatedSignaling",
        "MobileOriginatedData",
        "MobileTerminatedData",
        "SMS"
      ],
      "x-ms-enum": {
        "name": "RrcEstablishmentCause",
        "modelAsString": true,
        "values": [
          {
            "value": "Emergency"
          },
          {
            "value": "MobileOriginatedSignaling"
          },
          {
            "value": "MobileTerminatedSignaling"
          },
          {
            "value": "MobileOriginatedData"
          },
          {
            "value": "MobileTerminatedData"
          },
          {
            "value": "SMS"
          }
        ]
      }
    },
    "UeUsageSetting": {
      "description": "The UE's usage setting",
      "type": "string",
      "enum": [
        "VoiceCentric",
        "DataCentric"
      ],
      "x-ms-enum": {
        "name": "UeUsageSetting",
        "modelAsString": true,
        "values": [
          {
            "value": "VoiceCentric"
          },
          {
            "value": "DataCentric"
          }
        ]
      }
    },
    "UeQOSFlow": {
      "type": "object",
      "description": "QoS Flow",
      "required": [
        "qfi",
        "fiveqi"
      ],
      "properties": {
        "qfi": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/Qfi"
        },
        "fiveqi": {
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/5Qi"
        },
        "mbr": {
          "description": "Maximum Bit Rate",
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/Ambr"
        },
        "gbr": {
          "description": "Guaranteed Bit Rate",
          "x-ms-client-flatten": true,
          "$ref": "./ts29571.json#/definitions/Ambr"
        }
      }
    },
    "RatType": {
      "description": "RAT Type",
      "type": "string",
      "enum": [
        "4G",
        "5G"
      ],
      "x-ms-enum": {
        "name": "RatType",
        "modelAsString": true,
        "values": [
          {
            "value": "4G"
          },
          {
            "value": "5G"
          }
        ]
      }
    },
    "UeState": {
      "description": "State of the UE.",
      "type": "string",
      "enum": [
        "Connected",
        "Idle",
        "Detached",
        "Deregistered",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "UeState",
        "modelAsString": true
      }
    },
    "PdnType": {
      "description": "Packet Data Network Type",
      "type": "string",
      "enum": [
        "IPV4"
      ],
      "x-ms-enum": {
        "name": "PdnType",
        "modelAsString": true,
        "values": [
          {
            "value": "IPV4"
          }
        ]
      }
    },
    "UeIpAddress": {
      "description": "UE IP address",
      "type": "object",
      "properties": {
        "ipV4Addr": {
          "$ref": "./ts29571.json#/definitions/Ipv4Addr"
        }
      }
    },
    "DnnIpPair": {
      "description": "DNN and UE IP address",
      "type": "object",
      "properties": {
        "dnn": {
          "$ref": "./ts29571.json#/definitions/Dnn"
        },
        "ueIpAddress": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UeIpAddress"
        }
      }
    },
    "SimGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SimGroupPropertiesFormat",
          "description": "SIM group Properties."
        },
        "identity": {
          "$ref": "./common.json#/definitions/ManagedServiceIdentity",
          "description": "The identity used to retrieve the encryption key from Azure key vault."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "SIM group resource."
    },
    "SimGroupPropertiesFormat": {
      "type": "object",
      "description": "SIM group properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the SIM group resource."
        },
        "encryptionKey": {
          "$ref": "#/definitions/KeyVaultKey",
          "description": "A key to encrypt the SIM data that belongs to this SIM group."
        },
        "mobileNetwork": {
          "$ref": "./common.json#/definitions/MobileNetworkResourceId",
          "description": "Mobile network that this SIM group belongs to. The mobile network must be in the same location as the SIM group."
        }
      }
    },
    "KeyVaultKey": {
      "description": "An Azure key vault key.",
      "type": "object",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "The key URL, unversioned. For example: https://contosovault.vault.azure.net/keys/azureKey."
        }
      }
    },
    "SimGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimGroup"
          },
          "description": "A list of SIM groups in a resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for list SIM groups API service call."
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationList": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Microsoft.MobileNetwork operations.",
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "type": "object",
      "description": "List of the operations."
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}