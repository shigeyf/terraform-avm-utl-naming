{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Edge.configurations",
    "version": "2025-06-01"
  },
  "components": {},
  "paths": {
    "/{resourceUri}/providers/Microsoft.Edge/configurationReferences": {
      "get": {
        "operationId": "ConfigurationReferences_List",
        "tags": [
          "ConfigurationReferences"
        ],
        "description": "List ConfigurationReference resources by parent",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationReferenceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationReferences_List": {
            "$ref": "./examples/ConfigurationReferences_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.Edge/configurationReferences/{configurationReferenceName}": {
      "get": {
        "operationId": "ConfigurationReferences_Get",
        "tags": [
          "ConfigurationReferences"
        ],
        "description": "Get a ConfigurationReference",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "configurationReferenceName",
            "in": "path",
            "description": "The name of the ConfigurationReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationReference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationReferences_Get": {
            "$ref": "./examples/ConfigurationReferences_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "ConfigurationReferences_CreateOrUpdate",
        "tags": [
          "ConfigurationReferences"
        ],
        "description": "Create a ConfigurationReference",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "configurationReferenceName",
            "in": "path",
            "description": "The name of the ConfigurationReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationReference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigurationReference' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationReference"
            }
          },
          "201": {
            "description": "Resource 'ConfigurationReference' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationReference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationReferences_CreateOrUpdate": {
            "$ref": "./examples/ConfigurationReferences_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "ConfigurationReferences_Update",
        "tags": [
          "ConfigurationReferences"
        ],
        "description": "Update a ConfigurationReference",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "configurationReferenceName",
            "in": "path",
            "description": "The name of the ConfigurationReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationReferenceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationReference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationReferences_Update": {
            "$ref": "./examples/ConfigurationReferences_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "ConfigurationReferences_Delete",
        "tags": [
          "ConfigurationReferences"
        ],
        "description": "Delete a ConfigurationReference",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "configurationReferenceName",
            "in": "path",
            "description": "The name of the ConfigurationReference",
            "required": true,
            "type": "string",
            "pattern": "^default$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationReferences_Delete": {
            "$ref": "./examples/ConfigurationReferences_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Edge/configurations": {
      "get": {
        "operationId": "Configurations_ListBySubscription",
        "tags": [
          "Configurations"
        ],
        "description": "List by subscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_ListBySubscription": {
            "$ref": "./examples/Configurations_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations": {
      "get": {
        "operationId": "Configurations_ListByResourceGroup",
        "tags": [
          "Configurations"
        ],
        "description": "List by specified resource group",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_ListByResourceGroup": {
            "$ref": "./examples/Configurations_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations/{configurationName}": {
      "get": {
        "operationId": "Configurations_Get",
        "tags": [
          "Configurations"
        ],
        "description": "Get a Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Get": {
            "$ref": "./examples/Configurations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Configurations_CreateOrUpdate",
        "tags": [
          "Configurations"
        ],
        "description": "Create or update a Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Configuration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "201": {
            "description": "Resource 'Configuration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_CreateOrUpdate": {
            "$ref": "./examples/Configurations_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Configurations_Update",
        "tags": [
          "Configurations"
        ],
        "description": "Update a Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Update": {
            "$ref": "./examples/Configurations_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Configurations_Delete",
        "tags": [
          "Configurations"
        ],
        "description": "Delete a Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Delete": {
            "$ref": "./examples/Configurations_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations/{configurationName}/dynamicConfigurations": {
      "get": {
        "operationId": "DynamicConfigurations_ListByConfiguration",
        "tags": [
          "DynamicConfigurations"
        ],
        "description": "List Dynamic Configuration Resources",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurations_ListByConfiguration": {
            "$ref": "./examples/DynamicConfigurations_ListByConfiguration_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations/{configurationName}/dynamicConfigurations/{dynamicConfigurationName}": {
      "get": {
        "operationId": "DynamicConfigurations_Get",
        "tags": [
          "DynamicConfigurations"
        ],
        "description": "Get a Dynamic Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurations_Get": {
            "$ref": "./examples/DynamicConfigurations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DynamicConfigurations_CreateOrUpdate",
        "tags": [
          "DynamicConfigurations"
        ],
        "description": "Create or update a Dynamic Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicConfiguration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicConfiguration"
            }
          },
          "201": {
            "description": "Resource 'DynamicConfiguration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicConfiguration"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurations_CreateOrUpdate": {
            "$ref": "./examples/DynamicConfigurations_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynamicConfigurations_Update",
        "tags": [
          "DynamicConfigurations"
        ],
        "description": "Update a Dynamic Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurations_Update": {
            "$ref": "./examples/DynamicConfigurations_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DynamicConfigurations_Delete",
        "tags": [
          "DynamicConfigurations"
        ],
        "description": "Delete a Dynamic Configuration Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurations_Delete": {
            "$ref": "./examples/DynamicConfigurations_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations/{configurationName}/dynamicConfigurations/{dynamicConfigurationName}/versions": {
      "get": {
        "operationId": "DynamicConfigurationVersions_ListByDynamicConfiguration",
        "tags": [
          "DynamicConfigurationVersions"
        ],
        "description": "List Dynamic Configuration Version Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurationVersions_ListByDynamicConfiguration - generated by [MaximumSet] rule": {
            "$ref": "./examples/DynamicConfigurationVersions_ListByDynamicConfiguration_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/configurations/{configurationName}/dynamicConfigurations/{dynamicConfigurationName}/versions/{dynamicConfigurationVersionName}": {
      "get": {
        "operationId": "DynamicConfigurationVersions_Get",
        "tags": [
          "DynamicConfigurationVersions"
        ],
        "description": "Get a Dynamic Configuration Version Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationVersionName",
            "in": "path",
            "description": "The name of the DynamicConfigurationVersion",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9.-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurationVersions_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/DynamicConfigurationVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "DynamicConfigurationVersions_CreateOrUpdate",
        "tags": [
          "DynamicConfigurationVersions"
        ],
        "description": "Create or update a Dynamic Configuration Version Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationVersionName",
            "in": "path",
            "description": "The name of the DynamicConfigurationVersion",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9.-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DynamicConfigurationVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersion"
            }
          },
          "201": {
            "description": "Resource 'DynamicConfigurationVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurationVersions_CreateOrUpdate - generated by [MaximumSet] rule": {
            "$ref": "./examples/DynamicConfigurationVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DynamicConfigurationVersions_Update",
        "tags": [
          "DynamicConfigurationVersions"
        ],
        "description": "update a Dynamic Configuration Version Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationVersionName",
            "in": "path",
            "description": "The name of the DynamicConfigurationVersion",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9.-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DynamicConfigurationVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurationVersions_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/DynamicConfigurationVersions_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "DynamicConfigurationVersions_Delete",
        "tags": [
          "DynamicConfigurationVersions"
        ],
        "description": "Delete a Dynamic Configuration Version Resource",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "Name of the Configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationName",
            "in": "path",
            "description": "Name of the dynamic configuration",
            "required": true,
            "type": "string",
            "pattern": "^(?!.*\\.\\.)[a-zA-Z0-9-][a-zA-Z0-9._-]{1,68}[a-zA-Z0-9-]$"
          },
          {
            "name": "dynamicConfigurationVersionName",
            "in": "path",
            "description": "The name of the DynamicConfigurationVersion",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9.-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DynamicConfigurationVersions_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/DynamicConfigurationVersions_Delete_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Azure.ResourceManager.CommonTypes.TrackedResourceUpdate": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "Configuration": {
      "type": "object",
      "description": "Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConfigurationListResult": {
      "type": "object",
      "description": "The response of a Configuration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Configuration items on this page",
          "items": {
            "$ref": "#/definitions/Configuration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigurationModel": {
      "type": "string",
      "description": "Available configuration models",
      "enum": [
        "Application",
        "Common"
      ],
      "x-ms-enum": {
        "name": "ConfigurationModel",
        "modelAsString": true,
        "values": [
          {
            "name": "Application",
            "value": "Application",
            "description": "Configuration model Application"
          },
          {
            "name": "Common",
            "value": "Common",
            "description": "Configuration model Common"
          }
        ]
      }
    },
    "ConfigurationProperties": {
      "type": "object",
      "description": "Configuration Properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      }
    },
    "ConfigurationReference": {
      "type": "object",
      "description": "ConfigurationReference Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationReferenceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigurationReferenceListResult": {
      "type": "object",
      "description": "The response of a ConfigurationReference list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigurationReference items on this page",
          "items": {
            "$ref": "#/definitions/ConfigurationReference"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigurationReferenceProperties": {
      "type": "object",
      "description": "Properties for ConfigurationReference Resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "configurationResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "ArmId of Configuration resource",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Edge/Configurations"
              }
            ]
          }
        }
      }
    },
    "ConfigurationReferenceUpdate": {
      "type": "object",
      "description": "ConfigurationReference Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationReferenceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConfigurationType": {
      "type": "string",
      "description": "Available configuration types",
      "enum": [
        "Shared",
        "Hierarchy"
      ],
      "x-ms-enum": {
        "name": "ConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Shared",
            "value": "Shared",
            "description": "Configuration type Shared"
          },
          {
            "name": "Hierarchy",
            "value": "Hierarchy",
            "description": "Configuration type Hierarchy"
          }
        ]
      }
    },
    "ConfigurationUpdate": {
      "type": "object",
      "description": "Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "DynamicConfiguration": {
      "type": "object",
      "description": "Dynamic Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicConfigurationProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicConfigurationListResult": {
      "type": "object",
      "description": "The response of a DynamicConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/DynamicConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicConfigurationProperties": {
      "type": "object",
      "description": "Dynamic Configuration Properties",
      "properties": {
        "currentVersion": {
          "type": "string",
          "description": "Current Version of dynamic configuration"
        },
        "dynamicConfigurationType": {
          "$ref": "#/definitions/ConfigurationType",
          "description": "Type of dynamic configuration",
          "readOnly": true
        },
        "dynamicConfigurationModel": {
          "$ref": "#/definitions/ConfigurationModel",
          "description": "Type of dynamic configuration model",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "currentVersion"
      ]
    },
    "DynamicConfigurationPropertiesUpdate": {
      "type": "object",
      "description": "Dynamic Configuration Properties",
      "properties": {
        "currentVersion": {
          "type": "string",
          "description": "Current Version of dynamic configuration"
        }
      }
    },
    "DynamicConfigurationUpdate": {
      "type": "object",
      "description": "Dynamic Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicConfigurationPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicConfigurationVersion": {
      "type": "object",
      "description": "Dynamic Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicConfigurationVersionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DynamicConfigurationVersionListResult": {
      "type": "object",
      "description": "The response of a DynamicConfigurationVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DynamicConfigurationVersion items on this page",
          "items": {
            "$ref": "#/definitions/DynamicConfigurationVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DynamicConfigurationVersionProperties": {
      "type": "object",
      "description": "Dynamic Configuration Properties",
      "properties": {
        "values": {
          "type": "string",
          "description": "Values of configuration version"
        },
        "schemaId": {
          "type": "string",
          "description": "Schema Id for configuration",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of resource",
          "readOnly": true
        }
      },
      "required": [
        "values"
      ]
    },
    "DynamicConfigurationVersionPropertiesUpdate": {
      "type": "object",
      "description": "Dynamic Configuration Properties",
      "properties": {
        "values": {
          "type": "string",
          "description": "Values of configuration version"
        }
      }
    },
    "DynamicConfigurationVersionUpdate": {
      "type": "object",
      "description": "Dynamic Configuration Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicConfigurationVersionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Initialized",
        "InProgress",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Initialized",
            "value": "Initialized",
            "description": "Resource Provisioning is initialized"
          },
          {
            "name": "Inprogress",
            "value": "InProgress",
            "description": "Resource Provisioning is in progress"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource Provisioning is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}