{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.AzureStackHCI",
    "version": "2024-01-01"
  },
  "components": {},
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions": {
      "get": {
        "operationId": "Extensions_ListByArcSetting",
        "description": "List all Extensions under ArcSetting resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Extensions under ArcSetting resource": {
            "$ref": "./examples/ListExtensionsByArcSetting.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}": {
      "get": {
        "operationId": "Extensions_Get",
        "description": "Get particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ArcSettings Extension": {
            "$ref": "./examples/GetExtension.json"
          }
        }
      },
      "put": {
        "operationId": "Extensions_Create",
        "description": "Create Extension for HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "name": "extension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Extension"
            },
            "description": "Details of the Machine Extension to be created."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create Arc Extension": {
            "$ref": "./examples/PutExtension.json"
          }
        }
      },
      "patch": {
        "operationId": "Extensions_Update",
        "description": "Update Extension for HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "name": "extension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionPatch"
            },
            "description": "Details of the Machine Extension to be created."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-examples": {
          "Update Arc Extension": {
            "$ref": "./examples/PatchExtension.json"
          }
        }
      },
      "delete": {
        "operationId": "Extensions_Delete",
        "description": "Delete particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "OK"
          },
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete Arc Extension": {
            "$ref": "./examples/DeleteExtension.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}/upgrade": {
      "post": {
        "operationId": "Extensions_Upgrade",
        "description": "Upgrade a particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionNameParameter"
          },
          {
            "name": "extensionUpgradeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionUpgradeParameters"
            },
            "description": "Parameters supplied to the Upgrade Extensions operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Upgrade Machine Extensions": {
            "$ref": "./examples/Extensions_Upgrade.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}": {
      "get": {
        "operationId": "LogicalNetworks_Get",
        "x-ms-examples": {
          "GetLogicalNetwork": {
            "$ref": "./examples/GetLogicalNetwork.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/LogicalNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetworks"
            }
          }
        }
      },
      "put": {
        "operationId": "LogicalNetworks_CreateOrUpdate",
        "description": "The operation to create or update a logical network. Please note some properties can be set only during logical network creation.",
        "x-ms-examples": {
          "PutLogicalNetwork": {
            "$ref": "./examples/PutLogicalNetwork.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/LogicalNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "logicalNetworks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogicalNetworks"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/LogicalNetworks"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LogicalNetworks"
            }
          }
        }
      },
      "delete": {
        "operationId": "LogicalNetworks_Delete",
        "description": "The operation to delete a logical network.",
        "x-ms-examples": {
          "DeleteLogicalNetwork": {
            "$ref": "./examples/DeleteLogicalNetwork.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/LogicalNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "LogicalNetworks_Update",
        "description": "The operation to update a logical network.",
        "x-ms-examples": {
          "UpdateLogicalNetwork": {
            "$ref": "./examples/UpdateLogicalNetwork.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/LogicalNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "logicalNetworks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogicalNetworksUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetworks"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks": {
      "get": {
        "operationId": "LogicalNetworks_List",
        "description": "Lists all of the logical networks in the specified resource group. Use the nextLink property in the response to get the next page of logical networks.",
        "x-ms-examples": {
          "ListLogicalNetworkByResourceGroup": {
            "$ref": "./examples/ListLogicalNetworkByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetworksListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/logicalNetworks": {
      "get": {
        "operationId": "LogicalNetworks_ListAll",
        "description": "Lists all of the logical networks in the specified subscription. Use the nextLink property in the response to get the next page of logical networks.",
        "x-ms-examples": {
          "ListLogicalNetworkBySubscription": {
            "$ref": "./examples/ListLogicalNetworkBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetworksListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings": {
      "get": {
        "operationId": "DeploymentSettings_ListByClusters",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "List DeploymentSetting resources by Clusters",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentSettingListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Deployment Settings": {
            "$ref": "./examples/ListDeploymentSettingsByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings/{deploymentSettingsName}": {
      "get": {
        "operationId": "DeploymentSettings_Get",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Get a DeploymentSetting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Deployment Settings": {
            "$ref": "./examples/GetDeploymentSettings.json"
          }
        }
      },
      "put": {
        "operationId": "DeploymentSettings_CreateOrUpdate",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Create a DeploymentSetting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DeploymentSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          },
          "201": {
            "description": "Resource 'DeploymentSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Deployment Settings": {
            "$ref": "./examples/PutDeploymentSettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DeploymentSettings_Delete",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Delete a DeploymentSetting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Deployment Settings": {
            "$ref": "./examples/DeleteDeploymentSettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces/{networkInterfaceName}": {
      "get": {
        "operationId": "NetworkInterfaces_Get",
        "description": "Gets a network interface",
        "x-ms-examples": {
          "GetNetworkInterface": {
            "$ref": "./examples/GetNetworkInterface.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaces"
            }
          }
        }
      },
      "put": {
        "operationId": "NetworkInterfaces_CreateOrUpdate",
        "description": "The operation to create or update a network interface. Please note some properties can be set only during network interface creation.",
        "x-ms-examples": {
          "PutNetworkInterface": {
            "$ref": "./examples/PutNetworkInterface.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "networkInterfaces",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterfaces"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaces"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaces"
            }
          }
        }
      },
      "delete": {
        "operationId": "NetworkInterfaces_Delete",
        "description": "The operation to delete a network interface.",
        "x-ms-examples": {
          "DeleteNetworkInterface": {
            "$ref": "./examples/DeleteNetworkInterface.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "NetworkInterfaces_Update",
        "description": "The operation to update a network interface.",
        "x-ms-examples": {
          "UpdateNetworkInterface": {
            "$ref": "./examples/UpdateNetworkInterface.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "networkInterfaces",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterfacesUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaces"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/networkInterfaces": {
      "get": {
        "operationId": "NetworkInterfaces_List",
        "description": "Lists all of the network interfaces in the specified resource group. Use the nextLink property in the response to get the next page of network interfaces.",
        "x-ms-examples": {
          "ListNetworkInterfaceByResourceGroup": {
            "$ref": "./examples/ListNetworkInterfaceByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkInterfacesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/networkInterfaces": {
      "get": {
        "operationId": "NetworkInterfaces_ListAll",
        "description": "Lists all of the network interfaces in the specified subscription. Use the nextLink property in the response to get the next page of network interfaces.",
        "x-ms-examples": {
          "ListNetworkInterfaceBySubscription": {
            "$ref": "./examples/ListNetworkInterfaceBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkInterfacesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices": {
      "get": {
        "operationId": "EdgeDevices_List",
        "tags": [
          "EdgeDevices"
        ],
        "description": "List EdgeDevice resources by parent",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeDeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Edge Devices": {
            "$ref": "./examples/ListEdgeDevices.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}": {
      "get": {
        "operationId": "EdgeDevices_Get",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Get a EdgeDevice",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Edge Device": {
            "$ref": "./examples/GetEdgeDevices.json"
          }
        }
      },
      "put": {
        "operationId": "EdgeDevices_CreateOrUpdate",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Create a EdgeDevice",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EdgeDevice' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeDevice"
            }
          },
          "201": {
            "description": "Resource 'EdgeDevice' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeDevice"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Edge Device": {
            "$ref": "./examples/PutEdgeDevices.json"
          }
        }
      },
      "delete": {
        "operationId": "EdgeDevices_Delete",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Delete a EdgeDevice",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Edge Devices": {
            "$ref": "./examples/DeleteEdgeDevices.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/validate": {
      "post": {
        "operationId": "EdgeDevices_Validate",
        "tags": [
          "EdgeDevices"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "ValidateRequest",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate Edge Devices": {
            "$ref": "./examples/ValidateEdgeDevices.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListBySubscription",
        "x-ms-examples": {
          "List clusters in a given subscription": {
            "$ref": "./examples/ListClustersBySubscription.json"
          }
        },
        "description": "List all HCI clusters in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "List clusters in a given resource group": {
            "$ref": "./examples/ListClustersByResourceGroup.json"
          }
        },
        "description": "List all HCI clusters in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "Get cluster": {
            "$ref": "./examples/GetCluster.json"
          }
        },
        "description": "Get HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Create",
        "x-ms-examples": {
          "Create cluster": {
            "$ref": "./examples/CreateCluster.json"
          }
        },
        "description": "Create an HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Details of the HCI cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "x-ms-examples": {
          "Update cluster": {
            "$ref": "./examples/UpdateCluster.json"
          }
        },
        "description": "Update an HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Details of the HCI cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "x-ms-examples": {
          "Delete cluster": {
            "$ref": "./examples/DeleteCluster.json"
          }
        },
        "description": "Delete an HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/uploadCertificate": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_UploadCertificate",
        "x-ms-examples": {
          "Upload certificate": {
            "$ref": "./examples/UploadCertificate.json"
          }
        },
        "description": "Upload certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "uploadCertificateRequest",
            "in": "body",
            "description": "Upload certificate request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadCertificateRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/createClusterIdentity": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_CreateIdentity",
        "description": "Create cluster identity.",
        "x-ms-examples": {
          "Create cluster Identity": {
            "$ref": "./examples/CreateClusterIdentity.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterIdentityResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/extendSoftwareAssuranceBenefit": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_ExtendSoftwareAssuranceBenefit",
        "description": "Extends Software Assurance Benefit to a cluster",
        "x-ms-examples": {
          "Create cluster Identity": {
            "$ref": "./examples/ExtendSoftwareAssuranceBenefit.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "softwareAssuranceChangeRequest",
            "in": "body",
            "description": "Software Assurance Change Request Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SoftwareAssuranceChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages/{galleryImageName}": {
      "get": {
        "operationId": "GalleryImages_Get",
        "description": "Gets a gallery image",
        "x-ms-examples": {
          "GetGalleryImage": {
            "$ref": "./examples/GetGalleryImage.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryImages"
            }
          }
        }
      },
      "put": {
        "operationId": "GalleryImages_CreateOrUpdate",
        "description": "The operation to create or update a gallery image. Please note some properties can be set only during gallery image creation.",
        "x-ms-examples": {
          "PutGalleryImage": {
            "$ref": "./examples/PutGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "galleryImages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GalleryImages"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/GalleryImages"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GalleryImages"
            }
          }
        }
      },
      "delete": {
        "operationId": "GalleryImages_Delete",
        "description": "The operation to delete a gallery image.",
        "x-ms-examples": {
          "DeleteGalleryImage": {
            "$ref": "./examples/DeleteGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "GalleryImages_Update",
        "description": "The operation to update a gallery image.",
        "x-ms-examples": {
          "UpdateGalleryImage": {
            "$ref": "./examples/UpdateGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "galleryImages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GalleryImagesUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryImages"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/galleryImages": {
      "get": {
        "operationId": "GalleryImages_List",
        "description": "Lists all of the gallery images in the specified resource group. Use the nextLink property in the response to get the next page of gallery images.",
        "x-ms-examples": {
          "ListGalleryImageByResourceGroup": {
            "$ref": "./examples/ListGalleryImageByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryImagesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/galleryImages": {
      "get": {
        "operationId": "GalleryImages_ListAll",
        "description": "Lists all of the gallery images in the specified subscription. Use the nextLink property in the response to get the next page of gallery images.",
        "x-ms-examples": {
          "ListGalleryImageBySubscription": {
            "$ref": "./examples/ListGalleryImageBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryImagesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default": {
      "get": {
        "operationId": "VirtualMachineInstances_Get",
        "description": "Gets a virtual machine instance",
        "x-ms-examples": {
          "GetVirtualMachineInstance": {
            "$ref": "./examples/GetVirtualMachineInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachineInstances_CreateOrUpdate",
        "description": "The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.",
        "x-ms-examples": {
          "PutVirtualMachineInstanceWithGalleryImage": {
            "$ref": "./examples/PutVirtualMachineInstanceWithGalleryImage.json"
          },
          "PutVirtualMachineInstanceWithMarketplaceGalleryImage": {
            "$ref": "./examples/PutVirtualMachineInstanceWithMarketplaceGalleryImage.json"
          },
          "PutVirtualMachineInstanceWithOsDisk": {
            "$ref": "./examples/PutVirtualMachineInstanceWithOsDisk.json"
          },
          "PutVirtualMachineInstanceWithVMConfigAgent": {
            "$ref": "./examples/PutVirtualMachineInstanceWithVMConfigAgent.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualMachineInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachineInstances_Delete",
        "description": "The operation to delete a virtual machine instance.",
        "x-ms-examples": {
          "DeleteVirtualMachine": {
            "$ref": "./examples/DeleteVirtualMachineInstance.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachineInstances_Update",
        "description": "The operation to update a virtual machine instance.",
        "x-ms-examples": {
          "UpdateVirtualMachine": {
            "$ref": "./examples/UpdateVirtualMachineInstance.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualMachineInstance",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstanceUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/start": {
      "post": {
        "operationId": "VirtualMachineInstances_Start",
        "description": "The operation to start a virtual machine instance.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "StartVirtualMachine": {
            "$ref": "./examples/StartVirtualMachineInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/stop": {
      "post": {
        "operationId": "VirtualMachineInstances_Stop",
        "description": "The operation to stop a virtual machine instance.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "StopVirtualMachine": {
            "$ref": "./examples/StopVirtualMachineInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/restart": {
      "post": {
        "operationId": "VirtualMachineInstances_Restart",
        "description": "The operation to restart a virtual machine instance.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RestartVirtualMachine": {
            "$ref": "./examples/RestartVirtualMachineInstance.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstance"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances": {
      "get": {
        "operationId": "VirtualMachineInstances_List",
        "description": "Lists all of the virtual machine instances within the specified parent resource.",
        "x-ms-examples": {
          "ListVirtualMachineInstances": {
            "$ref": "./examples/ListVirtualMachineInstances.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInstanceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/hybridIdentityMetadata/default": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "x-ms-examples": {
          "GetHybridIdentityMetadata": {
            "$ref": "./examples/GetHybridIdentityMetadata.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_List",
        "summary": "Implements GET HybridIdentityMetadata in a vm.",
        "description": "Returns the list of HybridIdentityMetadata of the given vm.",
        "x-ms-examples": {
          "HybridIdentityMetadataListByVirtualMachineInstances": {
            "$ref": "./examples/HybridIdentityMetadata_List.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/guestAgents/default": {
      "put": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Create",
        "description": "Create Or Update GuestAgent.",
        "summary": "Implements GuestAgent PUT method.",
        "x-ms-examples": {
          "CreateGuestAgent": {
            "$ref": "./examples/CreateGuestAgent.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Get",
        "summary": "Gets GuestAgent.",
        "description": "Implements GuestAgent GET method.",
        "x-ms-examples": {
          "GetGuestAgent": {
            "$ref": "./examples/GetGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Delete",
        "summary": "Deleted an GuestAgent.",
        "description": "Implements GuestAgent DELETE method.",
        "x-ms-examples": {
          "DeleteGuestAgent": {
            "$ref": "./examples/DeleteGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/virtualMachineInstances/default/guestAgents": {
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgents_List",
        "summary": "Implements GET GuestAgent in a vm.",
        "description": "Returns the list of GuestAgent of the given vm.",
        "x-ms-examples": {
          "GuestAgentListByVirtualMachineInstances": {
            "$ref": "./examples/GuestAgent_List.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuestAgentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers/{storageContainerName}": {
      "get": {
        "operationId": "StorageContainers_Get",
        "description": "Gets a storage container",
        "x-ms-examples": {
          "GetStorageContainer": {
            "$ref": "./examples/GetStorageContainer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageContainerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageContainers"
            }
          }
        }
      },
      "put": {
        "operationId": "StorageContainers_CreateOrUpdate",
        "description": "The operation to create or update a storage container. Please note some properties can be set only during storage container creation.",
        "x-ms-examples": {
          "PutStorageContainer": {
            "$ref": "./examples/PutStorageContainer.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageContainerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "storageContainers",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageContainers"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/StorageContainers"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StorageContainers"
            }
          }
        }
      },
      "delete": {
        "operationId": "StorageContainers_Delete",
        "description": "The operation to delete a storage container.",
        "x-ms-examples": {
          "DeleteStorageContainer": {
            "$ref": "./examples/DeleteStorageContainer.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageContainerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "StorageContainers_Update",
        "description": "The operation to update a storage container.",
        "x-ms-examples": {
          "UpdateStorageContainer": {
            "$ref": "./examples/UpdateStorageContainer.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageContainerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "storageContainers",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageContainersUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageContainers"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/storageContainers": {
      "get": {
        "operationId": "StorageContainers_List",
        "description": "Lists all of the storage containers in the specified resource group. Use the nextLink property in the response to get the next page of storage containers.",
        "x-ms-examples": {
          "ListStorageContainerByResourceGroup": {
            "$ref": "./examples/ListStorageContainerByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageContainersListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/storageContainers": {
      "get": {
        "operationId": "StorageContainers_ListAll",
        "description": "Lists all of the storage containers in the specified subscription. Use the nextLink property in the response to get the next page of storage containers.",
        "x-ms-examples": {
          "ListStorageContainerBySubscription": {
            "$ref": "./examples/ListStorageContainerBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageContainersListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/{marketplaceGalleryImageName}": {
      "get": {
        "operationId": "MarketplaceGalleryImages_Get",
        "description": "Gets a marketplace gallery image",
        "x-ms-examples": {
          "GetMarketplaceGalleryImage": {
            "$ref": "./examples/GetMarketplaceGalleryImage.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MarketplaceGalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImages"
            }
          }
        }
      },
      "put": {
        "operationId": "MarketplaceGalleryImages_CreateOrUpdate",
        "description": "The operation to create or update a marketplace gallery image. Please note some properties can be set only during marketplace gallery image creation.",
        "x-ms-examples": {
          "PutMarketplaceGalleryImage": {
            "$ref": "./examples/PutMarketplaceGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MarketplaceGalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "marketplaceGalleryImages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImages"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updates the marketplace gallery image resource.",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImages"
            }
          },
          "201": {
            "description": "Creates the marketplace gallery image resource.",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImages"
            }
          }
        }
      },
      "delete": {
        "operationId": "MarketplaceGalleryImages_Delete",
        "description": "The operation to delete a marketplace gallery image.",
        "x-ms-examples": {
          "DeleteMarketplaceGalleryImage": {
            "$ref": "./examples/DeleteMarketplaceGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MarketplaceGalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "MarketplaceGalleryImages_Update",
        "description": "The operation to update a marketplace gallery image.",
        "x-ms-examples": {
          "UpdateMarketplaceGalleryImage": {
            "$ref": "./examples/UpdateMarketplaceGalleryImage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MarketplaceGalleryImageNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "marketplaceGalleryImages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImagesUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImages"
            }
          },
          "202": {
            "description": "Updates the marketplace gallery image resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages": {
      "get": {
        "operationId": "MarketplaceGalleryImages_List",
        "description": "Lists all of the marketplace gallery images in the specified resource group. Use the nextLink property in the response to get the next page of marketplace gallery images.",
        "x-ms-examples": {
          "ListMarketplaceGalleryImageByResourceGroup": {
            "$ref": "./examples/ListMarketplaceGalleryImageByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Lists all marketplace gallery images under the resource group.",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImagesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages": {
      "get": {
        "operationId": "MarketplaceGalleryImages_ListAll",
        "description": "Lists all of the marketplace gallery images in the specified subscription. Use the nextLink property in the response to get the next page of marketplace gallery images.",
        "x-ms-examples": {
          "ListMarketplaceGalleryImageBySubscription": {
            "$ref": "./examples/ListMarketplaceGalleryImageBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Lists all marketplace gallery images under the subscription.",
            "schema": {
              "$ref": "#/definitions/MarketplaceGalleryImagesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings": {
      "get": {
        "operationId": "SecuritySettings_ListByClusters",
        "tags": [
          "SecuritySettings"
        ],
        "description": "List SecuritySetting resources by Clusters",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecuritySettingListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Security Settings": {
            "$ref": "./examples/ListSecuritySettingsByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings/{securitySettingsName}": {
      "get": {
        "operationId": "SecuritySettings_Get",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Get a SecuritySetting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecuritySetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Security Settings": {
            "$ref": "./examples/GetSecuritySettings.json"
          }
        }
      },
      "put": {
        "operationId": "SecuritySettings_CreateOrUpdate",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Create a security setting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SecuritySetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecuritySetting"
            }
          },
          "201": {
            "description": "Resource 'SecuritySetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecuritySetting"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Security Settings": {
            "$ref": "./examples/PutSecuritySettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SecuritySettings_Delete",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Delete a SecuritySetting",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Security Settings": {
            "$ref": "./examples/DeleteSecuritySettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.AzureStackHCI/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Create cluster": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "description": "List all available Microsoft.AzureStackHCI provider operations",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus": {
      "get": {
        "operationId": "Skus_ListByOffer",
        "description": "List Skus available for a offer within the HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/OfferNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List SKU resources by offer for the HCI Cluster": {
            "$ref": "./examples/ListSkusByOffer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}": {
      "get": {
        "operationId": "Skus_Get",
        "description": "Get SKU resource details within a offer of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/OfferNameParameter"
          },
          {
            "$ref": "#/parameters/SkuNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Sku": {
            "$ref": "./examples/GetSku.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/apply": {
      "post": {
        "operationId": "Updates_Post",
        "description": "Apply Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List available updates": {
            "$ref": "./examples/PostUpdates.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates": {
      "get": {
        "operationId": "Updates_List",
        "description": "List all Updates",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List available updates": {
            "$ref": "./examples/ListUpdates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}": {
      "delete": {
        "operationId": "Updates_Delete",
        "description": "Delete specified Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete an Update": {
            "$ref": "./examples/DeleteUpdates.json"
          }
        }
      },
      "put": {
        "operationId": "Updates_Put",
        "description": "Put specified Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "updateProperties",
            "in": "body",
            "description": "Properties of the Updates object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Update"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put a specific update": {
            "$ref": "./examples/PutUpdates.json"
          }
        }
      },
      "get": {
        "operationId": "Updates_Get",
        "description": "Get specified Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Update"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a specific update": {
            "$ref": "./examples/GetUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks/{virtualHardDiskName}": {
      "get": {
        "operationId": "VirtualHardDisks_Get",
        "description": "Gets a virtual hard disk",
        "x-ms-examples": {
          "GetVirtualHardDisk": {
            "$ref": "./examples/GetVirtualHardDisk.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualHardDiskNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisks"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHardDisks_CreateOrUpdate",
        "description": "The operation to create or update a virtual hard disk. Please note some properties can be set only during virtual hard disk creation.",
        "x-ms-examples": {
          "PutVirtualHardDisk": {
            "$ref": "./examples/PutVirtualHardDisk.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualHardDiskNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHardDisks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHardDisks"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisks"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisks"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualHardDisks_Delete",
        "description": "The operation to delete a virtual hard disk.",
        "x-ms-examples": {
          "DeleteVirtualHardDisk": {
            "$ref": "./examples/DeleteVirtualHardDisk.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualHardDiskNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "VirtualHardDisks_Update",
        "description": "The operation to update a virtual hard disk.",
        "x-ms-examples": {
          "UpdateVirtualHardDisk": {
            "$ref": "./examples/UpdateVirtualHardDisk.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualHardDiskNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHardDisks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHardDisksUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisks"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualHardDisks": {
      "get": {
        "operationId": "VirtualHardDisks_List",
        "description": "Lists all of the virtual hard disks in the specified resource group. Use the nextLink property in the response to get the next page of virtual hard disks.",
        "x-ms-examples": {
          "ListVirtualHardDiskByResourceGroup": {
            "$ref": "./examples/ListVirtualHardDiskByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisksListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualHardDisks": {
      "get": {
        "operationId": "VirtualHardDisks_ListAll",
        "description": "Lists all of the virtual hard disks in the specified subscription. Use the nextLink property in the response to get the next page of virtual hard disks.",
        "x-ms-examples": {
          "ListVirtualHardDiskBySubscription": {
            "$ref": "./examples/ListVirtualHardDiskBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualHardDisksListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings": {
      "get": {
        "operationId": "ArcSettings_ListByCluster",
        "description": "Get ArcSetting resources of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcSettingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ArcSetting resources by HCI Cluster": {
            "$ref": "./examples/ListArcSettingsByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}": {
      "get": {
        "operationId": "ArcSettings_Get",
        "description": "Get ArcSetting resource details of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ArcSetting": {
            "$ref": "./examples/GetArcSetting.json"
          }
        }
      },
      "put": {
        "operationId": "ArcSettings_Create",
        "description": "Create ArcSetting for HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "name": "arcSetting",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArcSetting"
            },
            "description": "Parameters supplied to the Create ArcSetting resource for this HCI cluster."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create ArcSetting": {
            "$ref": "./examples/PutArcSetting.json"
          }
        }
      },
      "patch": {
        "operationId": "ArcSettings_Update",
        "description": "Update ArcSettings for HCI cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "name": "arcSetting",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArcSettingsPatch"
            },
            "description": "ArcSettings parameters that needs to be updated"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch ArcSetting": {
            "$ref": "./examples/PatchArcSetting.json"
          }
        }
      },
      "delete": {
        "operationId": "ArcSettings_Delete",
        "description": "Delete ArcSetting resource details of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete ArcSetting": {
            "$ref": "./examples/DeleteArcSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/generatePassword": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_GeneratePassword",
        "description": "Generate password for arc settings.",
        "x-ms-examples": {
          "Generate Password": {
            "$ref": "./examples/GeneratePassword.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PasswordCredential"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/createArcIdentity": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_CreateIdentity",
        "description": "Create Aad identity for arc settings.",
        "x-ms-examples": {
          "Create Arc Identity": {
            "$ref": "./examples/CreateArcIdentity.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcIdentityResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/consentAndInstallDefaultExtensions": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_ConsentAndInstallDefaultExtensions",
        "description": "Add consent time for default extensions and initiate extensions installation",
        "x-ms-examples": {
          "Consent And Install Default Extensions": {
            "$ref": "./examples/ConsentAndInstallDefaultExtensions.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArcSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/initializeDisableProcess": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_InitializeDisableProcess",
        "description": "Initializes ARC Disable process on the cluster",
        "x-ms-examples": {
          "Trigger ARC Disable": {
            "$ref": "./examples/InitializeDisableProcess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ArcSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers": {
      "get": {
        "operationId": "Offers_ListByPublisher",
        "description": "List Offers available for a publisher within the HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfferList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Offer resources by publisher for the HCI Cluster": {
            "$ref": "./examples/ListOffersByPublisher.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/offers": {
      "get": {
        "operationId": "Offers_ListByCluster",
        "description": "List Offers available across publishers for the HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfferList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Offer resources by HCI Cluster": {
            "$ref": "./examples/ListOffersByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}": {
      "get": {
        "operationId": "Offers_Get",
        "description": "Get Offer resource details within a publisher of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/OfferNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ODataExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Offer": {
            "$ref": "./examples/GetOffer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries": {
      "get": {
        "operationId": "UpdateSummaries_List",
        "description": "List all Update summaries under the HCI cluster",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateSummariesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Update summaries under cluster resource": {
            "$ref": "./examples/ListUpdateSummaries.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries/default": {
      "delete": {
        "operationId": "UpdateSummaries_Delete",
        "description": "Delete Update Summaries",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete an Update": {
            "$ref": "./examples/DeleteUpdateSummaries.json"
          }
        }
      },
      "put": {
        "operationId": "UpdateSummaries_Put",
        "description": "Put Update summaries under the HCI cluster",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "updateLocationProperties",
            "in": "body",
            "description": "Properties of the UpdateSummaries resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSummaries"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateSummaries"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put Update summaries under cluster resource": {
            "$ref": "./examples/PutUpdateSummaries.json"
          }
        }
      },
      "get": {
        "operationId": "UpdateSummaries_Get",
        "description": "Get all Update summaries under the HCI cluster",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateSummaries"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Update summaries under cluster resource": {
            "$ref": "./examples/GetUpdateSummaries.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns": {
      "get": {
        "operationId": "UpdateRuns_List",
        "description": "List all Update runs for a specified update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRunList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Update runs under cluster resource": {
            "$ref": "./examples/ListUpdateRuns.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns/{updateRunName}": {
      "delete": {
        "operationId": "UpdateRuns_Delete",
        "description": "Delete specified Update Run",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateRunNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Delete an Update": {
            "$ref": "./examples/DeleteUpdateRuns.json"
          }
        }
      },
      "put": {
        "operationId": "UpdateRuns_Put",
        "description": "Put Update runs for a specified update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateRunNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "updateRunsProperties",
            "in": "body",
            "description": "Properties of the updateRuns object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Update runs under cluster resource": {
            "$ref": "./examples/PutUpdateRuns.json"
          }
        }
      },
      "get": {
        "operationId": "UpdateRuns_Get",
        "description": "Get the Update run for a specified update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateNameParameter"
          },
          {
            "$ref": "#/parameters/UpdateRunNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Update runs under cluster resource": {
            "$ref": "./examples/GetUpdateRuns.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers": {
      "get": {
        "operationId": "Publishers_ListByCluster",
        "description": "List Publishers available for the HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublisherList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Publisher resources by HCI Cluster": {
            "$ref": "./examples/ListPublishersByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}": {
      "get": {
        "operationId": "Publishers_Get",
        "description": "Get Publisher resource details of HCI Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PublisherNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Publisher"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Publisher": {
            "$ref": "./examples/GetPublisher.json"
          }
        }
      }
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster.",
      "x-ms-parameter-location": "method"
    },
    "ArcSettingNameParameter": {
      "name": "arcSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
      "x-ms-parameter-location": "method"
    },
    "ExtensionNameParameter": {
      "name": "extensionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the machine extension.",
      "x-ms-parameter-location": "method"
    },
    "LogicalNetworkNameParameter": {
      "name": "logicalNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[_a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 64,
      "minLength": 2,
      "description": "Name of the logical network"
    },
    "NetworkInterfaceNameParameter": {
      "name": "networkInterfaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 80,
      "minLength": 1,
      "description": "Name of the network interface"
    },
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "GalleryImageNameParameter": {
      "name": "galleryImageName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 80,
      "minLength": 1,
      "description": "Name of the gallery image"
    },
    "ResourceUriParameter": {
      "in": "path",
      "name": "resourceUri",
      "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "StorageContainerNameParameter": {
      "name": "storageContainerName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 80,
      "minLength": 1,
      "description": "Name of the storage container"
    },
    "MarketplaceGalleryImageNameParameter": {
      "name": "marketplaceGalleryImageName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 80,
      "minLength": 1,
      "description": "Name of the marketplace gallery image"
    },
    "PublisherNameParameter": {
      "name": "publisherName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the publisher available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "OfferNameParameter": {
      "name": "offerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the offer available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "SkuNameParameter": {
      "name": "skuName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the SKU available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "ODataExpandParameter": {
      "name": "$expand",
      "in": "query",
      "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "UpdateNameParameter": {
      "name": "updateName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Update",
      "x-ms-parameter-location": "method"
    },
    "VirtualHardDiskNameParameter": {
      "name": "virtualHardDiskName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 80,
      "minLength": 1,
      "description": "Name of the virtual hard disk"
    },
    "UpdateRunNameParameter": {
      "name": "updateRunName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Update Run",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "Extension": {
      "description": "Details of a particular extension in HCI Cluster.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Describes Machine Extension Properties.",
          "$ref": "#/definitions/ExtensionProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ExtensionPatch": {
      "description": "Extension Details to update",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Describes Machine Extension Properties that can be updated.",
          "$ref": "#/definitions/ExtensionPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ExtensionProperties": {
      "description": "Status of Arc Extension for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Extension proxy resource.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Failed",
            "Canceled",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "extensionParameters": {
          "description": "Parameters specific to this extension type.",
          "$ref": "#/definitions/ExtensionParameters",
          "x-ms-client-flatten": true
        },
        "aggregateState": {
          "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "UpgradeFailedRollbackSucceeded"
          ],
          "x-ms-enum": {
            "name": "ExtensionAggregateState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "perNodeExtensionDetails": {
          "description": "State of Arc Extension in each of the nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerNodeExtensionState"
          },
          "readOnly": true
        },
        "managedBy": {
          "description": "Indicates if the extension is managed by azure or the user.",
          "type": "string",
          "enum": [
            "Azure",
            "User"
          ],
          "x-ms-enum": {
            "name": "ExtensionManagedBy",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "ExtensionPatchProperties": {
      "description": "Describes Machine Extension Properties that can be updated.",
      "type": "object",
      "properties": {
        "extensionParameters": {
          "description": "Describes the properties of a Machine Extension that can be updated.",
          "$ref": "#/definitions/ExtensionPatchParameters"
        }
      }
    },
    "ExtensionPatchParameters": {
      "description": "Describes the properties of a Machine Extension that can be updated.",
      "type": "object",
      "properties": {
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Protected settings (may contain secrets).",
          "x-ms-secret": true
        }
      }
    },
    "PerNodeExtensionState": {
      "description": "Status of Arc Extension for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the node in HCI Cluster.",
          "type": "string",
          "readOnly": true
        },
        "extension": {
          "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
          "type": "string",
          "readOnly": true
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler.",
          "readOnly": true
        },
        "state": {
          "description": "State of Arc Extension in this node.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "NodeExtensionState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "instanceView": {
          "$ref": "#/definitions/ExtensionInstanceView",
          "description": "The extension instance view.",
          "readOnly": true
        }
      }
    },
    "ExtensionList": {
      "description": "List of Extensions in HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Extensions in HCI cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtensionParameters": {
      "description": "Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.",
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Protected settings (may contain secrets).",
          "x-ms-secret": true
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        }
      }
    },
    "ExtensionInstanceView": {
      "type": "object",
      "description": "Describes the Extension Instance View.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The extension name."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "description": "Instance view status.",
          "properties": {
            "code": {
              "type": "string",
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "description": "The level code.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true
              }
            },
            "displayStatus": {
              "type": "string",
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "format": "date-time",
              "description": "The time of the status."
            }
          }
        }
      }
    },
    "ExtensionUpgradeParameters": {
      "type": "object",
      "description": "Describes the parameters for Extension upgrade.",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Extension Upgrade Target Version."
        }
      }
    },
    "LogicalNetworkProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "dhcpOptions": {
          "type": "object",
          "description": "DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.",
          "properties": {
            "dnsServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of DNS servers IP addresses."
            }
          }
        },
        "subnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "Subnet - list of subnets under the logical network",
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the logical network.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "vmSwitchName": {
          "type": "string",
          "description": "name of the network switch to be used for VMs"
        },
        "status": {
          "$ref": "#/definitions/LogicalNetworkStatus"
        }
      },
      "description": "Properties under the logical network resource"
    },
    "LogicalNetworkStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "LogicalNetwork provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the logical network"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the logical network [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of logical networks"
    },
    "IPPoolInfo": {
      "type": "object",
      "properties": {
        "used": {
          "type": "string",
          "readOnly": true,
          "description": "Number of IP addresses allocated from the IP Pool"
        },
        "available": {
          "type": "string",
          "readOnly": true,
          "description": "Number of IP addresses available in the IP Pool"
        }
      }
    },
    "IPPool": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the IP-Pool"
        },
        "ipPoolType": {
          "type": "string",
          "enum": [
            "vm",
            "vippool"
          ],
          "x-ms-enum": {
            "name": "IPPoolTypeEnum",
            "modelAsString": false
          },
          "description": "Type of the IP Pool [vm, vippool]"
        },
        "start": {
          "type": "string",
          "description": "Start of the IP address pool"
        },
        "end": {
          "type": "string",
          "description": "End of the IP address pool"
        },
        "info": {
          "$ref": "#/definitions/IPPoolInfo"
        }
      }
    },
    "RoutePropertiesFormat": {
      "type": "object",
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        }
      },
      "description": "RoutePropertiesFormat - Route resource."
    },
    "Route": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat",
          "description": "Properties of the route."
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          "description": "Name - name of the subnet"
        }
      },
      "description": "Route - Route resource."
    },
    "RouteTablePropertiesFormat": {
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table.",
          "x-ms-identifiers": []
        }
      },
      "description": "RouteTablePropertiesFormat - Route Table resource."
    },
    "RouteTable": {
      "type": "object",
      "properties": {
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat",
          "description": "Properties of the route table."
        }
      },
      "description": "Route table resource."
    },
    "SubnetPropertiesFormat": {
      "type": "object",
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6."
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of address prefixes for the subnet."
        },
        "ipAllocationMethod": {
          "type": "string",
          "description": "IPAllocationMethod - The IP address allocation method. Possible values include: 'Static', 'Dynamic'",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-enum": {
            "name": "IpAllocationMethodEnum",
            "modelAsString": true
          }
        },
        "ipConfigurationReferences": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ID": {
                "type": "string",
                "description": "IPConfigurationID"
              }
            },
            "description": "IPConfigurationReference - Describes a IPConfiguration under the virtual network"
          },
          "x-ms-identifiers": [],
          "description": "IPConfigurationReferences - list of IPConfigurationReferences"
        },
        "routeTable": {
          "type": "object",
          "$ref": "#/definitions/RouteTable"
        },
        "ipPools": {
          "type": "array",
          "description": "network associated pool of IP Addresses",
          "items": {
            "$ref": "#/definitions/IPPool"
          },
          "x-ms-identifiers": []
        },
        "vlan": {
          "type": "integer",
          "format": "int32",
          "description": "Vlan to use for the subnet"
        }
      },
      "description": "Properties of the subnet."
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat",
          "description": "Properties of the subnet."
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          "description": "Name - The name of the resource that is unique within a resource group. This name can be used to access the resource."
        }
      }
    },
    "LogicalNetworks": {
      "type": "object",
      "description": "The logical network resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LogicalNetworkProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "LogicalNetworksUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The logical network resource patch definition."
    },
    "LogicalNetworksListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNetworks"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "AdapterPropertyOverrides": {
      "type": "object",
      "description": "The AdapterPropertyOverrides of a cluster.",
      "properties": {
        "jumboPacket": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "networkDirect": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "networkDirectTechnology": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'"
        }
      }
    },
    "DeploymentCluster": {
      "type": "object",
      "description": "AzureStackHCI Cluster deployment properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The cluster name provided when preparing Active Directory."
        },
        "witnessType": {
          "type": "string",
          "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
        },
        "witnessPath": {
          "type": "string",
          "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
        },
        "cloudAccountName": {
          "type": "string",
          "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
        },
        "azureServiceEndpoint": {
          "type": "string",
          "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
        }
      }
    },
    "DeploymentConfiguration": {
      "type": "object",
      "description": "Deployment Configuration",
      "properties": {
        "version": {
          "type": "string",
          "description": "deployment template version "
        },
        "scaleUnits": {
          "type": "array",
          "description": "Scale units will contains list of deployment data",
          "items": {
            "$ref": "#/definitions/ScaleUnits"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "scaleUnits"
      ]
    },
    "DeploymentData": {
      "type": "object",
      "description": "The Deployment data of AzureStackHCI Cluster.",
      "properties": {
        "securitySettings": {
          "$ref": "#/definitions/DeploymentSecuritySettings",
          "description": "SecuritySettings to deploy AzureStackHCI Cluster."
        },
        "observability": {
          "$ref": "#/definitions/Observability",
          "description": "Observability config to deploy AzureStackHCI Cluster."
        },
        "cluster": {
          "$ref": "#/definitions/DeploymentCluster",
          "description": "Observability config to deploy AzureStackHCI Cluster."
        },
        "storage": {
          "$ref": "#/definitions/Storage",
          "description": "Storage config to deploy AzureStackHCI Cluster."
        },
        "namingPrefix": {
          "type": "string",
          "description": "naming prefix to deploy cluster.",
          "pattern": "^[a-zA-Z0-9-]{1,8}$"
        },
        "domainFqdn": {
          "type": "string",
          "description": "FQDN to deploy cluster"
        },
        "infrastructureNetwork": {
          "type": "array",
          "description": "InfrastructureNetwork config to deploy AzureStackHCI Cluster.",
          "items": {
            "$ref": "#/definitions/InfrastructureNetwork"
          },
          "x-ms-identifiers": []
        },
        "physicalNodes": {
          "type": "array",
          "description": "list of physical nodes config to deploy AzureStackHCI Cluster.",
          "items": {
            "$ref": "#/definitions/PhysicalNodes"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "hostNetwork": {
          "$ref": "#/definitions/HostNetwork",
          "description": "HostNetwork config to deploy AzureStackHCI Cluster."
        },
        "adouPath": {
          "type": "string",
          "description": "The path to the Active Directory Organizational Unit container object prepared for the deployment. "
        },
        "secretsLocation": {
          "type": "string",
          "description": "The URI to the keyvault / secret store."
        },
        "optionalServices": {
          "$ref": "#/definitions/OptionalServices",
          "description": "OptionalServices config to deploy AzureStackHCI Cluster."
        }
      }
    },
    "DeploymentMode": {
      "type": "string",
      "description": "The deployment mode for cluster deployment.",
      "enum": [
        "Validate",
        "Deploy"
      ],
      "default": "Deploy",
      "x-ms-enum": {
        "name": "DeploymentMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Validate",
            "value": "Validate",
            "description": "Validate deployment settings for cluster."
          },
          {
            "name": "Deploy",
            "value": "Deploy",
            "description": "Deploy cluster using deployment settings."
          }
        ]
      }
    },
    "DeploymentSetting": {
      "type": "object",
      "description": "Edge device resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentSettingsProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeploymentSettingListResult": {
      "type": "object",
      "description": "The response of a DeploymentSetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeploymentSetting items on this page",
          "items": {
            "$ref": "#/definitions/DeploymentSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentSettingsProperties": {
      "type": "object",
      "description": "DeploymentSetting properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "DeploymentSetting provisioning state"
        },
        "arcNodeResourceIds": {
          "type": "array",
          "description": "Azure resource ids of Arc machines to be part of cluster.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "deploymentMode": {
          "$ref": "#/definitions/DeploymentMode",
          "description": "The deployment mode for cluster deployment."
        },
        "deploymentConfiguration": {
          "$ref": "#/definitions/DeploymentConfiguration",
          "description": "Scale units will contains list of deployment data",
          "x-ms-identifiers": []
        },
        "reportedProperties": {
          "$ref": "#/definitions/ReportedProperties",
          "description": "Deployment Status reported from cluster.",
          "readOnly": true
        }
      },
      "required": [
        "arcNodeResourceIds",
        "deploymentMode",
        "deploymentConfiguration"
      ]
    },
    "DeploymentStatus": {
      "type": "object",
      "description": "The DeploymentStatus of AzureStackHCI Cluster.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of AzureStackHCI Cluster Deployment.",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "description": "List of steps of AzureStackHCI Cluster Deployment.",
          "items": {
            "$ref": "#/definitions/DeploymentStep"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "HostNetwork": {
      "type": "object",
      "description": "The HostNetwork of a cluster.",
      "properties": {
        "intents": {
          "type": "array",
          "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
          "items": {
            "$ref": "#/definitions/Intents"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "storageNetworks": {
          "type": "array",
          "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
          "items": {
            "$ref": "#/definitions/StorageNetworks"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "storageConnectivitySwitchless": {
          "type": "boolean",
          "description": "Defines how the storage adapters between nodes are connected either switch or switch less..",
          "default": false
        },
        "enableStorageAutoIp": {
          "type": "boolean",
          "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
          "default": false
        }
      }
    },
    "InfrastructureNetwork": {
      "type": "object",
      "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
      "properties": {
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask that matches the provided IP address space."
        },
        "gateway": {
          "type": "string",
          "description": "Default gateway that should be used for the provided IP address space."
        },
        "ipPools": {
          "type": "array",
          "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
          "items": {
            "$ref": "#/definitions/IpPools"
          },
          "x-ms-identifiers": []
        },
        "dnsServers": {
          "type": "array",
          "description": "IPv4 address of the DNS servers in your environment.",
          "items": {
            "type": "string"
          }
        },
        "useDhcp": {
          "type": "boolean",
          "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
        }
      }
    },
    "Intents": {
      "type": "object",
      "description": "The Intents of a cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network intent you wish to create."
        },
        "trafficType": {
          "type": "array",
          "description": "List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.",
          "items": {
            "type": "string"
          }
        },
        "adapter": {
          "type": "array",
          "description": "Array of network interfaces used for the network intent.",
          "items": {
            "type": "string"
          }
        },
        "overrideVirtualSwitchConfiguration": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "default": false
        },
        "virtualSwitchConfigurationOverrides": {
          "$ref": "#/definitions/VirtualSwitchConfigurationOverrides",
          "description": "Set virtualSwitch ConfigurationOverrides for cluster."
        },
        "overrideQosPolicy": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "default": false
        },
        "qosPolicyOverrides": {
          "$ref": "#/definitions/QosPolicyOverrides",
          "description": "Set QoS PolicyOverrides for cluster."
        },
        "overrideAdapterProperty": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "default": false
        },
        "adapterPropertyOverrides": {
          "$ref": "#/definitions/AdapterPropertyOverrides",
          "description": "Set Adapter PropertyOverrides for cluster."
        }
      }
    },
    "IpPools": {
      "type": "object",
      "description": "The dnsServers of a device.",
      "properties": {
        "startingAddress": {
          "type": "string",
          "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
        },
        "endingAddress": {
          "type": "string",
          "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
        }
      }
    },
    "Observability": {
      "type": "object",
      "description": "The Observability of AzureStackHCI Cluster.",
      "properties": {
        "streamingDataClient": {
          "type": "boolean",
          "description": "Enables telemetry data to be sent to Microsoft",
          "default": true
        },
        "euLocation": {
          "type": "boolean",
          "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
          "default": false
        },
        "episodicDataUpload": {
          "type": "boolean",
          "description": "When set to true, collects log data to facilitate quicker issue resolution.",
          "default": true
        }
      }
    },
    "OptionalServices": {
      "type": "object",
      "description": "The OptionalServices of AzureStackHCI Cluster.",
      "properties": {
        "customLocation": {
          "type": "string",
          "description": "The name of custom location."
        }
      }
    },
    "PhysicalNodes": {
      "type": "object",
      "description": "The PhysicalNodes of a cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource.",
      "readOnly": true,
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      }
    },
    "QosPolicyOverrides": {
      "type": "object",
      "description": "The QoSPolicyOverrides of a cluster.",
      "properties": {
        "priorityValue8021Action_Cluster": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "priorityValue8021Action_SMB": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "bandwidthPercentage_SMB": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        }
      }
    },
    "ReportedProperties": {
      "type": "object",
      "description": "The DeploymentStatus of AzureStackHCI Cluster.",
      "properties": {
        "validationStatus": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "validation status of AzureStackHCI Cluster Deployment.",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/DeploymentStatus",
          "description": "Deployment status of AzureStackHCI Cluster Deployment.",
          "readOnly": true
        }
      }
    },
    "ScaleUnits": {
      "type": "object",
      "description": "Scale units will contains list of deployment data",
      "properties": {
        "deploymentData": {
          "$ref": "#/definitions/DeploymentData",
          "description": "Deployment Data to deploy AzureStackHCI Cluster."
        }
      },
      "required": [
        "deploymentData"
      ],
      "externalDocs": {
        "description": "Deploy Azure Stack HCI using an existing configuration file",
        "url": "https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-tool-existing-file"
      }
    },
    "DeploymentSecuritySettings": {
      "type": "object",
      "description": "The SecuritySettings of AzureStackHCI Cluster.",
      "properties": {
        "hvciProtection": {
          "type": "boolean",
          "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
          "default": true
        },
        "drtmProtection": {
          "type": "boolean",
          "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
          "default": true
        },
        "driftControlEnforced": {
          "type": "boolean",
          "description": "When set to true, the security baseline is re-applied regularly.",
          "default": true
        },
        "credentialGuardEnforced": {
          "type": "boolean",
          "description": "When set to true, Credential Guard is enabled.",
          "default": false
        },
        "smbSigningEnforced": {
          "type": "boolean",
          "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
          "default": true
        },
        "smbClusterEncryption": {
          "type": "boolean",
          "description": "When set to true, cluster east-west traffic is encrypted.",
          "default": false
        },
        "sideChannelMitigationEnforced": {
          "type": "boolean",
          "description": "When set to true, all the side channel mitigations are enabled",
          "default": true
        },
        "bitlockerBootVolume": {
          "type": "boolean",
          "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
          "default": true
        },
        "bitlockerDataVolumes": {
          "type": "boolean",
          "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
          "default": true
        },
        "wdacEnforced": {
          "type": "boolean",
          "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
          "default": true
        }
      }
    },
    "DeploymentStep": {
      "type": "object",
      "description": "The Step of AzureStackHCI Cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of step.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of step.",
          "readOnly": true
        },
        "fullStepIndex": {
          "type": "string",
          "description": "FullStepIndex of step.",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "description": "Start time of step.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "description": "End time of step.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of step. Allowed values are 'Error', 'Success', 'InProgress'",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "description": "List of nested steps of AzureStackHCI Cluster Deployment.",
          "items": {
            "$ref": "#/definitions/DeploymentStep"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "exception": {
          "type": "array",
          "description": "List of exceptions in AzureStackHCI Cluster Deployment.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Storage": {
      "type": "object",
      "description": "The Storage config of AzureStackHCI Cluster.",
      "properties": {
        "configurationMode": {
          "type": "string",
          "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
          "default": "Express"
        }
      }
    },
    "StorageNetworks": {
      "type": "object",
      "description": "The StorageNetworks of a cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the storage network."
        },
        "networkAdapterName": {
          "type": "string",
          "description": "Name of the storage network adapter."
        },
        "vlanId": {
          "type": "string",
          "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. "
        }
      }
    },
    "ValidationStatus": {
      "type": "object",
      "description": "The ValidationStatus of AzureStackHCI Cluster.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of AzureStackHCI Cluster Deployment.",
          "readOnly": true
        },
        "steps": {
          "type": "array",
          "description": "List of steps of AzureStackHCI Cluster Deployment.",
          "items": {
            "$ref": "#/definitions/DeploymentStep"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "VirtualSwitchConfigurationOverrides": {
      "type": "object",
      "description": "The VirtualSwitchConfigurationOverrides of a cluster.",
      "properties": {
        "enableIov": {
          "type": "string",
          "description": "Enable IoV for Virtual Switch"
        },
        "loadBalancingAlgorithm": {
          "type": "string",
          "description": "Load Balancing Algorithm for Virtual Switch"
        }
      }
    },
    "InterfaceDNSSettings": {
      "type": "object",
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of DNS server IP Addresses for the interface"
        }
      }
    },
    "NetworkInterfaceProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfiguration"
          },
          "description": "IPConfigurations - A list of IPConfigurations of the network interface.",
          "x-ms-identifiers": []
        },
        "macAddress": {
          "type": "string",
          "description": "MacAddress - The MAC address of the network interface."
        },
        "dnsSettings": {
          "$ref": "#/definitions/InterfaceDNSSettings",
          "description": "DNS Settings for the interface"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the network interface.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "status": {
          "$ref": "#/definitions/NetworkInterfaceStatus"
        }
      },
      "description": "Properties under the network interface resource"
    },
    "NetworkInterfaceStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "NetworkInterface provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the network interface"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the network interface [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of network interfaces"
    },
    "IPConfiguration": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "description": "Name - The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "properties": {
          "type": "object",
          "properties": {
            "gateway": {
              "type": "string",
              "readOnly": true,
              "description": "Gateway for network interface"
            },
            "prefixLength": {
              "type": "string",
              "readOnly": true,
              "description": "prefixLength for network interface"
            },
            "privateIPAddress": {
              "type": "string",
              "description": "PrivateIPAddress - Private IP address of the IP configuration."
            },
            "subnet": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID - The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."
                }
              },
              "description": "Subnet - Name of Subnet bound to the IP configuration."
            }
          },
          "description": "InterfaceIPConfigurationPropertiesFormat properties of IP configuration."
        }
      },
      "description": "InterfaceIPConfiguration iPConfiguration in a network interface."
    },
    "NetworkInterfaces": {
      "type": "object",
      "description": "The network interface resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkInterfacesUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The network interface resource patch definition."
    },
    "NetworkInterfacesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaces"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DeviceConfiguration": {
      "type": "object",
      "description": "The device Configuration of a device.",
      "properties": {
        "nicDetails": {
          "type": "array",
          "description": "NIC Details of device",
          "items": {
            "$ref": "#/definitions/NicDetail"
          },
          "x-ms-identifiers": []
        },
        "deviceMetadata": {
          "type": "string",
          "description": "device metadata details."
        }
      }
    },
    "EdgeDevice": {
      "type": "object",
      "description": "Edge device resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeDeviceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EdgeDeviceListResult": {
      "type": "object",
      "description": "The response of a EdgeDevice list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeDevice items on this page",
          "items": {
            "$ref": "#/definitions/EdgeDevice"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeDeviceProperties": {
      "type": "object",
      "description": "Edge Device properties",
      "properties": {
        "deviceConfiguration": {
          "$ref": "#/definitions/DeviceConfiguration",
          "description": "Device Configuration"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of edgeDevice resource"
        }
      }
    },
    "NicDetail": {
      "type": "object",
      "description": "The NIC Detail of a device.",
      "properties": {
        "adapterName": {
          "type": "string",
          "description": "Adapter Name of NIC"
        },
        "interfaceDescription": {
          "type": "string",
          "description": "Interface Description of NIC"
        },
        "componentId": {
          "type": "string",
          "description": "Component Id of NIC"
        },
        "driverVersion": {
          "type": "string",
          "description": "Driver Version of NIC"
        },
        "ip4Address": {
          "type": "string",
          "description": "Subnet Mask of NIC"
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet Mask of NIC"
        },
        "defaultGateway": {
          "type": "string",
          "description": "Default Gateway of NIC"
        },
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers for NIC",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "defaultIsolationId": {
          "type": "string",
          "description": "Default Isolation of Management NIC"
        }
      },
      "required": [
        "adapterName"
      ]
    },
    "ValidateRequest": {
      "type": "object",
      "description": "The validate request for Edge Device.",
      "properties": {
        "edgeDeviceIds": {
          "type": "array",
          "description": "Node Ids against which, current node has to be validated.",
          "items": {
            "type": "string"
          }
        },
        "additionalInfo": {
          "type": "string",
          "description": "additional Info required for validation"
        }
      },
      "required": [
        "edgeDeviceIds"
      ]
    },
    "ValidateResponse": {
      "type": "object",
      "description": "An Accepted response with an Operation-Location header.",
      "properties": {
        "status": {
          "type": "string",
          "description": "edge device validation status",
          "readOnly": true
        }
      }
    },
    "ClusterList": {
      "description": "List of clusters.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "description": "Cluster details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Identity of Cluster resource",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "x-ms-client-flatten": true
        },
        "properties": {
          "description": "Cluster properties.",
          "$ref": "#/definitions/ClusterProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterPatch": {
      "description": "Cluster details to update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Identity of Cluster resource",
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "x-ms-client-flatten": true
        },
        "properties": {
          "description": "Cluster properties.",
          "$ref": "#/definitions/ClusterPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterProperties": {
      "description": "Cluster properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning",
            "NotSpecified",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Deleted",
            "PartiallySucceeded",
            "InProgress",
            "DisableInProgress",
            "Connected",
            "PartiallyConnected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "status": {
          "description": "Status of the cluster agent.",
          "type": "string",
          "enum": [
            "NotYetRegistered",
            "ConnectedRecently",
            "NotConnectedRecently",
            "Disconnected",
            "Error",
            "NotSpecified",
            "ValidationInProgress",
            "ValidationSuccess",
            "ValidationFailed",
            "DeploymentInProgress",
            "DeploymentFailed",
            "DeploymentSuccess"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          },
          "readOnly": true
        },
        "connectivityStatus": {
          "description": "Overall connectivity status for the cluster resource.",
          "type": "string",
          "enum": [
            "NotYetRegistered",
            "Connected",
            "NotConnectedRecently",
            "PartiallyConnected",
            "Disconnected",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ConnectivityStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "cloudId": {
          "description": "Unique, immutable resource id.",
          "type": "string",
          "readOnly": true
        },
        "cloudManagementEndpoint": {
          "description": "Endpoint configured for management from the Azure portal.",
          "type": "string"
        },
        "aadClientId": {
          "description": "App id of cluster AAD identity.",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Tenant id of cluster AAD identity.",
          "type": "string"
        },
        "aadApplicationObjectId": {
          "description": "Object id of cluster AAD identity.",
          "type": "string"
        },
        "aadServicePrincipalObjectId": {
          "description": "Id of cluster identity service principal.",
          "type": "string"
        },
        "softwareAssuranceProperties": {
          "description": "Software Assurance properties of the cluster.",
          "$ref": "#/definitions/SoftwareAssuranceProperties"
        },
        "desiredProperties": {
          "description": "Desired properties of the cluster.",
          "$ref": "#/definitions/ClusterDesiredProperties"
        },
        "reportedProperties": {
          "description": "Properties reported by cluster agent.",
          "$ref": "#/definitions/ClusterReportedProperties",
          "readOnly": true
        },
        "isolatedVmAttestationConfiguration": {
          "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
          "$ref": "#/definitions/IsolatedVmAttestationConfiguration",
          "readOnly": true
        },
        "trialDaysRemaining": {
          "description": "Number of days remaining in the trial period.",
          "type": "number",
          "readOnly": true
        },
        "billingModel": {
          "description": "Type of billing applied to the resource.",
          "type": "string",
          "readOnly": true
        },
        "registrationTimestamp": {
          "description": "First cluster sync timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastSyncTimestamp": {
          "description": "Most recent cluster sync timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastBillingTimestamp": {
          "description": "Most recent billing meter timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "serviceEndpoint": {
          "description": "Region specific DataPath Endpoint of the cluster.",
          "type": "string",
          "readOnly": true
        },
        "resourceProviderObjectId": {
          "description": "Object id of RP Service Principal",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterPatchProperties": {
      "description": "Cluster properties.",
      "type": "object",
      "properties": {
        "cloudManagementEndpoint": {
          "description": "Endpoint configured for management from the Azure portal",
          "type": "string"
        },
        "aadClientId": {
          "description": "App id of cluster AAD identity.",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Tenant id of cluster AAD identity.",
          "type": "string"
        },
        "desiredProperties": {
          "description": "Desired properties of the cluster.",
          "$ref": "#/definitions/ClusterDesiredProperties"
        }
      }
    },
    "SoftwareAssuranceProperties": {
      "description": "Software Assurance properties of the cluster.",
      "type": "object",
      "properties": {
        "softwareAssuranceStatus": {
          "description": "Status of the Software Assurance for the cluster.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "softwareAssuranceIntent": {
          "description": "Customer Intent for Software Assurance Benefit.",
          "type": "string",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceIntent",
            "modelAsString": true
          }
        },
        "lastUpdated": {
          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "IsolatedVmAttestationConfiguration": {
      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
      "type": "object",
      "properties": {
        "attestationResourceId": {
          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Attestation/attestationProviders",
                "scopes": [
                  "Tenant"
                ]
              }
            ]
          },
          "readOnly": true
        },
        "relyingPartyServiceEndpoint": {
          "description": "Region specific endpoint for relying party service.",
          "type": "string",
          "readOnly": true
        },
        "attestationServiceEndpoint": {
          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterDesiredProperties": {
      "description": "Desired properties of the cluster.",
      "type": "object",
      "properties": {
        "windowsServerSubscription": {
          "description": "Desired state of Windows Server Subscription.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WindowsServerSubscription",
            "modelAsString": true
          }
        },
        "diagnosticLevel": {
          "description": "Desired level of diagnostic data emitted by the cluster.",
          "type": "string",
          "enum": [
            "Off",
            "Basic",
            "Enhanced"
          ],
          "x-ms-enum": {
            "name": "DiagnosticLevel",
            "modelAsString": true
          }
        }
      }
    },
    "ClusterReportedProperties": {
      "description": "Properties reported by cluster agent.",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Name of the on-prem cluster connected to this resource.",
          "type": "string",
          "readOnly": true
        },
        "clusterId": {
          "description": "Unique id generated by the on-prem cluster.",
          "type": "string",
          "readOnly": true
        },
        "clusterVersion": {
          "description": "Version of the cluster software.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "List of nodes reported by the cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNode"
          },
          "readOnly": true
        },
        "lastUpdated": {
          "description": "Last time the cluster reported the data.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "imdsAttestation": {
          "description": "IMDS attestation status of the cluster.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ImdsAttestation",
            "modelAsString": true
          },
          "readOnly": true
        },
        "diagnosticLevel": {
          "description": "Level of diagnostic data emitted by the cluster.",
          "type": "string",
          "enum": [
            "Off",
            "Basic",
            "Enhanced"
          ],
          "x-ms-enum": {
            "name": "DiagnosticLevel",
            "modelAsString": true
          }
        },
        "supportedCapabilities": {
          "description": "Capabilities supported by the cluster.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "clusterType": {
          "description": "The node type of all the nodes of the cluster.",
          "type": "string",
          "enum": [
            "FirstParty",
            "ThirdParty"
          ],
          "x-ms-enum": {
            "name": "ClusterNodeType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "manufacturer": {
          "description": "The manufacturer of all the nodes of the cluster.",
          "type": "string",
          "readOnly": true
        },
        "oemActivation": {
          "description": "OEM activation status of the cluster.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "OemActivation",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "ClusterNode": {
      "description": "Cluster node details.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Id of the node in the cluster.",
          "type": "number",
          "readOnly": true
        },
        "windowsServerSubscription": {
          "description": "State of Windows Server Subscription.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WindowsServerSubscription",
            "modelAsString": true
          },
          "readOnly": true
        },
        "nodeType": {
          "description": "Type of the cluster node hardware.",
          "type": "string",
          "enum": [
            "FirstParty",
            "ThirdParty"
          ],
          "x-ms-enum": {
            "name": "ClusterNodeType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "ehcResourceId": {
          "description": "Edge Hardware Center Resource Id",
          "type": "string",
          "readOnly": true
        },
        "manufacturer": {
          "description": "Manufacturer of the cluster node hardware.",
          "type": "string",
          "readOnly": true
        },
        "model": {
          "description": "Model name of the cluster node hardware.",
          "type": "string",
          "readOnly": true
        },
        "osName": {
          "description": "Operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "osVersion": {
          "description": "Version of the operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "osDisplayVersion": {
          "description": "Display version of the operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "serialNumber": {
          "description": "Immutable id of the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "coreCount": {
          "description": "Number of physical cores on the cluster node.",
          "type": "number",
          "readOnly": true
        },
        "memoryInGiB": {
          "description": "Total available memory on the cluster node (in GiB).",
          "type": "number",
          "readOnly": true
        },
        "lastLicensingTimestamp": {
          "description": "Most recent licensing timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "oemActivation": {
          "description": "OEM activation status of the node.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "OemActivation",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "RawCertificateData": {
      "type": "object",
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UploadCertificateRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RawCertificateData"
        }
      },
      "additionalProperties": false
    },
    "SoftwareAssuranceChangeRequestProperties": {
      "type": "object",
      "properties": {
        "softwareAssuranceIntent": {
          "type": "string",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceIntent",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": false
    },
    "SoftwareAssuranceChangeRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SoftwareAssuranceChangeRequestProperties"
        }
      },
      "additionalProperties": false
    },
    "ClusterIdentityResponse": {
      "description": "Cluster Identity details.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Cluster identity properties.",
          "$ref": "#/definitions/ClusterIdentityResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterIdentityResponseProperties": {
      "type": "object",
      "properties": {
        "aadClientId": {
          "type": "string"
        },
        "aadTenantId": {
          "type": "string"
        },
        "aadServicePrincipalObjectId": {
          "type": "string"
        },
        "aadApplicationObjectId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "GalleryImageProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "containerId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AzureStackHCI/storageContainers"
              }
            ]
          },
          "description": "Storage ContainerID of the storage container to be used for gallery image"
        },
        "imagePath": {
          "type": "string",
          "x-ms-secret": true,
          "description": "location of the image the gallery image should be created from"
        },
        "osType": {
          "type": "string",
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          },
          "description": "Operating system type that the gallery image uses [Windows, Linux]"
        },
        "cloudInitDataSource": {
          "type": "string",
          "description": "Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]",
          "enum": [
            "NoCloud",
            "Azure"
          ],
          "x-ms-enum": {
            "name": "CloudInitDataSource",
            "modelAsString": true
          }
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine [V1, V2]",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "identifier": {
          "$ref": "#/definitions/GalleryImageIdentifier"
        },
        "version": {
          "$ref": "#/definitions/GalleryImageVersion"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the gallery image.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "status": {
          "$ref": "#/definitions/GalleryImageStatus"
        }
      },
      "required": [
        "osType"
      ],
      "description": "Properties under the gallery image resource"
    },
    "GalleryImageStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "GalleryImage provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the gallery image"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        },
        "downloadStatus": {
          "type": "object",
          "properties": {
            "downloadSizeInMB": {
              "type": "integer",
              "format": "int64",
              "description": "The downloaded sized of the image in MB"
            }
          },
          "description": "The download status of the gallery image"
        },
        "progressPercentage": {
          "type": "integer",
          "format": "int64",
          "description": "The progress of the operation in percentage"
        }
      },
      "description": "The observed state of gallery images"
    },
    "GalleryImageIdentifier": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "The name of the gallery image definition publisher."
        },
        "offer": {
          "type": "string",
          "description": "The name of the gallery image definition offer."
        },
        "sku": {
          "type": "string",
          "description": "The name of the gallery image definition SKU."
        }
      },
      "required": [
        "publisher",
        "offer",
        "sku"
      ],
      "description": "This is the gallery image definition identifier."
    },
    "GalleryImageVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This is the version of the gallery image."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GalleryImageVersionProperties"
        }
      },
      "description": "Specifies information about the gallery image version that you want to create or update."
    },
    "GalleryImageVersionProperties": {
      "type": "object",
      "properties": {
        "storageProfile": {
          "$ref": "#/definitions/GalleryImageVersionStorageProfile"
        }
      },
      "required": [
        "storageProfile"
      ],
      "description": "Describes the properties of a gallery image version."
    },
    "GalleryImageVersionStorageProfile": {
      "type": "object",
      "properties": {
        "osDiskImage": {
          "$ref": "#/definitions/GalleryOSDiskImage"
        }
      },
      "description": "This is the storage profile of a Gallery Image Version."
    },
    "GalleryOSDiskImage": {
      "allOf": [
        {
          "$ref": "#/definitions/GalleryDiskImage"
        }
      ],
      "description": "This is the OS disk image."
    },
    "GalleryDiskImage": {
      "type": "object",
      "properties": {
        "sizeInMB": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "This property indicates the size of the VHD to be created."
        }
      },
      "description": "This is the disk image base class."
    },
    "GalleryImages": {
      "type": "object",
      "description": "The gallery images resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GalleryImageProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "GalleryImagesUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The gallery images resource patch definition."
    },
    "GalleryImagesListResult": {
      "type": "object",
      "description": "List of gallery images.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GalleryImages"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results.",
          "readOnly": true
        }
      }
    },
    "VirtualMachineInstanceProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "hardwareProfile": {
          "type": "object",
          "properties": {
            "vmSize": {
              "type": "string",
              "enum": [
                "Default",
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS13_v2",
                "Standard_K8S_v1",
                "Standard_K8S2_v1",
                "Standard_K8S3_v1",
                "Standard_K8S4_v1",
                "Standard_NK6",
                "Standard_NK12",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_K8S5_v1",
                "Custom"
              ],
              "default": "Default",
              "x-ms-enum": {
                "name": "VmSizeEnum",
                "modelAsString": true
              }
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "number of processors for the virtual machine instance"
            },
            "memoryMB": {
              "type": "integer",
              "format": "int64",
              "description": "RAM in MB for the virtual machine instance"
            },
            "dynamicMemoryConfig": {
              "type": "object",
              "properties": {
                "maximumMemoryMB": {
                  "type": "integer",
                  "format": "int64"
                },
                "minimumMemoryMB": {
                  "type": "integer",
                  "format": "int64"
                },
                "targetMemoryBuffer": {
                  "type": "integer",
                  "description": "Defines the amount of extra memory that should be reserved for a virtual machine instance at runtime, as a percentage of the total memory that the virtual machine instance is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.",
                  "format": "int32"
                }
              }
            }
          },
          "description": "HardwareProfile - Specifies the hardware settings for the virtual machine instance."
        },
        "networkProfile": {
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID - Resource Id of the network interface"
                  }
                }
              },
              "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance"
            }
          },
          "description": "NetworkProfile - describes the network configuration the virtual machine instance"
        },
        "osProfile": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string",
              "x-ms-secret": true,
              "description": "AdminPassword - admin password",
              "x-ms-mutability": [
                "create"
              ]
            },
            "adminUsername": {
              "type": "string",
              "description": "AdminUsername - admin username"
            },
            "computerName": {
              "type": "string",
              "description": "ComputerName - name of the compute"
            },
            "linuxConfiguration": {
              "type": "object",
              "properties": {
                "disablePasswordAuthentication": {
                  "type": "boolean",
                  "description": "DisablePasswordAuthentication - whether password authentication should be disabled"
                },
                "ssh": {
                  "$ref": "#/definitions/SshConfiguration",
                  "description": "Specifies the ssh key configuration for a Linux OS."
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "default": true,
                  "description": "Used\u202fto indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process."
                },
                "provisionVMConfigAgent": {
                  "type": "boolean",
                  "default": true,
                  "description": "Used\u202fto indicate whether the VM Config Agent should be installed during the virtual machine creation process."
                }
              },
              "description": "LinuxConfiguration - linux specific configuration values for the virtual machine instance"
            },
            "windowsConfiguration": {
              "type": "object",
              "properties": {
                "enableAutomaticUpdates": {
                  "type": "boolean",
                  "description": "Whether to EnableAutomaticUpdates on the machine"
                },
                "ssh": {
                  "$ref": "#/definitions/SshConfiguration",
                  "description": "Specifies the ssh key configuration for Windows OS."
                },
                "timeZone": {
                  "type": "string",
                  "description": "TimeZone for the virtual machine instance"
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "default": true,
                  "description": "Used\u202fto indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process."
                },
                "provisionVMConfigAgent": {
                  "type": "boolean",
                  "default": true,
                  "description": "Used\u202fto indicate whether the VM Config Agent should be installed during the virtual machine creation process."
                }
              },
              "description": "Windows Configuration for the virtual machine instance "
            }
          },
          "description": "OsProfile - describes the configuration of the operating system and sets login data"
        },
        "securityProfile": {
          "type": "object",
          "properties": {
            "enableTPM": {
              "type": "boolean",
              "default": false
            },
            "uefiSettings": {
              "type": "object",
              "properties": {
                "secureBootEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Specifies whether secure boot should be enabled on the virtual machine instance."
                }
              }
            },
            "securityType": {
              "type": "string",
              "description": "Specifies the SecurityType of the virtual machine. EnableTPM and SecureBootEnabled must be set to true for SecurityType to function.",
              "enum": [
                "TrustedLaunch",
                "ConfidentialVM"
              ],
              "x-ms-enum": {
                "name": "SecurityTypes",
                "modelAsString": true
              }
            }
          },
          "description": "SecurityProfile - Specifies the security settings for the virtual machine instance."
        },
        "storageProfile": {
          "type": "object",
          "properties": {
            "dataDisks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Resource ID of the data disk"
                  }
                }
              },
              "description": "adds data disks to the virtual machine instance"
            },
            "imageReference": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "description": "Resource ID of the image"
                }
              },
              "description": "Which Image to use for the virtual machine instance"
            },
            "osDisk": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource ID of the OS disk"
                },
                "osType": {
                  "type": "string",
                  "description": "This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**",
                  "enum": [
                    "Linux",
                    "Windows"
                  ],
                  "x-ms-enum": {
                    "name": "OperatingSystemTypes",
                    "modelAsString": false
                  }
                }
              },
              "description": "VHD to attach as OS disk"
            },
            "vmConfigStoragePathId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.AzureStackHCI/storageContainers"
                  }
                ]
              },
              "description": "Id of the storage container that hosts the VM configuration file"
            }
          },
          "description": "StorageProfile - contains information about the disks and storage information for the virtual machine instance"
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "$ref": "#/definitions/HttpProxyConfiguration"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the virtual machine instance.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "instanceView": {
          "$ref": "#/definitions/VirtualMachineInstanceView",
          "readOnly": true,
          "description": "The virtual machine instance view."
        },
        "status": {
          "$ref": "#/definitions/VirtualMachineInstanceStatus"
        },
        "guestAgentInstallStatus": {
          "description": "Guest agent install status.",
          "$ref": "#/definitions/GuestAgentInstallStatus"
        },
        "vmId": {
          "description": "Unique identifier for the vm resource.",
          "type": "string",
          "readOnly": true
        },
        "resourceUid": {
          "description": "Unique identifier defined by ARC to identify the guest of the VM.",
          "type": "string"
        }
      },
      "description": "Properties under the virtual machine instance resource"
    },
    "SshPublicKey": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"
        },
        "keyData": {
          "type": "string",
          "description": "SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."
        }
      },
      "description": "Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed."
    },
    "SshConfiguration": {
      "type": "object",
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          },
          "x-ms-identifiers": [
            "path"
          ],
          "description": "The list of SSH public keys used to authenticate with linux based VMs."
        }
      },
      "description": "SSH configuration for Linux based VMs running on Azure"
    },
    "VirtualMachineInstanceStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "VirtualMachine provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "powerState": {
          "type": "string",
          "description": "The power state of the virtual machine instance",
          "enum": [
            "Deallocated",
            "Deallocating",
            "Running",
            "Starting",
            "Stopped",
            "Stopping",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PowerStateEnum",
            "modelAsString": true
          }
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the virtual machine instance"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the virtual machine instance [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of virtual machine instances"
    },
    "VirtualMachineInstance": {
      "type": "object",
      "x-ms-client-flatten": true,
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualMachineInstanceProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "The virtual machine instance resource definition."
    },
    "VirtualMachineInstanceView": {
      "type": "object",
      "properties": {
        "vmAgent": {
          "$ref": "#/definitions/VirtualMachineConfigAgentInstanceView",
          "description": "The VM Config Agent running on the virtual machine."
        }
      },
      "description": "The instance view of a virtual machine."
    },
    "VirtualMachineConfigAgentInstanceView": {
      "type": "object",
      "properties": {
        "vmConfigAgentVersion": {
          "type": "string",
          "description": "The VM Config Agent full version."
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "x-ms-identifiers": [],
          "description": "The resource status information."
        }
      },
      "description": "The instance view of the VM Config Agent running on the virtual machine."
    },
    "InstanceViewStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The status code."
        },
        "level": {
          "type": "string",
          "description": "The level code.",
          "enum": [
            "Info",
            "Warning",
            "Error"
          ],
          "x-ms-enum": {
            "name": "StatusLevelTypes",
            "modelAsString": true
          }
        },
        "displayStatus": {
          "type": "string",
          "description": "The short localizable label for the status."
        },
        "message": {
          "type": "string",
          "description": "The detailed status message, including for alerts and error messages."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the status."
        }
      },
      "description": "Instance view status."
    },
    "HardwareProfileUpdate": {
      "type": "object",
      "properties": {
        "vmSize": {
          "type": "string",
          "enum": [
            "Default",
            "Standard_A2_v2",
            "Standard_A4_v2",
            "Standard_D2s_v3",
            "Standard_D4s_v3",
            "Standard_D8s_v3",
            "Standard_D16s_v3",
            "Standard_D32s_v3",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS13_v2",
            "Standard_K8S_v1",
            "Standard_K8S2_v1",
            "Standard_K8S3_v1",
            "Standard_K8S4_v1",
            "Standard_NK6",
            "Standard_NK12",
            "Standard_NV6",
            "Standard_NV12",
            "Standard_K8S5_v1",
            "Custom"
          ],
          "default": "Default",
          "x-ms-enum": {
            "name": "VmSizeEnum",
            "modelAsString": true
          }
        },
        "processors": {
          "type": "integer",
          "format": "int32",
          "description": "number of processors for the virtual machine instance"
        },
        "memoryMB": {
          "type": "integer",
          "format": "int64",
          "description": "RAM in MB for the virtual machine instance"
        }
      },
      "description": "HardwareProfile - Specifies the hardware settings for the virtual machine instance."
    },
    "NetworkProfileUpdate": {
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID - Resource ID of the network interface"
              }
            }
          },
          "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance"
        }
      },
      "description": "NetworkProfile - describes the network update configuration the virtual machine instance"
    },
    "StorageProfileUpdate": {
      "type": "object",
      "properties": {
        "dataDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "description": "adds data disks to the virtual machine instance for the update call"
        }
      }
    },
    "OsProfileUpdate": {
      "type": "object",
      "properties": {
        "computerName": {
          "type": "string",
          "description": "ComputerName - name of the computer"
        },
        "linuxConfiguration": {
          "type": "object",
          "properties": {
            "provisionVMAgent": {
              "type": "boolean",
              "description": "Used\u202fto indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process."
            },
            "provisionVMConfigAgent": {
              "type": "boolean",
              "description": "Used\u202fto indicate whether the VM Config Agent should be installed during the virtual machine creation process."
            }
          }
        },
        "windowsConfiguration": {
          "type": "object",
          "properties": {
            "provisionVMAgent": {
              "type": "boolean",
              "description": "Used\u202fto indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process."
            },
            "provisionVMConfigAgent": {
              "type": "boolean",
              "description": "Used\u202fto indicate whether the VM Config Agent should be installed during the virtual machine creation process."
            }
          }
        }
      },
      "description": "OsProfile - describes the update configuration of the operating system"
    },
    "VirtualMachineInstanceUpdateProperties": {
      "description": "Defines the resource properties for the update.",
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfileUpdate"
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfileUpdate"
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfileUpdate"
        },
        "osProfile": {
          "$ref": "#/definitions/OsProfileUpdate"
        }
      }
    },
    "VirtualMachineInstanceUpdateRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualMachineInstanceUpdateProperties"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity"
        }
      },
      "description": "The virtual machine instance resource patch definition."
    },
    "VirtualMachineInstanceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineInstance"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "GuestAgentInstallStatus": {
      "description": "Defines the status of a guest agent installation.",
      "type": "object",
      "properties": {
        "vmUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the VM's unique SMBIOS ID."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The installation status of the hybrid machine agent installation.",
          "enum": [
            "Succeeded",
            "InProgress",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "StatusTypes",
            "modelAsString": true
          }
        },
        "lastStatusChange": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time of the last status change."
        },
        "agentVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The hybrid machine agent full version."
        },
        "errorDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
          },
          "x-ms-identifiers": [],
          "description": "Details about the error state."
        }
      }
    },
    "HybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridIdentityMetadata"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/HybridIdentityMetadataProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "resourceUid": {
          "description": "The unique identifier for the resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "The Public Key.",
          "type": "string"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GuestAgentList": {
      "type": "object",
      "description": "List of GuestAgent.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of GuestAgent.",
          "type": "string"
        },
        "value": {
          "description": "Array of GuestAgent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestAgent"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "GuestAgent": {
      "description": "Defines the GuestAgent.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/GuestAgentProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "ProvisioningAction": {
      "description": "Defines the different types of operations for guest agent.",
      "enum": [
        "install",
        "uninstall",
        "repair"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ProvisioningAction"
      }
    },
    "GuestCredential": {
      "description": "Username / Password Credentials to connect to guest.",
      "type": "object",
      "properties": {
        "username": {
          "description": "The username to connect with the guest.",
          "type": "string"
        },
        "password": {
          "description": "The password to connect with the guest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "GuestAgentProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "$ref": "#/definitions/GuestCredential"
        },
        "provisioningAction": {
          "description": "The guest agent provisioning action.",
          "$ref": "#/definitions/ProvisioningAction",
          "type": "string"
        },
        "status": {
          "description": "The guest agent status.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpProxyConfiguration": {
      "description": "HTTP Proxy configuration for the VM.",
      "type": "object",
      "properties": {
        "httpProxy": {
          "type": "string",
          "x-ms-secret": true,
          "description": "The HTTP proxy server endpoint to use."
        },
        "httpsProxy": {
          "type": "string",
          "x-ms-secret": true,
          "description": "The HTTPS proxy server endpoint to use."
        },
        "noProxy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The endpoints that should not go through proxy."
        },
        "trustedCa": {
          "type": "string",
          "description": "Alternative CA cert to use for connecting to proxy servers."
        }
      }
    },
    "StorageContainerProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the storage container on the disk"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the storage container.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "status": {
          "$ref": "#/definitions/StorageContainerStatus"
        }
      },
      "required": [
        "path"
      ],
      "description": "Properties under the storage container resource"
    },
    "StorageContainerStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "StorageContainer provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "availableSizeMB": {
          "type": "integer",
          "format": "int64",
          "description": "Amount of space available on the disk in MB"
        },
        "containerSizeMB": {
          "type": "integer",
          "format": "int64",
          "description": "Total size of the disk in MB"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the storage container"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the storage container [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of storage containers"
    },
    "StorageContainers": {
      "type": "object",
      "description": "The storage container resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageContainerProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StorageContainersUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The storage container resource patch definition."
    },
    "StorageContainersListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageContainers"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "MarketplaceGalleryImageProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "containerId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AzureStackHCI/storageContainers"
              }
            ]
          },
          "description": "Storage ContainerID of the storage container to be used for marketplace gallery image"
        },
        "osType": {
          "type": "string",
          "enum": [
            "Windows",
            "Linux"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemTypes",
            "modelAsString": false
          },
          "description": "Operating system type that the gallery image uses [Windows, Linux]"
        },
        "cloudInitDataSource": {
          "type": "string",
          "description": "Datasource for the gallery image when provisioning with cloud-init [NoCloud, Azure]",
          "enum": [
            "NoCloud",
            "Azure"
          ],
          "x-ms-enum": {
            "name": "CloudInitDataSource",
            "modelAsString": true
          }
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine [V1, V2]",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "identifier": {
          "$ref": "#/definitions/GalleryImageIdentifier"
        },
        "version": {
          "$ref": "#/definitions/GalleryImageVersion"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the marketplace gallery image.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "status": {
          "$ref": "#/definitions/MarketplaceGalleryImageStatus"
        }
      },
      "required": [
        "osType"
      ],
      "description": "Properties under the marketplace gallery image resource"
    },
    "MarketplaceGalleryImageStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "MarketplaceGalleryImage provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the gallery image"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the gallery image [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        },
        "downloadStatus": {
          "type": "object",
          "properties": {
            "downloadSizeInMB": {
              "type": "integer",
              "format": "int64",
              "description": "The downloaded sized of the image in MB"
            }
          },
          "description": "The download status of the gallery image"
        },
        "progressPercentage": {
          "type": "integer",
          "format": "int64",
          "description": "The progress of the operation in percentage"
        }
      },
      "description": "The observed state of marketplace gallery images"
    },
    "MarketplaceGalleryImages": {
      "type": "object",
      "description": "The marketplace gallery image resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MarketplaceGalleryImageProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MarketplaceGalleryImagesUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The marketplace gallery image resource patch definition."
    },
    "MarketplaceGalleryImagesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceGalleryImages"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ComplianceAssignmentType": {
      "type": "string",
      "description": "Represents the compliance assignment type of a resource.",
      "enum": [
        "Audit",
        "ApplyAndAutoCorrect"
      ],
      "x-ms-enum": {
        "name": "ComplianceAssignmentType",
        "modelAsString": true,
        "values": [
          {
            "name": "Audit",
            "value": "Audit",
            "description": "Report on the state of the machine, but don't make changes."
          },
          {
            "name": "ApplyAndAutoCorrect",
            "value": "ApplyAndAutoCorrect",
            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
          }
        ]
      }
    },
    "ComplianceStatus": {
      "type": "string",
      "description": "Represents the compliance status of a resource.",
      "enum": [
        "Compliant",
        "NonCompliant",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "ComplianceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Compliant",
            "value": "Compliant",
            "description": "The resource is compliant"
          },
          {
            "name": "NonCompliant",
            "value": "NonCompliant",
            "description": "The resource is non-compliant"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The resource compliance status is pending"
          }
        ]
      }
    },
    "SecurityComplianceStatus": {
      "type": "object",
      "description": "Security compliance properties of the resource",
      "properties": {
        "securedCoreCompliance": {
          "$ref": "#/definitions/ComplianceStatus",
          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
          "readOnly": true
        },
        "wdacCompliance": {
          "$ref": "#/definitions/ComplianceStatus",
          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
          "readOnly": true
        },
        "dataAtRestEncrypted": {
          "$ref": "#/definitions/ComplianceStatus",
          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
          "readOnly": true
        },
        "dataInTransitProtected": {
          "$ref": "#/definitions/ComplianceStatus",
          "description": "Indicates whether HCI cluster has data in-transit protection.",
          "readOnly": true
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Time in UTC when compliance status was last updated.",
          "readOnly": true
        }
      }
    },
    "SecurityProperties": {
      "type": "object",
      "description": "Security properties of the resource",
      "properties": {
        "securedCoreComplianceAssignment": {
          "$ref": "#/definitions/ComplianceAssignmentType",
          "description": "Secured Core Compliance Assignment",
          "default": "Audit"
        },
        "securityComplianceStatus": {
          "$ref": "#/definitions/SecurityComplianceStatus",
          "description": "Security Compliance Status",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      }
    },
    "SecuritySetting": {
      "type": "object",
      "description": "Security settings proxy resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SecuritySettingListResult": {
      "type": "object",
      "description": "The response of a SecuritySetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SecuritySetting items on this page",
          "items": {
            "$ref": "#/definitions/SecuritySetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The type of extendedLocation.",
      "enum": [
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true
      }
    },
    "ExtendedLocation": {
      "description": "The complex type of the extended location.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationType",
          "description": "The type of the extended location."
        }
      }
    },
    "SkuList": {
      "description": "List of SKU proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of SKU proxy resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sku"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuProperties": {
      "description": "SKU properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Identifier of the Publisher for the offer"
        },
        "offerId": {
          "type": "string",
          "description": "Identifier of the Offer for the sku"
        },
        "content": {
          "type": "string",
          "description": "JSON serialized catalog content of the sku offer"
        },
        "contentVersion": {
          "type": "string",
          "description": "The API version of the catalog service used to serve the catalog content"
        },
        "skuMappings": {
          "type": "array",
          "description": "Array of SKU mappings",
          "items": {
            "$ref": "#/definitions/SkuMappings"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SkuMappings": {
      "description": "SKU Mapping details.",
      "type": "object",
      "properties": {
        "catalogPlanId": {
          "type": "string",
          "description": "Identifier of the CatalogPlan for the sku"
        },
        "marketplaceSkuId": {
          "type": "string",
          "description": "Identifier for the sku"
        },
        "marketplaceSkuVersions": {
          "type": "array",
          "description": "Array of SKU versions available",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateList": {
      "description": "List of Updates",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Updates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Update"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdatePrerequisite": {
      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
      "type": "object",
      "properties": {
        "updateType": {
          "description": "Updatable component type.",
          "type": "string"
        },
        "version": {
          "description": "Version of the prerequisite.",
          "type": "string"
        },
        "packageName": {
          "description": "Friendly name of the prerequisite.",
          "type": "string"
        }
      }
    },
    "Update": {
      "description": "Update details",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Update properties",
          "type": "object",
          "$ref": "#/definitions/UpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateProperties": {
      "description": "Details of a singular Update in HCI Cluster",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Updates proxy resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "installedDate": {
          "description": "Date that the update was installed.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the update.",
          "type": "string"
        },
        "state": {
          "description": "State of the update as it relates to this stamp.",
          "type": "string",
          "enum": [
            "HasPrerequisite",
            "Obsolete",
            "Ready",
            "NotApplicableBecauseAnotherUpdateIsInProgress",
            "Preparing",
            "Installing",
            "Installed",
            "PreparationFailed",
            "InstallationFailed",
            "Invalid",
            "Recalled",
            "Downloading",
            "DownloadFailed",
            "HealthChecking",
            "HealthCheckFailed",
            "ReadyToInstall",
            "ScanInProgress",
            "ScanFailed",
            "AdditionalContentRequired"
          ],
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true
          }
        },
        "prerequisites": {
          "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatePrerequisite"
          },
          "x-ms-identifiers": [
            "packageName"
          ]
        },
        "componentVersions": {
          "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageVersionInfo"
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "version"
          ]
        },
        "rebootRequired": {
          "type": "object",
          "$ref": "#/definitions/RebootRequirement",
          "x-ms-client-flatten": true
        },
        "healthState": {
          "description": "Overall health state for update-specific health checks.",
          "type": "object",
          "$ref": "#/definitions/HealthState",
          "x-ms-client-flatten": true
        },
        "healthCheckResult": {
          "description": "An array of PrecheckResult objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrecheckResult"
          },
          "x-ms-client-flatten": true
        },
        "healthCheckDate": {
          "description": "Last time the package-specific checks were run.",
          "type": "string",
          "format": "date-time"
        },
        "packagePath": {
          "description": "Path where the update package is available.",
          "type": "string"
        },
        "packageSizeInMb": {
          "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
          "type": "number"
        },
        "displayName": {
          "description": "Display name of the Update",
          "type": "string"
        },
        "version": {
          "description": "Version of the update.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher of the update package.",
          "type": "string"
        },
        "releaseLink": {
          "description": "Link to release notes for the update.",
          "type": "string"
        },
        "availabilityType": {
          "description": "Indicates the way the update content can be downloaded.",
          "type": "string",
          "enum": [
            "Local",
            "Online",
            "Notify"
          ],
          "x-ms-enum": {
            "name": "availabilityType",
            "modelAsString": true
          }
        },
        "packageType": {
          "description": "Customer-visible type of the update.",
          "type": "string"
        },
        "additionalProperties": {
          "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
          "type": "string"
        },
        "updateStateProperties": {
          "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
          "type": "object",
          "$ref": "#/definitions/UpdateStateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateStateProperties": {
      "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
      "type": "object",
      "properties": {
        "progressPercentage": {
          "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
          "type": "number"
        },
        "notifyMessage": {
          "description": "Brief message with instructions for updates of AvailabilityType Notify.",
          "type": "string"
        }
      }
    },
    "PackageVersionInfo": {
      "description": "Current version of each updatable component.",
      "type": "object",
      "properties": {
        "packageType": {
          "description": "Package type",
          "type": "string"
        },
        "version": {
          "description": "Package version",
          "type": "string"
        },
        "lastUpdated": {
          "description": "Last time this component was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RebootRequirement": {
      "type": "string",
      "enum": [
        "Unknown",
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "RebootRequirement",
        "modelAsString": true
      }
    },
    "HealthState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Success",
        "Failure",
        "Warning",
        "Error",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true
      }
    },
    "PrecheckResult": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
          "type": "string"
        },
        "displayName": {
          "description": "The health check DisplayName localized of the individual test executed.",
          "type": "string"
        },
        "tags": {
          "description": "Key-value pairs that allow grouping/filtering individual tests.",
          "type": "object",
          "properties": {
            "key": {
              "description": "Key that allow grouping/filtering individual tests.",
              "type": "string"
            },
            "value": {
              "description": "Value of the key that allow grouping/filtering individual tests.",
              "type": "string"
            }
          }
        },
        "title": {
          "description": "User-facing name; one or more sentences indicating the direct issue.",
          "type": "string"
        },
        "status": {
          "description": "The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or failed.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "severity": {
          "description": "Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is the only update-blocking severity.",
          "type": "string",
          "enum": [
            "Critical",
            "Warning",
            "Informational",
            "Hidden"
          ],
          "x-ms-enum": {
            "name": "severity",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
          "type": "string"
        },
        "remediation": {
          "description": "Set of steps that can be taken to resolve the issue found.",
          "type": "string"
        },
        "targetResourceID": {
          "description": "The unique identifier for the affected resource (such as a node or drive).",
          "type": "string"
        },
        "targetResourceName": {
          "description": "The name of the affected resource.",
          "type": "string"
        },
        "timestamp": {
          "description": "The Time in which the HealthCheck was called.",
          "type": "string",
          "format": "date-time"
        },
        "additionalData": {
          "description": "Property bag of key value pairs for additional information.",
          "type": "string"
        },
        "healthCheckSource": {
          "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
          "type": "string"
        }
      }
    },
    "VirtualHardDiskProperties": {
      "type": "object",
      "properties": {
        "blockSizeBytes": {
          "type": "integer",
          "format": "int32"
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the disk in GB"
        },
        "dynamic": {
          "type": "boolean",
          "description": "Boolean for enabling dynamic sizing on the virtual hard disk"
        },
        "logicalSectorBytes": {
          "type": "integer",
          "format": "int32"
        },
        "physicalSectorBytes": {
          "type": "integer",
          "format": "int32"
        },
        "hyperVGeneration": {
          "type": "string",
          "description": "The hypervisor generation of the Virtual Machine [V1, V2]",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "HyperVGeneration",
            "modelAsString": true
          }
        },
        "diskFileFormat": {
          "type": "string",
          "description": "The format of the actual VHD file [vhd, vhdx]",
          "enum": [
            "vhdx",
            "vhd"
          ],
          "x-ms-enum": {
            "name": "DiskFileFormat",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the virtual hard disk.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "containerId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AzureStackHCI/storageContainers"
              }
            ]
          },
          "description": "Storage ContainerID of the storage container to be used for VHD"
        },
        "status": {
          "$ref": "#/definitions/VirtualHardDiskStatus"
        }
      },
      "description": "Properties under the virtual hard disk resource"
    },
    "VirtualHardDiskStatus": {
      "type": "object",
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "VirtualHardDisk provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "provisioningStatus": {
          "type": "object",
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the virtual hard disk"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of virtual hard disks"
    },
    "VirtualHardDisks": {
      "type": "object",
      "description": "The virtual hard disk resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualHardDiskProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "VirtualHardDisksUpdateRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The virtual hard disk resource patch definition."
    },
    "VirtualHardDisksListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHardDisks"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ArcSettingList": {
      "description": "List of ArcSetting proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ArcSetting proxy resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcSetting"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArcSettingsPatch": {
      "description": "ArcSetting details to update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "ArcSettings properties.",
          "$ref": "#/definitions/ArcSettingsPatchProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ArcSettingsPatchProperties": {
      "description": "ArcSettings properties.",
      "type": "object",
      "properties": {
        "connectivityProperties": {
          "description": "contains connectivity related configuration for ARC resources",
          "type": "object",
          "items": {
            "$ref": "#/definitions/ArcConnectivityProperties"
          }
        }
      }
    },
    "ArcSetting": {
      "description": "ArcSetting details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ArcSetting properties.",
          "$ref": "#/definitions/ArcSettingProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ArcSettingProperties": {
      "description": "ArcSetting properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the ArcSetting proxy resource.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Failed",
            "Canceled",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "arcInstanceResourceGroup": {
          "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
          "type": "string"
        },
        "arcApplicationClientId": {
          "description": "App id of arc AAD identity.",
          "type": "string"
        },
        "arcApplicationTenantId": {
          "description": "Tenant id of arc AAD identity.",
          "type": "string"
        },
        "arcServicePrincipalObjectId": {
          "description": "Object id of arc AAD service principal.",
          "type": "string"
        },
        "arcApplicationObjectId": {
          "description": "Object id of arc AAD identity.",
          "type": "string"
        },
        "aggregateState": {
          "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "ArcSettingAggregateState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "perNodeDetails": {
          "description": "State of Arc agent in each of the nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerNodeState"
          },
          "readOnly": true
        },
        "connectivityProperties": {
          "description": "contains connectivity related configuration for ARC resources",
          "type": "object",
          "items": {
            "$ref": "#/definitions/ArcConnectivityProperties"
          }
        },
        "defaultExtensions": {
          "description": "Properties for each of the default extensions category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefaultExtensionDetails"
          },
          "x-ms-identifiers": [
            "category"
          ],
          "readOnly": true
        }
      }
    },
    "PerNodeState": {
      "description": "Status of Arc agent for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the Node in HCI Cluster"
        },
        "arcInstance": {
          "description": "Fully qualified resource ID for the Arc agent of this node.",
          "type": "string",
          "readOnly": true
        },
        "arcNodeServicePrincipalObjectId": {
          "description": "The service principal id of the arc for server node",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "State of Arc agent in this node.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "NodeArcState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "DefaultExtensionDetails": {
      "description": "Properties for a particular default extension category.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Default extension category",
          "type": "string",
          "readOnly": true
        },
        "consentTime": {
          "description": "Consent time for extension category",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ArcConnectivityProperties": {
      "description": "Connectivity related configuration required by arc server.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True indicates ARC connectivity is enabled"
        },
        "serviceConfigurations": {
          "type": "array",
          "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
          "items": {
            "$ref": "#/definitions/ServiceConfiguration"
          },
          "x-ms-identifiers": [
            "serviceName"
          ]
        }
      },
      "additionalProperties": false
    },
    "ServiceConfiguration": {
      "type": "object",
      "description": "Service configuration details",
      "required": [
        "serviceName",
        "port"
      ],
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Name of the service.",
          "enum": [
            "WAC"
          ],
          "x-ms-enum": {
            "name": "serviceName",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port on which service is enabled."
        }
      }
    },
    "PasswordCredential": {
      "type": "object",
      "properties": {
        "secretText": {
          "type": "string"
        },
        "keyId": {
          "type": "string"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "ArcIdentityResponse": {
      "description": "ArcIdentity details.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "ArcIdentity properties.",
          "$ref": "#/definitions/ArcIdentityResponseProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ArcIdentityResponseProperties": {
      "type": "object",
      "properties": {
        "arcApplicationClientId": {
          "type": "string"
        },
        "arcApplicationTenantId": {
          "type": "string"
        },
        "arcServicePrincipalObjectId": {
          "type": "string"
        },
        "arcApplicationObjectId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "OfferList": {
      "description": "List of Offer proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Offer proxy resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Offer"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Offer": {
      "description": "Offer details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Offer properties.",
          "$ref": "#/definitions/OfferProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "OfferProperties": {
      "description": "Publisher properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Identifier of the Publisher for the offer"
        },
        "content": {
          "type": "string",
          "description": "JSON serialized catalog content of the offer"
        },
        "contentVersion": {
          "type": "string",
          "description": "The API version of the catalog service used to serve the catalog content"
        },
        "skuMappings": {
          "type": "array",
          "description": "Array of SKU mappings",
          "items": {
            "$ref": "#/definitions/SkuMappings"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UpdateSummariesList": {
      "description": "List of Update Summaries",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Update Summaries",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateSummaries"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateSummaries": {
      "description": "Get the update summaries for the cluster",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Update summaries properties",
          "type": "object",
          "$ref": "#/definitions/UpdateSummariesProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateSummariesProperties": {
      "description": "Properties of Update summaries",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the UpdateSummaries proxy resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "oemFamily": {
          "description": "OEM family name.",
          "type": "string"
        },
        "hardwareModel": {
          "description": "Name of the hardware model.",
          "type": "string"
        },
        "packageVersions": {
          "description": "Current version of each updatable component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageVersionInfo"
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "version"
          ]
        },
        "currentVersion": {
          "description": "Current Solution Bundle version of the stamp.",
          "type": "string"
        },
        "lastUpdated": {
          "description": "Last time an update installation completed successfully.",
          "type": "string",
          "format": "date-time"
        },
        "lastChecked": {
          "description": "Last time the update service successfully checked for updates",
          "type": "string",
          "format": "date-time"
        },
        "healthState": {
          "description": "Overall health state for update-specific health checks.",
          "type": "object",
          "$ref": "#/definitions/HealthState",
          "x-ms-client-flatten": true
        },
        "healthCheckResult": {
          "description": "An array of pre-check result objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrecheckResult"
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "healthCheckDate": {
          "description": "Last time the package-specific checks were run.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "Overall update state of the stamp.",
          "type": "string",
          "enum": [
            "Unknown",
            "AppliedSuccessfully",
            "UpdateAvailable",
            "UpdateInProgress",
            "UpdateFailed",
            "NeedsAttention",
            "PreparationInProgress",
            "PreparationFailed"
          ],
          "x-ms-enum": {
            "name": "updateSummariesPropertiesState",
            "modelAsString": true
          }
        }
      }
    },
    "UpdateRunList": {
      "description": "List of Update runs",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Update runs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateRun"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateRun": {
      "description": "Details of an Update run",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Describes Update Run Properties.",
          "$ref": "#/definitions/UpdateRunProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateRunProperties": {
      "description": "Details of an Update run",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the UpdateRuns proxy resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "timeStarted": {
          "description": "Timestamp of the update run was started.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "description": "Timestamp of the most recently completed step in the update run.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the update run.",
          "type": "string"
        },
        "state": {
          "description": "State of the update run.",
          "type": "string",
          "enum": [
            "Unknown",
            "Succeeded",
            "InProgress",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "updateRunPropertiesState",
            "modelAsString": true
          }
        },
        "progress": {
          "description": "Progress representation of the update run steps.",
          "$ref": "#/definitions/Step",
          "x-ms-client-flatten": true
        }
      }
    },
    "Step": {
      "description": "Progress representation of the update run steps.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the step.",
          "type": "string"
        },
        "description": {
          "description": "More detailed description of the step.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message, specified if the step is in a failed state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.",
          "type": "string"
        },
        "startTimeUtc": {
          "description": "When the step started, or empty if it has not started executing.",
          "type": "string",
          "format": "date-time"
        },
        "endTimeUtc": {
          "description": "When the step reached a terminal state.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTimeUtc": {
          "description": "Completion time of this step or the last completed sub-step.",
          "type": "string",
          "format": "date-time"
        },
        "steps": {
          "description": "Recursive model for child steps of this step.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "PublisherList": {
      "description": "List of Publisher proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Publisher proxy resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Publisher"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Publisher": {
      "description": "Publisher details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Publisher properties.",
          "$ref": "#/definitions/PublisherProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PublisherProperties": {
      "description": "Publisher properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}