{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.ManagedNetworkFabric",
    "version": "2023-06-15"
  },
  "components": {},
  "paths": {
    "/providers/Microsoft.ManagedNetworkFabric/operations": {
      "get": {
        "description": "Returns list of all operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "ListOperations": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers/{networkPacketBrokerName}": {
      "put": {
        "tags": [
          "NetworkPacketBrokers"
        ],
        "operationId": "NetworkPacketBrokers_Create",
        "summary": "Create Network Packet Broker.",
        "description": "Creates a Network Packet Broker.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkPacketBrokerNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkPacketBrokers"
        ],
        "operationId": "NetworkPacketBrokers_Get",
        "summary": "Gets a Network Packet Broker.",
        "description": "Retrieves details of this Network Packet Broker.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkPacketBrokerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkPacketBrokers"
        ],
        "operationId": "NetworkPacketBrokers_Update",
        "summary": "Updates the Network Packet Broker.",
        "description": "API to update certain properties of the Network Packet Broker resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkPacketBrokerNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Packet Broker properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBroker"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkPacketBrokers"
        ],
        "operationId": "NetworkPacketBrokers_Delete",
        "summary": "Deletes a Network Packet Broker.",
        "description": "Deletes Network Packet Broker.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkPacketBrokerNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers": {
      "get": {
        "operationId": "NetworkPacketBrokers_ListByResourceGroup",
        "summary": "List all Network Packet Brokers under resource group.",
        "description": "Displays NetworkPacketBrokers list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Packet Brokers under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers": {
      "get": {
        "operationId": "NetworkPacketBrokers_ListBySubscription",
        "summary": "List Network Packet Brokers by subscription.",
        "description": "Displays Network Packet Brokers list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkPacketBrokers under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkPacketBrokersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkPacketBrokers_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkPacketBrokers_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes/{ipPrefixName}": {
      "put": {
        "tags": [
          "IpPrefixes"
        ],
        "operationId": "IpPrefixes_Create",
        "summary": "Create an IP Prefix.",
        "description": "Implements IP Prefix PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpPrefixNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "IpPrefixes_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "IpPrefixes"
        ],
        "operationId": "IpPrefixes_Get",
        "summary": "Gets an IP Prefix.",
        "description": "Implements IP Prefix GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpPrefixNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpPrefixes_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpPrefixes"
        ],
        "operationId": "IpPrefixes_Update",
        "summary": "Updates the IP Prefix.",
        "description": "API to update certain properties of the IP Prefix resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpPrefixNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "IP Prefix properties to update.",
            "schema": {
              "$ref": "#/definitions/IpPrefixPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpPrefix"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpPrefixes_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpPrefixes"
        ],
        "operationId": "IpPrefixes_Delete",
        "summary": "Deletes the IP Prefix.",
        "description": "Implements IP Prefix DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpPrefixNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpPrefixes_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes": {
      "get": {
        "operationId": "IpPrefixes_ListByResourceGroup",
        "summary": "List IpPrefixes by resource group.",
        "description": "Implements IpPrefixes list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IP Prefixes under the resource group.",
            "schema": {
              "$ref": "#/definitions/IpPrefixesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpPrefixes_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes": {
      "get": {
        "operationId": "IpPrefixes_ListBySubscription",
        "summary": "List IpPrefixes by subscription.",
        "description": "Implements IpPrefixes list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IpPrefixes under the subscription.",
            "schema": {
              "$ref": "#/definitions/IpPrefixesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpPrefixes_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpPrefixes_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules/{internetGatewayRuleName}": {
      "put": {
        "tags": [
          "InternetGatewayRules"
        ],
        "operationId": "InternetGatewayRules_Create",
        "summary": "Creates an Internet Gateway rule.",
        "description": "Creates an Internet Gateway rule resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayRuleNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "InternetGatewayRules_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "InternetGatewayRules"
        ],
        "operationId": "InternetGatewayRules_Get",
        "summary": "Gets an Internet Gateway Rule.",
        "description": "Gets an Internet Gateway Rule resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGatewayRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "InternetGatewayRules"
        ],
        "operationId": "InternetGatewayRules_Update",
        "summary": "Updates an Internet Gateway Rule.",
        "description": "API to update certain properties of the Internet Gateway Rule resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayRuleNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Internet Gateway Rule properties to update.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRule"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternetGatewayRules_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "InternetGatewayRules"
        ],
        "operationId": "InternetGatewayRules_Delete",
        "summary": "Deletes an Internet Gateway Rule.",
        "description": "Implements Internet Gateway Rules DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayRuleNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternetGatewayRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules": {
      "get": {
        "operationId": "InternetGatewayRules_ListByResourceGroup",
        "summary": "List Internet Gateway Rules by resource group.",
        "description": "Implements Internet Gateway Rules list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Internet Gateway Rules under the resource group.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRulesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InternetGatewayRules_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules": {
      "get": {
        "operationId": "InternetGatewayRules_ListBySubscription",
        "summary": "List Internet Gateway Rules by subscription.",
        "description": "List all Internet Gateway rules in the given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Internet Gateway Rules under the subscription.",
            "schema": {
              "$ref": "#/definitions/InternetGatewayRulesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InternetGatewayRules_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/InternetGatewayRules_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus/{networkDeviceSkuName}": {
      "get": {
        "tags": [
          "NetworkDeviceSkus"
        ],
        "operationId": "NetworkDeviceSkus_Get",
        "summary": "Gets a Network Device Sku.",
        "description": "Get a Network Device SKU details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceSkuNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDeviceSkus_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDeviceSkus_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus": {
      "get": {
        "operationId": "NetworkDeviceSkus_ListBySubscription",
        "summary": "List Network Device SKUs by subscription.",
        "description": "List Network Device SKUs for the given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Device SKU under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkDeviceSkus_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDeviceSkus_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities/{ipExtendedCommunityName}": {
      "put": {
        "tags": [
          "IpExtendedCommunities"
        ],
        "operationId": "IpExtendedCommunities_Create",
        "summary": "Create an IP Extended Community.",
        "description": "Implements IP Extended Community PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpExtendedCommunityNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "IpExtendedCommunities"
        ],
        "operationId": "IpExtendedCommunities_Get",
        "summary": "Gets an IP Extended Community.",
        "description": "Implements IP Extended Community GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpExtendedCommunityNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpExtendedCommunities"
        ],
        "operationId": "IpExtendedCommunities_Update",
        "summary": "Updates the IP Extended Community.",
        "description": "API to update certain properties of the IP Extended Community resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpExtendedCommunityNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "IP Extended Community properties to update.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunity"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpExtendedCommunities"
        ],
        "operationId": "IpExtendedCommunities_Delete",
        "summary": "Deletes the IP Extended Community.",
        "description": "Implements IP Extended Community DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpExtendedCommunityNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpExtendedCommunities_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities": {
      "get": {
        "operationId": "IpExtendedCommunities_ListByResourceGroup",
        "summary": "List IpExtendedCommunities by resource group.",
        "description": "Implements IpExtendedCommunities list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IpExtendedCommunities under the resource group.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpExtendedCommunities_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities": {
      "get": {
        "operationId": "IpExtendedCommunities_ListBySubscription",
        "summary": "List IpExtendedCommunities by subscription.",
        "description": "Implements IpExtendedCommunities list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IpExtendedCommunities under the subscription.",
            "schema": {
              "$ref": "#/definitions/IpExtendedCommunityListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpExtendedCommunities_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpExtendedCommunities_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}": {
      "put": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Create",
        "summary": "Create Network Device.",
        "description": "Create a Network Device resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkDevices_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Get",
        "summary": "Gets a Network Device.",
        "description": "Gets the Network Device resource details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkDevices_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Update",
        "summary": "Updates a Network Device.",
        "description": "Update certain properties of the Network Device resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Device properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkDevicePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDevice"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Delete",
        "summary": "Deletes a Network Device.",
        "description": "Delete the Network Device resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices": {
      "get": {
        "operationId": "NetworkDevices_ListByResourceGroup",
        "summary": "List NetworkDevices by resource group.",
        "description": "List all the Network Device resources in a given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List all NetworkDevices under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkDevicesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkDevices_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDevices": {
      "get": {
        "operationId": "NetworkDevices_ListBySubscription",
        "summary": "List NetworkDevices by subscription.",
        "description": "List all the Network Device resources in a given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List all NetworkDevices under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkDevicesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkDevices_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}": {
      "put": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Create",
        "summary": "Create NetworkInterface.",
        "description": "Create a Network Interface resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkInterfaces_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Get",
        "summary": "Gets a NetworkInterface.",
        "description": "Get the Network Interface resource details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkInterfaces_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Update",
        "summary": "Updates a NetworkInterface.",
        "description": "Update certain properties of the Network Interface resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "NetworkInterface properties to update. Only tags are supported.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfacePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkInterfaces_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Delete",
        "summary": "Deletes a NetworkInterface.",
        "description": "Delete the Network Interface resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkInterfaces_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces": {
      "get": {
        "operationId": "NetworkInterfaces_ListByNetworkDevice",
        "summary": "List all Network Interfaces that are available using an Network Device.",
        "description": "List all the Network Interface resources in a given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List all NetworkInterfaces under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkInterfacesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkInterfaces_ListByNetworkDevice_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_ListByNetworkDevice_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/reboot": {
      "post": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Reboot",
        "description": "Reboot the Network Device.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/RebootProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_Reboot_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Reboot_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/refreshConfiguration": {
      "post": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_RefreshConfiguration",
        "description": "Refreshes the configuration the Network Device.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_RefreshConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_RefreshConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_UpdateAdministrativeState",
        "description": "Updates the Administrative state of the Network Device.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/UpdateDeviceAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/upgrade": {
      "post": {
        "tags": [
          "NetworkDevices"
        ],
        "operationId": "NetworkDevices_Upgrade",
        "description": "Upgrades the version of the Network Device.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkDevices_Upgrade_MaximumSet_Gen": {
            "$ref": "./examples/NetworkDevices_Upgrade_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_UpdateAdministrativeState",
        "description": "Update the admin state of the Network Interface.",
        "summary": "Updates the admin state of the network interface.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkDeviceNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkInterfaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkInterfaces_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkInterfaces_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus/{networkFabricSkuName}": {
      "get": {
        "tags": [
          "NetworkFabricSkus"
        ],
        "operationId": "NetworkFabricSkus_Get",
        "summary": "Gets a Network Fabric Sku.",
        "description": "Implements Network Fabric SKU GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricSkuNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkFabricSkus_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricSkus_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus": {
      "get": {
        "operationId": "NetworkFabricSkus_ListBySubscription",
        "summary": "List Network Fabric SKUs by subscription.",
        "description": "Implements Network Fabric SKUs list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Fabric SKUs under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkFabricSkus_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricSkus_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}": {
      "put": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_Create",
        "summary": "Create Network Tap Rule.",
        "description": "Create Network Tap Rule resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkTapRules_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_Get",
        "summary": "Gets a Network Tap Rule.",
        "description": "Get Network Tap Rule resource details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTapRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_Update",
        "summary": "Updates a Network Tap Rule.",
        "description": "Update certain properties of the Network Tap Rule resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Tap Rule properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTapRule"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTapRules_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_Delete",
        "summary": "Deletes a Network Tap Rule.",
        "description": "Delete Network Tap Rule resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTapRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules": {
      "get": {
        "operationId": "NetworkTapRules_ListByResourceGroup",
        "summary": "List Network Tap Rules by resource group.",
        "description": "List all the Network Tap Rule resources in the given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Tap Rules under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRulesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkTapRules_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTapRules": {
      "get": {
        "operationId": "NetworkTapRules_ListBySubscription",
        "summary": "List NetworkTapRules by subscription.",
        "description": "List all the Network Tap Rule resources in the given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkTapRules under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkTapRulesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkTapRules_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_UpdateAdministrativeState",
        "summary": "Updates administrative state of  Network Tap Rules.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTapRules_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/resync": {
      "post": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_Resync",
        "summary": "Resync the Network Tap Rule.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTapRules_Resync_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_Resync_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}/validateConfiguration": {
      "post": {
        "tags": [
          "NetworkTapRules"
        ],
        "operationId": "NetworkTapRules_ValidateConfiguration",
        "summary": "Validates the configuration of the Network Tap Rule.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTapRules_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTapRules_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}": {
      "put": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_Create",
        "summary": "Create Route Policy.",
        "description": "Implements Route Policy PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RoutePolicies_Create_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_Get",
        "summary": "Gets a Route Policy.",
        "description": "Implements Route Policy GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RoutePolicies_Get_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_Update",
        "summary": "Updates a Route Policy.",
        "description": "API to update certain properties of the Route Policy resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Route Policy properties to update.",
            "schema": {
              "$ref": "#/definitions/RoutePolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoutePolicy"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RoutePolicies_Update_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_Delete",
        "summary": "Deletes a Route Policy.",
        "description": "Implements Route Policy DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RoutePolicies_Delete_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies": {
      "get": {
        "operationId": "RoutePolicies_ListByResourceGroup",
        "summary": "List RoutePolicies by resource group.",
        "description": "Implements RoutePolicies list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all RoutePolicies under the resource group.",
            "schema": {
              "$ref": "#/definitions/RoutePoliciesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "RoutePolicies_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/routePolicies": {
      "get": {
        "operationId": "RoutePolicies_ListBySubscription",
        "summary": "List RoutePolicies by subscription.",
        "description": "Implements RoutePolicies list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all RoutePolicies under the subscription.",
            "schema": {
              "$ref": "#/definitions/RoutePoliciesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "RoutePolicies_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_UpdateAdministrativeState",
        "description": "Updated the admin state for this Route Policy.",
        "summary": "Executes enable operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RoutePolicies_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/validateConfiguration": {
      "post": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_ValidateConfiguration",
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RoutePolicies_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}/commitConfiguration": {
      "post": {
        "tags": [
          "RoutePolicies"
        ],
        "operationId": "RoutePolicies_CommitConfiguration",
        "description": "Commits the configuration of the given resources.",
        "summary": "Execute the commit on the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RoutePolicyNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "RoutePolicies_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/RoutePolicies_CommitConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}": {
      "put": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_Create",
        "summary": "Create L2 Isolation Domain.",
        "description": "Creates layer 2 network connectivity between compute nodes within a rack and across racks.The configuration is applied on the devices only after the isolation domain is enabled.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "L2IsolationDomains_Create_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_Get",
        "summary": "Retrieves details of this L2 Isolation Domain.",
        "description": "Implements L2 Isolation Domain GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L2IsolationDomains_Get_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_Update",
        "summary": "Updates the L2 Isolation Domain.",
        "description": "API to update certain properties of the L2 Isolation Domain resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "API to update certain properties of the L2 Isolation Domain resource..",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomain"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L2IsolationDomains_Update_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_Delete",
        "summary": "Deletes the L2 Isolation Domain.",
        "description": "Deletes layer 2 connectivity between compute nodes by managed by named L2 Isolation name.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L2IsolationDomains_Delete_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_updateAdministrativeState",
        "description": "Enables isolation domain across the fabric or on specified racks.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L2IsolationDomains_updateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_updateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/validateConfiguration": {
      "post": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_ValidateConfiguration",
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L2IsolationDomains_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains/{l2IsolationDomainName}/commitConfiguration": {
      "post": {
        "tags": [
          "L2IsolationDomains"
        ],
        "operationId": "L2IsolationDomains_CommitConfiguration",
        "description": "Commits the configuration of the given resources.",
        "summary": "Execute the commit on the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L2IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L2IsolationDomains_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_CommitConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains": {
      "get": {
        "operationId": "L2IsolationDomains_ListByResourceGroup",
        "summary": "List L2IsolationDomains by resource group.",
        "description": "Displays L2IsolationDomains list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all L2IsolationDomains under the resource group.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "L2IsolationDomains_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l2IsolationDomains": {
      "get": {
        "operationId": "L2IsolationDomains_ListBySubscription",
        "summary": "List L2IsolationDomains by subscription.",
        "description": "Displays L2IsolationDomains list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all L2IsolationDomains under the subscription.",
            "schema": {
              "$ref": "#/definitions/L2IsolationDomainsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "L2IsolationDomains_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/L2IsolationDomains_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}": {
      "put": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_Create",
        "summary": "Create Network Tap.",
        "description": "Creates a Network Tap.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkTaps_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_Get",
        "summary": "Gets a Network Tap.",
        "description": "Retrieves details of this Network Tap.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkTaps_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_Update",
        "summary": "Updates the Network Taps.",
        "description": "API to update certain properties of the Network Tap resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Tap properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkTapPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkTap"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTaps_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_Delete",
        "summary": "Deletes a Network Tap.",
        "description": "Deletes Network Tap.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTaps_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps": {
      "get": {
        "operationId": "NetworkTaps_ListByResourceGroup",
        "summary": "List Network Taps by resource group.",
        "description": "Displays Network Taps list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkTaps under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkTapsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkTaps_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkTaps": {
      "get": {
        "operationId": "NetworkTaps_ListBySubscription",
        "summary": "List Network Taps by subscription.",
        "description": "Displays Network Taps list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkTaps under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkTapsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkTaps_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_UpdateAdministrativeState",
        "summary": "Updates administrative state of  Network Tap.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTaps_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}/resync": {
      "post": {
        "tags": [
          "NetworkTaps"
        ],
        "operationId": "NetworkTaps_Resync",
        "summary": "Resync operation on the Network Tap.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkTapNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkTaps_Resync_MaximumSet_Gen": {
            "$ref": "./examples/NetworkTaps_Resync_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities/{ipCommunityName}": {
      "put": {
        "tags": [
          "IpCommunities"
        ],
        "operationId": "IpCommunities_Create",
        "summary": "Create an IP Community.",
        "description": "Implements an IP Community PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpCommunityNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "IpCommunities_Create_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "IpCommunities"
        ],
        "operationId": "IpCommunities_Get",
        "summary": "Gets an IP Community.",
        "description": "Implements an IP Community GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpCommunityNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpCommunities_Get_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "IpCommunities"
        ],
        "operationId": "IpCommunities_Update",
        "summary": "Updates an IP Community.",
        "description": "API to update certain properties of the IP Community resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpCommunityNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "IP Community properties to update.",
            "schema": {
              "$ref": "#/definitions/IpCommunityPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IpCommunity"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpCommunities_Update_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpCommunities"
        ],
        "operationId": "IpCommunities_Delete",
        "summary": "Deletes an IP Community.",
        "description": "Implements IP Community DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IpCommunityNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "IpCommunities_Delete_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities": {
      "get": {
        "operationId": "IpCommunities_ListByResourceGroup",
        "summary": "List IP Communities by resource group.",
        "description": "Implements IP Communities list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IP Communities under the resource group.",
            "schema": {
              "$ref": "#/definitions/IpCommunitiesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpCommunities_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/ipCommunities": {
      "get": {
        "operationId": "IpCommunities_ListBySubscription",
        "summary": "List IP Communities by subscription.",
        "description": "Implements IP Communities list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all IP Communities under the subscription.",
            "schema": {
              "$ref": "#/definitions/IpCommunitiesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpCommunities_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/IpCommunities_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks/{networkRackName}": {
      "put": {
        "tags": [
          "NetworkRacks"
        ],
        "operationId": "NetworkRacks_Create",
        "summary": "Create Network Rack.",
        "description": "Create Network Rack resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkRackNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkRacks_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkRacks"
        ],
        "operationId": "NetworkRacks_Get",
        "summary": "Gets a Network Rack.",
        "description": "Get Network Rack resource details.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkRackNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkRacks_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkRacks"
        ],
        "operationId": "NetworkRacks_Update",
        "summary": "Updates a Network Rack.",
        "description": "Update certain properties of the Network Rack resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkRackNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Rack properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkRackPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkRack"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkRacks_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkRacks"
        ],
        "operationId": "NetworkRacks_Delete",
        "summary": "Deletes a Network Rack.",
        "description": "Delete Network Rack resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkRackNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkRacks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRacks": {
      "get": {
        "operationId": "NetworkRacks_ListByResourceGroup",
        "summary": "List Network Racks by resource group.",
        "description": "List all Network Rack resources in the given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Racks under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkRacksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkRacks_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkRacks": {
      "get": {
        "operationId": "NetworkRacks_ListBySubscription",
        "summary": "List Network Racks by subscription.",
        "description": "List all Network Rack resources in the given subscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Racks under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkRacksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkRacks_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkRacks_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}": {
      "put": {
        "tags": [
          "NeighborGroups"
        ],
        "operationId": "NeighborGroups_Create",
        "summary": "Creates the Neighbor Group.",
        "description": "Implements the Neighbor Group PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NeighborGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NeighborGroups_Create_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NeighborGroups"
        ],
        "operationId": "NeighborGroups_Get",
        "summary": "Retrieves details of neighbor Group using GET method.",
        "description": "Gets the Neighbor Group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NeighborGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NeighborGroups_Get_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NeighborGroups"
        ],
        "operationId": "NeighborGroups_Update",
        "summary": "API to update certain properties of the Neighbor Group Resources.",
        "description": "Updates the Neighbor Group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NeighborGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Neighbor Group properties to update. Only annotations are supported.",
            "schema": {
              "$ref": "#/definitions/NeighborGroupPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NeighborGroup"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NeighborGroups_Update_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NeighborGroups"
        ],
        "operationId": "NeighborGroups_Delete",
        "summary": "Deletes a Neighbor Group.",
        "description": "Implements Neighbor Group DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NeighborGroupNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NeighborGroups_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups": {
      "get": {
        "operationId": "NeighborGroups_ListByResourceGroup",
        "summary": "List Neighbor Groups by resource group.",
        "description": "Displays NeighborGroups list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Neighbor Groups under the resource group.",
            "schema": {
              "$ref": "#/definitions/NeighborGroupsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NeighborGroups_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/neighborGroups": {
      "get": {
        "operationId": "NeighborGroups_ListBySubscription",
        "summary": "List Neighbor Groups by subscription.",
        "description": "Displays NeighborGroups list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Neighbor Groups under the subscription.",
            "schema": {
              "$ref": "#/definitions/NeighborGroupsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NeighborGroups_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NeighborGroups_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}": {
      "put": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_Create",
        "summary": "Create L3 Isolation Domain.",
        "description": "Create isolation domain resources for layer 3 connectivity between compute nodes and for communication with external services .This configuration is applied on the devices only after the creation of networks is completed and isolation domain is enabled. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "L3IsolationDomains_Create_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_Get",
        "summary": "Gets a L3 Isolation Domain.",
        "description": "Retrieves details of this L3 Isolation Domain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "L3IsolationDomains_Get_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_Update",
        "summary": "Updates a L3 Isolation Domain.",
        "description": "API to update certain properties of the L3 Isolation Domain resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "API to update certain properties of the L3 Isolation Domain resource.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomain"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L3IsolationDomains_Update_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_Delete",
        "summary": "Deletes a L3 Isolation Domain.",
        "description": "Deletes layer 3 connectivity between compute nodes by managed by named L3 Isolation name.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L3IsolationDomains_Delete_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains": {
      "get": {
        "operationId": "L3IsolationDomains_ListByResourceGroup",
        "summary": "List L3IsolationDomains by resource group.",
        "description": "Displays L3IsolationDomains list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all L3IsolationDomains under the resource group.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "L3IsolationDomains_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains": {
      "get": {
        "operationId": "L3IsolationDomains_ListBySubscription",
        "summary": "List L3IsolationDomains by subscription.",
        "description": "Displays L3IsolationDomains list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all L3IsolationDomains under the subscription.",
            "schema": {
              "$ref": "#/definitions/L3IsolationDomainsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "L3IsolationDomains_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_updateAdministrativeState",
        "description": "Enables racks for this Isolation Domain.",
        "summary": "executes enable operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L3IsolationDomains_updateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_updateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/validateConfiguration": {
      "post": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_ValidateConfiguration",
        "description": "Validates the configuration of the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L3IsolationDomains_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/commitConfiguration": {
      "post": {
        "tags": [
          "L3IsolationDomains"
        ],
        "operationId": "L3IsolationDomains_CommitConfiguration",
        "description": "Commits the configuration of the given resources.",
        "summary": "Execute the commit on the resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "L3IsolationDomains_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/L3IsolationDomains_CommitConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}": {
      "put": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_Create",
        "summary": "Creates InternalNetwork for Layer3 Isolation Domain for communication of compute within and across racks.",
        "description": "Creates InternalNetwork PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "InternalNetworks_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_Get",
        "summary": "Retrieves details of InternalNetworks using GET method.",
        "description": "Gets a InternalNetworks.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternalNetworks_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_Update",
        "summary": "API to update certain properties of the InternalNetworks resources.",
        "description": "Updates a InternalNetworks.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "InternalNetwork properties to update. Only annotations are supported.",
            "schema": {
              "$ref": "#/definitions/InternalNetworkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternalNetwork"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternalNetworks_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_Delete",
        "summary": "Deletes a InternalNetworks.",
        "description": "Implements InternalNetworks DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternalNetworks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks": {
      "get": {
        "operationId": "InternalNetworks_ListByL3IsolationDomain",
        "summary": "Executes list operation to display list of all internal networks",
        "description": "Displays InternalNetworks list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkInterfaces under the resource group.",
            "schema": {
              "$ref": "#/definitions/InternalNetworksList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_UpdateAdministrativeState",
        "description": "Update Administrative state of  InternalNetworks on resources referred by their resource ids.",
        "summary": "Executes the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateBgpAdministrativeState": {
      "post": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_UpdateBgpAdministrativeState",
        "description": "Update BGP state for internalNetwork. Allowed only on edge devices.",
        "summary": "Executes the operation to the underlying resources for updating BGP state on edge devices.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateBgpAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_UpdateBgpAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/internalNetworks/{internalNetworkName}/updateStaticRouteBfdAdministrativeState": {
      "post": {
        "tags": [
          "InternalNetworks"
        ],
        "operationId": "InternalNetworks_UpdateStaticRouteBfdAdministrativeState",
        "description": "Update Static Route BFD administrative state for internalNetwork.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/InternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternalNetworks_UpdateStaticRouteBfdAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/InternalNetworks_UpdateStaticRouteBfdAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}": {
      "put": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_Create",
        "summary": "Creates ExternalNetwork for Layer3 Isolation Domain for communication of computes with external services",
        "description": "Creates ExternalNetwork PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ExternalNetworks_Create_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_Get",
        "summary": "Retrieves details of ExternalNetwork.",
        "description": "Implements ExternalNetworks GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExternalNetworks_Get_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_Update",
        "summary": "Updates a External Networks.",
        "description": "API to update certain properties of the ExternalNetworks resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "ExternalNetwork properties to update. Only annotations are supported.",
            "schema": {
              "$ref": "#/definitions/ExternalNetworkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExternalNetwork"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ExternalNetworks_Update_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_Delete",
        "summary": "Deletes a ExternalNetworks.",
        "description": "Implements ExternalNetworks DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ExternalNetworks_Delete_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks": {
      "get": {
        "operationId": "ExternalNetworks_ListByL3IsolationDomain",
        "summary": "Executes list operation to display External Networks within an isolation domain.",
        "description": "Implements External Networks list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all the  External Networks under the L3 Isolation Domain.",
            "schema": {
              "$ref": "#/definitions/ExternalNetworksList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ExternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_ListByL3IsolationDomain_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_UpdateAdministrativeState",
        "description": "Executes update operation to enable or disable administrative State for externalNetwork.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ExternalNetworks_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/{l3IsolationDomainName}/externalNetworks/{externalNetworkName}/updateStaticRouteBfdAdministrativeState": {
      "post": {
        "tags": [
          "ExternalNetworks"
        ],
        "operationId": "ExternalNetworks_UpdateStaticRouteBfdAdministrativeState",
        "description": "Update Static Route BFD for external Network.",
        "summary": "Executes Static Route BFD state update operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/L3IsolationDomainNameParameter"
          },
          {
            "$ref": "#/parameters/ExternalNetworkNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "ExternalNetworks_UpdateStaticRouteBfdAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/ExternalNetworks_UpdateStaticRouteBfdAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}": {
      "put": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_Create",
        "summary": "Creates Access Control List.",
        "description": "Implements Access Control List PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AccessControlLists_Create_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_Get",
        "summary": "Gets a Access Control List.",
        "description": "Implements Access Control List GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AccessControlLists_Get_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_Update",
        "summary": "Updates the Access Control List.",
        "description": "API to update certain properties of the Access Control List resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Access Control List properties to update.",
            "schema": {
              "$ref": "#/definitions/AccessControlListPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessControlList"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "AccessControlLists_Update_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_Delete",
        "summary": "Deletes a Access Control List.",
        "description": "Implements Access Control List DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "AccessControlLists_Delete_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists": {
      "get": {
        "operationId": "AccessControlLists_ListByResourceGroup",
        "summary": "List AccessControlLists by resource group.",
        "description": "Implements AccessControlLists list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all AccessControlLists under the resource group.",
            "schema": {
              "$ref": "#/definitions/AccessControlListsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AccessControlLists_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/accessControlLists": {
      "get": {
        "operationId": "AccessControlLists_ListBySubscription",
        "summary": "List AccessControlLists by subscription.",
        "description": "Implements AccessControlLists list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all AccessControlLists under the subscription.",
            "schema": {
              "$ref": "#/definitions/AccessControlListsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AccessControlLists_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_UpdateAdministrativeState",
        "summary": "Updates administrative state of Access Control Lists.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "AccessControlLists_UpdateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_UpdateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/resync": {
      "post": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_Resync",
        "summary": "Resync operation on the Access Control Lists.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "AccessControlLists_Resync_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_Resync_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}/validateConfiguration": {
      "post": {
        "tags": [
          "AccessControlLists"
        ],
        "operationId": "AccessControlLists_ValidateConfiguration",
        "summary": "Validates the configuration of the Access Control Lists.",
        "description": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AccessControlListNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "AccessControlLists_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/AccessControlLists_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}": {
      "put": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_Create",
        "summary": "Create Network Fabric.",
        "description": "Create Network Fabric resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabrics_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Create_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_Get",
        "summary": "Gets a Network Fabric.",
        "description": "Get Network Fabric resource details.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabrics_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Get_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_Update",
        "summary": "Updates a Network Fabric.",
        "description": "Update certain properties of the Network Fabric resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabrics_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Update_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Fabric properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabric"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_Delete",
        "summary": "Deletes a Network Fabric.",
        "description": "Delete Network Fabric resource.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabrics_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_Delete_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics": {
      "get": {
        "operationId": "NetworkFabrics_ListByResourceGroup",
        "summary": "List Network Fabrics by resource group.",
        "description": "List all the Network Fabric resources in the given resource group.",
        "x-ms-examples": {
          "NetworkFabrics_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network Fabrics under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabrics": {
      "get": {
        "operationId": "NetworkFabrics_ListBySubscription",
        "summary": "List Network Fabrics by subscription.",
        "description": "List all the Network Fabric resources in the given subscription.",
        "x-ms-examples": {
          "NetworkFabrics_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabrics under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/provision": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_provision",
        "description": "Provisions the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_provision_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_provision_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/deprovision": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_deprovision",
        "description": "Deprovisions the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForDeviceUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_deprovision_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_deprovision_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/upgrade": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_upgrade",
        "description": "Upgrades the version of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Fabric properties to update.",
            "schema": {
              "$ref": "#/definitions/UpgradeNetworkFabricProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_upgrade_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_upgrade_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/refreshConfiguration": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_refreshConfiguration",
        "description": "Refreshes the configuration of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_refreshConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_refreshConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateWorkloadManagementBfdConfiguration": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_UpdateWorkloadManagementBfdConfiguration",
        "description": "Updates the Workload Management BFD Configuration of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_UpdateWorkloadManagementBfdConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_UpdateWorkloadManagementBfdConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/updateInfraManagementBfdConfiguration": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_UpdateInfraManagementBfdConfiguration",
        "description": "Updates the Infra Management BFD Configuration of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_UpdateInfraManagementBfdConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_UpdateInfraManagementBfdConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/validateConfiguration": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_ValidateConfiguration",
        "description": "Validates the configuration of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Validate configuration properties.",
            "schema": {
              "$ref": "#/definitions/ValidateConfigurationProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_ValidateConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_ValidateConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/getTopology": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_GetTopology",
        "description": "Gets Topology of the underlying resources in the given Network Fabric instance.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/ValidateConfigurationResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_GetTopology_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_GetTopology_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/commitConfiguration": {
      "post": {
        "tags": [
          "NetworkFabrics"
        ],
        "operationId": "NetworkFabrics_CommitConfiguration",
        "description": "Atomic update of the given Network Fabric instance. Sync update of NFA resources at Fabric level.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkFabrics_CommitConfiguration_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabrics_CommitConfiguration_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}": {
      "put": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_Create",
        "summary": "Configuration used to setup CE-PE connectivity.",
        "description": "Configuration used to setup CE-PE connectivity PUT Method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_Get",
        "summary": "Configuration used to setup CE-PE connectivity.",
        "description": "Implements NetworkToNetworkInterconnects GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_Update",
        "summary": "Updates a Network To NetworkInterconnects.",
        "description": "Update certain properties of the Network To NetworkInterconnects resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network to Network Interconnect properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnectPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnect"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_Delete",
        "summary": "Deletes a NetworkToNetworkInterconnects.",
        "description": "Implements NetworkToNetworkInterconnects DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects": {
      "get": {
        "operationId": "NetworkToNetworkInterconnects_ListByNetworkFabric",
        "summary": "Executes list operation to display Network To Network Interconnects within a Network Fabric.",
        "description": "Implements Network To Network Interconnects list by Network Fabric GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Network To Network Interconnects under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkToNetworkInterconnectsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_ListByNetworkFabric_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_ListByNetworkFabric_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateNpbStaticRouteBfdAdministrativeState": {
      "post": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_updateNpbStaticRouteBfdAdministrativeState",
        "description": "Updates the NPB Static Route BFD Administrative State.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_updateNpbStaticRouteBfdAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_updateNpbStaticRouteBfdAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}/updateAdministrativeState": {
      "post": {
        "tags": [
          "NetworkToNetworkInterconnects"
        ],
        "operationId": "NetworkToNetworkInterconnects_updateAdministrativeState",
        "description": "Updates the Admin State.",
        "summary": "Implements the operation to the underlying resources.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkToNetworkInterconnectNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "./common.json#/definitions/UpdateAdministrativeState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./common.json#/definitions/CommonPostActionResponseForStateUpdate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "NetworkToNetworkInterconnects_updateAdministrativeState_MaximumSet_Gen": {
            "$ref": "./examples/NetworkToNetworkInterconnects_updateAdministrativeState_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways/{internetGatewayName}": {
      "put": {
        "tags": [
          "InternetGateways"
        ],
        "operationId": "InternetGateways_Create",
        "summary": "Create a Network Fabric Service Internet Gateway.",
        "description": "Creates a Network Fabric Service Internet Gateway resource instance.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "InternetGateways_Create_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Create_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "InternetGateways"
        ],
        "operationId": "InternetGateways_Get",
        "summary": "Retrieves details of Network Fabric Service Internet Gateway.",
        "description": "Implements Gateway GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "InternetGateways_Get_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "InternetGateways"
        ],
        "operationId": "InternetGateways_Update",
        "summary": "Updates a Network Fabric Service Internet Gateway.",
        "description": "Execute patch on Network Fabric Service Internet Gateway.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "API to update certain properties of the L2 Isolation Domain resource..",
            "schema": {
              "$ref": "#/definitions/InternetGatewayPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InternetGateway"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL to retrieve the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternetGateways_Update_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "InternetGateways"
        ],
        "operationId": "InternetGateways_Delete",
        "summary": "Deletes a Network Fabric Service Internet Gateway.",
        "description": "Execute a delete on Network Fabric Service Internet Gateway.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/InternetGatewayNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "InternetGateways_Delete_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways": {
      "get": {
        "operationId": "InternetGateways_ListByResourceGroup",
        "summary": "List Internet Gateways by resource group.",
        "description": "Displays Internet Gateways list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all InternetGateways under the resource group.",
            "schema": {
              "$ref": "#/definitions/InternetGatewaysListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InternetGateways_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_ListByResourceGroup_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/internetGateways": {
      "get": {
        "operationId": "InternetGateways_ListBySubscription",
        "summary": "List Internet Gateways by subscription.",
        "description": "Displays Internet Gateways list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all Internet Gateways under the subscription.",
            "schema": {
              "$ref": "#/definitions/InternetGatewaysListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "InternetGateways_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/InternetGateways_ListBySubscription_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}": {
      "put": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Create",
        "summary": "Create Network fabric controller.",
        "description": "Creates a Network Fabric Controller.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabricControllers_Create_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Create_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricControllerNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.need to check with the team whether this field needs to be updated or not",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Get",
        "summary": "Gets a Network Fabric Controller.",
        "description": "Shows the provisioning status of Network Fabric Controller.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabricControllers_Get_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Get_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricControllerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Update",
        "summary": "Updates a Network Fabric Controller.",
        "description": "Updates are currently not supported for the Network Fabric Controller resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabricControllers_Update_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Update_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricControllerNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Fabric Controller properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Delete",
        "summary": "Deletes a Network Fabric Controller.",
        "description": "Deletes the Network Fabric Controller resource.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "NetworkFabricControllers_Delete_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_Delete_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/NetworkFabricControllerNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListByResourceGroup",
        "summary": "List NetworkFabricControllers by resource group.",
        "description": "Lists all the NetworkFabricControllers thats available in the resource group.",
        "x-ms-examples": {
          "NetworkFabricControllers_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricControllers under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListBySubscription",
        "summary": "List NetworkFabricControllers by subscription.",
        "description": "Lists all the NetworkFabricControllers by subscription.",
        "x-ms-examples": {
          "NetworkFabricControllers_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/NetworkFabricControllers_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricControllers under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "NetworkPacketBrokerNameParameter": {
      "type": "string",
      "description": "Name of the Network Packet Broker.",
      "in": "path",
      "name": "networkPacketBrokerName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "IpPrefixNameParameter": {
      "type": "string",
      "description": "Name of the IP Prefix.",
      "in": "path",
      "name": "ipPrefixName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "InternetGatewayRuleNameParameter": {
      "type": "string",
      "description": "Name of the Internet Gateway rule.",
      "in": "path",
      "name": "internetGatewayRuleName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkDeviceSkuNameParameter": {
      "type": "string",
      "description": "Name of the Network Device SKU.",
      "in": "path",
      "name": "networkDeviceSkuName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "IpExtendedCommunityNameParameter": {
      "type": "string",
      "description": "Name of the IP Extended Community.",
      "in": "path",
      "name": "ipExtendedCommunityName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkDeviceNameParameter": {
      "type": "string",
      "description": "Name of the Network Device.",
      "in": "path",
      "name": "networkDeviceName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkInterfaceNameParameter": {
      "type": "string",
      "description": "Name of the Network Interface.",
      "in": "path",
      "name": "networkInterfaceName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkFabricSkuNameParameter": {
      "type": "string",
      "description": "Name of the Network Fabric SKU.",
      "in": "path",
      "name": "networkFabricSkuName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkTapRuleNameParameter": {
      "type": "string",
      "description": "Name of the Network Tap Rule.",
      "in": "path",
      "name": "networkTapRuleName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "RoutePolicyNameParameter": {
      "type": "string",
      "description": "Name of the Route Policy.",
      "in": "path",
      "name": "routePolicyName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "L2IsolationDomainNameParameter": {
      "type": "string",
      "description": "Name of the L2 Isolation Domain.",
      "in": "path",
      "name": "l2IsolationDomainName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkTapNameParameter": {
      "type": "string",
      "description": "Name of the Network Tap.",
      "in": "path",
      "name": "networkTapName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "IpCommunityNameParameter": {
      "type": "string",
      "description": "Name of the IP Community.",
      "in": "path",
      "name": "ipCommunityName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkRackNameParameter": {
      "type": "string",
      "description": "Name of the Network Rack.",
      "in": "path",
      "name": "networkRackName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NeighborGroupNameParameter": {
      "type": "string",
      "description": "Name of the Neighbor Group.",
      "in": "path",
      "name": "neighborGroupName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "L3IsolationDomainNameParameter": {
      "type": "string",
      "description": "Name of the L3 Isolation Domain.",
      "in": "path",
      "name": "l3IsolationDomainName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "InternalNetworkNameParameter": {
      "type": "string",
      "description": "Name of the Internal Network.",
      "in": "path",
      "name": "internalNetworkName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ExternalNetworkNameParameter": {
      "type": "string",
      "description": "Name of the External Network.",
      "in": "path",
      "name": "externalNetworkName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AccessControlListNameParameter": {
      "type": "string",
      "description": "Name of the Access Control List.",
      "in": "path",
      "name": "accessControlListName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkFabricNameParameter": {
      "type": "string",
      "description": "Name of the Network Fabric.",
      "in": "path",
      "name": "networkFabricName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkToNetworkInterconnectNameParameter": {
      "type": "string",
      "description": "Name of the Network to Network Interconnect.",
      "in": "path",
      "name": "networkToNetworkInterconnectName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "InternetGatewayNameParameter": {
      "type": "string",
      "description": "Name of the Internet Gateway.",
      "in": "path",
      "name": "internetGatewayName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "NetworkFabricControllerNameParameter": {
      "type": "string",
      "description": "Name of the Network Fabric Controller.",
      "in": "path",
      "name": "networkFabricControllerName",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "If-Match": {
      "name": "ifMatch",
      "in": "header",
      "description": "The If-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "If-None-Match": {
      "name": "ifNoneMatch",
      "in": "header",
      "description": "The If-None-Match header that makes a request conditional.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The name of the Azure region.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ManagementGroupNameParameter": {
      "name": "managementGroupName",
      "in": "path",
      "description": "The name of the management group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "OperationIdParameter": {
      "name": "operationId",
      "in": "path",
      "description": "The ID of an ongoing async operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "description": "The scope at which the operation is performed.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription. The value must be an UUID.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "TenantIdParameter": {
      "name": "tenantId",
      "in": "path",
      "description": "The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "NetworkPacketBroker": {
      "type": "object",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkPacketBrokerProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The NetworkPacketBroker resource definition."
    },
    "NetworkPacketBrokerProperties": {
      "type": "object",
      "description": "Network Packet Broker Properties defines the properties of the resource.",
      "required": [
        "networkFabricId"
      ],
      "properties": {
        "networkFabricId": {
          "description": "ARM resource ID of the Network Fabric.",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "networkDeviceIds": {
          "type": "array",
          "description": "List of ARM resource IDs of Network Devices [NPB].",
          "readOnly": true,
          "items": {
            "description": "ARM resource ID of the Network Device.",
            "$ref": "./common.json#/definitions/NetworkDeviceIdProperty"
          }
        },
        "sourceInterfaceIds": {
          "type": "array",
          "description": "List of network interfaces across NPB devices that are used to mirror source traffic.",
          "readOnly": true,
          "items": {
            "description": "ARM resource ID of the Network Interface.",
            "$ref": "./common.json#/definitions/NetworkInterfaceIdProperty"
          }
        },
        "networkTapIds": {
          "type": "array",
          "readOnly": true,
          "description": "List of network Tap IDs configured on NPB.",
          "items": {
            "description": "ARM resource ID of the Network Tap.",
            "$ref": "./common.json#/definitions/NetworkTapIdProperty"
          }
        },
        "neighborGroupIds": {
          "type": "array",
          "readOnly": true,
          "description": "List of neighbor group IDs configured on NPB.",
          "items": {
            "description": "ARM resource ID of the Neighbor Group.",
            "$ref": "./common.json#/definitions/NetworkTapIdProperty"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "NetworkPacketBrokerPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The NetworkPacketBroker patch resource definition."
    },
    "NetworkPacketBrokersListResult": {
      "type": "object",
      "description": "List of NetworkPacketBrokers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkPacketBroker resources.",
          "items": {
            "$ref": "#/definitions/NetworkPacketBroker"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "IpPrefixProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/IpPrefixPatchableProperties",
          "description": "IP Prefix patchable properties."
        }
      ],
      "properties": {
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "ipPrefixRules"
      ],
      "description": "IP Prefix Properties defines the properties of the resource."
    },
    "IpPrefix": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/IpPrefixProperties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The IP Prefix resource definition."
    },
    "IpPrefixPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "IP Prefix patchable properties.",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/IpPrefixPatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "description": "Resource tags",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The IP Prefix patch resource definition."
    },
    "IpPrefixPatchableProperties": {
      "type": "object",
      "description": "IP Prefix patchable properties.",
      "properties": {
        "ipPrefixRules": {
          "type": "array",
          "description": "The list of IP Prefix Rules.",
          "items": {
            "$ref": "#/definitions/IpPrefixRule"
          }
        }
      }
    },
    "IpPrefixesListResult": {
      "type": "object",
      "description": "List of IP Prefixes.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of IP Prefix resources.",
          "items": {
            "$ref": "#/definitions/IpPrefix"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "IpPrefixRule": {
      "type": "object",
      "description": "IP Prefix Rule properties.",
      "properties": {
        "action": {
          "description": "Action to be taken on the configuration. Example: Permit | Deny.",
          "$ref": "./common.json#/definitions/CommunityActionTypes"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored."
        },
        "networkPrefix": {
          "type": "string",
          "description": "Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126 "
        },
        "condition": {
          "type": "string",
          "description": "Specify prefix-list bounds.",
          "enum": [
            "EqualTo",
            "GreaterThanOrEqualTo",
            "LesserThanOrEqualTo",
            "Range"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "condition"
          }
        },
        "subnetMaskLength": {
          "type": "string",
          "description": "SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible values of IPv6 are 1 - 128."
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "networkPrefix"
      ]
    },
    "InternetGatewayRuleProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "required": [
        "ruleProperties"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "ruleProperties": {
          "description": "Rules for the InternetGateways",
          "$ref": "#/definitions/RuleProperties"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "internetGatewayIds": {
          "type": "array",
          "description": "List of Internet Gateway resource Id.",
          "items": {
            "description": "ARM Resource ID of the Internet Gateway.",
            "type": "string"
          },
          "readOnly": true
        }
      },
      "description": "Internet Gateway Rule Properties defines the resource properties."
    },
    "InternetGatewayRule": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/InternetGatewayRuleProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The Internet Gateway Rule resource definition."
    },
    "InternetGatewayRulePatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "description": "Resource tags",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The Internet Gateway Rules patch resource definition."
    },
    "InternetGatewayRulesListResult": {
      "type": "object",
      "description": "List of Internet Gateway Rules.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Internet Gateway Rule resources.",
          "items": {
            "$ref": "#/definitions/InternetGatewayRule"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "RuleProperties": {
      "type": "object",
      "description": "Rules for the InternetGateways",
      "required": [
        "action",
        "addressList"
      ],
      "properties": {
        "action": {
          "type": "string",
          "description": "Specify action.",
          "minLength": 1,
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "action"
          },
          "example": "Deny"
        },
        "addressList": {
          "type": "array",
          "description": "List of Addresses to be allowed or denied.",
          "minItems": 1,
          "items": {
            "description": "Addresses to be allowed or denied.",
            "type": "string",
            "minLength": 1,
            "example": "10.10.10.10:22 | www.foo.com"
          }
        }
      }
    },
    "NetworkDeviceSkuProperties": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "Model of the network device."
        },
        "manufacturer": {
          "type": "string",
          "description": "Manufacturer of the network device."
        },
        "supportedVersions": {
          "type": "array",
          "description": "List of supported version details of network device.",
          "x-ms-identifiers": [
            "version"
          ],
          "items": {
            "description": "Supported version details of the network device.",
            "$ref": "#/definitions/SupportedVersionProperties"
          }
        },
        "supportedRoleTypes": {
          "type": "array",
          "description": "Available roles for the network device.",
          "items": {
            "type": "string",
            "description": "Available roles for the network device.",
            "enum": [
              "CE",
              "ToR",
              "NPB",
              "TS",
              "Management"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "name": "networkDeviceRoleName"
            }
          }
        },
        "interfaces": {
          "type": "array",
          "description": "List of network device interfaces.",
          "x-ms-identifiers": [
            "identifier"
          ],
          "items": {
            "description": "Network device interface properties.",
            "$ref": "#/definitions/DeviceInterfaceProperties"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      },
      "required": [
        "model"
      ],
      "description": "Network Device SKU Properties defines the properties of the resource."
    },
    "NetworkDeviceSku": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkDeviceSkuProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The NetworkDeviceSku resource definition."
    },
    "NetworkDeviceSkusListResult": {
      "type": "object",
      "description": "List of Network Device SKUs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Network Device SKU resources.",
          "items": {
            "$ref": "#/definitions/NetworkDeviceSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "SupportedVersionProperties": {
      "description": "Supported version details of the network device.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Operating system and firmware combined versions."
        },
        "vendorOsVersion": {
          "type": "string",
          "description": "Operating system version."
        },
        "vendorFirmwareVersion": {
          "type": "string",
          "description": "Firmware version."
        },
        "isDefault": {
          "description": "If true newly provisioned Fabric will use this device version by default to bootstrap the network devices for the first time.",
          "$ref": "./common.json#/definitions/BooleanEnumProperty"
        }
      }
    },
    "DeviceInterfaceProperties": {
      "description": "Network device interface properties.",
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Interface identifier. Example: HundredGigE0/0."
        },
        "interfaceType": {
          "type": "string",
          "description": "Interface type."
        },
        "supportedConnectorTypes": {
          "type": "array",
          "description": "List of supported connector types.",
          "x-ms-identifiers": [
            "connectorType"
          ],
          "items": {
            "description": "Supported connector properties.",
            "$ref": "#/definitions/SupportedConnectorProperties"
          }
        }
      }
    },
    "SupportedConnectorProperties": {
      "description": "Supported connector properties.",
      "type": "object",
      "properties": {
        "connectorType": {
          "type": "string",
          "description": "Type of connector used. Example: Optical."
        },
        "maxSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum speed of the connector in Mbps."
        }
      }
    },
    "IpExtendedCommunityProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "description": "IP Extended Community patchable properties.",
          "$ref": "#/definitions/IpExtendedCommunityPatchableProperties"
        }
      ],
      "properties": {
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "description": "IP Extended Community Properties defines the resource properties."
    },
    "IpExtendedCommunity": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/IpExtendedCommunityProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The IP Extended Community resource definition."
    },
    "IpExtendedCommunityListResult": {
      "type": "object",
      "description": "List of IP Extended Communities.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of IP Extended Communities resources.",
          "items": {
            "$ref": "#/definitions/IpExtendedCommunity"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "IpExtendedCommunityPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "IP Extended Community patchable properties.",
          "allOf": [
            {
              "$ref": "#/definitions/IpExtendedCommunityPatchableProperties"
            },
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            }
          ]
        }
      },
      "allOf": [
        {
          "description": "Resource tags",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The IP Extended Communities patch resource definition."
    },
    "IpExtendedCommunityPatchableProperties": {
      "type": "object",
      "description": "IP Extended Community patchable properties.",
      "properties": {
        "ipExtendedCommunityRules": {
          "type": "array",
          "description": "List of IP Extended Community Rules.",
          "items": {
            "$ref": "#/definitions/IpExtendedCommunityRule"
          }
        }
      },
      "required": [
        "ipExtendedCommunityRules"
      ]
    },
    "IpExtendedCommunityRule": {
      "type": "object",
      "description": "List of IP Extended Community Rules.",
      "properties": {
        "action": {
          "description": "Action to be taken on the configuration. Example: Permit | Deny.",
          "$ref": "./common.json#/definitions/CommunityActionTypes"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored."
        },
        "routeTargets": {
          "type": "array",
          "minItems": 1,
          "description": "Route Target List.The expected formats are ASN(plain):NN >> example 4294967294:50, ASN.ASN:NN >> example 65533.65333:40, IP-address:NN >> example 10.10.10.10:65535. The possible values of ASN,NN are in range of 0-65535, ASN(plain) is in range of 0-4294967295.",
          "items": {
            "description": "Route Target.",
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "routeTargets"
      ]
    },
    "NetworkInterfaceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "physicalIdentifier": {
          "type": "string",
          "description": "Physical Identifier of the network interface.",
          "readOnly": true
        },
        "connectedTo": {
          "type": "string",
          "description": "The ARM resource id of the interface or compute server its connected to.",
          "readOnly": true
        },
        "interfaceType": {
          "type": "string",
          "description": "The Interface Type. Example: Management/Data",
          "enum": [
            "Management",
            "Data"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "interfaceType"
          },
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4Address of the interface.",
          "readOnly": true
        },
        "ipv6Address": {
          "type": "string",
          "description": "IPv6Address of the interface.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "description": "Network Interface Properties defines the properties of the resource."
    },
    "NetworkDevicePatchableProperties": {
      "title": "Network Device updatable properties.",
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string",
          "minLength": 1,
          "description": "The host name of the device."
        },
        "serialNumber": {
          "type": "string",
          "minLength": 1,
          "description": "Serial number of the device. Format of serial Number - Make;Model;HardwareRevisionId;SerialNumber.",
          "example": "Vendor;DCS-7280XXX-24;12.05;JPE2111XXXX"
        }
      }
    },
    "NetworkDevicePatchParameters": {
      "type": "object",
      "description": "The Network Device Patch Parameters defines the patch parameters of the resource.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Network Device Patch properties.",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/NetworkDevicePatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NetworkDeviceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/NetworkDevicePatchableProperties",
          "description": "Common patchable properties for Network Device."
        }
      ],
      "properties": {
        "version": {
          "type": "string",
          "description": "Current version of the device as defined in SKU.",
          "readOnly": true
        },
        "networkDeviceSku": {
          "type": "string",
          "description": "Network Device SKU name.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "networkDeviceRole": {
          "description": "NetworkDeviceRole is the device role: Example: CE | ToR.",
          "type": "string",
          "enum": [
            "CE",
            "ToR",
            "NPB",
            "TS",
            "Management"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NetworkDeviceRole"
          },
          "readOnly": true
        },
        "networkRackId": {
          "description": "Reference to network rack resource id.",
          "type": "string",
          "readOnly": true
        },
        "managementIpv4Address": {
          "description": "Management IPv4 Address.",
          "type": "string",
          "readOnly": true
        },
        "managementIpv6Address": {
          "description": "Management IPv6 Address.",
          "type": "string",
          "readOnly": true
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "serialNumber"
      ],
      "description": "Network Device Properties defines the properties of the resource."
    },
    "NetworkDevice": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The Network Device resource definition.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkDeviceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkInterface": {
      "description": "Defines the NetworkInterface resource.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource, except required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkInterfaceProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "NetworkInterfacePatch": {
      "type": "object",
      "description": "The NetworkInterfacePatch resource definition.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Network Interface Patch properties.",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            }
          ]
        }
      }
    },
    "NetworkDevicesListResult": {
      "type": "object",
      "description": "List of NetworkDevices.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkDevice resources.",
          "items": {
            "$ref": "#/definitions/NetworkDevice"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkInterfacesList": {
      "type": "object",
      "description": "List of NetworkInterfaces.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkInterfaces resources.",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "RebootProperties": {
      "type": "object",
      "description": "Reboot properties.",
      "properties": {
        "rebootType": {
          "type": "string",
          "description": "Type of reboot to be performed. Example: GracefulRebootWithZTP",
          "minLength": 1,
          "enum": [
            "GracefulRebootWithZTP",
            "GracefulRebootWithoutZTP",
            "UngracefulRebootWithZTP",
            "UngracefulRebootWithoutZTP"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RebootType"
          }
        }
      }
    },
    "UpdateDeviceAdministrativeState": {
      "type": "object",
      "description": "Update the administrative state on list of resources.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Administrative state.",
          "enum": [
            "RMA",
            "Resync",
            "GracefulQuarantine",
            "Quarantine"
          ],
          "x-ms-enum": {
            "name": "DeviceAdministrativeState",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/EnableDisableOnResources"
        }
      ]
    },
    "NetworkFabricSkuProperties": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of Network Fabric SKU.",
          "type": "string",
          "enum": [
            "SingleRack",
            "MultiRack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FabricSkuType"
          },
          "readOnly": true
        },
        "maxComputeRacks": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of compute racks available for this Network Fabric SKU. The value of max count racks is 4 for 4 rack SKU and 8 for 8 rack SKU."
        },
        "maximumServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of servers available for this Network Fabric SKU."
        },
        "supportedVersions": {
          "type": "array",
          "description": "List of supported Network Fabric SKU versions.",
          "items": {
            "type": "string",
            "description": "Supported version."
          },
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "URL providing detailed configuration of the fabric SKU.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        }
      },
      "description": "Network Fabric SKU Properties define properties of the resource."
    },
    "NetworkFabricSku": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricSkuProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The Network Fabric SKU resource definition."
    },
    "NetworkFabricSkusListResult": {
      "type": "object",
      "description": "List of Network Fabric SKUs.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Network Fabric SKU resources.",
          "items": {
            "$ref": "#/definitions/NetworkFabricSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Accepted",
        "Succeeded",
        "Updating",
        "Deleting",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ConfigurationState": {
      "type": "string",
      "description": "Configuration state for the resource.",
      "readOnly": true,
      "enum": [
        "Succeeded",
        "Failed",
        "Rejected",
        "Accepted",
        "Provisioned",
        "ErrorProvisioning",
        "Deprovisioning",
        "Deprovisioned",
        "ErrorDeprovisioning",
        "DeferredControl",
        "Provisioning",
        "PendingCommit"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ConfigurationState"
      }
    },
    "AdministrativeState": {
      "type": "string",
      "description": "State defined to represent administrative actions or post actions on a particular resource.",
      "enum": [
        "Enabled",
        "Disabled",
        "MAT",
        "RMA"
      ],
      "readOnly": true,
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AdministrativeState"
      }
    },
    "AnnotationResource": {
      "type": "object",
      "description": "Switch configuration entries require a description to discern between configuration groups.",
      "properties": {
        "annotation": {
          "type": "string",
          "description": "Switch configuration description."
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "name": {
          "type": "string",
          "description": "The extended location name."
        }
      }
    },
    "UpdateAdministrativeState": {
      "type": "object",
      "description": "Update administrative state on list of resources.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Administrative state.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "EnableDisableState",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EnableDisableOnResources"
        }
      ]
    },
    "UpdateVersion": {
      "type": "object",
      "description": "Update version properties.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Specify the version."
        }
      }
    },
    "EnableDisableOnResources": {
      "type": "object",
      "description": "Update administrative state on list of resources.",
      "properties": {
        "resourceIds": {
          "type": "array",
          "description": "Network Fabrics or Network Rack resource Id.",
          "items": {
            "description": "Network Fabrics or Network Rack resource Id.",
            "type": "string"
          }
        }
      }
    },
    "CommonPostActionResponseForDeviceUpdate": {
      "type": "object",
      "description": "Common response for device updates.",
      "properties": {
        "configurationState": {
          "description": "Gets the configuration state.",
          "$ref": "#/definitions/ConfigurationState"
        },
        "successfulDevices": {
          "type": "array",
          "description": "List of ARM Resource IDs for which the given action applied successfully.",
          "items": {
            "description": "ARM Resource ID.",
            "type": "string"
          }
        },
        "failedDevices": {
          "type": "array",
          "description": "List of ARM Resource IDs for which the given action failed to apply.",
          "items": {
            "description": "ARM Resource ID.",
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "description": "The error message.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
        }
      ]
    },
    "CommonPostActionResponseForStateUpdate": {
      "type": "object",
      "description": "Common response for the state updates.",
      "properties": {
        "configurationState": {
          "description": "Gets the configuration state.",
          "$ref": "#/definitions/ConfigurationState"
        }
      },
      "allOf": [
        {
          "description": "The error message.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
        }
      ]
    },
    "ValidateConfigurationResponse": {
      "type": "object",
      "description": "The response of the action validate configuration.",
      "properties": {
        "configurationState": {
          "description": "Gets the configuration state.",
          "$ref": "#/definitions/ConfigurationState"
        },
        "url": {
          "type": "string",
          "description": "URL for the details of the response."
        }
      },
      "allOf": [
        {
          "description": "The error message.",
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
        }
      ]
    },
    "BooleanEnumProperty": {
      "type": "string",
      "description": "Boolean Enum. Example- True/False",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "BooleanEnumProperty"
      }
    },
    "PeeringOption": {
      "type": "string",
      "description": "Peering option list.",
      "enum": [
        "OptionA",
        "OptionB"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "PeeringOption"
      }
    },
    "CommunityActionTypes": {
      "type": "string",
      "description": "community action types. Example: Permit | Deny.",
      "enum": [
        "Permit",
        "Deny"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "communityActionTypes"
      }
    },
    "TagsUpdate": {
      "description": "Base tracked resource type for PATCH updates.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "BfdConfiguration": {
      "type": "object",
      "description": "BFD configuration properties",
      "properties": {
        "administrativeState": {
          "type": "string",
          "description": "Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled",
            "MAT",
            "RMA"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BfdAdministrativeState"
          }
        },
        "intervalInMilliSeconds": {
          "type": "integer",
          "format": "int32",
          "default": 300,
          "description": "Interval in milliseconds. Example: 300."
        },
        "multiplier": {
          "type": "integer",
          "format": "int32",
          "default": 5,
          "description": "Multiplier for the Bfd Configuration. Example: 5."
        }
      }
    },
    "StaticRouteProperties": {
      "type": "object",
      "description": "Route Properties.",
      "properties": {
        "prefix": {
          "type": "string",
          "minLength": 1,
          "description": "Prefix of the route."
        },
        "nextHop": {
          "type": "array",
          "minItems": 1,
          "description": "List of next hop addresses.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Next Hop address."
          }
        }
      },
      "required": [
        "prefix",
        "nextHop"
      ]
    },
    "Layer3IpPrefixProperties": {
      "type": "object",
      "description": "Layer 3 primary and secondary IP Address prefixes.",
      "properties": {
        "primaryIpv4Prefix": {
          "type": "string",
          "description": "IPv4 Address Prefix."
        },
        "primaryIpv6Prefix": {
          "type": "string",
          "description": "IPv6 Address Prefix."
        },
        "secondaryIpv4Prefix": {
          "type": "string",
          "description": "Secondary IPv4 Address Prefix."
        },
        "secondaryIpv6Prefix": {
          "type": "string",
          "description": "Secondary IPv6 Address Prefix."
        }
      }
    },
    "RouteTargetInformation": {
      "description": "Route Target Configuration.",
      "type": "object",
      "properties": {
        "importIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Import IPv4 route target. Example: 65541:2001, 65542:2001."
          }
        },
        "importIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes from CE.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Import IPv6 route target. Example: 65531, 65532."
          }
        },
        "exportIpv4RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes into CE.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Export IPV4 route target. Example: 65541:2001, 65542:2001."
          }
        },
        "exportIpv6RouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Export IPV6 route target. Example: 65531, 65532."
          }
        }
      }
    },
    "ImportRoutePolicyInformation": {
      "type": "object",
      "description": "Import Route Policy Configuration.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "description": "Import IPv4 Route Policy Id.",
          "$ref": "#/definitions/RoutePolicyIdProperty"
        },
        "importIpv6RoutePolicyId": {
          "description": "Import IPv6 Route Policy Id.",
          "$ref": "#/definitions/RoutePolicyIdProperty"
        }
      }
    },
    "ExportRoutePolicyInformation": {
      "type": "object",
      "description": "Export Route Policy Configuration.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "description": "Export IPv4 Route Policy Id.",
          "$ref": "#/definitions/RoutePolicyIdProperty"
        },
        "exportIpv6RoutePolicyId": {
          "description": "Export IPv6 Route Policy Id.",
          "$ref": "#/definitions/RoutePolicyIdProperty"
        }
      }
    },
    "CommonMatchConditions": {
      "type": "object",
      "description": "Defines the common match conditions of the ACL and Network Tap Rule.",
      "properties": {
        "protocolTypes": {
          "type": "array",
          "minItems": 1,
          "description": "List of the protocols that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the protocol that to needs to matched. Inputs can be <protocol-name> or <protocol-number> or <range of protocol numbers>."
          }
        },
        "vlanMatchCondition": {
          "description": "Vlan match condition that needs to be matched.",
          "$ref": "#/definitions/VlanMatchCondition"
        },
        "ipCondition": {
          "description": "IP condition that needs to be matched.",
          "$ref": "#/definitions/IpMatchCondition"
        }
      }
    },
    "PortCondition": {
      "type": "object",
      "description": "Port condition that needs to be matched.",
      "properties": {
        "portType": {
          "type": "string",
          "description": "Port type that needs to be matched.",
          "minLength": 1,
          "enum": [
            "SourcePort",
            "DestinationPort"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PortType"
          }
        },
        "layer4Protocol": {
          "type": "string",
          "description": "Layer4 protocol type that needs to be matched.",
          "minLength": 1,
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Layer4Protocol"
          }
        },
        "ports": {
          "type": "array",
          "description": "List of the Ports that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Port number that needs to be matched. Inputs can be <port-number> or <range-of-ports>"
          }
        },
        "portGroupNames": {
          "type": "array",
          "description": "List of the port Group Names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Port Group Name."
          }
        }
      },
      "required": [
        "layer4Protocol"
      ]
    },
    "VlanMatchCondition": {
      "type": "object",
      "description": "The vlan match conditions that need to be matched.",
      "properties": {
        "vlans": {
          "type": "array",
          "description": "List of vlans that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the Vlan. Inputs can be single vlan or the range of vlans.",
            "example": "10-20"
          }
        },
        "innerVlans": {
          "type": "array",
          "description": "List of inner vlans that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the inner vlan. Inputs can be single vlan or the range of vlans.",
            "example": "20-30"
          }
        },
        "vlanGroupNames": {
          "type": "array",
          "description": "List of vlan group names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Vlan group name."
          }
        }
      }
    },
    "IpMatchCondition": {
      "type": "object",
      "description": "Defines the condition that can be filtered using the selected IPs.",
      "properties": {
        "type": {
          "type": "string",
          "description": "IP Address type that needs to be matched.",
          "minLength": 1,
          "enum": [
            "SourceIP",
            "DestinationIP"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SourceDestinationType"
          }
        },
        "prefixType": {
          "type": "string",
          "description": "IP Prefix Type that needs to be matched.",
          "minLength": 1,
          "enum": [
            "Prefix",
            "LongestPrefix"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PrefixType"
          }
        },
        "ipPrefixValues": {
          "type": "array",
          "description": "The list of IP Prefixes that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "The valid IP Prefix."
          }
        },
        "ipGroupNames": {
          "type": "array",
          "description": "The List of IP Group Names that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "IP Group Name."
          }
        }
      }
    },
    "CommonDynamicMatchConfiguration": {
      "type": "object",
      "description": "Dynamic match configuration object.",
      "properties": {
        "ipGroups": {
          "type": "array",
          "description": "List of IP Groups.",
          "minItems": 1,
          "items": {
            "description": "IP Group",
            "$ref": "#/definitions/IpGroupProperties"
          }
        },
        "vlanGroups": {
          "type": "array",
          "description": "List of vlan groups.",
          "minItems": 1,
          "items": {
            "description": "Vlan group",
            "$ref": "#/definitions/VlanGroupProperties"
          }
        },
        "portGroups": {
          "type": "array",
          "description": "List of the port groups.",
          "minItems": 1,
          "items": {
            "description": "Port Group",
            "$ref": "#/definitions/PortGroupProperties"
          }
        }
      }
    },
    "IpGroupProperties": {
      "type": "object",
      "description": "IP Group properties.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "IP Group name."
        },
        "ipAddressType": {
          "description": "IP Address type.",
          "$ref": "#/definitions/IPAddressTypeEnumProperty"
        },
        "ipPrefixes": {
          "type": "array",
          "description": "List of IP Prefixes.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "IP Prefix."
          }
        }
      }
    },
    "VlanGroupProperties": {
      "type": "object",
      "description": "Vlan group properties.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Vlan group name."
        },
        "vlans": {
          "type": "array",
          "description": "List of vlans.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Vlan. It may be a single vlan or the range of the vlans.",
            "example": "10-20"
          }
        }
      }
    },
    "PortGroupProperties": {
      "type": "object",
      "description": "Port Group properties.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "The name of the port group."
        },
        "ports": {
          "type": "array",
          "description": "List of the ports that need to be matched.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Port Number. Inputs can be single port or the range of ports.",
            "example": "10-20"
          }
        }
      }
    },
    "NetworkFabricControllerIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the Network Fabric Controller.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkFabricControllers"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/example-controller"
    },
    "NetworkFabricIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the Network Fabric.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkFabrics"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabrics/example-networkFabric"
    },
    "NetworkToNetworkInterconnectIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the Network To network Interconnects.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkFabrics/example-networkFabric/networkTonetworkInterconnects/example-nni"
    },
    "L3IsolationDomainIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the L3 Isolation Domain.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomains/example-l3Domain"
    },
    "InternalNetworkIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the Internal Networks.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomain/example-l3Domain/internalNetworks/example-internalNetwork"
    },
    "ExternalNetworkIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the External Networks.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/externalNetworks"
          }
        ]
      },
      "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/l3IsolationDomain/example-l3Domain/externalNetworks/example-externalNetwork"
    },
    "NetworkDeviceIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the NetworkDevice.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkDevices"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}"
    },
    "NetworkInterfaceIdProperty": {
      "type": "string",
      "description": "ARM resource ID of the NetworkDevice/networkInterface.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDevices/{networkDeviceName}/networkInterfaces/{networkInterfaceName}"
    },
    "RoutePolicyIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Route Policy.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/routePolicies"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/routePolicies/{routePolicyName}"
    },
    "IpCommunityIdProperty": {
      "type": "string",
      "description": "ARM resource ID of IP Community.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/ipCommunities"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipCommunities/{ipCommunityName}"
    },
    "IpExtendedCommunityIdProperty": {
      "type": "string",
      "description": "ARM resource ID of IP Extended Community.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/ipExtendedCommunities"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipExtendedCommunities/{ipExtendedCommunityName}"
    },
    "IpPrefixIdProperty": {
      "type": "string",
      "description": "ARM resource ID of IP Prefix.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/ipPrefixes"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/ipPrefixes/{ipPrefixName}"
    },
    "NetworkPacketBrokerIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Network Packet Broker.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkPacketBrokers"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkPacketBrokers/{networkPacketBrokerName}"
    },
    "NetworkTapIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Network Tap.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkTaps"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTaps/{networkTapName}"
    },
    "NetworkTapRuleIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Network Tap Rule.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}"
    },
    "NeighborGroupIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Neighbor Group.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}"
    },
    "AccessControlListIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Access Control Lists.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/accessControlLists"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}"
    },
    "InternetGatewayIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Internet Gateway.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/internetGateways"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGateways/{internetGatewayName}"
    },
    "InternetGatewayRuleIdProperty": {
      "type": "string",
      "description": "ARM resource ID of Internet Gateway Rule.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ManagedNetworkFabric/internetGatewayRules"
          }
        ]
      },
      "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/internetGatewayRules/{internetGatewayRuleName}"
    },
    "IPAddressTypeEnumProperty": {
      "type": "string",
      "description": "IP Address type.",
      "minLength": 1,
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "IPAddressType"
      }
    },
    "NetworkTapRulePatchableProperties": {
      "title": "Network Tap Rule updatable properties.",
      "type": "object",
      "properties": {
        "configurationType": {
          "type": "string",
          "description": "Input method to configure Network Tap Rule.",
          "enum": [
            "File",
            "Inline"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ConfigurationType"
          }
        },
        "tapRulesUrl": {
          "type": "string",
          "description": "Network Tap Rules file URL.",
          "format": "uri",
          "minLength": 1
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "description": "Match configuration.",
            "$ref": "#/definitions/NetworkTapRuleMatchConfiguration"
          }
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "description": "Dynamic match configuration object.",
            "$ref": "./common.json#/definitions/CommonDynamicMatchConfiguration"
          }
        }
      }
    },
    "NetworkTapRuleProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "description": "Network Tap Rule Patchable properties.",
          "$ref": "#/definitions/NetworkTapRulePatchableProperties"
        }
      ],
      "properties": {
        "networkTapId": {
          "type": "string",
          "description": "The ARM resource Id of the NetworkTap.",
          "readOnly": true
        },
        "pollingIntervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Polling interval in seconds.",
          "default": 30,
          "enum": [
            30,
            60,
            90,
            120
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PollingIntervalInSeconds"
          }
        },
        "lastSyncedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last sync timestamp.",
          "readOnly": true
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "configurationType"
      ],
      "description": "Network Tap Rule Properties defines the resource properties."
    },
    "NetworkTapRule": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The NetworkTapRule resource definition.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkTapRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkTapRulePatch": {
      "type": "object",
      "description": "The NetworkTapRule resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Network Tap Rule Patch properties.",
          "type": "object",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/NetworkTapRulePatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "description": "Azure resource tags that will replace the existing ones.",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NetworkTapRulesListResult": {
      "type": "object",
      "description": "List of NetworkTapRules.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkTapRule resources.",
          "items": {
            "$ref": "#/definitions/NetworkTapRule"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkTapRuleMatchConfiguration": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence Number of the match configuration.."
        },
        "ipAddressType": {
          "description": "Type of IP Address. IPv4 or IPv6",
          "$ref": "./common.json#/definitions/IPAddressTypeEnumProperty"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "minItems": 1,
          "items": {
            "description": "Defines the match condition that is supported to filter the traffic.",
            "$ref": "#/definitions/NetworkTapRuleMatchCondition"
          }
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "minItems": 1,
          "items": {
            "description": "Action that needs to performed.",
            "$ref": "#/definitions/NetworkTapRuleAction"
          }
        }
      }
    },
    "NetworkTapRuleMatchCondition": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "encapsulationType": {
          "type": "string",
          "description": "Encapsulation Type that needs to be matched.",
          "default": "None",
          "minLength": 1,
          "enum": [
            "None",
            "GTPv1"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EncapsulationType"
          }
        },
        "portCondition": {
          "description": "Defines the port condition that needs to be matched.",
          "$ref": "./common.json#/definitions/PortCondition"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/CommonMatchConditions"
        }
      ]
    },
    "NetworkTapRuleAction": {
      "type": "object",
      "description": "Action that need to performed.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of actions that can be performed.",
          "minLength": 1,
          "enum": [
            "Drop",
            "Count",
            "Log",
            "Replicate",
            "Goto",
            "Redirect",
            "Mirror"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TapRuleActionType"
          }
        },
        "truncate": {
          "type": "string",
          "minLength": 1,
          "description": "Truncate. 0 indicates do not truncate."
        },
        "isTimestampEnabled": {
          "description": "The parameter to enable or disable the timestamp.",
          "$ref": "./common.json#/definitions/BooleanEnumProperty"
        },
        "destinationId": {
          "type": "string",
          "description": "Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup.",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/neighborGroups"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects"
              }
            ]
          },
          "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/neighborGroups/{neighborGroupName}"
        },
        "matchConfigurationName": {
          "type": "string",
          "minLength": 1,
          "description": "The name of the match configuration. This is used when Goto type is provided. If Goto type is selected and no match configuration name is provided. It goes to next configuration."
        }
      }
    },
    "RoutePolicyProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "description": "Route Policy patchable properties.",
          "$ref": "#/definitions/RoutePolicyPatchableProperties"
        }
      ],
      "properties": {
        "networkFabricId": {
          "description": "Arm Resource ID of Network Fabric.",
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "addressFamilyType": {
          "type": "string",
          "description": "AddressFamilyType. This parameter decides whether the given ipv4 or ipv6 route policy.",
          "default": "IPv4",
          "minLength": 1,
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AddressFamilyType"
          }
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "statements",
        "networkFabricId"
      ],
      "description": "RoutePolicyProperties defines the resource properties."
    },
    "RoutePolicy": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/RoutePolicyProperties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The RoutePolicy resource definition."
    },
    "RoutePolicyPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The RoutePolicy patchable properties.",
          "$ref": "#/definitions/RoutePolicyPatchableProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The Route Policy patch resource definition."
    },
    "RoutePolicyPatchableProperties": {
      "type": "object",
      "description": "Route Policy patchable properties.",
      "properties": {
        "defaultAction": {
          "type": "string",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny.",
          "default": "Deny",
          "$ref": "./common.json#/definitions/CommunityActionTypes"
        },
        "statements": {
          "type": "array",
          "description": "Route Policy statements.",
          "x-ms-identifiers": [
            "sequenceNumber"
          ],
          "items": {
            "description": "Route Policy condition model.",
            "$ref": "#/definitions/RoutePolicyStatementProperties"
          }
        }
      }
    },
    "RoutePoliciesListResult": {
      "type": "object",
      "description": "List of RoutePolicies.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of RoutePolicy resources.",
          "items": {
            "$ref": "#/definitions/RoutePolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "RoutePolicyStatementProperties": {
      "description": "Route Policy Statement properties.",
      "type": "object",
      "required": [
        "sequenceNumber",
        "condition",
        "action"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence to insert to/delete from existing route."
        },
        "condition": {
          "description": "Route policy condition properties.",
          "$ref": "#/definitions/StatementConditionProperties"
        },
        "action": {
          "description": "Route policy action properties.",
          "$ref": "#/definitions/StatementActionProperties"
        }
      }
    },
    "StatementConditionProperties": {
      "type": "object",
      "description": "Route policy statement condition properties.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the condition used.",
          "default": "Or",
          "minLength": 1,
          "enum": [
            "Or",
            "And"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RoutePolicyConditionType"
          }
        },
        "ipPrefixId": {
          "type": "string",
          "description": "Arm Resource Id of IpPrefix."
        }
      },
      "allOf": [
        {
          "description": "List of IP Community resource IDs.",
          "$ref": "#/definitions/IpCommunityIdList"
        },
        {
          "description": "List of IP Extended Community resource IDs.",
          "$ref": "#/definitions/IpExtendedCommunityIdList"
        }
      ]
    },
    "StatementActionProperties": {
      "type": "object",
      "description": "Route policy action properties.",
      "properties": {
        "localPreference": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Local Preference of the route policy."
        },
        "actionType": {
          "type": "string",
          "description": "Action type. Example: Permit | Deny | Continue.",
          "minLength": 1,
          "enum": [
            "Permit",
            "Deny",
            "Continue"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RoutePolicyActionType"
          }
        },
        "ipCommunityProperties": {
          "description": "IP Community Properties.",
          "$ref": "#/definitions/ActionIpCommunityProperties"
        },
        "ipExtendedCommunityProperties": {
          "description": "IP Extended Community Properties.",
          "$ref": "#/definitions/ActionIpExtendedCommunityProperties"
        }
      },
      "required": [
        "actionType"
      ]
    },
    "ActionIpCommunityProperties": {
      "type": "object",
      "description": "IP Community Properties.",
      "allOf": [
        {
          "description": "IP Community add operation properties.",
          "$ref": "#/definitions/IpCommunityAddOperationProperties"
        },
        {
          "description": "IP Community delete operation properties.",
          "$ref": "#/definitions/IpCommunityDeleteOperationProperties"
        },
        {
          "description": "IP Community set operation properties.",
          "$ref": "#/definitions/IpCommunitySetOperationProperties"
        }
      ]
    },
    "IpCommunityAddOperationProperties": {
      "type": "object",
      "description": "IP Community add operation properties.",
      "properties": {
        "add": {
          "description": "List of IP Community IDs.",
          "$ref": "#/definitions/IpCommunityIdList"
        }
      }
    },
    "IpCommunitySetOperationProperties": {
      "type": "object",
      "description": "IP Community set operation properties.",
      "properties": {
        "set": {
          "description": "List of IP Community IDs.",
          "$ref": "#/definitions/IpCommunityIdList"
        }
      }
    },
    "IpCommunityDeleteOperationProperties": {
      "type": "object",
      "description": "IP Community delete operation properties.",
      "properties": {
        "delete": {
          "description": "List of IP Community IDs.",
          "$ref": "#/definitions/IpCommunityIdList"
        }
      }
    },
    "ActionIpExtendedCommunityProperties": {
      "type": "object",
      "description": "IP Extended Community Properties.",
      "allOf": [
        {
          "description": "IP Extended Community add operation properties.",
          "$ref": "#/definitions/IpExtendedCommunityAddOperationProperties"
        },
        {
          "description": "IP Extended Community delete operation properties.",
          "$ref": "#/definitions/IpExtendedCommunityDeleteOperationProperties"
        },
        {
          "description": "IP Extended Community set operation properties.",
          "$ref": "#/definitions/IpExtendedCommunitySetOperationProperties"
        }
      ]
    },
    "IpExtendedCommunityAddOperationProperties": {
      "type": "object",
      "description": "IP Extended Community add operation properties.",
      "properties": {
        "add": {
          "description": "List of IP Extended Community IDs.",
          "$ref": "#/definitions/IpExtendedCommunityIdList"
        }
      }
    },
    "IpExtendedCommunitySetOperationProperties": {
      "type": "object",
      "description": "IP Extended Community set operation properties.",
      "properties": {
        "set": {
          "description": "List of IP Extended Community IDs.",
          "$ref": "#/definitions/IpExtendedCommunityIdList"
        }
      }
    },
    "IpExtendedCommunityDeleteOperationProperties": {
      "type": "object",
      "description": "IP Extended Community delete operation properties.",
      "properties": {
        "delete": {
          "description": "List of IP Extended Community IDs.",
          "$ref": "#/definitions/IpExtendedCommunityIdList"
        }
      }
    },
    "IpCommunityIdList": {
      "description": "IP Community ID list properties.",
      "type": "object",
      "properties": {
        "ipCommunityIds": {
          "type": "array",
          "description": "List of IP Community resource IDs.",
          "items": {
            "type": "string",
            "description": "ARM Resource ID of IPCommunity."
          }
        }
      }
    },
    "IpExtendedCommunityIdList": {
      "description": "IP Extended Community Id list properties.",
      "type": "object",
      "properties": {
        "ipExtendedCommunityIds": {
          "type": "array",
          "description": "List of IP Extended Community resource IDs.",
          "items": {
            "type": "string",
            "description": "ARM Resource ID of IP Extended Community."
          }
        }
      }
    },
    "L2IsolationDomainProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "required": [
        "vlanId",
        "networkFabricId"
      ],
      "properties": {
        "networkFabricId": {
          "description": "ARM Resource ID of the Network Fabric.",
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 100,
          "maximum": 4094,
          "description": "Vlan Identifier of the Network Fabric. Example: 501."
        },
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "Maximum transmission unit. Default value is 1500."
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "description": "L2Isolation Domain Properties defines the properties of the resource."
    },
    "L2IsolationDomainPatchProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "Maximum transmission unit. Default value is 1500."
        }
      },
      "description": "L2 Isolation Domain Patch Properties defines the patchable properties of the resource."
    },
    "L2IsolationDomain": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/L2IsolationDomainProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The L2 Isolation Domain resource definition."
    },
    "L2IsolationDomainPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/L2IsolationDomainPatchProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The L2 Isolation Domain patch resource definition."
    },
    "L2IsolationDomainsListResult": {
      "type": "object",
      "description": "List of L2 Isolation Domains.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Displays list of L2 Isolation Domain resources.",
          "items": {
            "$ref": "#/definitions/L2IsolationDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkTap": {
      "type": "object",
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkTapProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The Network Tap resource definition."
    },
    "NetworkTapProperties": {
      "type": "object",
      "description": "Network Tap Properties defines the properties of the resource.",
      "required": [
        "networkPacketBrokerId",
        "destinations"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "networkPacketBrokerId": {
          "description": "ARM resource ID of the Network Packet Broker.",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "sourceTapRuleId": {
          "type": "string",
          "description": "Source Tap Rule Id. ARM Resource ID of the Network Tap Rule.",
          "format": "arm-id",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkTapRules"
              }
            ]
          },
          "example": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}"
        },
        "destinations": {
          "type": "array",
          "description": "List of destinations to send the filter traffic.",
          "minItems": 1,
          "items": {
            "type": "object",
            "description": "Destination.",
            "required": [
              "name",
              "destinationType",
              "destinationId"
            ],
            "allOf": [
              {
                "$ref": "#/definitions/DestinationProperties"
              }
            ]
          }
        },
        "pollingType": {
          "type": "string",
          "description": "Polling type.",
          "minLength": 1,
          "default": "Pull",
          "enum": [
            "Pull",
            "Push"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PollingType"
          },
          "example": "Pull"
        },
        "configurationState": {
          "description": "Gets the configurations state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of Network Tap provisioning.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource. Example -Enabled/Disabled",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      }
    },
    "NetworkTapPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The NetworkFabric resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkTapPatchableParameters"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NetworkTapPatchableParameters": {
      "type": "object",
      "description": "The Network Tap resource patch definition.",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource"
        }
      ],
      "properties": {
        "pollingType": {
          "type": "string",
          "description": "Polling type.",
          "minLength": 1,
          "default": "Pull",
          "enum": [
            "Pull",
            "Push"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PollingType"
          },
          "example": "Pull"
        },
        "destinations": {
          "type": "array",
          "description": "List of destination properties to send the filter traffic.",
          "items": {
            "type": "object",
            "description": "Destination.",
            "allOf": [
              {
                "$ref": "#/definitions/DestinationProperties"
              }
            ]
          }
        }
      }
    },
    "NetworkTapsListResult": {
      "type": "object",
      "description": "List of NetworkTaps.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkTap resources.",
          "items": {
            "$ref": "#/definitions/NetworkTap"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "DestinationProperties": {
      "type": "object",
      "description": "The network tap destination properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Destination name.",
          "minLength": 1
        },
        "destinationType": {
          "type": "string",
          "description": "Type of destination. Input can be IsolationDomain or Direct.",
          "enum": [
            "IsolationDomain",
            "Direct"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DestinationType"
          },
          "example": "IsolationDomain"
        },
        "destinationId": {
          "type": "string",
          "description": "The destination Id. ARM Resource ID of either NNI or Internal Networks.",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects"
              },
              {
                "type": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks"
              }
            ]
          },
          "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.ManagedNetworkFabric/networkToNetworkInterconnects/example-nni"
        },
        "isolationDomainProperties": {
          "description": "Isolation Domain Properties.",
          "$ref": "#/definitions/IsolationDomainProperties"
        },
        "destinationTapRuleId": {
          "description": "ARM Resource ID of destination Tap Rule that contains match configurations.",
          "$ref": "./common.json#/definitions/NetworkTapRuleIdProperty"
        }
      }
    },
    "IsolationDomainProperties": {
      "type": "object",
      "description": "Isolation Domain Properties.",
      "properties": {
        "encapsulation": {
          "type": "string",
          "description": "Type of encapsulation.",
          "enum": [
            "None",
            "GRE"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Encapsulation"
          },
          "minLength": 1,
          "example": "None"
        },
        "neighborGroupIds": {
          "type": "array",
          "description": "List of Neighbor Group IDs.",
          "items": {
            "description": "ARM Resource ID of the Neighbor Group .",
            "$ref": "./common.json#/definitions/NeighborGroupIdProperty"
          }
        }
      }
    },
    "IpCommunityProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "description": "IP Community patchable properties.",
          "$ref": "#/definitions/IpCommunityPatchableProperties"
        }
      ],
      "required": [
        "ipCommunityRules"
      ],
      "properties": {
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "description": "IP Community Properties defines the resource properties."
    },
    "IpCommunity": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/IpCommunityProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "The IP Community resource definition."
    },
    "IpCommunitiesListResult": {
      "type": "object",
      "description": "List of IP Communities.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of IP Community resources.",
          "items": {
            "$ref": "#/definitions/IpCommunity"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "IpCommunityPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "IP Community patchable properties.",
          "$ref": "#/definitions/IpCommunityPatchableProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The IP Community patch resource definition."
    },
    "IpCommunityPatchableProperties": {
      "type": "object",
      "description": "IP Community patchable properties.",
      "properties": {
        "ipCommunityRules": {
          "type": "array",
          "description": "List of IP Community Rules.",
          "items": {
            "$ref": "#/definitions/IpCommunityRule"
          }
        }
      }
    },
    "IpCommunityRule": {
      "type": "object",
      "description": "IP Community patchable properties.",
      "properties": {
        "action": {
          "description": "Action to be taken on the configuration. Example: Permit | Deny.",
          "$ref": "./common.json#/definitions/CommunityActionTypes"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored."
        },
        "wellKnownCommunities": {
          "type": "array",
          "description": "Supported well known Community List.",
          "uniqueItems": true,
          "items": {
            "description": "\n`Internet` - Advertise routes to internet community.\n `LocalAS` - Advertise routes to only localAS peers.\n `NoAdvertise` - Don't advertise routes to any peer.\n`NoExport` - Don't export to next AS.\n`GShut` - Graceful Shutdown (GSHUT) withdraw routes before terminating BGP connection.\n",
            "type": "string",
            "minLength": 1,
            "enum": [
              "Internet",
              "LocalAS",
              "NoAdvertise",
              "NoExport",
              "GShut"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "name": "wellKnownCommunities"
            }
          }
        },
        "communityMembers": {
          "type": "array",
          "minItems": 1,
          "description": "List the community members of IP Community.",
          "items": {
            "minLength": 1,
            "description": "Community member of the IP Community. The expected formats are AA:NN >> example 65535:65535, <integer32> >> example 4294967040. The possible values of AA, NN are 0-65535 and <integer32> are 1-4294967040.",
            "type": "string"
          }
        }
      },
      "required": [
        "action",
        "sequenceNumber",
        "communityMembers"
      ]
    },
    "NetworkRackProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "networkRackType": {
          "type": "string",
          "description": "Network Rack SKU name.",
          "minLength": 1,
          "enum": [
            "Aggregate",
            "Compute",
            "Combined"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NetworkRackType"
          }
        },
        "networkFabricId": {
          "description": "ARM resource ID of the Network Fabric.",
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "networkDevices": {
          "type": "array",
          "description": "List of network device ARM resource IDs.",
          "items": {
            "description": "ARM resource ID of the Network device.",
            "$ref": "./common.json#/definitions/NetworkDeviceIdProperty"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        }
      },
      "required": [
        "networkFabricId"
      ],
      "description": "Network Rack Properties defines the properties of the resource."
    },
    "NetworkRack": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkRackProperties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The Network Rack resource definition."
    },
    "NetworkRackPatch": {
      "x-ms-azure-resource": true,
      "$ref": "./common.json#/definitions/TagsUpdate",
      "description": "The Network Rack patch resource definition."
    },
    "NetworkRacksListResult": {
      "type": "object",
      "description": "List of Network Racks.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Network Rack resources.",
          "items": {
            "$ref": "#/definitions/NetworkRack"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NeighborGroup": {
      "description": "Defines the Neighbor Group.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NeighborGroupProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "NeighborGroupProperties": {
      "type": "object",
      "description": "Neighbor Group Properties defines the properties of the resource.",
      "required": [
        "destination"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/NeighborGroupPatchableProperties",
          "description": "Neighbor Group patchable properties."
        }
      ],
      "properties": {
        "networkTapIds": {
          "type": "array",
          "description": "List of NetworkTap IDs where neighbor group is associated.",
          "readOnly": true,
          "items": {
            "description": "ARM resource ID of the Network Tap Resource.",
            "$ref": "./common.json#/definitions/NetworkTapIdProperty"
          }
        },
        "networkTapRuleIds": {
          "type": "array",
          "description": "List of Network Tap Rule IDs where neighbor group is associated.",
          "readOnly": true,
          "items": {
            "description": "ARM resource ID of the Network Tap Rules.",
            "$ref": "./common.json#/definitions/NetworkTapRuleIdProperty"
          }
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "NeighborGroupPatch": {
      "type": "object",
      "description": "The Neighbor Group Patch definition.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Neighbor Group Patch properties.",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/NeighborGroupPatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NeighborGroupPatchableProperties": {
      "type": "object",
      "description": "Neighbor Group Patchable Properties defines the patchable properties of the resource.",
      "x-ms-client-flatten": true,
      "properties": {
        "destination": {
          "description": "An array of destination IPv4 Addresses or IPv6 Addresses.",
          "$ref": "#/definitions/NeighborGroupDestination"
        }
      }
    },
    "NeighborGroupsListResult": {
      "type": "object",
      "description": "List of Neighbor Group.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Neighbor Group resources.",
          "items": {
            "$ref": "#/definitions/NeighborGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NeighborGroupDestination": {
      "type": "object",
      "description": "An array of destination IPv4 Addresses or IPv6 Addresses.",
      "properties": {
        "ipv4Addresses": {
          "type": "array",
          "maxItems": 16,
          "description": "Array of IPv4 Addresses.",
          "items": {
            "type": "string",
            "description": "IPv4 Address.",
            "minLength": 1
          }
        },
        "ipv6Addresses": {
          "type": "array",
          "maxItems": 16,
          "description": "Array of IPv6 Addresses.",
          "items": {
            "type": "string",
            "description": "IPv6 Address.",
            "minLength": 1
          }
        }
      }
    },
    "L3IsolationDomainProperties": {
      "type": "object",
      "description": "L3 Isolation Domain Properties defines the properties of the resource.",
      "required": [
        "networkFabricId"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/L3IsolationDomainPatchableProperties"
        }
      ],
      "properties": {
        "networkFabricId": {
          "description": "ARM Resource ID of the Network Fabric.",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      }
    },
    "L3IsolationDomainPatchableProperties": {
      "type": "object",
      "properties": {
        "redistributeConnectedSubnets": {
          "type": "string",
          "description": "Advertise Connected Subnets. Ex: \"True\" | \"False\".",
          "default": "True",
          "minLength": 1,
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "redistributeConnectedSubnets"
          }
        },
        "redistributeStaticRoutes": {
          "type": "string",
          "description": "Advertise Static Routes. Ex: \"True\" | \"False\".",
          "default": "False",
          "minLength": 1,
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "redistributeStaticRoutes"
          }
        },
        "aggregateRouteConfiguration": {
          "description": "Aggregate route configurations.",
          "$ref": "#/definitions/AggregateRouteConfiguration"
        },
        "connectedSubnetRoutePolicy": {
          "description": "Connected Subnet RoutePolicy",
          "$ref": "#/definitions/ConnectedSubnetRoutePolicy"
        }
      },
      "description": "L3 Isolation Domain Patch Properties defines the patchable properties of the resource."
    },
    "L3IsolationDomain": {
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/L3IsolationDomainProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The L3 Isolation Domain resource definition."
    },
    "L3IsolationDomainPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/L3IsolationDomainPatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The L3 Isolation Domain patch resource definition."
    },
    "L3IsolationDomainsListResult": {
      "type": "object",
      "description": "List of L3 Isolation Domains.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of L3 Isolation Domain resources.",
          "items": {
            "$ref": "#/definitions/L3IsolationDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "InternalNetwork": {
      "description": "Defines the Internal Network resource.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/InternalNetworkProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "InternalNetworkProperties": {
      "type": "object",
      "description": "Internal Network Properties defines the properties of the resource.",
      "required": [
        "vlanId"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/InternalNetworkPatchableProperties"
        },
        {
          "$ref": "#/definitions/ExtensionEnumProperty"
        }
      ],
      "properties": {
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 100,
          "maximum": 4094,
          "description": "Vlan identifier. Example: 1001."
        },
        "bgpConfiguration": {
          "type": "object",
          "description": "BGP configuration properties.",
          "allOf": [
            {
              "$ref": "#/definitions/BgpConfiguration"
            }
          ],
          "required": [
            "peerASN"
          ]
        },
        "staticRouteConfiguration": {
          "description": "Static Route Configuration properties.",
          "allOf": [
            {
              "$ref": "#/definitions/StaticRouteConfiguration"
            },
            {
              "$ref": "#/definitions/ExtensionEnumProperty"
            }
          ]
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      }
    },
    "InternalNetworkPatch": {
      "type": "object",
      "description": "The InternalNetwork patch resource definition.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "InternalNetwork Patch properties.",
          "properties": {
            "bgpConfiguration": {
              "description": "BGP configuration properties.",
              "$ref": "#/definitions/BgpConfiguration"
            },
            "staticRouteConfiguration": {
              "description": "Static Route Configuration properties.",
              "$ref": "#/definitions/StaticRouteConfiguration"
            }
          },
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/InternalNetworkPatchableProperties"
            }
          ]
        }
      }
    },
    "InternalNetworkPatchableProperties": {
      "type": "object",
      "description": "The InternalNetwork patchable properties.",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "Maximum transmission unit. Default value is 1500."
        },
        "connectedIPv4Subnets": {
          "type": "array",
          "description": "List of Connected IPv4 Subnets.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Connected IPv4 Subnet properties.",
            "$ref": "#/definitions/ConnectedSubnet"
          }
        },
        "connectedIPv6Subnets": {
          "type": "array",
          "description": "List of connected IPv6 Subnets.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Connected IPv6 Subnet properties.",
            "$ref": "#/definitions/ConnectedSubnet"
          }
        },
        "importRoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "exportRoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "importRoutePolicy": {
          "description": "Import Route Policy either IPv4 or IPv6.",
          "$ref": "#/definitions/ImportRoutePolicy"
        },
        "exportRoutePolicy": {
          "description": "Export Route Policy either IPv4 or IPv6.",
          "$ref": "#/definitions/ExportRoutePolicy"
        },
        "ingressAclId": {
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "egressAclId": {
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "isMonitoringEnabled": {
          "description": "To check whether monitoring of internal network is enabled or not.",
          "type": "string",
          "default": "False",
          "minLength": 1,
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IsMonitoringEnabled"
          }
        }
      }
    },
    "InternalNetworksList": {
      "type": "object",
      "description": "List of Internal Networks.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Internal Network resources.",
          "items": {
            "$ref": "#/definitions/InternalNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "ExternalNetwork": {
      "description": "Defines the External Network resource.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/ExternalNetworkProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "ExternalNetworksList": {
      "type": "object",
      "description": "List of External Networks.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of External Network resources.",
          "items": {
            "$ref": "#/definitions/ExternalNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "ExternalNetworkPatch": {
      "type": "object",
      "description": "The ExternalNetwork patch resource definition.",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "External Network Patch properties.",
          "properties": {
            "peeringOption": {
              "description": "Peering option list.",
              "$ref": "./common.json#/definitions/PeeringOption"
            },
            "optionBProperties": {
              "description": "option B properties object",
              "$ref": "#/definitions/L3OptionBProperties"
            },
            "optionAProperties": {
              "type": "object",
              "description": "option A properties object",
              "allOf": [
                {
                  "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
                },
                {
                  "$ref": "#/definitions/L3OptionAProperties"
                }
              ]
            }
          },
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/ExternalNetworkPatchableProperties"
            }
          ]
        }
      }
    },
    "ExternalNetworkPatchableProperties": {
      "type": "object",
      "description": "The ExternalNetwork patchable properties.",
      "properties": {
        "networkToNetworkInterconnectId": {
          "description": "ARM Resource ID of the networkToNetworkInterconnectId of the ExternalNetwork resource.",
          "$ref": "./common.json#/definitions/NetworkToNetworkInterconnectIdProperty"
        },
        "importRoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "exportRoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "importRoutePolicy": {
          "description": "Import Route Policy either IPv4 or IPv6.",
          "$ref": "#/definitions/ImportRoutePolicy"
        },
        "exportRoutePolicy": {
          "description": "Export Route Policy either IPv4 or IPv6.",
          "$ref": "#/definitions/ExportRoutePolicy"
        }
      }
    },
    "BgpConfiguration": {
      "type": "object",
      "description": "BGP configuration properties",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "bfdConfiguration": {
          "description": "BFD configuration properties",
          "$ref": "./common.json#/definitions/BfdConfiguration"
        },
        "defaultRouteOriginate": {
          "description": "Originate a defaultRoute. Ex: \"True\" | \"False\".",
          "$ref": "./common.json#/definitions/BooleanEnumProperty"
        },
        "allowAS": {
          "description": "Allows for routes to be received and processed even if the router detects its own ASN in the AS-Path. 0 is disable, Possible values are 1-10, default is 2.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 10,
          "default": 2
        },
        "allowASOverride": {
          "type": "string",
          "description": "Enable Or Disable state.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "allowASOverride"
          }
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "description": "ASN of Network Fabric. Example: 65048.",
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Peer ASN. Example: 65047."
        },
        "ipv4ListenRangePrefixes": {
          "type": "array",
          "description": "List of BGP IPv4 Listen Range prefixes.",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "IPv4 Listen Range Prefix. Example: 10.1.0.0/28."
          }
        },
        "ipv6ListenRangePrefixes": {
          "type": "array",
          "minItems": 1,
          "description": "List of BGP IPv6 Listen Ranges prefixes.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "IPv6 Listen Range Prefix. Example: 3FFE:FFFF:0:CD30::/126."
          }
        },
        "ipv4NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv4 Neighbor Addresses.",
          "minItems": 1,
          "x-ms-identifiers": [
            "address"
          ],
          "items": {
            "description": "IPv4 Neighbor Address object.",
            "$ref": "#/definitions/NeighborAddress"
          }
        },
        "ipv6NeighborAddress": {
          "type": "array",
          "description": "List with stringified IPv6 Neighbor Address.",
          "minItems": 1,
          "x-ms-identifiers": [
            "address"
          ],
          "items": {
            "description": "IPv6 Neighbor Address object.",
            "$ref": "#/definitions/NeighborAddress"
          }
        }
      }
    },
    "ExternalNetworkProperties": {
      "type": "object",
      "description": "External Network Properties.",
      "required": [
        "peeringOption"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/ExternalNetworkPatchableProperties"
        }
      ],
      "properties": {
        "peeringOption": {
          "description": "Peering option list.",
          "$ref": "./common.json#/definitions/PeeringOption"
        },
        "optionBProperties": {
          "description": "option B properties object",
          "$ref": "#/definitions/L3OptionBProperties"
        },
        "optionAProperties": {
          "type": "object",
          "description": "option A properties object",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
            },
            {
              "$ref": "#/definitions/L3OptionAProperties"
            }
          ],
          "required": [
            "vlanId",
            "peerASN"
          ]
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      }
    },
    "L3OptionAProperties": {
      "type": "object",
      "description": "Peering optionA properties",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "MTU to use for option A peering."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 501,
          "maximum": 4094,
          "description": "Vlan identifier. Example : 501"
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Fabric ASN number. Example 65001 ",
          "readOnly": true
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Peer ASN number.Example : 28"
        },
        "bfdConfiguration": {
          "description": "BFD configuration properties",
          "$ref": "./common.json#/definitions/BfdConfiguration"
        },
        "ingressAclId": {
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "egressAclId": {
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        }
      }
    },
    "L3OptionBProperties": {
      "type": "object",
      "description": "Option B configuration.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string",
            "description": "RouteTargets to be applied."
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "RouteTargets to be applied. This is used for the backward compatibility.",
          "items": {
            "type": "string",
            "description": "RouteTargets to be applied."
          }
        },
        "routeTargets": {
          "description": "RouteTargets to be applied.",
          "$ref": "./common.json#/definitions/RouteTargetInformation"
        }
      }
    },
    "AggregateRouteConfiguration": {
      "type": "object",
      "description": "List of IPv4 and IPv6 aggregate routes.",
      "properties": {
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Route prefixes.",
          "minItems": 1,
          "x-ms-identifiers": [
            "prefix"
          ],
          "items": {
            "description": "Aggregate IPv4 Route properties.",
            "$ref": "#/definitions/AggregateRoute"
          }
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of Ipv6Routes prefixes.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Aggregate IPv6 Route properties.",
            "$ref": "#/definitions/AggregateRoute"
          }
        }
      }
    },
    "AggregateRoute": {
      "type": "object",
      "description": "aggregateIpv4Route model.",
      "properties": {
        "prefix": {
          "type": "string",
          "minLength": 1,
          "description": "IPv4 Prefix of the aggregate Ipv4Route."
        }
      },
      "required": [
        "prefix"
      ]
    },
    "ConnectedSubnetRoutePolicy": {
      "type": "object",
      "description": "Connected Subnet Route Policy properties.",
      "properties": {
        "exportRoutePolicyId": {
          "description": "ARM Resource ID of the Route Policy. This is used for the backward compatibility.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "exportRoutePolicy": {
          "description": "Array of ARM Resource ID of the RoutePolicies.",
          "$ref": "#/definitions/L3ExportRoutePolicy"
        }
      }
    },
    "L3ExportRoutePolicy": {
      "type": "object",
      "description": "Array of ARM Resource ID of the RoutePolicies.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "exportIpv6RoutePolicyId": {
          "description": "ARM Resource ID of the RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        }
      }
    },
    "ConnectedSubnet": {
      "type": "object",
      "description": "Connected Subnet properties.",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "prefix": {
          "type": "string",
          "minLength": 1,
          "description": "Prefix of the Connected Subnet."
        }
      },
      "required": [
        "prefix"
      ]
    },
    "StaticRouteConfiguration": {
      "type": "object",
      "description": "Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "description": "BFD configuration properties",
          "$ref": "./common.json#/definitions/BfdConfiguration"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "minItems": 1,
          "x-ms-identifiers": [
            "prefix"
          ],
          "items": {
            "description": "Static IPv4 Route.",
            "$ref": "./common.json#/definitions/StaticRouteProperties"
          }
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Static IPv6 Route.",
            "$ref": "./common.json#/definitions/StaticRouteProperties"
          }
        }
      }
    },
    "NeighborAddress": {
      "type": "object",
      "description": "Neighbor Address properties.",
      "properties": {
        "address": {
          "type": "string",
          "minLength": 1,
          "description": "IP Address."
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        }
      }
    },
    "ImportRoutePolicy": {
      "type": "object",
      "description": "Import Route Policy either IPv4 or IPv6.",
      "properties": {
        "importIpv4RoutePolicyId": {
          "description": "ARM resource ID of RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "importIpv6RoutePolicyId": {
          "description": "ARM resource ID of RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        }
      }
    },
    "ExportRoutePolicy": {
      "type": "object",
      "description": "Export Route Policy either IPv4 or IPv6.",
      "properties": {
        "exportIpv4RoutePolicyId": {
          "description": "ARM resource ID of RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        },
        "exportIpv6RoutePolicyId": {
          "description": "ARM resource ID of RoutePolicy.",
          "$ref": "./common.json#/definitions/RoutePolicyIdProperty"
        }
      }
    },
    "ExtensionEnumProperty": {
      "type": "object",
      "description": "Extension property.",
      "properties": {
        "extension": {
          "description": "Extension. Example: NoExtension | NPB.",
          "type": "string",
          "default": "NoExtension",
          "minLength": 1,
          "enum": [
            "NoExtension",
            "NPB"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Extension"
          }
        }
      }
    },
    "AccessControlList": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/AccessControlListProperties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The Access Control List resource definition."
    },
    "AccessControlListProperties": {
      "type": "object",
      "required": [
        "configurationType"
      ],
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "description": "Access Control List Patchable properties.",
          "$ref": "#/definitions/AccessControlListPatchableProperties"
        }
      ],
      "properties": {
        "lastSyncedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last synced timestamp.",
          "readOnly": true
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "description": "Access Control List Properties defines the resource properties."
    },
    "AccessControlListPatch": {
      "description": "The Access Control Lists patch resource definition.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Access Control Lists patch properties.",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/AccessControlListPatchableProperties"
            },
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            }
          ]
        }
      },
      "allOf": [
        {
          "description": "Azure resource tags that will replace the existing ones.",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "AccessControlListPatchableProperties": {
      "type": "object",
      "properties": {
        "configurationType": {
          "type": "string",
          "description": "Input method to configure Access Control List.",
          "enum": [
            "File",
            "Inline"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ConfigurationType"
          }
        },
        "aclsUrl": {
          "type": "string",
          "description": "Access Control List file URL.",
          "format": "uri",
          "minLength": 1
        },
        "defaultAction": {
          "type": "string",
          "description": "Default action that needs to be applied when no condition is matched. Example: Permit | Deny.",
          "default": "Permit",
          "$ref": "./common.json#/definitions/CommunityActionTypes"
        },
        "matchConfigurations": {
          "type": "array",
          "description": "List of match configurations.",
          "minItems": 1,
          "items": {
            "description": "Match configuration.",
            "$ref": "#/definitions/AccessControlListMatchConfiguration"
          }
        },
        "dynamicMatchConfigurations": {
          "type": "array",
          "description": "List of dynamic match configurations.",
          "minItems": 1,
          "items": {
            "description": "Dynamic match configuration object.",
            "$ref": "./common.json#/definitions/CommonDynamicMatchConfiguration"
          }
        }
      },
      "description": "Access Control List Patch Properties defines the patchable resource properties."
    },
    "AccessControlListsListResult": {
      "type": "object",
      "description": "List of Access Control Lists.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Access Control List resources.",
          "items": {
            "$ref": "#/definitions/AccessControlList"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "AccessControlListMatchConfiguration": {
      "type": "object",
      "description": "Defines the match configuration that are supported to filter the traffic.",
      "properties": {
        "matchConfigurationName": {
          "type": "string",
          "description": "The name of the match configuration.",
          "minLength": 1
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Sequence Number of the match configuration."
        },
        "ipAddressType": {
          "description": "Type of IP Address. IPv4 or IPv6",
          "$ref": "./common.json#/definitions/IPAddressTypeEnumProperty"
        },
        "matchConditions": {
          "type": "array",
          "description": "List of the match conditions.",
          "minItems": 1,
          "items": {
            "description": "Defines the match condition that is supported to filter the traffic.",
            "$ref": "#/definitions/AccessControlListMatchCondition"
          }
        },
        "actions": {
          "type": "array",
          "description": "List of actions that need to be performed for the matched conditions.",
          "minItems": 1,
          "items": {
            "description": "Action that need to be performed.",
            "$ref": "#/definitions/AccessControlListAction"
          }
        }
      }
    },
    "AccessControlListMatchCondition": {
      "type": "object",
      "description": "Defines the match condition that is supported to filter the traffic.",
      "properties": {
        "etherTypes": {
          "type": "array",
          "minItems": 1,
          "description": "List of ether type values that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the ether type."
          }
        },
        "fragments": {
          "type": "array",
          "minItems": 1,
          "description": "List of IP fragment packets that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the IP fragment packets."
          }
        },
        "ipLengths": {
          "type": "array",
          "minItems": 1,
          "description": "List of IP Lengths that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the IP length."
          }
        },
        "ttlValues": {
          "type": "array",
          "minItems": 1,
          "description": "List of TTL [Time To Live] values that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the TTL values."
          }
        },
        "dscpMarkings": {
          "type": "array",
          "minItems": 1,
          "description": "List of DSCP Markings that need to be matched.",
          "items": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the DSCP marking."
          }
        },
        "portCondition": {
          "description": "Defines the port condition that needs to be matched.",
          "$ref": "#/definitions/AccessControlListPortCondition"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/CommonMatchConditions"
        }
      ]
    },
    "AccessControlListPortCondition": {
      "description": "Defines the port condition that needs to be matched.",
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "description": "List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg",
          "items": {
            "type": "string",
            "description": "Flag of the port."
          }
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/PortCondition"
        }
      ]
    },
    "AccessControlListAction": {
      "type": "object",
      "description": "Action that need to performed.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of actions that can be performed.",
          "minLength": 1,
          "enum": [
            "Drop",
            "Count",
            "Log"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AclActionType"
          }
        },
        "counterName": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the counter block to get match count information."
        }
      }
    },
    "TerminalServerPatchableProperties": {
      "type": "object",
      "description": "Network and credential configuration currently applied on terminal server.",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1,
          "description": "Username for the terminal server connection."
        },
        "password": {
          "type": "string",
          "minLength": 1,
          "description": "Password for the terminal server connection.",
          "x-ms-secret": true
        },
        "serialNumber": {
          "type": "string",
          "minLength": 1,
          "description": "Serial Number of Terminal server."
        }
      }
    },
    "VpnConfigurationProperties": {
      "type": "object",
      "description": "Network and credential configuration currently applied on terminal server.",
      "properties": {
        "networkToNetworkInterconnectId": {
          "description": "ARM Resource ID of the Network To Network Interconnect.",
          "$ref": "./common.json#/definitions/NetworkToNetworkInterconnectIdProperty"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        },
        "peeringOption": {
          "description": "Peering option list.",
          "$ref": "./common.json#/definitions/PeeringOption"
        },
        "optionBProperties": {
          "description": "option B properties",
          "$ref": "#/definitions/OptionBProperties"
        },
        "optionAProperties": {
          "type": "object",
          "description": "option A properties",
          "allOf": [
            {
              "$ref": "#/definitions/OptionAProperties"
            },
            {
              "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
            }
          ],
          "required": [
            "vlanId",
            "peerASN"
          ]
        }
      },
      "required": [
        "peeringOption"
      ]
    },
    "VpnConfigurationPatchableProperties": {
      "type": "object",
      "description": "Network and credential configuration currently applied on terminal server.",
      "properties": {
        "networkToNetworkInterconnectId": {
          "description": "ARM Resource ID of the Network To Network Interconnect.",
          "$ref": "./common.json#/definitions/NetworkToNetworkInterconnectIdProperty"
        },
        "peeringOption": {
          "description": "Peering option list.",
          "$ref": "./common.json#/definitions/PeeringOption"
        },
        "optionBProperties": {
          "description": "option B properties",
          "$ref": "#/definitions/OptionBProperties"
        },
        "optionAProperties": {
          "type": "object",
          "description": "option A properties",
          "allOf": [
            {
              "$ref": "#/definitions/OptionAProperties"
            },
            {
              "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
            }
          ]
        }
      }
    },
    "NetworkFabricPatchableProperties": {
      "title": "Network Fabric updatable properties.",
      "type": "object",
      "properties": {
        "rackCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 8,
          "description": "Number of compute racks associated to Network Fabric."
        },
        "serverCountPerRack": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 16,
          "description": "Number of servers.Possible values are from 1-16."
        },
        "ipv4Prefix": {
          "type": "string",
          "description": "IPv4Prefix for Management Network. Example: 10.1.0.0/19.",
          "minLength": 1
        },
        "ipv6Prefix": {
          "type": "string",
          "description": "IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.",
          "minLength": 1
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "ASN of CE devices for CE/PE connectivity."
        },
        "terminalServerConfiguration": {
          "type": "object",
          "description": "Network and credentials configuration already applied to terminal server.",
          "allOf": [
            {
              "$ref": "#/definitions/TerminalServerPatchableProperties"
            },
            {
              "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
            }
          ]
        },
        "managementNetworkConfiguration": {
          "description": "Configuration to be used to setup the management network.",
          "$ref": "#/definitions/ManagementNetworkConfigurationPatchableProperties"
        }
      }
    },
    "NetworkFabricProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        }
      ],
      "properties": {
        "networkFabricSku": {
          "type": "string",
          "minLength": 1,
          "description": "Supported Network Fabric SKU.Example: Compute / Aggregate racks. Once the user chooses a particular SKU, only supported racks can be added to the Network Fabric. The SKU determines whether it is a single / multi rack Network Fabric.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "fabricVersion": {
          "type": "string",
          "description": "The version of Network Fabric.",
          "minLength": 1
        },
        "routerIds": {
          "type": "array",
          "description": "Array of router IDs.",
          "items": {
            "type": "string",
            "description": "Router Id of CE to be used for MP-BGP between PE and CE"
          },
          "readOnly": true
        },
        "networkFabricControllerId": {
          "description": "Azure resource ID for the NetworkFabricController the NetworkFabric belongs.",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "$ref": "./common.json#/definitions/NetworkFabricControllerIdProperty"
        },
        "rackCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 8,
          "description": "Number of compute racks associated to Network Fabric."
        },
        "serverCountPerRack": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 16,
          "description": "Number of servers.Possible values are from 1-16."
        },
        "ipv4Prefix": {
          "type": "string",
          "description": "IPv4Prefix for Management Network. Example: 10.1.0.0/19.",
          "minLength": 1
        },
        "ipv6Prefix": {
          "type": "string",
          "description": "IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59",
          "minLength": 1
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "ASN of CE devices for CE/PE connectivity."
        },
        "terminalServerConfiguration": {
          "description": "Network and credentials configuration currently applied to terminal server.",
          "$ref": "#/definitions/TerminalServerConfiguration"
        },
        "managementNetworkConfiguration": {
          "description": "Configuration to be used to setup the management network.",
          "$ref": "#/definitions/ManagementNetworkConfigurationProperties"
        },
        "racks": {
          "type": "array",
          "description": "List of NetworkRack resource IDs under the Network Fabric. The number of racks allowed depends on the Network Fabric SKU.",
          "items": {
            "description": "NetworkRack Azure resource ID.",
            "type": "string"
          },
          "readOnly": true
        },
        "l2IsolationDomains": {
          "type": "array",
          "description": "List of L2 Isolation Domain resource IDs under the Network Fabric.",
          "items": {
            "description": "L2 Isolation Domain Azure resource ID.",
            "type": "string"
          },
          "readOnly": true
        },
        "l3IsolationDomains": {
          "type": "array",
          "description": "List of L3 Isolation Domain resource IDs under the Network Fabric.",
          "items": {
            "description": "L3 Isolation Domain Azure resource ID.",
            "type": "string"
          },
          "readOnly": true
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "networkFabricSku",
        "serverCountPerRack",
        "ipv4Prefix",
        "networkFabricControllerId",
        "fabricASN",
        "terminalServerConfiguration",
        "managementNetworkConfiguration"
      ],
      "description": "Network Fabric Properties defines the properties of the resource."
    },
    "NetworkFabric": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The Network Fabric resource definition.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkFabricPatch": {
      "type": "object",
      "description": "The Network Fabric resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Network Fabric Patch properties.",
          "type": "object",
          "allOf": [
            {
              "$ref": "./common.json#/definitions/AnnotationResource"
            },
            {
              "$ref": "#/definitions/NetworkFabricPatchableProperties"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NetworkFabricsListResult": {
      "type": "object",
      "description": "List of Network Fabrics.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Network Fabric resources.",
          "items": {
            "$ref": "#/definitions/NetworkFabric"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkToNetworkInterconnect": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The Network To Network Interconnect resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkToNetworkInterconnectProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "NetworkToNetworkInterconnectPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The Network To Network Interconnect resource patch definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkToNetworkInterconnectPatchableProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkToNetworkInterconnectProperties": {
      "type": "object",
      "description": "Configuration used to setup CE-PE connectivity.",
      "properties": {
        "nniType": {
          "type": "string",
          "description": "Type of NNI used. Example: CE | NPB",
          "minLength": 1,
          "default": "CE",
          "enum": [
            "CE",
            "NPB"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "nniType"
          }
        },
        "isManagementType": {
          "description": "Configuration to use NNI for Infrastructure Management. Example: True/False.",
          "default": "True",
          "minLength": 1,
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IsManagementType"
          }
        },
        "useOptionB": {
          "description": "Based on this option layer3 parameters are mandatory. Example: True/False",
          "$ref": "./common.json#/definitions/BooleanEnumProperty"
        },
        "layer2Configuration": {
          "$ref": "#/definitions/Layer2Configuration",
          "description": "Common properties for Layer2 Configuration."
        },
        "optionBLayer3Configuration": {
          "type": "object",
          "description": "Common properties for Layer3Configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/OptionBLayer3Configuration"
            }
          ],
          "required": [
            "vlanId",
            "peerASN"
          ]
        },
        "npbStaticRouteConfiguration": {
          "description": "NPB Static Route Configuration properties.",
          "$ref": "#/definitions/NpbStaticRouteConfiguration"
        },
        "importRoutePolicy": {
          "description": "Import Route Policy configuration.",
          "$ref": "./common.json#/definitions/ImportRoutePolicyInformation"
        },
        "exportRoutePolicy": {
          "description": "Export Route Policy configuration.",
          "$ref": "./common.json#/definitions/ExportRoutePolicyInformation"
        },
        "egressAclId": {
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "ingressAclId": {
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "configurationState": {
          "description": "Configuration state of the resource.",
          "$ref": "./common.json#/definitions/ConfigurationState"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        },
        "administrativeState": {
          "description": "Administrative state of the resource.",
          "$ref": "./common.json#/definitions/AdministrativeState"
        }
      },
      "required": [
        "useOptionB"
      ]
    },
    "NetworkToNetworkInterconnectPatchableProperties": {
      "type": "object",
      "description": "Network to Network Interconnect patchable properties.",
      "properties": {
        "layer2Configuration": {
          "$ref": "#/definitions/Layer2Configuration",
          "description": "Common properties for Layer2Configuration."
        },
        "optionBLayer3Configuration": {
          "description": "Common properties for Layer3Configuration.",
          "$ref": "#/definitions/OptionBLayer3Configuration"
        },
        "npbStaticRouteConfiguration": {
          "description": "NPB Static Route Configuration properties.",
          "$ref": "#/definitions/NpbStaticRouteConfiguration"
        },
        "importRoutePolicy": {
          "description": "Import Route Policy information.",
          "$ref": "./common.json#/definitions/ImportRoutePolicyInformation"
        },
        "exportRoutePolicy": {
          "description": "Export Route Policy information",
          "$ref": "./common.json#/definitions/ExportRoutePolicyInformation"
        },
        "egressAclId": {
          "description": "Egress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        },
        "ingressAclId": {
          "description": "Ingress Acl. ARM resource ID of Access Control Lists.",
          "$ref": "./common.json#/definitions/AccessControlListIdProperty"
        }
      }
    },
    "NetworkToNetworkInterconnectsList": {
      "type": "object",
      "description": "List of Network To Network Interconnects.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkToNetworkInterconnects resources.",
          "items": {
            "$ref": "#/definitions/NetworkToNetworkInterconnect"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "OptionAProperties": {
      "type": "object",
      "description": "Peering optionA properties",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "MTU to use for option A peering."
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 501,
          "maximum": 4094,
          "description": "Vlan Id.Example : 501"
        },
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "Peer ASN number.Example : 28"
        },
        "bfdConfiguration": {
          "description": "BFD Configuration properties.",
          "$ref": "./common.json#/definitions/BfdConfiguration"
        }
      }
    },
    "OptionBProperties": {
      "type": "object",
      "description": "Option B configuration to be used for Management VPN.",
      "properties": {
        "importRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for incoming routes into CE. This is for backward compatibility.",
          "items": {
            "type": "string",
            "description": "Import route target. Example: 65541:2001, 65542:2001."
          }
        },
        "exportRouteTargets": {
          "type": "array",
          "description": "Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.",
          "items": {
            "type": "string",
            "description": "Export route target. Example: 65531, 65532."
          }
        },
        "routeTargets": {
          "description": "Route Targets to be applied.",
          "$ref": "./common.json#/definitions/RouteTargetInformation"
        }
      }
    },
    "Layer2Configuration": {
      "type": "object",
      "description": "Common properties for Layer2 Configuration.",
      "properties": {
        "mtu": {
          "type": "integer",
          "format": "int32",
          "minimum": 64,
          "maximum": 9200,
          "default": 1500,
          "description": "MTU of the packets between PE & CE."
        },
        "interfaces": {
          "type": "array",
          "description": "List of network device interfaces resource IDs.",
          "minItems": 1,
          "items": {
            "description": "Azure resource ID of the NetworkDevice/networkInterface.",
            "$ref": "./common.json#/definitions/NetworkInterfaceIdProperty"
          }
        }
      }
    },
    "OptionBLayer3Configuration": {
      "type": "object",
      "description": "OptionB Layer3 Configuration properties.",
      "properties": {
        "peerASN": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 4294967295,
          "description": "ASN of PE devices for CE/PE connectivity.Example : 28"
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "minimum": 100,
          "maximum": 4094,
          "description": "VLAN for CE/PE Layer 3 connectivity.Example : 501"
        },
        "fabricASN": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "ASN of CE devices for CE/PE connectivity."
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
        }
      ]
    },
    "ValidateConfigurationProperties": {
      "type": "object",
      "description": "Validation configuration properties.",
      "properties": {
        "validateAction": {
          "type": "string",
          "description": "Validate action that to be performed",
          "minLength": 1,
          "enum": [
            "Cabling",
            "Configuration",
            "Connectivity"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "validateAction"
          }
        }
      }
    },
    "ManagementNetworkConfigurationPatchableProperties": {
      "description": "Configuration to be used to setup the management network.",
      "type": "object",
      "properties": {
        "infrastructureVpnConfiguration": {
          "description": "VPN Configuration properties.",
          "$ref": "#/definitions/VpnConfigurationPatchableProperties"
        },
        "workloadVpnConfiguration": {
          "description": "VPN Configuration properties.",
          "$ref": "#/definitions/VpnConfigurationPatchableProperties"
        }
      }
    },
    "ManagementNetworkConfigurationProperties": {
      "type": "object",
      "description": "Configuration to be used to setup the management network.",
      "required": [
        "infrastructureVpnConfiguration",
        "workloadVpnConfiguration"
      ],
      "properties": {
        "infrastructureVpnConfiguration": {
          "description": "VPN Configuration properties.",
          "$ref": "#/definitions/VpnConfigurationProperties"
        },
        "workloadVpnConfiguration": {
          "description": "VPN Configuration properties.",
          "$ref": "#/definitions/VpnConfigurationProperties"
        }
      }
    },
    "NpbStaticRouteConfiguration": {
      "type": "object",
      "description": "NPB Static Route Configuration properties.",
      "properties": {
        "bfdConfiguration": {
          "description": "BFD Configuration properties.",
          "$ref": "./common.json#/definitions/BfdConfiguration"
        },
        "ipv4Routes": {
          "type": "array",
          "description": "List of IPv4 Routes.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Static IPv4 Route properties.",
            "$ref": "./common.json#/definitions/StaticRouteProperties"
          }
        },
        "ipv6Routes": {
          "type": "array",
          "description": "List of IPv6 Routes.",
          "x-ms-identifiers": [
            "prefix"
          ],
          "minItems": 1,
          "items": {
            "description": "Static IPv6 Route properties.",
            "$ref": "./common.json#/definitions/StaticRouteProperties"
          }
        }
      }
    },
    "TerminalServerConfiguration": {
      "type": "object",
      "description": "Network and credentials configuration currently applied to terminal server.",
      "required": [
        "username",
        "password",
        "primaryIpv4Prefix",
        "secondaryIpv4Prefix"
      ],
      "properties": {
        "networkDeviceId": {
          "type": "string",
          "description": "ARM Resource ID used for the NetworkDevice.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TerminalServerPatchableProperties"
        },
        {
          "$ref": "./common.json#/definitions/Layer3IpPrefixProperties"
        }
      ]
    },
    "UpgradeNetworkFabricProperties": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "Action to be performed while upgrading the fabric.",
          "enum": [
            "Start",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "NetworkFabricUpgradeAction",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/UpdateVersion"
        }
      ]
    },
    "InternetGatewayProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/InternetGatewayPatchableProperties"
        }
      ],
      "properties": {
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 Address of Internet Gateway.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "description": "Port number of Internet Gateway.",
          "format": "int32",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gateway Type of the resource.",
          "enum": [
            "Infrastructure",
            "Workload"
          ],
          "minLength": 1,
          "x-ms-enum": {
            "modelAsString": true,
            "name": "GatewayType"
          }
        },
        "networkFabricControllerId": {
          "description": "ARM Resource ID of the Network Fabric Controller.",
          "$ref": "./common.json#/definitions/NetworkFabricControllerIdProperty"
        },
        "provisioningState": {
          "description": "Provisioning state of resource.",
          "$ref": "./common.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      },
      "description": "Internet Gateway Properties defines the properties of the resource.",
      "required": [
        "type",
        "networkFabricControllerId"
      ]
    },
    "InternetGatewayPatchableProperties": {
      "type": "object",
      "description": "Internet Gateway Patchable Properties defines the patchable properties of the resource.",
      "properties": {
        "internetGatewayRuleId": {
          "description": "ARM Resource ID of the Internet Gateway Rule.",
          "$ref": "./common.json#/definitions/InternetGatewayRuleIdProperty"
        }
      }
    },
    "InternetGateway": {
      "type": "object",
      "x-ms-azure-resource": true,
      "description": "The Internet Gateway resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/InternetGatewayProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "InternetGatewayPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/InternetGatewayPatchableProperties"
        }
      },
      "allOf": [
        {
          "description": "Resource tags",
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ],
      "description": "The Internet Gateway patch resource definition."
    },
    "InternetGatewaysListResult": {
      "type": "object",
      "description": "List of InternetGateways.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Displays list of Internet Gateway resources.",
          "items": {
            "$ref": "#/definitions/InternetGateway"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkFabricControllerPatchableProperties": {
      "title": "Network Fabric Controller updatable properties",
      "type": "object",
      "properties": {
        "infrastructureExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)",
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ],
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          }
        },
        "workloadExpressRouteConnections": {
          "type": "array",
          "description": "As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express route is dedicated for Workload services. (This is a Mandatory attribute).",
          "x-ms-identifiers": [
            "expressRouteCircuitId"
          ],
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          }
        }
      }
    },
    "NetworkFabricControllerProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "./common.json#/definitions/AnnotationResource",
          "description": "Common properties for annotated type."
        },
        {
          "$ref": "#/definitions/NetworkFabricControllerPatchableProperties",
          "description": "Common patchable properties for Network Fabric Controller."
        }
      ],
      "properties": {
        "infrastructureServices": {
          "description": "InfrastructureServices IP ranges.",
          "$ref": "#/definitions/ControllerServices"
        },
        "workloadServices": {
          "description": "WorkloadServices IP ranges.",
          "$ref": "#/definitions/ControllerServices"
        },
        "managedResourceGroupConfiguration": {
          "description": "Managed Resource Group configuration properties.",
          "$ref": "#/definitions/ManagedResourceGroupConfiguration"
        },
        "networkFabricIds": {
          "type": "array",
          "description": "The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.",
          "items": {
            "description": "NetworkFabric ID (NF-ID) is a mandatory attribute, which will be consumed by Network Fabric.",
            "$ref": "./common.json#/definitions/NetworkFabricIdProperty"
          },
          "readOnly": true
        },
        "workloadManagementNetwork": {
          "description": "A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.",
          "type": "boolean",
          "default": true,
          "readOnly": true
        },
        "isWorkloadManagementNetworkEnabled": {
          "description": "A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints.",
          "type": "string",
          "default": "True",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IsWorkloadManagementNetworkEnabled"
          }
        },
        "tenantInternetGatewayIds": {
          "type": "array",
          "description": "List of tenant InternetGateway resource IDs",
          "items": {
            "description": "ARM resource ID of the Internet Gateway.",
            "$ref": "./common.json#/definitions/InternetGatewayIdProperty"
          },
          "readOnly": true
        },
        "ipv4AddressSpace": {
          "type": "string",
          "description": "IPv4 Network Fabric Controller Address Space.",
          "minLength": 1,
          "default": "10.0.0.0/19",
          "example": "10.10.10.10/17"
        },
        "ipv6AddressSpace": {
          "type": "string",
          "description": "IPv6 Network Fabric Controller Address Space.",
          "minLength": 1,
          "default": "FC00::/59",
          "example": "::/60"
        },
        "nfcSku": {
          "description": "Network Fabric Controller SKU.",
          "type": "string",
          "default": "Standard",
          "enum": [
            "Basic",
            "Standard",
            "HighPerformance"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NfcSku"
          }
        },
        "provisioningState": {
          "description": "Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.",
          "$ref": "./common.json#/definitions/ProvisioningState"
        }
      },
      "description": "NetworkFabricControllerProperties defines the resource properties."
    },
    "ExpressRouteConnectionInformation": {
      "type": "object",
      "properties": {
        "expressRouteCircuitId": {
          "type": "string",
          "description": "The express route circuit Azure resource ID, must be of type Microsoft.Network/expressRouteCircuits/circuitName. The ExpressRoute Circuit is a mandatory attribute.",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/expressRouteCircuits"
              }
            ]
          },
          "example": "/subscriptions/xxxx-xxxx-xxxx-xxxx/resourcegroups/example-rg/providers/Microsoft.Network/expressRouteCircuits/example-circuit"
        },
        "expressRouteAuthorizationKey": {
          "type": "string",
          "description": "Authorization key for the circuit, must be of type Microsoft.Network/expressRouteCircuits/authorizations. The Auth Key is a mandatory attribute.",
          "x-ms-secret": true
        }
      },
      "required": [
        "expressRouteCircuitId",
        "expressRouteAuthorizationKey"
      ],
      "description": "The ExpressRoute circuit ID and the Auth Key are required for you to successfully deploy NFC service."
    },
    "NetworkFabricController": {
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "properties"
      ],
      "description": "The Network Fabric Controller resource definition.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricControllerProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkFabricControllerPatch": {
      "type": "object",
      "title": "Network Fabric Controller patch parameters",
      "description": "The Network Fabric Controller Patch payload definition.",
      "properties": {
        "properties": {
          "description": "Network Fabric Controller patch properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkFabricControllerPatchableProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/TagsUpdate"
        }
      ]
    },
    "NetworkFabricControllersListResult": {
      "type": "object",
      "description": "List of Network Fabric Controllers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Network Fabric Controller resources.",
          "items": {
            "$ref": "#/definitions/NetworkFabricController"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "ControllerServices": {
      "type": "object",
      "description": "Network Fabric Controller services.",
      "properties": {
        "ipv4AddressSpaces": {
          "type": "array",
          "description": "The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.",
          "items": {
            "type": "string",
            "description": "This will provide the IPv4 Network Fabric Controller Address Space."
          }
        },
        "ipv6AddressSpaces": {
          "type": "array",
          "description": "The IPv6 is not supported right now.",
          "items": {
            "type": "string",
            "description": "The IPv6 is not supported right now."
          }
        }
      },
      "readOnly": true
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "description": "Managed Resource Group configuration properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The NFC service will be hosted in a Managed resource group."
        },
        "location": {
          "type": "string",
          "description": "Managed resource group location."
        }
      }
    },
    "AzureEntityResource": {
      "type": "object",
      "title": "Entity Resource",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "x-ms-client-name": "AzureEntityResource"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID of resource identity. The value must be an UUID.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant ID of resource. The value must be an UUID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "identity": {
          "type": "string",
          "description": "The client ID of the identity which will be used to access key vault."
        }
      }
    },
    "Operation": {
      "type": "object",
      "title": "REST API Operation",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "type": "object",
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "readOnly": true
            },
            "resource": {
              "type": "string",
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "readOnly": true
            },
            "operation": {
              "type": "string",
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "readOnly": true
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actionType": {
          "type": "string",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "OperationStatusResult": {
      "type": "object",
      "description": "The current status of an async operation.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID for the async operation."
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified ID of the resource against which the original async operation was started.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the async operation."
        },
        "status": {
          "type": "string",
          "description": "Operation status."
        },
        "percentComplete": {
          "type": "number",
          "description": "Percent of the operation that is complete.",
          "minimum": 0,
          "maximum": 100
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "operations": {
          "type": "array",
          "description": "The operations list.",
          "items": {
            "$ref": "#/definitions/OperationStatusResult"
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "If present, details of the operation error."
        }
      },
      "required": [
        "status"
      ]
    },
    "Plan": {
      "type": "object",
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "ProxyResource": {
      "type": "object",
      "title": "Proxy Resource",
      "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Resource": {
      "type": "object",
      "title": "Resource",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceModelWithAllowedPropertySet": {
      "type": "object",
      "description": "The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.",
      "properties": {
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
          "readOnly": true
        },
        "identity": {
          "allOf": [
            {
              "$ref": "#/definitions/Identity"
            }
          ]
        },
        "sku": {
          "allOf": [
            {
              "$ref": "#/definitions/Sku"
            }
          ]
        },
        "plan": {
          "allOf": [
            {
              "$ref": "#/definitions/Plan"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier"
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuTier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "TrackedResource": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "encryptionProperties": {
      "type": "object",
      "description": "Configuration of key for data encryption",
      "properties": {
        "status": {
          "type": "string",
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "locationData": {
      "type": "object",
      "description": "Metadata pertaining to the geographic location of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located."
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located."
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located"
        }
      },
      "required": [
        "name"
      ]
    },
    "systemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      },
      "readOnly": true
    }
  }
}